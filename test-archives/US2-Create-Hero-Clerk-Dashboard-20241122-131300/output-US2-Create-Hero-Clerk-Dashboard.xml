<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 7.1.1 (Python 3.11.2 on darwin)" generated="2024-11-22T13:13:00.831469" rpa="false" schemaversion="5">
<suite id="s1" name="US2-Create-Hero-Clerk-Dashboard" source="/Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/test-cases/US2-Create-Hero-Clerk-Dashboard.robot">
<kw name="Suite Setup Clean Reports" owner="generic" type="SETUP">
<kw name="Create Directory" owner="OperatingSystem">
<msg time="2024-11-22T13:13:00.920399" level="INFO" html="true">Directory '&lt;a href="file:///Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/reports"&gt;/Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/reports&lt;/a&gt;' already exists.</msg>
<arg>${REPORT_DIR}</arg>
<doc>Creates the specified directory.</doc>
<status status="PASS" start="2024-11-22T13:13:00.920316" elapsed="0.000110"/>
</kw>
<kw name="Create Directory" owner="OperatingSystem">
<msg time="2024-11-22T13:13:00.920618" level="INFO" html="true">Created directory '&lt;a href="file:///Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/reports/screenshots"&gt;/Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/reports/screenshots&lt;/a&gt;'.</msg>
<arg>${SCREENSHOT_DIR}</arg>
<doc>Creates the specified directory.</doc>
<status status="PASS" start="2024-11-22T13:13:00.920494" elapsed="0.000145"/>
</kw>
<kw name="Create Directory" owner="OperatingSystem">
<msg time="2024-11-22T13:13:00.920774" level="INFO" html="true">Created directory '&lt;a href="file:///Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/reports/downloads"&gt;/Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/reports/downloads&lt;/a&gt;'.</msg>
<arg>${DOWNLOAD_DIR}</arg>
<doc>Creates the specified directory.</doc>
<status status="PASS" start="2024-11-22T13:13:00.920691" elapsed="0.000103"/>
</kw>
<kw name="Empty Directory" owner="OperatingSystem">
<msg time="2024-11-22T13:13:00.920906" level="INFO" html="true">Listing contents of directory '&lt;a href="file:///Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/reports/screenshots"&gt;/Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/reports/screenshots&lt;/a&gt;'.</msg>
<msg time="2024-11-22T13:13:00.920940" level="INFO" html="true">Emptied directory '&lt;a href="file:///Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/reports/screenshots"&gt;/Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/reports/screenshots&lt;/a&gt;'.</msg>
<arg>${SCREENSHOT_DIR}</arg>
<doc>Deletes all the content from the given directory.</doc>
<status status="PASS" start="2024-11-22T13:13:00.920845" elapsed="0.000112"/>
</kw>
<kw name="Empty Directory" owner="OperatingSystem">
<msg time="2024-11-22T13:13:00.921051" level="INFO" html="true">Listing contents of directory '&lt;a href="file:///Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/reports/downloads"&gt;/Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/reports/downloads&lt;/a&gt;'.</msg>
<msg time="2024-11-22T13:13:00.921078" level="INFO" html="true">Emptied directory '&lt;a href="file:///Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/reports/downloads"&gt;/Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/reports/downloads&lt;/a&gt;'.</msg>
<arg>${DOWNLOAD_DIR}</arg>
<doc>Deletes all the content from the given directory.</doc>
<status status="PASS" start="2024-11-22T13:13:00.921004" elapsed="0.000090"/>
</kw>
<kw name="Set Screenshot Directory" owner="SeleniumLibrary">
<arg>${SCREENSHOT_DIR}</arg>
<doc>Sets the directory for captured screenshots.</doc>
<status status="PASS" start="2024-11-22T13:13:00.921146" elapsed="0.000085"/>
</kw>
<status status="PASS" start="2024-11-22T13:13:00.919888" elapsed="0.001369"/>
</kw>
<test id="s1-t1" name="Test Case 1 - Clerk Dashboard Create Heroes Upload CSV File - Positive" line="15">
<kw name="Open Browser And Navigate To Login Page" owner="generic">
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-11-22T13:13:00.921673" level="INFO">${chrome_options} = &lt;selenium.webdriver.chrome.options.Options object at 0x10289c710&gt;</msg>
<var>${chrome_options}</var>
<arg>sys.modules['selenium.webdriver'].ChromeOptions()</arg>
<arg>sys, selenium.webdriver</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-11-22T13:13:00.921574" elapsed="0.000112"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2024-11-22T13:13:00.921863" level="INFO">${prefs} = {'download.default_directory': '/Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/reports/downloads'}</msg>
<var>${prefs}</var>
<arg>download.default_directory=${DOWNLOAD_DIR}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2024-11-22T13:13:00.921751" elapsed="0.000122"/>
</kw>
<kw name="Call Method" owner="BuiltIn">
<arg>${chrome_options}</arg>
<arg>add_experimental_option</arg>
<arg>prefs</arg>
<arg>${prefs}</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="PASS" start="2024-11-22T13:13:00.921922" elapsed="0.000054"/>
</kw>
<kw name="Create Webdriver" owner="SeleniumLibrary">
<msg time="2024-11-22T13:13:00.922096" level="INFO">Creating an instance of the Chrome WebDriver.</msg>
<arg>${execution_profile_chrome_name}</arg>
<arg>options=${chrome_options}</arg>
<doc>Creates an instance of Selenium WebDriver.</doc>
<status status="PASS" start="2024-11-22T13:13:00.922026" elapsed="1.988457"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Navigating to ${login_page}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T13:13:02.911098" elapsed="0.000370"/>
</kw>
<kw name="Go To" owner="SeleniumLibrary">
<msg time="2024-11-22T13:13:02.911667" level="INFO">Opening url 'http://localhost:9997/login'</msg>
<arg>${login_page}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<status status="PASS" start="2024-11-22T13:13:02.911578" elapsed="0.149689"/>
</kw>
<status status="PASS" start="2024-11-22T13:13:00.921470" elapsed="2.139910"/>
</kw>
<kw name="Setup Clerk Clear DB Data" owner="clerk">
<kw name="Read Csv File To List" owner="CSVLibrary">
<msg time="2024-11-22T13:13:03.063477" level="INFO">${csv_list} = [['natid-100', 'Richard Chu', 'MALE', '1996-01-01T23:59:59', '', '1000.12', '10.00', ''], ['natid-101', 'Arthur', 'MALE', '1996-01-01T23:59:59', '', '1000.00', '10.00', ''], ['natid-102', 'Jayden', 'M...</msg>
<var>${csv_list}</var>
<arg>${test_data_path}</arg>
<doc>Read CSV file and return its content as a Python list of tuples.</doc>
<status status="PASS" start="2024-11-22T13:13:03.062088" elapsed="0.001419"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2024-11-22T13:13:03.068685" level="INFO">${cleanup_dict} = {'value_natid': 'natid-100'}</msg>
<var>${cleanup_dict}</var>
<arg>value_natid=${item[0]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2024-11-22T13:13:03.066714" elapsed="0.002042"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<kw name="Connect To Database" owner="DatabaseLibrary">
<msg time="2024-11-22T13:13:03.069825" level="INFO">Looking for configuration file: 'resources/db.cfg'</msg>
<msg time="2024-11-22T13:13:03.069945" level="INFO">Configuration file doesn't exist</msg>
<msg time="2024-11-22T13:13:03.108430" level="INFO">Connect to DB using : mysql.connector.connect(database='testdb', user='user', password=***, host='localhost', port=3306)</msg>
<msg time="2024-11-22T13:13:03.148334" level="INFO">package: mysql.connector.plugins</msg>
<msg time="2024-11-22T13:13:03.148387" level="INFO">plugin_name: caching_sha2_password</msg>
<msg time="2024-11-22T13:13:03.148419" level="INFO">AUTHENTICATION_PLUGIN_CLASS: MySQLCachingSHA2PasswordAuthPlugin</msg>
<arg>${DB_API}</arg>
<arg>${DB_NAME}</arg>
<arg>${DB_USER}</arg>
<arg>${DB_PASSWORD}</arg>
<arg>${DB_HOST}</arg>
<arg>${DB_PORT}</arg>
<doc>Creates a database connection using the DB API 2.0 ``db_module`` and the parameters provided.
Along with listed commonly used arguments (`db_name`, `db_host` etc.)
you can set any other DB module specific parameters as key/value pairs.</doc>
<status status="PASS" start="2024-11-22T13:13:03.069311" elapsed="0.087663"/>
</kw>
<kw name="Update SQL Queries With Arguments Dictionary" owner="sql-helper">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-11-22T13:13:03.157567" level="INFO" html="true">Getting file '&lt;a href="file:///Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/object-repo/sql-queries/delete_hero_by_natid.sql"&gt;/Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/object-repo/sql-queries/delete_hero_by_natid.sql&lt;/a&gt;'.</msg>
<msg time="2024-11-22T13:13:03.157824" level="INFO">${sql_query} = DELETE FROM testdb.working_class_heroes
WHERE natid = "value_natid"</msg>
<var>${sql_query}</var>
<arg>./object-repo/sql-queries/${sql_file_name}.sql</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-11-22T13:13:03.157429" elapsed="0.000413"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2024-11-22T13:13:03.158311" level="INFO">Argument types are:
&lt;class 'robot.utils.dotdict.DotDict'&gt;
&lt;class 'str'&gt;</msg>
<msg time="2024-11-22T13:13:03.158377" level="FAIL">{'value_natid': 'natid-100'} != </msg>
<arg>${args_dict}</arg>
<arg>${EMPTY}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="FAIL" start="2024-11-22T13:13:03.158016" elapsed="0.000434">{'value_natid': 'natid-100'} != </status>
</kw>
<msg time="2024-11-22T13:13:03.158500" level="INFO">${empty_status} = False</msg>
<var>${empty_status}</var>
<arg>Should Be Equal As Strings</arg>
<arg>${args_dict}</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-11-22T13:13:03.157925" elapsed="0.000584"/>
</kw>
<if>
<branch type="IF" condition="'${empty_status}' == '${False}'">
<if>
<branch type="IF" condition="${args_dict}">
<for flavor="IN">
<iter>
<kw name="Convert To String" owner="BuiltIn">
<msg time="2024-11-22T13:13:03.158925" level="INFO">${args_key_str} = value_natid</msg>
<var>${args_key_str}</var>
<arg>${args_key}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="PASS" start="2024-11-22T13:13:03.158847" elapsed="0.000088"/>
</kw>
<kw name="Convert To String" owner="BuiltIn">
<msg time="2024-11-22T13:13:03.159188" level="INFO">${args_value_str} = natid-100</msg>
<var>${args_value_str}</var>
<arg>${args_dict}[${args_key_str}]</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="PASS" start="2024-11-22T13:13:03.158988" elapsed="0.000211"/>
</kw>
<kw name="Replace String" owner="String">
<msg time="2024-11-22T13:13:03.159337" level="INFO">${sql_query} = DELETE FROM testdb.working_class_heroes
WHERE natid = "natid-100"</msg>
<var>${sql_query}</var>
<arg>${sql_query}</arg>
<arg>${args_key_str}</arg>
<arg>${args_value_str}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="PASS" start="2024-11-22T13:13:03.159254" elapsed="0.000093"/>
</kw>
<var name="${args_key}">value_natid</var>
<status status="PASS" start="2024-11-22T13:13:03.158787" elapsed="0.000579"/>
</iter>
<var>${args_key}</var>
<value>@{args_dict}</value>
<status status="PASS" start="2024-11-22T13:13:03.158685" elapsed="0.000705"/>
</for>
<status status="PASS" start="2024-11-22T13:13:03.158648" elapsed="0.000766"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:03.158641" elapsed="0.000789"/>
</if>
<status status="PASS" start="2024-11-22T13:13:03.158560" elapsed="0.000880"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:03.158543" elapsed="0.000909"/>
</if>
<return>
<value>${sql_query}</value>
<status status="PASS" start="2024-11-22T13:13:03.159473" elapsed="0.000026"/>
</return>
<msg time="2024-11-22T13:13:03.159558" level="INFO">${updated_sql_query} = DELETE FROM testdb.working_class_heroes
WHERE natid = "natid-100"</msg>
<var>${updated_sql_query}</var>
<arg>${sql_file_name}</arg>
<arg>${args_dict}</arg>
<status status="PASS" start="2024-11-22T13:13:03.157208" elapsed="0.002360"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<arg>${updated_sql_query}</arg>
<arg>DELETE</arg>
<arg>ignore_case=${True}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-11-22T13:13:03.159707" elapsed="0.000100"/>
</kw>
<msg time="2024-11-22T13:13:03.159842" level="INFO">${delete_status} = True</msg>
<var>${delete_status}</var>
<arg>Should Contain</arg>
<arg>${updated_sql_query}</arg>
<arg>DELETE</arg>
<arg>ignore_case=${True}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-11-22T13:13:03.159632" elapsed="0.000219"/>
</kw>
<if>
<branch type="IF" condition="'${delete_status}' == '${True}'">
<kw name="Execute Sql String" owner="DatabaseLibrary">
<msg time="2024-11-22T13:13:03.161428" level="INFO" html="true">Executing sql:&lt;br&gt;&lt;code style="font-weight: bold;"&gt;DELETE FROM testdb.working_class_heroes
WHERE natid = "natid-100"&lt;/code&gt;</msg>
<msg time="2024-11-22T13:13:03.235584" level="INFO">${json_response} = None</msg>
<var>${json_response}</var>
<arg>${updated_sql_query}</arg>
<doc>Executes the ``sql_string`` as a single SQL command.</doc>
<status status="PASS" start="2024-11-22T13:13:03.159977" elapsed="0.075632"/>
</kw>
<status status="PASS" start="2024-11-22T13:13:03.159884" elapsed="0.075766"/>
</branch>
<branch type="ELSE">
<kw name="Query" owner="DatabaseLibrary">
<var>${json_response}</var>
<arg>${updated_sql_query}</arg>
<arg>return_dict=${True}</arg>
<doc>Runs a query with the ``select_statement`` and returns the result as list of rows.
The type of row values depends on the database module -
usually they are tuples or tuple-like objects.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:03.235779" elapsed="0.000015"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:03.235676" elapsed="0.000139"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:03.159877" elapsed="0.075953"/>
</if>
<kw name="Disconnect From Database" owner="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<status status="PASS" start="2024-11-22T13:13:03.235883" elapsed="0.000143"/>
</kw>
<return>
<value>${json_response}</value>
<status status="PASS" start="2024-11-22T13:13:03.236054" elapsed="0.000029"/>
</return>
<arg>delete_hero_by_natid</arg>
<arg>${cleanup_dict}</arg>
<status status="PASS" start="2024-11-22T13:13:03.069096" elapsed="0.167051"/>
</kw>
<var name="${item}">['natid-100', 'Richard Chu', 'MALE', '1996-01-01T23:59:59', '', '1000.12', '10.00', '']</var>
<status status="PASS" start="2024-11-22T13:13:03.066370" elapsed="0.169799"/>
</iter>
<iter>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2024-11-22T13:13:03.236712" level="INFO">${cleanup_dict} = {'value_natid': 'natid-101'}</msg>
<var>${cleanup_dict}</var>
<arg>value_natid=${item[0]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2024-11-22T13:13:03.236291" elapsed="0.000434"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<kw name="Connect To Database" owner="DatabaseLibrary">
<msg time="2024-11-22T13:13:03.237149" level="INFO">Looking for configuration file: 'resources/db.cfg'</msg>
<msg time="2024-11-22T13:13:03.237172" level="INFO">Configuration file doesn't exist</msg>
<msg time="2024-11-22T13:13:03.237260" level="INFO">Connect to DB using : mysql.connector.connect(database='testdb', user='user', password=***, host='localhost', port=3306)</msg>
<arg>${DB_API}</arg>
<arg>${DB_NAME}</arg>
<arg>${DB_USER}</arg>
<arg>${DB_PASSWORD}</arg>
<arg>${DB_HOST}</arg>
<arg>${DB_PORT}</arg>
<doc>Creates a database connection using the DB API 2.0 ``db_module`` and the parameters provided.
Along with listed commonly used arguments (`db_name`, `db_host` etc.)
you can set any other DB module specific parameters as key/value pairs.</doc>
<status status="PASS" start="2024-11-22T13:13:03.237003" elapsed="0.046087"/>
</kw>
<kw name="Update SQL Queries With Arguments Dictionary" owner="sql-helper">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-11-22T13:13:03.283825" level="INFO" html="true">Getting file '&lt;a href="file:///Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/object-repo/sql-queries/delete_hero_by_natid.sql"&gt;/Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/object-repo/sql-queries/delete_hero_by_natid.sql&lt;/a&gt;'.</msg>
<msg time="2024-11-22T13:13:03.283946" level="INFO">${sql_query} = DELETE FROM testdb.working_class_heroes
WHERE natid = "value_natid"</msg>
<var>${sql_query}</var>
<arg>./object-repo/sql-queries/${sql_file_name}.sql</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-11-22T13:13:03.283531" elapsed="0.000430"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2024-11-22T13:13:03.284497" level="INFO">Argument types are:
&lt;class 'robot.utils.dotdict.DotDict'&gt;
&lt;class 'str'&gt;</msg>
<msg time="2024-11-22T13:13:03.284566" level="FAIL">{'value_natid': 'natid-101'} != </msg>
<arg>${args_dict}</arg>
<arg>${EMPTY}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="FAIL" start="2024-11-22T13:13:03.284150" elapsed="0.000461">{'value_natid': 'natid-101'} != </status>
</kw>
<msg time="2024-11-22T13:13:03.284666" level="INFO">${empty_status} = False</msg>
<var>${empty_status}</var>
<arg>Should Be Equal As Strings</arg>
<arg>${args_dict}</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-11-22T13:13:03.284051" elapsed="0.000625"/>
</kw>
<if>
<branch type="IF" condition="'${empty_status}' == '${False}'">
<if>
<branch type="IF" condition="${args_dict}">
<for flavor="IN">
<iter>
<kw name="Convert To String" owner="BuiltIn">
<msg time="2024-11-22T13:13:03.285153" level="INFO">${args_key_str} = value_natid</msg>
<var>${args_key_str}</var>
<arg>${args_key}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="PASS" start="2024-11-22T13:13:03.285064" elapsed="0.000101"/>
</kw>
<kw name="Convert To String" owner="BuiltIn">
<msg time="2024-11-22T13:13:03.285317" level="INFO">${args_value_str} = natid-101</msg>
<var>${args_value_str}</var>
<arg>${args_dict}[${args_key_str}]</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="PASS" start="2024-11-22T13:13:03.285229" elapsed="0.000099"/>
</kw>
<kw name="Replace String" owner="String">
<msg time="2024-11-22T13:13:03.285485" level="INFO">${sql_query} = DELETE FROM testdb.working_class_heroes
WHERE natid = "natid-101"</msg>
<var>${sql_query}</var>
<arg>${sql_query}</arg>
<arg>${args_key_str}</arg>
<arg>${args_value_str}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="PASS" start="2024-11-22T13:13:03.285393" elapsed="0.000103"/>
</kw>
<var name="${args_key}">value_natid</var>
<status status="PASS" start="2024-11-22T13:13:03.284951" elapsed="0.000569"/>
</iter>
<var>${args_key}</var>
<value>@{args_dict}</value>
<status status="PASS" start="2024-11-22T13:13:03.284875" elapsed="0.000678"/>
</for>
<status status="PASS" start="2024-11-22T13:13:03.284832" elapsed="0.000744"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:03.284824" elapsed="0.000769"/>
</if>
<status status="PASS" start="2024-11-22T13:13:03.284729" elapsed="0.000876"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:03.284714" elapsed="0.000904"/>
</if>
<return>
<value>${sql_query}</value>
<status status="PASS" start="2024-11-22T13:13:03.285634" elapsed="0.000020"/>
</return>
<msg time="2024-11-22T13:13:03.285717" level="INFO">${updated_sql_query} = DELETE FROM testdb.working_class_heroes
WHERE natid = "natid-101"</msg>
<var>${updated_sql_query}</var>
<arg>${sql_file_name}</arg>
<arg>${args_dict}</arg>
<status status="PASS" start="2024-11-22T13:13:03.283314" elapsed="0.002415"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<arg>${updated_sql_query}</arg>
<arg>DELETE</arg>
<arg>ignore_case=${True}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-11-22T13:13:03.285879" elapsed="0.000110"/>
</kw>
<msg time="2024-11-22T13:13:03.286030" level="INFO">${delete_status} = True</msg>
<var>${delete_status}</var>
<arg>Should Contain</arg>
<arg>${updated_sql_query}</arg>
<arg>DELETE</arg>
<arg>ignore_case=${True}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-11-22T13:13:03.285798" elapsed="0.000242"/>
</kw>
<if>
<branch type="IF" condition="'${delete_status}' == '${True}'">
<kw name="Execute Sql String" owner="DatabaseLibrary">
<msg time="2024-11-22T13:13:03.286995" level="INFO" html="true">Executing sql:&lt;br&gt;&lt;code style="font-weight: bold;"&gt;DELETE FROM testdb.working_class_heroes
WHERE natid = "natid-101"&lt;/code&gt;</msg>
<msg time="2024-11-22T13:13:03.350640" level="INFO">${json_response} = None</msg>
<var>${json_response}</var>
<arg>${updated_sql_query}</arg>
<doc>Executes the ``sql_string`` as a single SQL command.</doc>
<status status="PASS" start="2024-11-22T13:13:03.286185" elapsed="0.064480"/>
</kw>
<status status="PASS" start="2024-11-22T13:13:03.286081" elapsed="0.064626"/>
</branch>
<branch type="ELSE">
<kw name="Query" owner="DatabaseLibrary">
<var>${json_response}</var>
<arg>${updated_sql_query}</arg>
<arg>return_dict=${True}</arg>
<doc>Runs a query with the ``select_statement`` and returns the result as list of rows.
The type of row values depends on the database module -
usually they are tuples or tuple-like objects.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:03.350894" elapsed="0.000019"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:03.350736" elapsed="0.000199"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:03.286073" elapsed="0.064880"/>
</if>
<kw name="Disconnect From Database" owner="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<status status="PASS" start="2024-11-22T13:13:03.351013" elapsed="0.000171"/>
</kw>
<return>
<value>${json_response}</value>
<status status="PASS" start="2024-11-22T13:13:03.351215" elapsed="0.000035"/>
</return>
<arg>delete_hero_by_natid</arg>
<arg>${cleanup_dict}</arg>
<status status="PASS" start="2024-11-22T13:13:03.236847" elapsed="0.114477"/>
</kw>
<var name="${item}">['natid-101', 'Arthur', 'MALE', '1996-01-01T23:59:59', '', '1000.00', '10.00', '']</var>
<status status="PASS" start="2024-11-22T13:13:03.236231" elapsed="0.115116"/>
</iter>
<iter>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2024-11-22T13:13:03.351942" level="INFO">${cleanup_dict} = {'value_natid': 'natid-102'}</msg>
<var>${cleanup_dict}</var>
<arg>value_natid=${item[0]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2024-11-22T13:13:03.351504" elapsed="0.000454"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<kw name="Connect To Database" owner="DatabaseLibrary">
<msg time="2024-11-22T13:13:03.352389" level="INFO">Looking for configuration file: 'resources/db.cfg'</msg>
<msg time="2024-11-22T13:13:03.352413" level="INFO">Configuration file doesn't exist</msg>
<msg time="2024-11-22T13:13:03.352616" level="INFO">Connect to DB using : mysql.connector.connect(database='testdb', user='user', password=***, host='localhost', port=3306)</msg>
<arg>${DB_API}</arg>
<arg>${DB_NAME}</arg>
<arg>${DB_USER}</arg>
<arg>${DB_PASSWORD}</arg>
<arg>${DB_HOST}</arg>
<arg>${DB_PORT}</arg>
<doc>Creates a database connection using the DB API 2.0 ``db_module`` and the parameters provided.
Along with listed commonly used arguments (`db_name`, `db_host` etc.)
you can set any other DB module specific parameters as key/value pairs.</doc>
<status status="PASS" start="2024-11-22T13:13:03.352251" elapsed="0.049127"/>
</kw>
<kw name="Update SQL Queries With Arguments Dictionary" owner="sql-helper">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-11-22T13:13:03.402169" level="INFO" html="true">Getting file '&lt;a href="file:///Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/object-repo/sql-queries/delete_hero_by_natid.sql"&gt;/Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/object-repo/sql-queries/delete_hero_by_natid.sql&lt;/a&gt;'.</msg>
<msg time="2024-11-22T13:13:03.402290" level="INFO">${sql_query} = DELETE FROM testdb.working_class_heroes
WHERE natid = "value_natid"</msg>
<var>${sql_query}</var>
<arg>./object-repo/sql-queries/${sql_file_name}.sql</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-11-22T13:13:03.401948" elapsed="0.000355"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2024-11-22T13:13:03.402813" level="INFO">Argument types are:
&lt;class 'robot.utils.dotdict.DotDict'&gt;
&lt;class 'str'&gt;</msg>
<msg time="2024-11-22T13:13:03.402881" level="FAIL">{'value_natid': 'natid-102'} != </msg>
<arg>${args_dict}</arg>
<arg>${EMPTY}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="FAIL" start="2024-11-22T13:13:03.402484" elapsed="0.000441">{'value_natid': 'natid-102'} != </status>
</kw>
<msg time="2024-11-22T13:13:03.402977" level="INFO">${empty_status} = False</msg>
<var>${empty_status}</var>
<arg>Should Be Equal As Strings</arg>
<arg>${args_dict}</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-11-22T13:13:03.402389" elapsed="0.000598"/>
</kw>
<if>
<branch type="IF" condition="'${empty_status}' == '${False}'">
<if>
<branch type="IF" condition="${args_dict}">
<for flavor="IN">
<iter>
<kw name="Convert To String" owner="BuiltIn">
<msg time="2024-11-22T13:13:03.403442" level="INFO">${args_key_str} = value_natid</msg>
<var>${args_key_str}</var>
<arg>${args_key}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="PASS" start="2024-11-22T13:13:03.403357" elapsed="0.000097"/>
</kw>
<kw name="Convert To String" owner="BuiltIn">
<msg time="2024-11-22T13:13:03.403595" level="INFO">${args_value_str} = natid-102</msg>
<var>${args_value_str}</var>
<arg>${args_dict}[${args_key_str}]</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="PASS" start="2024-11-22T13:13:03.403515" elapsed="0.000091"/>
</kw>
<kw name="Replace String" owner="String">
<msg time="2024-11-22T13:13:03.403747" level="INFO">${sql_query} = DELETE FROM testdb.working_class_heroes
WHERE natid = "natid-102"</msg>
<var>${sql_query}</var>
<arg>${sql_query}</arg>
<arg>${args_key_str}</arg>
<arg>${args_value_str}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="PASS" start="2024-11-22T13:13:03.403663" elapsed="0.000095"/>
</kw>
<var name="${args_key}">value_natid</var>
<status status="PASS" start="2024-11-22T13:13:03.403295" elapsed="0.000486"/>
</iter>
<var>${args_key}</var>
<value>@{args_dict}</value>
<status status="PASS" start="2024-11-22T13:13:03.403215" elapsed="0.000589"/>
</for>
<status status="PASS" start="2024-11-22T13:13:03.403148" elapsed="0.000680"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:03.403134" elapsed="0.000709"/>
</if>
<status status="PASS" start="2024-11-22T13:13:03.403038" elapsed="0.000817"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:03.403023" elapsed="0.000844"/>
</if>
<return>
<value>${sql_query}</value>
<status status="PASS" start="2024-11-22T13:13:03.403884" elapsed="0.000021"/>
</return>
<msg time="2024-11-22T13:13:03.403967" level="INFO">${updated_sql_query} = DELETE FROM testdb.working_class_heroes
WHERE natid = "natid-102"</msg>
<var>${updated_sql_query}</var>
<arg>${sql_file_name}</arg>
<arg>${args_dict}</arg>
<status status="PASS" start="2024-11-22T13:13:03.401705" elapsed="0.002273"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<arg>${updated_sql_query}</arg>
<arg>DELETE</arg>
<arg>ignore_case=${True}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-11-22T13:13:03.404118" elapsed="0.000101"/>
</kw>
<msg time="2024-11-22T13:13:03.404258" level="INFO">${delete_status} = True</msg>
<var>${delete_status}</var>
<arg>Should Contain</arg>
<arg>${updated_sql_query}</arg>
<arg>DELETE</arg>
<arg>ignore_case=${True}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-11-22T13:13:03.404042" elapsed="0.000225"/>
</kw>
<if>
<branch type="IF" condition="'${delete_status}' == '${True}'">
<kw name="Execute Sql String" owner="DatabaseLibrary">
<msg time="2024-11-22T13:13:03.404994" level="INFO" html="true">Executing sql:&lt;br&gt;&lt;code style="font-weight: bold;"&gt;DELETE FROM testdb.working_class_heroes
WHERE natid = "natid-102"&lt;/code&gt;</msg>
<msg time="2024-11-22T13:13:03.425499" level="INFO">${json_response} = None</msg>
<var>${json_response}</var>
<arg>${updated_sql_query}</arg>
<doc>Executes the ``sql_string`` as a single SQL command.</doc>
<status status="PASS" start="2024-11-22T13:13:03.404445" elapsed="0.021077"/>
</kw>
<status status="PASS" start="2024-11-22T13:13:03.404328" elapsed="0.021234"/>
</branch>
<branch type="ELSE">
<kw name="Query" owner="DatabaseLibrary">
<var>${json_response}</var>
<arg>${updated_sql_query}</arg>
<arg>return_dict=${True}</arg>
<doc>Runs a query with the ``select_statement`` and returns the result as list of rows.
The type of row values depends on the database module -
usually they are tuples or tuple-like objects.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:03.425688" elapsed="0.000014"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:03.425586" elapsed="0.000139"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:03.404318" elapsed="0.021422"/>
</if>
<kw name="Disconnect From Database" owner="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<status status="PASS" start="2024-11-22T13:13:03.425792" elapsed="0.000138"/>
</kw>
<return>
<value>${json_response}</value>
<status status="PASS" start="2024-11-22T13:13:03.425958" elapsed="0.000030"/>
</return>
<arg>delete_hero_by_natid</arg>
<arg>${cleanup_dict}</arg>
<status status="PASS" start="2024-11-22T13:13:03.352088" elapsed="0.073970"/>
</kw>
<var name="${item}">['natid-102', 'Jayden', 'MALE', '1996-01-01T23:59:59', '', '10320.00', '10.00', '']</var>
<status status="PASS" start="2024-11-22T13:13:03.351411" elapsed="0.074670"/>
</iter>
<iter>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2024-11-22T13:13:03.426645" level="INFO">${cleanup_dict} = {'value_natid': 'natid-103'}</msg>
<var>${cleanup_dict}</var>
<arg>value_natid=${item[0]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2024-11-22T13:13:03.426211" elapsed="0.000447"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<kw name="Connect To Database" owner="DatabaseLibrary">
<msg time="2024-11-22T13:13:03.427108" level="INFO">Looking for configuration file: 'resources/db.cfg'</msg>
<msg time="2024-11-22T13:13:03.427137" level="INFO">Configuration file doesn't exist</msg>
<msg time="2024-11-22T13:13:03.427233" level="INFO">Connect to DB using : mysql.connector.connect(database='testdb', user='user', password=***, host='localhost', port=3306)</msg>
<arg>${DB_API}</arg>
<arg>${DB_NAME}</arg>
<arg>${DB_USER}</arg>
<arg>${DB_PASSWORD}</arg>
<arg>${DB_HOST}</arg>
<arg>${DB_PORT}</arg>
<doc>Creates a database connection using the DB API 2.0 ``db_module`` and the parameters provided.
Along with listed commonly used arguments (`db_name`, `db_host` etc.)
you can set any other DB module specific parameters as key/value pairs.</doc>
<status status="PASS" start="2024-11-22T13:13:03.426939" elapsed="0.025421"/>
</kw>
<kw name="Update SQL Queries With Arguments Dictionary" owner="sql-helper">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-11-22T13:13:03.453177" level="INFO" html="true">Getting file '&lt;a href="file:///Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/object-repo/sql-queries/delete_hero_by_natid.sql"&gt;/Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/object-repo/sql-queries/delete_hero_by_natid.sql&lt;/a&gt;'.</msg>
<msg time="2024-11-22T13:13:03.453299" level="INFO">${sql_query} = DELETE FROM testdb.working_class_heroes
WHERE natid = "value_natid"</msg>
<var>${sql_query}</var>
<arg>./object-repo/sql-queries/${sql_file_name}.sql</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-11-22T13:13:03.452997" elapsed="0.000316"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2024-11-22T13:13:03.453887" level="INFO">Argument types are:
&lt;class 'robot.utils.dotdict.DotDict'&gt;
&lt;class 'str'&gt;</msg>
<msg time="2024-11-22T13:13:03.453966" level="FAIL">{'value_natid': 'natid-103'} != </msg>
<arg>${args_dict}</arg>
<arg>${EMPTY}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="FAIL" start="2024-11-22T13:13:03.453512" elapsed="0.000507">{'value_natid': 'natid-103'} != </status>
</kw>
<msg time="2024-11-22T13:13:03.454078" level="INFO">${empty_status} = False</msg>
<var>${empty_status}</var>
<arg>Should Be Equal As Strings</arg>
<arg>${args_dict}</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-11-22T13:13:03.453407" elapsed="0.000682"/>
</kw>
<if>
<branch type="IF" condition="'${empty_status}' == '${False}'">
<if>
<branch type="IF" condition="${args_dict}">
<for flavor="IN">
<iter>
<kw name="Convert To String" owner="BuiltIn">
<msg time="2024-11-22T13:13:03.454656" level="INFO">${args_key_str} = value_natid</msg>
<var>${args_key_str}</var>
<arg>${args_key}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="PASS" start="2024-11-22T13:13:03.454562" elapsed="0.000108"/>
</kw>
<kw name="Convert To String" owner="BuiltIn">
<msg time="2024-11-22T13:13:03.454832" level="INFO">${args_value_str} = natid-103</msg>
<var>${args_value_str}</var>
<arg>${args_dict}[${args_key_str}]</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="PASS" start="2024-11-22T13:13:03.454739" elapsed="0.000105"/>
</kw>
<kw name="Replace String" owner="String">
<msg time="2024-11-22T13:13:03.455012" level="INFO">${sql_query} = DELETE FROM testdb.working_class_heroes
WHERE natid = "natid-103"</msg>
<var>${sql_query}</var>
<arg>${sql_query}</arg>
<arg>${args_key_str}</arg>
<arg>${args_value_str}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="PASS" start="2024-11-22T13:13:03.454912" elapsed="0.000113"/>
</kw>
<var name="${args_key}">value_natid</var>
<status status="PASS" start="2024-11-22T13:13:03.454363" elapsed="0.000687"/>
</iter>
<var>${args_key}</var>
<value>@{args_dict}</value>
<status status="PASS" start="2024-11-22T13:13:03.454285" elapsed="0.000791"/>
</for>
<status status="PASS" start="2024-11-22T13:13:03.454241" elapsed="0.000860"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:03.454234" elapsed="0.000884"/>
</if>
<status status="PASS" start="2024-11-22T13:13:03.454143" elapsed="0.000988"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:03.454128" elapsed="0.001017"/>
</if>
<return>
<value>${sql_query}</value>
<status status="PASS" start="2024-11-22T13:13:03.455163" elapsed="0.000022"/>
</return>
<msg time="2024-11-22T13:13:03.455249" level="INFO">${updated_sql_query} = DELETE FROM testdb.working_class_heroes
WHERE natid = "natid-103"</msg>
<var>${updated_sql_query}</var>
<arg>${sql_file_name}</arg>
<arg>${args_dict}</arg>
<status status="PASS" start="2024-11-22T13:13:03.452726" elapsed="0.002536"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<arg>${updated_sql_query}</arg>
<arg>DELETE</arg>
<arg>ignore_case=${True}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-11-22T13:13:03.455422" elapsed="0.000109"/>
</kw>
<msg time="2024-11-22T13:13:03.455574" level="INFO">${delete_status} = True</msg>
<var>${delete_status}</var>
<arg>Should Contain</arg>
<arg>${updated_sql_query}</arg>
<arg>DELETE</arg>
<arg>ignore_case=${True}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-11-22T13:13:03.455335" elapsed="0.000251"/>
</kw>
<if>
<branch type="IF" condition="'${delete_status}' == '${True}'">
<kw name="Execute Sql String" owner="DatabaseLibrary">
<msg time="2024-11-22T13:13:03.456320" level="INFO" html="true">Executing sql:&lt;br&gt;&lt;code style="font-weight: bold;"&gt;DELETE FROM testdb.working_class_heroes
WHERE natid = "natid-103"&lt;/code&gt;</msg>
<msg time="2024-11-22T13:13:03.495768" level="INFO">${json_response} = None</msg>
<var>${json_response}</var>
<arg>${updated_sql_query}</arg>
<doc>Executes the ``sql_string`` as a single SQL command.</doc>
<status status="PASS" start="2024-11-22T13:13:03.455730" elapsed="0.040064"/>
</kw>
<status status="PASS" start="2024-11-22T13:13:03.455625" elapsed="0.040211"/>
</branch>
<branch type="ELSE">
<kw name="Query" owner="DatabaseLibrary">
<var>${json_response}</var>
<arg>${updated_sql_query}</arg>
<arg>return_dict=${True}</arg>
<doc>Runs a query with the ``select_statement`` and returns the result as list of rows.
The type of row values depends on the database module -
usually they are tuples or tuple-like objects.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:03.495960" elapsed="0.000015"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:03.495860" elapsed="0.000135"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:03.455617" elapsed="0.040391"/>
</if>
<kw name="Disconnect From Database" owner="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<status status="PASS" start="2024-11-22T13:13:03.496058" elapsed="0.000145"/>
</kw>
<return>
<value>${json_response}</value>
<status status="PASS" start="2024-11-22T13:13:03.496231" elapsed="0.000034"/>
</return>
<arg>delete_hero_by_natid</arg>
<arg>${cleanup_dict}</arg>
<status status="PASS" start="2024-11-22T13:13:03.426782" elapsed="0.069547"/>
</kw>
<var name="${item}">['natid-103', 'Lily', 'FEMALE', '1996-01-01T23:59:59', '', '1000.50', '10.28', '']</var>
<status status="PASS" start="2024-11-22T13:13:03.426146" elapsed="0.070206"/>
</iter>
<iter>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2024-11-22T13:13:03.496905" level="INFO">${cleanup_dict} = {'value_natid': 'natid-104'}</msg>
<var>${cleanup_dict}</var>
<arg>value_natid=${item[0]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2024-11-22T13:13:03.496479" elapsed="0.000440"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<kw name="Connect To Database" owner="DatabaseLibrary">
<msg time="2024-11-22T13:13:03.497324" level="INFO">Looking for configuration file: 'resources/db.cfg'</msg>
<msg time="2024-11-22T13:13:03.497345" level="INFO">Configuration file doesn't exist</msg>
<msg time="2024-11-22T13:13:03.497429" level="INFO">Connect to DB using : mysql.connector.connect(database='testdb', user='user', password=***, host='localhost', port=3306)</msg>
<arg>${DB_API}</arg>
<arg>${DB_NAME}</arg>
<arg>${DB_USER}</arg>
<arg>${DB_PASSWORD}</arg>
<arg>${DB_HOST}</arg>
<arg>${DB_PORT}</arg>
<doc>Creates a database connection using the DB API 2.0 ``db_module`` and the parameters provided.
Along with listed commonly used arguments (`db_name`, `db_host` etc.)
you can set any other DB module specific parameters as key/value pairs.</doc>
<status status="PASS" start="2024-11-22T13:13:03.497186" elapsed="0.022218"/>
</kw>
<kw name="Update SQL Queries With Arguments Dictionary" owner="sql-helper">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-11-22T13:13:03.520040" level="INFO" html="true">Getting file '&lt;a href="file:///Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/object-repo/sql-queries/delete_hero_by_natid.sql"&gt;/Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/object-repo/sql-queries/delete_hero_by_natid.sql&lt;/a&gt;'.</msg>
<msg time="2024-11-22T13:13:03.520127" level="INFO">${sql_query} = DELETE FROM testdb.working_class_heroes
WHERE natid = "value_natid"</msg>
<var>${sql_query}</var>
<arg>./object-repo/sql-queries/${sql_file_name}.sql</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-11-22T13:13:03.519874" elapsed="0.000264"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2024-11-22T13:13:03.520573" level="INFO">Argument types are:
&lt;class 'robot.utils.dotdict.DotDict'&gt;
&lt;class 'str'&gt;</msg>
<msg time="2024-11-22T13:13:03.520631" level="FAIL">{'value_natid': 'natid-104'} != </msg>
<arg>${args_dict}</arg>
<arg>${EMPTY}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="FAIL" start="2024-11-22T13:13:03.520280" elapsed="0.000391">{'value_natid': 'natid-104'} != </status>
</kw>
<msg time="2024-11-22T13:13:03.520715" level="INFO">${empty_status} = False</msg>
<var>${empty_status}</var>
<arg>Should Be Equal As Strings</arg>
<arg>${args_dict}</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-11-22T13:13:03.520206" elapsed="0.000518"/>
</kw>
<if>
<branch type="IF" condition="'${empty_status}' == '${False}'">
<if>
<branch type="IF" condition="${args_dict}">
<for flavor="IN">
<iter>
<kw name="Convert To String" owner="BuiltIn">
<msg time="2024-11-22T13:13:03.521071" level="INFO">${args_key_str} = value_natid</msg>
<var>${args_key_str}</var>
<arg>${args_key}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="PASS" start="2024-11-22T13:13:03.521004" elapsed="0.000077"/>
</kw>
<kw name="Convert To String" owner="BuiltIn">
<msg time="2024-11-22T13:13:03.521199" level="INFO">${args_value_str} = natid-104</msg>
<var>${args_value_str}</var>
<arg>${args_dict}[${args_key_str}]</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="PASS" start="2024-11-22T13:13:03.521131" elapsed="0.000078"/>
</kw>
<kw name="Replace String" owner="String">
<msg time="2024-11-22T13:13:03.521347" level="INFO">${sql_query} = DELETE FROM testdb.working_class_heroes
WHERE natid = "natid-104"</msg>
<var>${sql_query}</var>
<arg>${sql_query}</arg>
<arg>${args_key_str}</arg>
<arg>${args_value_str}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="PASS" start="2024-11-22T13:13:03.521263" elapsed="0.000095"/>
</kw>
<var name="${args_key}">value_natid</var>
<status status="PASS" start="2024-11-22T13:13:03.520953" elapsed="0.000424"/>
</iter>
<var>${args_key}</var>
<value>@{args_dict}</value>
<status status="PASS" start="2024-11-22T13:13:03.520893" elapsed="0.000504"/>
</for>
<status status="PASS" start="2024-11-22T13:13:03.520849" elapsed="0.000567"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:03.520844" elapsed="0.000586"/>
</if>
<status status="PASS" start="2024-11-22T13:13:03.520766" elapsed="0.000673"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:03.520754" elapsed="0.000695"/>
</if>
<return>
<value>${sql_query}</value>
<status status="PASS" start="2024-11-22T13:13:03.521464" elapsed="0.000016"/>
</return>
<msg time="2024-11-22T13:13:03.521530" level="INFO">${updated_sql_query} = DELETE FROM testdb.working_class_heroes
WHERE natid = "natid-104"</msg>
<var>${updated_sql_query}</var>
<arg>${sql_file_name}</arg>
<arg>${args_dict}</arg>
<status status="PASS" start="2024-11-22T13:13:03.519610" elapsed="0.001929"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<arg>${updated_sql_query}</arg>
<arg>DELETE</arg>
<arg>ignore_case=${True}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-11-22T13:13:03.521663" elapsed="0.000086"/>
</kw>
<msg time="2024-11-22T13:13:03.521783" level="INFO">${delete_status} = True</msg>
<var>${delete_status}</var>
<arg>Should Contain</arg>
<arg>${updated_sql_query}</arg>
<arg>DELETE</arg>
<arg>ignore_case=${True}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-11-22T13:13:03.521599" elapsed="0.000192"/>
</kw>
<if>
<branch type="IF" condition="'${delete_status}' == '${True}'">
<kw name="Execute Sql String" owner="DatabaseLibrary">
<msg time="2024-11-22T13:13:03.522371" level="INFO" html="true">Executing sql:&lt;br&gt;&lt;code style="font-weight: bold;"&gt;DELETE FROM testdb.working_class_heroes
WHERE natid = "natid-104"&lt;/code&gt;</msg>
<msg time="2024-11-22T13:13:03.547184" level="INFO">${json_response} = None</msg>
<var>${json_response}</var>
<arg>${updated_sql_query}</arg>
<doc>Executes the ``sql_string`` as a single SQL command.</doc>
<status status="PASS" start="2024-11-22T13:13:03.521905" elapsed="0.025301"/>
</kw>
<status status="PASS" start="2024-11-22T13:13:03.521822" elapsed="0.025423"/>
</branch>
<branch type="ELSE">
<kw name="Query" owner="DatabaseLibrary">
<var>${json_response}</var>
<arg>${updated_sql_query}</arg>
<arg>return_dict=${True}</arg>
<doc>Runs a query with the ``select_statement`` and returns the result as list of rows.
The type of row values depends on the database module -
usually they are tuples or tuple-like objects.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:03.547390" elapsed="0.000026"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:03.547268" elapsed="0.000175"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:03.521815" elapsed="0.025662"/>
</if>
<kw name="Disconnect From Database" owner="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<status status="PASS" start="2024-11-22T13:13:03.547564" elapsed="0.000235"/>
</kw>
<return>
<value>${json_response}</value>
<status status="PASS" start="2024-11-22T13:13:03.547832" elapsed="0.000032"/>
</return>
<arg>delete_hero_by_natid</arg>
<arg>${cleanup_dict}</arg>
<status status="PASS" start="2024-11-22T13:13:03.497039" elapsed="0.050901"/>
</kw>
<var name="${item}">['natid-104', 'Ben', 'MALE', '1996-01-01T23:59:59', '', '1000.12', '10.00', '']</var>
<status status="PASS" start="2024-11-22T13:13:03.496415" elapsed="0.051549"/>
</iter>
<iter>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2024-11-22T13:13:03.548534" level="INFO">${cleanup_dict} = {'value_natid': 'natid-105'}</msg>
<var>${cleanup_dict}</var>
<arg>value_natid=${item[0]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2024-11-22T13:13:03.548116" elapsed="0.000432"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<kw name="Connect To Database" owner="DatabaseLibrary">
<msg time="2024-11-22T13:13:03.548954" level="INFO">Looking for configuration file: 'resources/db.cfg'</msg>
<msg time="2024-11-22T13:13:03.548977" level="INFO">Configuration file doesn't exist</msg>
<msg time="2024-11-22T13:13:03.549059" level="INFO">Connect to DB using : mysql.connector.connect(database='testdb', user='user', password=***, host='localhost', port=3306)</msg>
<arg>${DB_API}</arg>
<arg>${DB_NAME}</arg>
<arg>${DB_USER}</arg>
<arg>${DB_PASSWORD}</arg>
<arg>${DB_HOST}</arg>
<arg>${DB_PORT}</arg>
<doc>Creates a database connection using the DB API 2.0 ``db_module`` and the parameters provided.
Along with listed commonly used arguments (`db_name`, `db_host` etc.)
you can set any other DB module specific parameters as key/value pairs.</doc>
<status status="PASS" start="2024-11-22T13:13:03.548815" elapsed="0.020060"/>
</kw>
<kw name="Update SQL Queries With Arguments Dictionary" owner="sql-helper">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-11-22T13:13:03.569363" level="INFO" html="true">Getting file '&lt;a href="file:///Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/object-repo/sql-queries/delete_hero_by_natid.sql"&gt;/Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/object-repo/sql-queries/delete_hero_by_natid.sql&lt;/a&gt;'.</msg>
<msg time="2024-11-22T13:13:03.569458" level="INFO">${sql_query} = DELETE FROM testdb.working_class_heroes
WHERE natid = "value_natid"</msg>
<var>${sql_query}</var>
<arg>./object-repo/sql-queries/${sql_file_name}.sql</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-11-22T13:13:03.569233" elapsed="0.000237"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2024-11-22T13:13:03.569923" level="INFO">Argument types are:
&lt;class 'robot.utils.dotdict.DotDict'&gt;
&lt;class 'str'&gt;</msg>
<msg time="2024-11-22T13:13:03.569978" level="FAIL">{'value_natid': 'natid-105'} != </msg>
<arg>${args_dict}</arg>
<arg>${EMPTY}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="FAIL" start="2024-11-22T13:13:03.569619" elapsed="0.000399">{'value_natid': 'natid-105'} != </status>
</kw>
<msg time="2024-11-22T13:13:03.570067" level="INFO">${empty_status} = False</msg>
<var>${empty_status}</var>
<arg>Should Be Equal As Strings</arg>
<arg>${args_dict}</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-11-22T13:13:03.569540" elapsed="0.000536"/>
</kw>
<if>
<branch type="IF" condition="'${empty_status}' == '${False}'">
<if>
<branch type="IF" condition="${args_dict}">
<for flavor="IN">
<iter>
<kw name="Convert To String" owner="BuiltIn">
<msg time="2024-11-22T13:13:03.570425" level="INFO">${args_key_str} = value_natid</msg>
<var>${args_key_str}</var>
<arg>${args_key}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="PASS" start="2024-11-22T13:13:03.570352" elapsed="0.000083"/>
</kw>
<kw name="Convert To String" owner="BuiltIn">
<msg time="2024-11-22T13:13:03.570570" level="INFO">${args_value_str} = natid-105</msg>
<var>${args_value_str}</var>
<arg>${args_dict}[${args_key_str}]</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="PASS" start="2024-11-22T13:13:03.570492" elapsed="0.000089"/>
</kw>
<kw name="Replace String" owner="String">
<msg time="2024-11-22T13:13:03.570737" level="INFO">${sql_query} = DELETE FROM testdb.working_class_heroes
WHERE natid = "natid-105"</msg>
<var>${sql_query}</var>
<arg>${sql_query}</arg>
<arg>${args_key_str}</arg>
<arg>${args_value_str}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="PASS" start="2024-11-22T13:13:03.570653" elapsed="0.000095"/>
</kw>
<var name="${args_key}">value_natid</var>
<status status="PASS" start="2024-11-22T13:13:03.570299" elapsed="0.000471"/>
</iter>
<var>${args_key}</var>
<value>@{args_dict}</value>
<status status="PASS" start="2024-11-22T13:13:03.570236" elapsed="0.000554"/>
</for>
<status status="PASS" start="2024-11-22T13:13:03.570199" elapsed="0.000612"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:03.570193" elapsed="0.000632"/>
</if>
<status status="PASS" start="2024-11-22T13:13:03.570119" elapsed="0.000717"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:03.570108" elapsed="0.000740"/>
</if>
<return>
<value>${sql_query}</value>
<status status="PASS" start="2024-11-22T13:13:03.570862" elapsed="0.000016"/>
</return>
<msg time="2024-11-22T13:13:03.570931" level="INFO">${updated_sql_query} = DELETE FROM testdb.working_class_heroes
WHERE natid = "natid-105"</msg>
<var>${updated_sql_query}</var>
<arg>${sql_file_name}</arg>
<arg>${args_dict}</arg>
<status status="PASS" start="2024-11-22T13:13:03.569053" elapsed="0.001889"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<arg>${updated_sql_query}</arg>
<arg>DELETE</arg>
<arg>ignore_case=${True}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-11-22T13:13:03.571077" elapsed="0.000097"/>
</kw>
<msg time="2024-11-22T13:13:03.571212" level="INFO">${delete_status} = True</msg>
<var>${delete_status}</var>
<arg>Should Contain</arg>
<arg>${updated_sql_query}</arg>
<arg>DELETE</arg>
<arg>ignore_case=${True}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-11-22T13:13:03.571004" elapsed="0.000217"/>
</kw>
<if>
<branch type="IF" condition="'${delete_status}' == '${True}'">
<kw name="Execute Sql String" owner="DatabaseLibrary">
<msg time="2024-11-22T13:13:03.571685" level="INFO" html="true">Executing sql:&lt;br&gt;&lt;code style="font-weight: bold;"&gt;DELETE FROM testdb.working_class_heroes
WHERE natid = "natid-105"&lt;/code&gt;</msg>
<msg time="2024-11-22T13:13:03.583333" level="INFO">${json_response} = None</msg>
<var>${json_response}</var>
<arg>${updated_sql_query}</arg>
<doc>Executes the ``sql_string`` as a single SQL command.</doc>
<status status="PASS" start="2024-11-22T13:13:03.571340" elapsed="0.012011"/>
</kw>
<status status="PASS" start="2024-11-22T13:13:03.571253" elapsed="0.012127"/>
</branch>
<branch type="ELSE">
<kw name="Query" owner="DatabaseLibrary">
<var>${json_response}</var>
<arg>${updated_sql_query}</arg>
<arg>return_dict=${True}</arg>
<doc>Runs a query with the ``select_statement`` and returns the result as list of rows.
The type of row values depends on the database module -
usually they are tuples or tuple-like objects.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:03.583472" elapsed="0.000014"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:03.583401" elapsed="0.000108"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:03.571247" elapsed="0.012277"/>
</if>
<kw name="Disconnect From Database" owner="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<status status="PASS" start="2024-11-22T13:13:03.583575" elapsed="0.000107"/>
</kw>
<return>
<value>${json_response}</value>
<status status="PASS" start="2024-11-22T13:13:03.583708" elapsed="0.000019"/>
</return>
<arg>delete_hero_by_natid</arg>
<arg>${cleanup_dict}</arg>
<status status="PASS" start="2024-11-22T13:13:03.548666" elapsed="0.035117"/>
</kw>
<var name="${item}">['natid-105', 'Dexter', 'MALE', '1996-01-01T23:59:59', '', '1000.00', '10.00', '']</var>
<status status="PASS" start="2024-11-22T13:13:03.548031" elapsed="0.035773"/>
</iter>
<iter>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2024-11-22T13:13:03.584392" level="INFO">${cleanup_dict} = {'value_natid': 'natid-106'}</msg>
<var>${cleanup_dict}</var>
<arg>value_natid=${item[0]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2024-11-22T13:13:03.583921" elapsed="0.000485"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<kw name="Connect To Database" owner="DatabaseLibrary">
<msg time="2024-11-22T13:13:03.584805" level="INFO">Looking for configuration file: 'resources/db.cfg'</msg>
<msg time="2024-11-22T13:13:03.584829" level="INFO">Configuration file doesn't exist</msg>
<msg time="2024-11-22T13:13:03.584933" level="INFO">Connect to DB using : mysql.connector.connect(database='testdb', user='user', password=***, host='localhost', port=3306)</msg>
<arg>${DB_API}</arg>
<arg>${DB_NAME}</arg>
<arg>${DB_USER}</arg>
<arg>${DB_PASSWORD}</arg>
<arg>${DB_HOST}</arg>
<arg>${DB_PORT}</arg>
<doc>Creates a database connection using the DB API 2.0 ``db_module`` and the parameters provided.
Along with listed commonly used arguments (`db_name`, `db_host` etc.)
you can set any other DB module specific parameters as key/value pairs.</doc>
<status status="PASS" start="2024-11-22T13:13:03.584666" elapsed="0.005194"/>
</kw>
<kw name="Update SQL Queries With Arguments Dictionary" owner="sql-helper">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-11-22T13:13:03.590254" level="INFO" html="true">Getting file '&lt;a href="file:///Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/object-repo/sql-queries/delete_hero_by_natid.sql"&gt;/Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/object-repo/sql-queries/delete_hero_by_natid.sql&lt;/a&gt;'.</msg>
<msg time="2024-11-22T13:13:03.590337" level="INFO">${sql_query} = DELETE FROM testdb.working_class_heroes
WHERE natid = "value_natid"</msg>
<var>${sql_query}</var>
<arg>./object-repo/sql-queries/${sql_file_name}.sql</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-11-22T13:13:03.590154" elapsed="0.000195"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2024-11-22T13:13:03.590798" level="INFO">Argument types are:
&lt;class 'robot.utils.dotdict.DotDict'&gt;
&lt;class 'str'&gt;</msg>
<msg time="2024-11-22T13:13:03.590848" level="FAIL">{'value_natid': 'natid-106'} != </msg>
<arg>${args_dict}</arg>
<arg>${EMPTY}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="FAIL" start="2024-11-22T13:13:03.590498" elapsed="0.000386">{'value_natid': 'natid-106'} != </status>
</kw>
<msg time="2024-11-22T13:13:03.590935" level="INFO">${empty_status} = False</msg>
<var>${empty_status}</var>
<arg>Should Be Equal As Strings</arg>
<arg>${args_dict}</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-11-22T13:13:03.590415" elapsed="0.000531"/>
</kw>
<if>
<branch type="IF" condition="'${empty_status}' == '${False}'">
<if>
<branch type="IF" condition="${args_dict}">
<for flavor="IN">
<iter>
<kw name="Convert To String" owner="BuiltIn">
<msg time="2024-11-22T13:13:03.591422" level="INFO">${args_key_str} = value_natid</msg>
<var>${args_key_str}</var>
<arg>${args_key}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="PASS" start="2024-11-22T13:13:03.591230" elapsed="0.000204"/>
</kw>
<kw name="Convert To String" owner="BuiltIn">
<msg time="2024-11-22T13:13:03.591582" level="INFO">${args_value_str} = natid-106</msg>
<var>${args_value_str}</var>
<arg>${args_dict}[${args_key_str}]</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="PASS" start="2024-11-22T13:13:03.591497" elapsed="0.000096"/>
</kw>
<kw name="Replace String" owner="String">
<msg time="2024-11-22T13:13:03.591744" level="INFO">${sql_query} = DELETE FROM testdb.working_class_heroes
WHERE natid = "natid-106"</msg>
<var>${sql_query}</var>
<arg>${sql_query}</arg>
<arg>${args_key_str}</arg>
<arg>${args_value_str}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="PASS" start="2024-11-22T13:13:03.591653" elapsed="0.000103"/>
</kw>
<var name="${args_key}">value_natid</var>
<status status="PASS" start="2024-11-22T13:13:03.591175" elapsed="0.000605"/>
</iter>
<var>${args_key}</var>
<value>@{args_dict}</value>
<status status="PASS" start="2024-11-22T13:13:03.591112" elapsed="0.000688"/>
</for>
<status status="PASS" start="2024-11-22T13:13:03.591057" elapsed="0.000765"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:03.591051" elapsed="0.000786"/>
</if>
<status status="PASS" start="2024-11-22T13:13:03.590986" elapsed="0.000862"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:03.590976" elapsed="0.000885"/>
</if>
<return>
<value>${sql_query}</value>
<status status="PASS" start="2024-11-22T13:13:03.591876" elapsed="0.000016"/>
</return>
<msg time="2024-11-22T13:13:03.591947" level="INFO">${updated_sql_query} = DELETE FROM testdb.working_class_heroes
WHERE natid = "natid-106"</msg>
<var>${updated_sql_query}</var>
<arg>${sql_file_name}</arg>
<arg>${args_dict}</arg>
<status status="PASS" start="2024-11-22T13:13:03.589999" elapsed="0.001959"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<arg>${updated_sql_query}</arg>
<arg>DELETE</arg>
<arg>ignore_case=${True}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-11-22T13:13:03.592101" elapsed="0.000099"/>
</kw>
<msg time="2024-11-22T13:13:03.592241" level="INFO">${delete_status} = True</msg>
<var>${delete_status}</var>
<arg>Should Contain</arg>
<arg>${updated_sql_query}</arg>
<arg>DELETE</arg>
<arg>ignore_case=${True}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-11-22T13:13:03.592024" elapsed="0.000227"/>
</kw>
<if>
<branch type="IF" condition="'${delete_status}' == '${True}'">
<kw name="Execute Sql String" owner="DatabaseLibrary">
<msg time="2024-11-22T13:13:03.592823" level="INFO" html="true">Executing sql:&lt;br&gt;&lt;code style="font-weight: bold;"&gt;DELETE FROM testdb.working_class_heroes
WHERE natid = "natid-106"&lt;/code&gt;</msg>
<msg time="2024-11-22T13:13:03.595149" level="INFO">${json_response} = None</msg>
<var>${json_response}</var>
<arg>${updated_sql_query}</arg>
<doc>Executes the ``sql_string`` as a single SQL command.</doc>
<status status="PASS" start="2024-11-22T13:13:03.592378" elapsed="0.002789"/>
</kw>
<status status="PASS" start="2024-11-22T13:13:03.592286" elapsed="0.002909"/>
</branch>
<branch type="ELSE">
<kw name="Query" owner="DatabaseLibrary">
<var>${json_response}</var>
<arg>${updated_sql_query}</arg>
<arg>return_dict=${True}</arg>
<doc>Runs a query with the ``select_statement`` and returns the result as list of rows.
The type of row values depends on the database module -
usually they are tuples or tuple-like objects.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:03.595285" elapsed="0.000016"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:03.595216" elapsed="0.000108"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:03.592280" elapsed="0.003059"/>
</if>
<kw name="Disconnect From Database" owner="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<status status="PASS" start="2024-11-22T13:13:03.595391" elapsed="0.000103"/>
</kw>
<return>
<value>${json_response}</value>
<status status="PASS" start="2024-11-22T13:13:03.595521" elapsed="0.000019"/>
</return>
<arg>delete_hero_by_natid</arg>
<arg>${cleanup_dict}</arg>
<status status="PASS" start="2024-11-22T13:13:03.584519" elapsed="0.011076"/>
</kw>
<var name="${item}">['natid-106', 'Greg', 'MALE', '1996-01-01T23:59:59', '', '10320.00', '10.00', '']</var>
<status status="PASS" start="2024-11-22T13:13:03.583858" elapsed="0.011757"/>
</iter>
<iter>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2024-11-22T13:13:03.596121" level="INFO">${cleanup_dict} = {'value_natid': 'natid-107'}</msg>
<var>${cleanup_dict}</var>
<arg>value_natid=${item[0]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2024-11-22T13:13:03.595732" elapsed="0.000404"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<kw name="Connect To Database" owner="DatabaseLibrary">
<msg time="2024-11-22T13:13:03.596550" level="INFO">Looking for configuration file: 'resources/db.cfg'</msg>
<msg time="2024-11-22T13:13:03.596574" level="INFO">Configuration file doesn't exist</msg>
<msg time="2024-11-22T13:13:03.596664" level="INFO">Connect to DB using : mysql.connector.connect(database='testdb', user='user', password=***, host='localhost', port=3306)</msg>
<arg>${DB_API}</arg>
<arg>${DB_NAME}</arg>
<arg>${DB_USER}</arg>
<arg>${DB_PASSWORD}</arg>
<arg>${DB_HOST}</arg>
<arg>${DB_PORT}</arg>
<doc>Creates a database connection using the DB API 2.0 ``db_module`` and the parameters provided.
Along with listed commonly used arguments (`db_name`, `db_host` etc.)
you can set any other DB module specific parameters as key/value pairs.</doc>
<status status="PASS" start="2024-11-22T13:13:03.596402" elapsed="0.005295"/>
</kw>
<kw name="Update SQL Queries With Arguments Dictionary" owner="sql-helper">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-11-22T13:13:03.602106" level="INFO" html="true">Getting file '&lt;a href="file:///Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/object-repo/sql-queries/delete_hero_by_natid.sql"&gt;/Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/object-repo/sql-queries/delete_hero_by_natid.sql&lt;/a&gt;'.</msg>
<msg time="2024-11-22T13:13:03.602187" level="INFO">${sql_query} = DELETE FROM testdb.working_class_heroes
WHERE natid = "value_natid"</msg>
<var>${sql_query}</var>
<arg>./object-repo/sql-queries/${sql_file_name}.sql</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-11-22T13:13:03.602006" elapsed="0.000193"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2024-11-22T13:13:03.602650" level="INFO">Argument types are:
&lt;class 'robot.utils.dotdict.DotDict'&gt;
&lt;class 'str'&gt;</msg>
<msg time="2024-11-22T13:13:03.602705" level="FAIL">{'value_natid': 'natid-107'} != </msg>
<arg>${args_dict}</arg>
<arg>${EMPTY}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="FAIL" start="2024-11-22T13:13:03.602347" elapsed="0.000401">{'value_natid': 'natid-107'} != </status>
</kw>
<msg time="2024-11-22T13:13:03.602797" level="INFO">${empty_status} = False</msg>
<var>${empty_status}</var>
<arg>Should Be Equal As Strings</arg>
<arg>${args_dict}</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-11-22T13:13:03.602267" elapsed="0.000540"/>
</kw>
<if>
<branch type="IF" condition="'${empty_status}' == '${False}'">
<if>
<branch type="IF" condition="${args_dict}">
<for flavor="IN">
<iter>
<kw name="Convert To String" owner="BuiltIn">
<msg time="2024-11-22T13:13:03.603147" level="INFO">${args_key_str} = value_natid</msg>
<var>${args_key_str}</var>
<arg>${args_key}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="PASS" start="2024-11-22T13:13:03.603066" elapsed="0.000093"/>
</kw>
<kw name="Convert To String" owner="BuiltIn">
<msg time="2024-11-22T13:13:03.603302" level="INFO">${args_value_str} = natid-107</msg>
<var>${args_value_str}</var>
<arg>${args_dict}[${args_key_str}]</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="PASS" start="2024-11-22T13:13:03.603219" elapsed="0.000094"/>
</kw>
<kw name="Replace String" owner="String">
<msg time="2024-11-22T13:13:03.603471" level="INFO">${sql_query} = DELETE FROM testdb.working_class_heroes
WHERE natid = "natid-107"</msg>
<var>${sql_query}</var>
<arg>${sql_query}</arg>
<arg>${args_key_str}</arg>
<arg>${args_value_str}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="PASS" start="2024-11-22T13:13:03.603374" elapsed="0.000109"/>
</kw>
<var name="${args_key}">value_natid</var>
<status status="PASS" start="2024-11-22T13:13:03.603012" elapsed="0.000495"/>
</iter>
<var>${args_key}</var>
<value>@{args_dict}</value>
<status status="PASS" start="2024-11-22T13:13:03.602954" elapsed="0.000573"/>
</for>
<status status="PASS" start="2024-11-22T13:13:03.602918" elapsed="0.000633"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:03.602911" elapsed="0.000655"/>
</if>
<status status="PASS" start="2024-11-22T13:13:03.602847" elapsed="0.000729"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:03.602838" elapsed="0.000751"/>
</if>
<return>
<value>${sql_query}</value>
<status status="PASS" start="2024-11-22T13:13:03.603603" elapsed="0.000016"/>
</return>
<msg time="2024-11-22T13:13:03.603674" level="INFO">${updated_sql_query} = DELETE FROM testdb.working_class_heroes
WHERE natid = "natid-107"</msg>
<var>${updated_sql_query}</var>
<arg>${sql_file_name}</arg>
<arg>${args_dict}</arg>
<status status="PASS" start="2024-11-22T13:13:03.601847" elapsed="0.001839"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<arg>${updated_sql_query}</arg>
<arg>DELETE</arg>
<arg>ignore_case=${True}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-11-22T13:13:03.603831" elapsed="0.000098"/>
</kw>
<msg time="2024-11-22T13:13:03.603968" level="INFO">${delete_status} = True</msg>
<var>${delete_status}</var>
<arg>Should Contain</arg>
<arg>${updated_sql_query}</arg>
<arg>DELETE</arg>
<arg>ignore_case=${True}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-11-22T13:13:03.603752" elapsed="0.000227"/>
</kw>
<if>
<branch type="IF" condition="'${delete_status}' == '${True}'">
<kw name="Execute Sql String" owner="DatabaseLibrary">
<msg time="2024-11-22T13:13:03.604484" level="INFO" html="true">Executing sql:&lt;br&gt;&lt;code style="font-weight: bold;"&gt;DELETE FROM testdb.working_class_heroes
WHERE natid = "natid-107"&lt;/code&gt;</msg>
<msg time="2024-11-22T13:13:03.607396" level="INFO">${json_response} = None</msg>
<var>${json_response}</var>
<arg>${updated_sql_query}</arg>
<doc>Executes the ``sql_string`` as a single SQL command.</doc>
<status status="PASS" start="2024-11-22T13:13:03.604105" elapsed="0.003307"/>
</kw>
<status status="PASS" start="2024-11-22T13:13:03.604014" elapsed="0.003420"/>
</branch>
<branch type="ELSE">
<kw name="Query" owner="DatabaseLibrary">
<var>${json_response}</var>
<arg>${updated_sql_query}</arg>
<arg>return_dict=${True}</arg>
<doc>Runs a query with the ``select_statement`` and returns the result as list of rows.
The type of row values depends on the database module -
usually they are tuples or tuple-like objects.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:03.607508" elapsed="0.000013"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:03.607450" elapsed="0.000092"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:03.604007" elapsed="0.003549"/>
</if>
<kw name="Disconnect From Database" owner="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<status status="PASS" start="2024-11-22T13:13:03.607606" elapsed="0.000090"/>
</kw>
<return>
<value>${json_response}</value>
<status status="PASS" start="2024-11-22T13:13:03.607719" elapsed="0.000016"/>
</return>
<arg>delete_hero_by_natid</arg>
<arg>${cleanup_dict}</arg>
<status status="PASS" start="2024-11-22T13:13:03.596253" elapsed="0.011545"/>
</kw>
<var name="${item}">['natid-107', 'Mary Molo', 'FEMALE', '1996-01-01T23:59:59', '', '1000.50', '10.28', '']</var>
<status status="PASS" start="2024-11-22T13:13:03.595668" elapsed="0.012151"/>
</iter>
<var>${item}</var>
<value>@{csv_list}</value>
<status status="PASS" start="2024-11-22T13:13:03.064757" elapsed="0.543082"/>
</for>
<arg>${positive_test_data_path}</arg>
<doc>Precondition to clear DB data before running test</doc>
<status status="PASS" start="2024-11-22T13:13:03.061728" elapsed="0.546145"/>
</kw>
<kw name="Login As Clerk" owner="clerk">
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T13:13:03.608277" level="INFO">
Logging In As Clerk</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T13:13:03.608215" elapsed="0.000081"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T13:13:03.608356" elapsed="0.000068"/>
</kw>
<arg>Logging In As Clerk</arg>
<status status="PASS" start="2024-11-22T13:13:03.608106" elapsed="0.000411"/>
</kw>
<kw name="Login With Credential" owner="login">
<kw name="Page Should Contain Element With Scroll And Retry" owner="generic">
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Page Should Contain Element With Scroll" owner="generic">
<kw name="Scroll Element Into View" owner="SeleniumLibrary">
<arg>${xpath}</arg>
<doc>Scrolls the element identified by ``locator`` into view.</doc>
<status status="PASS" start="2024-11-22T13:13:03.609751" elapsed="0.297543"/>
</kw>
<kw name="Page Should Contain Element" owner="SeleniumLibrary">
<msg time="2024-11-22T13:13:03.918271" level="INFO">Current page contains element '//h1[normalize-space()='Working Class Hero System']'.</msg>
<arg>${xpath}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<status status="PASS" start="2024-11-22T13:13:03.908218" elapsed="0.010270"/>
</kw>
<arg>${xpath}</arg>
<status status="PASS" start="2024-11-22T13:13:03.609627" elapsed="0.309086"/>
</kw>
<arg>10x</arg>
<arg>50ms</arg>
<arg>Page Should Contain Element With Scroll</arg>
<arg>${xpath}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-11-22T13:13:03.609508" elapsed="0.309291"/>
</kw>
<arg>${lbl_header_login}</arg>
<status status="PASS" start="2024-11-22T13:13:03.609374" elapsed="0.309523"/>
</kw>
<kw name="Get Login Credential" owner="login">
<kw name="Read Csv File To Associative" owner="CSVLibrary">
<msg time="2024-11-22T13:13:03.921062" level="INFO">${credential_dict_list} = [{'role': 'Clerk', 'username': 'clerk', 'password': 'clerk'}, {'role': 'Book Keeper', 'username': 'bk', 'password': 'bk'}]</msg>
<var>${credential_dict_list}</var>
<arg>./test-data/role-credential.csv</arg>
<doc>Read CSV file and return its content as a Python list of dictionaries.</doc>
<status status="PASS" start="2024-11-22T13:13:03.920129" elapsed="0.000964"/>
</kw>
<for flavor="IN">
<iter>
<if>
<branch type="IF" condition="'${item['role']}' == '${role}'">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-11-22T13:13:03.923313" level="INFO">${username} = clerk</msg>
<var>${username}</var>
<arg>${item['username']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-11-22T13:13:03.922596" elapsed="0.000751"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-11-22T13:13:03.924162" level="INFO">${password} = clerk</msg>
<var>${password}</var>
<arg>${item['password']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-11-22T13:13:03.923503" elapsed="0.000686"/>
</kw>
<status status="PASS" start="2024-11-22T13:13:03.921689" elapsed="0.002550"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:03.921664" elapsed="0.002616"/>
</if>
<var name="${item}">{'role': 'Clerk', 'username': 'clerk', 'password': 'clerk'}</var>
<status status="PASS" start="2024-11-22T13:13:03.921581" elapsed="0.002724"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item['role']}' == '${role}'">
<kw name="Set Variable" owner="BuiltIn">
<var>${username}</var>
<arg>${item['username']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:03.925199" elapsed="0.000030"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<var>${password}</var>
<arg>${item['password']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:03.925355" elapsed="0.000026"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:03.924497" elapsed="0.000925"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:03.924483" elapsed="0.000974"/>
</if>
<var name="${item}">{'role': 'Book Keeper', 'username': 'bk', 'password': 'bk'}</var>
<status status="PASS" start="2024-11-22T13:13:03.924445" elapsed="0.001035"/>
</iter>
<var>${item}</var>
<value>@{credential_dict_list}</value>
<status status="PASS" start="2024-11-22T13:13:03.921203" elapsed="0.004316"/>
</for>
<return>
<value>${username}</value>
<value>${password}</value>
<status status="PASS" start="2024-11-22T13:13:03.925580" elapsed="0.000048"/>
</return>
<msg time="2024-11-22T13:13:03.925796" level="INFO">${username} = clerk</msg>
<msg time="2024-11-22T13:13:03.925835" level="INFO">${password} = clerk</msg>
<var>${username}</var>
<var>${password}</var>
<arg>${role}</arg>
<doc>Get Book Keeper Login Credential From Credential Data Files</doc>
<status status="PASS" start="2024-11-22T13:13:03.919518" elapsed="0.006340"/>
</kw>
<kw name="Input Text With Scroll And Retry" owner="generic">
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Input Text With Scroll" owner="generic">
<kw name="Scroll Element Into View" owner="SeleniumLibrary">
<arg>${xpath}</arg>
<doc>Scrolls the element identified by ``locator`` into view.</doc>
<status status="PASS" start="2024-11-22T13:13:03.926901" elapsed="0.274476"/>
</kw>
<kw name="Input Text" owner="SeleniumLibrary">
<msg time="2024-11-22T13:13:04.203588" level="INFO">Typing text 'clerk' into text field '//input[@id='username-in']'.</msg>
<arg>${xpath}</arg>
<arg>${value}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<status status="PASS" start="2024-11-22T13:13:04.202919" elapsed="0.090752"/>
</kw>
<arg>${xpath}</arg>
<arg>${value}</arg>
<status status="PASS" start="2024-11-22T13:13:03.926600" elapsed="0.367153"/>
</kw>
<arg>10x</arg>
<arg>50ms</arg>
<arg>Input Text With Scroll</arg>
<arg>${xpath}</arg>
<arg>${value}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-11-22T13:13:03.926347" elapsed="0.367436"/>
</kw>
<arg>${input_username_login}</arg>
<arg>${username}</arg>
<status status="PASS" start="2024-11-22T13:13:03.926016" elapsed="0.367800"/>
</kw>
<kw name="Input Text With Scroll And Retry" owner="generic">
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Input Text With Scroll" owner="generic">
<kw name="Scroll Element Into View" owner="SeleniumLibrary">
<arg>${xpath}</arg>
<doc>Scrolls the element identified by ``locator`` into view.</doc>
<status status="PASS" start="2024-11-22T13:13:04.294416" elapsed="0.264883"/>
</kw>
<kw name="Input Text" owner="SeleniumLibrary">
<msg time="2024-11-22T13:13:04.560281" level="INFO">Typing text 'clerk' into text field '//input[@id='password-in']'.</msg>
<arg>${xpath}</arg>
<arg>${value}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<status status="PASS" start="2024-11-22T13:13:04.559796" elapsed="0.065323"/>
</kw>
<arg>${xpath}</arg>
<arg>${value}</arg>
<status status="PASS" start="2024-11-22T13:13:04.294283" elapsed="0.330931"/>
</kw>
<arg>10x</arg>
<arg>50ms</arg>
<arg>Input Text With Scroll</arg>
<arg>${xpath}</arg>
<arg>${value}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-11-22T13:13:04.294146" elapsed="0.331103"/>
</kw>
<arg>${input_password_login}</arg>
<arg>${password}</arg>
<status status="PASS" start="2024-11-22T13:13:04.293936" elapsed="0.331349"/>
</kw>
<kw name="Click Element With Scroll And Retry" owner="generic">
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Click Element With Scroll" owner="generic">
<kw name="Scroll Element Into View" owner="SeleniumLibrary">
<arg>${xpath}</arg>
<doc>Scrolls the element identified by ``locator`` into view.</doc>
<status status="PASS" start="2024-11-22T13:13:04.626087" elapsed="0.283185"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-11-22T13:13:04.910055" level="INFO">Clicking element '//input[@type='submit']'.</msg>
<arg>${xpath}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-11-22T13:13:04.909704" elapsed="0.239017"/>
</kw>
<arg>${xpath}</arg>
<status status="PASS" start="2024-11-22T13:13:04.625748" elapsed="0.523077"/>
</kw>
<arg>10x</arg>
<arg>50ms</arg>
<arg>Click Element With Scroll</arg>
<arg>${xpath}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-11-22T13:13:04.625610" elapsed="0.525771"/>
</kw>
<arg>${btn_submit_login}</arg>
<status status="PASS" start="2024-11-22T13:13:04.625405" elapsed="0.527033"/>
</kw>
<arg>Clerk</arg>
<doc>Login With Credential</doc>
<status status="PASS" start="2024-11-22T13:13:03.608588" elapsed="1.544035"/>
</kw>
<doc>Login As Clerk</doc>
<status status="PASS" start="2024-11-22T13:13:03.607982" elapsed="1.545157"/>
</kw>
<kw name="Upload CSV Files Via Clerk Dashboard" owner="clerk">
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T13:13:05.155962" level="INFO">
Upload CSV files from clerk dashboard to create heroes</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T13:13:05.155812" elapsed="0.000321"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T13:13:05.156475" elapsed="0.000300"/>
</kw>
<arg>Upload CSV files from clerk dashboard to create heroes</arg>
<status status="PASS" start="2024-11-22T13:13:05.155680" elapsed="0.001183"/>
</kw>
<kw name="Page Should Contain Element With Scroll And Retry" owner="generic">
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Page Should Contain Element With Scroll" owner="generic">
<kw name="Scroll Element Into View" owner="SeleniumLibrary">
<arg>${xpath}</arg>
<doc>Scrolls the element identified by ``locator`` into view.</doc>
<status status="PASS" start="2024-11-22T13:13:05.158120" elapsed="0.318037"/>
</kw>
<kw name="Page Should Contain Element" owner="SeleniumLibrary">
<msg time="2024-11-22T13:13:05.485667" level="INFO">Current page contains element '//h1[normalize-space()='Clerk Dashboard']'.</msg>
<arg>${xpath}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<status status="PASS" start="2024-11-22T13:13:05.476799" elapsed="0.008995"/>
</kw>
<arg>${xpath}</arg>
<status status="PASS" start="2024-11-22T13:13:05.157765" elapsed="0.328180"/>
</kw>
<arg>10x</arg>
<arg>50ms</arg>
<arg>Page Should Contain Element With Scroll</arg>
<arg>${xpath}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-11-22T13:13:05.157496" elapsed="0.328518"/>
</kw>
<arg>${lbl_header_clerk}</arg>
<status status="PASS" start="2024-11-22T13:13:05.157074" elapsed="0.329020"/>
</kw>
<kw name="Click Element With Scroll And Retry" owner="generic">
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Click Element With Scroll" owner="generic">
<kw name="Scroll Element Into View" owner="SeleniumLibrary">
<arg>${xpath}</arg>
<doc>Scrolls the element identified by ``locator`` into view.</doc>
<status status="PASS" start="2024-11-22T13:13:05.487448" elapsed="0.279399"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-11-22T13:13:05.768007" level="INFO">Clicking element '//button[@id='dropdownMenuButton2']'.</msg>
<arg>${xpath}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-11-22T13:13:05.767455" elapsed="0.046967"/>
</kw>
<arg>${xpath}</arg>
<status status="PASS" start="2024-11-22T13:13:05.487163" elapsed="0.327390"/>
</kw>
<arg>10x</arg>
<arg>50ms</arg>
<arg>Click Element With Scroll</arg>
<arg>${xpath}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-11-22T13:13:05.486860" elapsed="0.327736"/>
</kw>
<arg>${btn_add_hero_clerk}</arg>
<status status="PASS" start="2024-11-22T13:13:05.486380" elapsed="0.328256"/>
</kw>
<kw name="Click Element With Scroll And Retry" owner="generic">
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Click Element With Scroll" owner="generic">
<kw name="Scroll Element Into View" owner="SeleniumLibrary">
<arg>${xpath}</arg>
<doc>Scrolls the element identified by ``locator`` into view.</doc>
<status status="PASS" start="2024-11-22T13:13:05.815282" elapsed="0.277942"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-11-22T13:13:06.094687" level="INFO">Clicking element '//a[@class='dropdown-item' and text()='Upload a csv file']'.</msg>
<arg>${xpath}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-11-22T13:13:06.094043" elapsed="0.097530"/>
</kw>
<arg>${xpath}</arg>
<status status="PASS" start="2024-11-22T13:13:05.815149" elapsed="0.376499"/>
</kw>
<arg>10x</arg>
<arg>50ms</arg>
<arg>Click Element With Scroll</arg>
<arg>${xpath}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-11-22T13:13:05.815018" elapsed="0.376659"/>
</kw>
<arg>${dropdown_option_upload_csv_clerk}</arg>
<status status="PASS" start="2024-11-22T13:13:05.814779" elapsed="0.376929"/>
</kw>
<kw name="Page Should Contain Element With Scroll And Retry" owner="generic">
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Page Should Contain Element With Scroll" owner="generic">
<kw name="Scroll Element Into View" owner="SeleniumLibrary">
<arg>${xpath}</arg>
<doc>Scrolls the element identified by ``locator`` into view.</doc>
<status status="PASS" start="2024-11-22T13:13:06.192352" elapsed="0.283596"/>
</kw>
<kw name="Page Should Contain Element" owner="SeleniumLibrary">
<msg time="2024-11-22T13:13:06.485240" level="INFO">Current page contains element '//input[@id='upload-csv-file']'.</msg>
<arg>${xpath}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<status status="PASS" start="2024-11-22T13:13:06.476522" elapsed="0.008848"/>
</kw>
<arg>${xpath}</arg>
<status status="PASS" start="2024-11-22T13:13:06.192194" elapsed="0.293330"/>
</kw>
<arg>10x</arg>
<arg>50ms</arg>
<arg>Page Should Contain Element With Scroll</arg>
<arg>${xpath}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-11-22T13:13:06.192013" elapsed="0.293585"/>
</kw>
<arg>${input_upload_csv_file_clerk}</arg>
<status status="PASS" start="2024-11-22T13:13:06.191815" elapsed="0.293871"/>
</kw>
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T13:13:06.486618" level="INFO">
Uploading CSV Files From Path "/Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/test-data/US2-data-positive.csv"</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T13:13:06.486458" elapsed="0.000208"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T13:13:06.486795" elapsed="0.000197"/>
</kw>
<arg>Uploading CSV Files From Path "${test_data_path}"</arg>
<status status="PASS" start="2024-11-22T13:13:06.485967" elapsed="0.001087"/>
</kw>
<kw name="Choose File" owner="SeleniumLibrary">
<msg time="2024-11-22T13:13:06.487657" level="INFO">Sending /Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/test-data/US2-data-positive.csv to browser.</msg>
<arg>${input_upload_csv_file_clerk}</arg>
<arg>${test_data_path}</arg>
<doc>Inputs the ``file_path`` into the file input field ``locator``.</doc>
<status status="PASS" start="2024-11-22T13:13:06.487203" elapsed="0.045354"/>
</kw>
<kw name="Click Element With Scroll And Retry" owner="generic">
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Click Element With Scroll" owner="generic">
<kw name="Scroll Element Into View" owner="SeleniumLibrary">
<arg>${xpath}</arg>
<doc>Scrolls the element identified by ``locator`` into view.</doc>
<status status="PASS" start="2024-11-22T13:13:06.533737" elapsed="0.266480"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-11-22T13:13:06.801270" level="INFO">Clicking element '//button[normalize-space()='Create']'.</msg>
<arg>${xpath}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-11-22T13:13:06.800756" elapsed="0.056150"/>
</kw>
<arg>${xpath}</arg>
<status status="PASS" start="2024-11-22T13:13:06.533564" elapsed="0.323440"/>
</kw>
<arg>10x</arg>
<arg>50ms</arg>
<arg>Click Element With Scroll</arg>
<arg>${xpath}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-11-22T13:13:06.533195" elapsed="0.323847"/>
</kw>
<arg>${btn_create_clerk}</arg>
<status status="PASS" start="2024-11-22T13:13:06.532889" elapsed="0.324192"/>
</kw>
<if>
<branch type="IF" condition="'${flow}' == 'Positive'">
<kw name="Page Should Contain Element With Scroll And Retry" owner="generic">
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Page Should Contain Element With Scroll" owner="generic">
<kw name="Scroll Element Into View" owner="SeleniumLibrary">
<msg time="2024-11-22T13:13:07.041367" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="screenshots/selenium-screenshot-1.png"&gt;&lt;img src="screenshots/selenium-screenshot-1.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg time="2024-11-22T13:13:07.041483" level="FAIL">Element with locator '//div[@class='bg-success pt-2']' not found.</msg>
<arg>${xpath}</arg>
<doc>Scrolls the element identified by ``locator`` into view.</doc>
<status status="FAIL" start="2024-11-22T13:13:06.857979" elapsed="0.197009">Element with locator '//div[@class='bg-success pt-2']' not found.</status>
</kw>
<kw name="Page Should Contain Element" owner="SeleniumLibrary">
<arg>${xpath}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:07.055118" elapsed="0.000016"/>
</kw>
<arg>${xpath}</arg>
<status status="FAIL" start="2024-11-22T13:13:06.857819" elapsed="0.197386">Element with locator '//div[@class='bg-success pt-2']' not found.</status>
</kw>
<kw name="Page Should Contain Element With Scroll" owner="generic">
<kw name="Scroll Element Into View" owner="SeleniumLibrary">
<msg time="2024-11-22T13:13:07.197713" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="screenshots/selenium-screenshot-2.png"&gt;&lt;img src="screenshots/selenium-screenshot-2.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg time="2024-11-22T13:13:07.197825" level="FAIL">Element with locator '//div[@class='bg-success pt-2']' not found.</msg>
<arg>${xpath}</arg>
<doc>Scrolls the element identified by ``locator`` into view.</doc>
<status status="FAIL" start="2024-11-22T13:13:07.105781" elapsed="0.092317">Element with locator '//div[@class='bg-success pt-2']' not found.</status>
</kw>
<kw name="Page Should Contain Element" owner="SeleniumLibrary">
<arg>${xpath}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:07.198277" elapsed="0.000020"/>
</kw>
<arg>${xpath}</arg>
<status status="FAIL" start="2024-11-22T13:13:07.105569" elapsed="0.092775">Element with locator '//div[@class='bg-success pt-2']' not found.</status>
</kw>
<kw name="Page Should Contain Element With Scroll" owner="generic">
<kw name="Scroll Element Into View" owner="SeleniumLibrary">
<msg time="2024-11-22T13:13:07.350126" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="screenshots/selenium-screenshot-3.png"&gt;&lt;img src="screenshots/selenium-screenshot-3.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg time="2024-11-22T13:13:07.350200" level="FAIL">Element with locator '//div[@class='bg-success pt-2']' not found.</msg>
<arg>${xpath}</arg>
<doc>Scrolls the element identified by ``locator`` into view.</doc>
<status status="FAIL" start="2024-11-22T13:13:07.248768" elapsed="0.101690">Element with locator '//div[@class='bg-success pt-2']' not found.</status>
</kw>
<kw name="Page Should Contain Element" owner="SeleniumLibrary">
<arg>${xpath}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:07.350571" elapsed="0.000016"/>
</kw>
<arg>${xpath}</arg>
<status status="FAIL" start="2024-11-22T13:13:07.248582" elapsed="0.102056">Element with locator '//div[@class='bg-success pt-2']' not found.</status>
</kw>
<kw name="Page Should Contain Element With Scroll" owner="generic">
<kw name="Scroll Element Into View" owner="SeleniumLibrary">
<arg>${xpath}</arg>
<doc>Scrolls the element identified by ``locator`` into view.</doc>
<status status="PASS" start="2024-11-22T13:13:07.401486" elapsed="0.273048"/>
</kw>
<kw name="Page Should Contain Element" owner="SeleniumLibrary">
<msg time="2024-11-22T13:13:07.680396" level="INFO">Current page contains element '//div[@class='bg-success pt-2']'.</msg>
<arg>${xpath}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<status status="PASS" start="2024-11-22T13:13:07.674751" elapsed="0.005717"/>
</kw>
<arg>${xpath}</arg>
<status status="PASS" start="2024-11-22T13:13:07.401294" elapsed="0.279247"/>
</kw>
<arg>10x</arg>
<arg>50ms</arg>
<arg>Page Should Contain Element With Scroll</arg>
<arg>${xpath}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-11-22T13:13:06.857666" elapsed="0.822910"/>
</kw>
<arg>${lbl_created_success_clerk}</arg>
<status status="PASS" start="2024-11-22T13:13:06.857432" elapsed="0.823187"/>
</kw>
<status status="PASS" start="2024-11-22T13:13:06.857179" elapsed="0.823465"/>
</branch>
<branch type="ELSE">
<kw name="Page Should Contain Element With Scroll And Retry" owner="generic">
<arg>${lbl_created_unsuccess_warning_clerk}</arg>
<status status="NOT RUN" start="2024-11-22T13:13:07.680838" elapsed="0.000021"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:07.680685" elapsed="0.000194"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:06.857149" elapsed="0.823750"/>
</if>
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T13:13:07.681307" level="INFO">
Uploaded Successfully</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T13:13:07.681204" elapsed="0.000130"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T13:13:07.681412" elapsed="0.000115"/>
</kw>
<arg>Uploaded Successfully</arg>
<status status="PASS" start="2024-11-22T13:13:07.680979" elapsed="0.000584"/>
</kw>
<arg>${positive_test_data_path}</arg>
<arg>Positive</arg>
<doc>Upload CSV files from clerk dashboard to create heroes</doc>
<status status="PASS" start="2024-11-22T13:13:05.155430" elapsed="2.526166"/>
</kw>
<kw name="Verify Uploaded Data In DB" owner="clerk">
<kw name="Read Csv File To List" owner="CSVLibrary">
<msg time="2024-11-22T13:13:07.682597" level="INFO">${csv_list} = [['natid-100', 'Richard Chu', 'MALE', '1996-01-01T23:59:59', '', '1000.12', '10.00', ''], ['natid-101', 'Arthur', 'MALE', '1996-01-01T23:59:59', '', '1000.00', '10.00', ''], ['natid-102', 'Jayden', 'M...</msg>
<var>${csv_list}</var>
<arg>${test_data_path}</arg>
<doc>Read CSV file and return its content as a Python list of tuples.</doc>
<status status="PASS" start="2024-11-22T13:13:07.682228" elapsed="0.000388"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2024-11-22T13:13:07.683417" level="INFO">${dict} = {'value_natid': 'natid-100'}</msg>
<var>${dict}</var>
<arg>value_natid=${item[0]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2024-11-22T13:13:07.682867" elapsed="0.000568"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<kw name="Connect To Database" owner="DatabaseLibrary">
<msg time="2024-11-22T13:13:07.684012" level="INFO">Looking for configuration file: 'resources/db.cfg'</msg>
<msg time="2024-11-22T13:13:07.684050" level="INFO">Configuration file doesn't exist</msg>
<msg time="2024-11-22T13:13:07.684175" level="INFO">Connect to DB using : mysql.connector.connect(database='testdb', user='user', password=***, host='localhost', port=3306)</msg>
<arg>${DB_API}</arg>
<arg>${DB_NAME}</arg>
<arg>${DB_USER}</arg>
<arg>${DB_PASSWORD}</arg>
<arg>${DB_HOST}</arg>
<arg>${DB_PORT}</arg>
<doc>Creates a database connection using the DB API 2.0 ``db_module`` and the parameters provided.
Along with listed commonly used arguments (`db_name`, `db_host` etc.)
you can set any other DB module specific parameters as key/value pairs.</doc>
<status status="PASS" start="2024-11-22T13:13:07.683768" elapsed="0.023077"/>
</kw>
<kw name="Update SQL Queries With Arguments Dictionary" owner="sql-helper">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-11-22T13:13:07.707415" level="INFO" html="true">Getting file '&lt;a href="file:///Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/object-repo/sql-queries/select_hero_by_natid.sql"&gt;/Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/object-repo/sql-queries/select_hero_by_natid.sql&lt;/a&gt;'.</msg>
<msg time="2024-11-22T13:13:07.709161" level="INFO">${sql_query} = SELECT *
FROM testdb.working_class_heroes
WHERE natid='value_natid';</msg>
<var>${sql_query}</var>
<arg>./object-repo/sql-queries/${sql_file_name}.sql</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-11-22T13:13:07.707264" elapsed="0.001913"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2024-11-22T13:13:07.709750" level="INFO">Argument types are:
&lt;class 'robot.utils.dotdict.DotDict'&gt;
&lt;class 'str'&gt;</msg>
<msg time="2024-11-22T13:13:07.709822" level="FAIL">{'value_natid': 'natid-100'} != </msg>
<arg>${args_dict}</arg>
<arg>${EMPTY}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="FAIL" start="2024-11-22T13:13:07.709372" elapsed="0.000496">{'value_natid': 'natid-100'} != </status>
</kw>
<msg time="2024-11-22T13:13:07.709934" level="INFO">${empty_status} = False</msg>
<var>${empty_status}</var>
<arg>Should Be Equal As Strings</arg>
<arg>${args_dict}</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-11-22T13:13:07.709273" elapsed="0.000675"/>
</kw>
<if>
<branch type="IF" condition="'${empty_status}' == '${False}'">
<if>
<branch type="IF" condition="${args_dict}">
<for flavor="IN">
<iter>
<kw name="Convert To String" owner="BuiltIn">
<msg time="2024-11-22T13:13:07.710388" level="INFO">${args_key_str} = value_natid</msg>
<var>${args_key_str}</var>
<arg>${args_key}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="PASS" start="2024-11-22T13:13:07.710297" elapsed="0.000105"/>
</kw>
<kw name="Convert To String" owner="BuiltIn">
<msg time="2024-11-22T13:13:07.710574" level="INFO">${args_value_str} = natid-100</msg>
<var>${args_value_str}</var>
<arg>${args_dict}[${args_key_str}]</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="PASS" start="2024-11-22T13:13:07.710475" elapsed="0.000112"/>
</kw>
<kw name="Replace String" owner="String">
<msg time="2024-11-22T13:13:07.710764" level="INFO">${sql_query} = SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-100';</msg>
<var>${sql_query}</var>
<arg>${sql_query}</arg>
<arg>${args_key_str}</arg>
<arg>${args_value_str}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="PASS" start="2024-11-22T13:13:07.710657" elapsed="0.000121"/>
</kw>
<var name="${args_key}">value_natid</var>
<status status="PASS" start="2024-11-22T13:13:07.710227" elapsed="0.000578"/>
</iter>
<var>${args_key}</var>
<value>@{args_dict}</value>
<status status="PASS" start="2024-11-22T13:13:07.710153" elapsed="0.000678"/>
</for>
<status status="PASS" start="2024-11-22T13:13:07.710108" elapsed="0.000748"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:07.710100" elapsed="0.000774"/>
</if>
<status status="PASS" start="2024-11-22T13:13:07.710004" elapsed="0.000883"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:07.709989" elapsed="0.000912"/>
</if>
<return>
<value>${sql_query}</value>
<status status="PASS" start="2024-11-22T13:13:07.710919" elapsed="0.000023"/>
</return>
<msg time="2024-11-22T13:13:07.711009" level="INFO">${updated_sql_query} = SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-100';</msg>
<var>${updated_sql_query}</var>
<arg>${sql_file_name}</arg>
<arg>${args_dict}</arg>
<status status="PASS" start="2024-11-22T13:13:07.707052" elapsed="0.003971"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-11-22T13:13:07.711388" level="FAIL">'SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-100';' does not contain 'delete'</msg>
<arg>${updated_sql_query}</arg>
<arg>DELETE</arg>
<arg>ignore_case=${True}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-11-22T13:13:07.711229" elapsed="0.000195">'SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-100';' does not contain 'delete'</status>
</kw>
<msg time="2024-11-22T13:13:07.711477" level="INFO">${delete_status} = False</msg>
<var>${delete_status}</var>
<arg>Should Contain</arg>
<arg>${updated_sql_query}</arg>
<arg>DELETE</arg>
<arg>ignore_case=${True}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-11-22T13:13:07.711113" elapsed="0.000376"/>
</kw>
<if>
<branch type="IF" condition="'${delete_status}' == '${True}'">
<kw name="Execute Sql String" owner="DatabaseLibrary">
<var>${json_response}</var>
<arg>${updated_sql_query}</arg>
<doc>Executes the ``sql_string`` as a single SQL command.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:07.711656" elapsed="0.000014"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:07.711534" elapsed="0.000159"/>
</branch>
<branch type="ELSE">
<kw name="Query" owner="DatabaseLibrary">
<msg time="2024-11-22T13:13:07.712689" level="INFO" html="true">Executing sql:&lt;br&gt;&lt;code style="font-weight: bold;"&gt;SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-100';&lt;/code&gt;</msg>
<msg time="2024-11-22T13:13:07.716236" level="INFO" html="true">&lt;div style="max-width: 100%; overflow-x: auto;"&gt;&lt;table style="width: auto; border-collapse: collapse; border: 2px solid rgb(140 140 140)"&gt;&lt;caption style="text-align: left; font-weight: bold; padding: 5px;"&gt;Query returned 1 rows&lt;/caption&gt;&lt;tr&gt;&lt;th scope="col" style="background-color: #d6ecd4; border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;Row&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;id&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;created_at&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;create_by&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;updated_at&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;updated_by&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;birth_date&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;brownie_points&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;death_date&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;gender&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;name&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;natid&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;salary&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;tax_paid&lt;/th&gt;&lt;/tr&gt;&lt;tr style="background-color: #eee;"&gt;&lt;th scope="row" style="background-color: #d6ecd4;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;0&lt;/th&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;2493ef5a-cc60-4641-a635-a06d66c7b7b0&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;2024-11-22 13:13:07.262998&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;SYSTEM&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;2024-11-22 13:13:07.262998&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;SYSTEM&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;1996-01-01 23:59:59&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;None&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;None&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;MALE&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;Richard Chu&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;natid-100&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;1000.12&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;10.0&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;</msg>
<msg time="2024-11-22T13:13:07.717304" level="INFO">${json_response} = [{'id': '2493ef5a-cc60-4641-a635-a06d66c7b7b0', 'created_at': datetime.datetime(2024, 11, 22, 13, 13, 7, 262998), 'create_by': 'SYSTEM', 'updated_at': datetime.datetime(2024, 11, 22, 13, 13, 7, 262998...</msg>
<var>${json_response}</var>
<arg>${updated_sql_query}</arg>
<arg>return_dict=${True}</arg>
<doc>Runs a query with the ``select_statement`` and returns the result as list of rows.
The type of row values depends on the database module -
usually they are tuples or tuple-like objects.</doc>
<status status="PASS" start="2024-11-22T13:13:07.711772" elapsed="0.005562"/>
</kw>
<status status="PASS" start="2024-11-22T13:13:07.711711" elapsed="0.005667"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:07.711525" elapsed="0.005875"/>
</if>
<kw name="Disconnect From Database" owner="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<status status="PASS" start="2024-11-22T13:13:07.717477" elapsed="0.000140"/>
</kw>
<return>
<value>${json_response}</value>
<status status="PASS" start="2024-11-22T13:13:07.717645" elapsed="0.000023"/>
</return>
<msg time="2024-11-22T13:13:07.717748" level="INFO">${sql_response} = [{'id': '2493ef5a-cc60-4641-a635-a06d66c7b7b0', 'created_at': datetime.datetime(2024, 11, 22, 13, 13, 7, 262998), 'create_by': 'SYSTEM', 'updated_at': datetime.datetime(2024, 11, 22, 13, 13, 7, 262998...</msg>
<var>${sql_response}</var>
<arg>select_hero_by_natid</arg>
<arg>${dict}</arg>
<status status="PASS" start="2024-11-22T13:13:07.683578" elapsed="0.034184"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-11-22T13:13:07.717953" level="INFO">${sql_response} = {'id': '2493ef5a-cc60-4641-a635-a06d66c7b7b0', 'created_at': datetime.datetime(2024, 11, 22, 13, 13, 7, 262998), 'create_by': 'SYSTEM', 'updated_at': datetime.datetime(2024, 11, 22, 13, 13, 7, 262998)...</msg>
<var>${sql_response}</var>
<arg>${sql_response}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-11-22T13:13:07.717837" elapsed="0.000129"/>
</kw>
<kw name="Compare String" owner="generic">
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T13:13:07.719138" level="INFO">
Expected natid:
natid-100
Actual natid:
natid-100</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T13:13:07.719078" elapsed="0.000220"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T13:13:07.719372" elapsed="0.000089"/>
</kw>
<arg>Expected ${compare_title}:\n${expected_string}\nActual ${compare_title}:\n${actual_string}</arg>
<status status="PASS" start="2024-11-22T13:13:07.718906" elapsed="0.000590"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${expected_string}</arg>
<arg>${actual_string}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-11-22T13:13:07.719562" elapsed="0.000091"/>
</kw>
<arg>${item[0]}</arg>
<arg>${sql_response['natid']}</arg>
<arg>natid</arg>
<doc>Compare Strings</doc>
<status status="PASS" start="2024-11-22T13:13:07.718053" elapsed="0.001634"/>
</kw>
<kw name="Compare String" owner="generic">
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T13:13:07.720646" level="INFO">
Expected name:
Richard Chu
Actual name:
Richard Chu</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T13:13:07.720593" elapsed="0.000073"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T13:13:07.720726" elapsed="0.000072"/>
</kw>
<arg>Expected ${compare_title}:\n${expected_string}\nActual ${compare_title}:\n${actual_string}</arg>
<status status="PASS" start="2024-11-22T13:13:07.720442" elapsed="0.000385"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${expected_string}</arg>
<arg>${actual_string}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-11-22T13:13:07.720952" elapsed="0.000096"/>
</kw>
<arg>${item[1]}</arg>
<arg>${sql_response['name']}</arg>
<arg>name</arg>
<doc>Compare Strings</doc>
<status status="PASS" start="2024-11-22T13:13:07.719761" elapsed="0.001386"/>
</kw>
<kw name="Compare String" owner="generic">
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T13:13:07.722231" level="INFO">
Expected gender:
MALE
Actual gender:
MALE</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T13:13:07.722176" elapsed="0.000080"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T13:13:07.722315" elapsed="0.000073"/>
</kw>
<arg>Expected ${compare_title}:\n${expected_string}\nActual ${compare_title}:\n${actual_string}</arg>
<status status="PASS" start="2024-11-22T13:13:07.722024" elapsed="0.000393"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${expected_string}</arg>
<arg>${actual_string}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-11-22T13:13:07.722476" elapsed="0.000083"/>
</kw>
<arg>${item[2]}</arg>
<arg>${sql_response['gender']}</arg>
<arg>gender</arg>
<doc>Compare Strings</doc>
<status status="PASS" start="2024-11-22T13:13:07.721256" elapsed="0.001337"/>
</kw>
<kw name="Compare Date" owner="generic">
<if>
<branch type="IF" condition="'${expected_date}' == '${EMPTY}'">
<kw name="Log and Log To Console" owner="generic">
<arg>Expected ${compare_title}:\n${None}\nActual ${compare_title}:\n${actual_date}</arg>
<status status="NOT RUN" start="2024-11-22T13:13:07.723651" elapsed="0.000015"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${None}</arg>
<arg>${actual_date}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:07.723729" elapsed="0.000012"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:07.723338" elapsed="0.000424"/>
</branch>
<branch type="ELSE">
<kw name="Convert Date" owner="DateTime">
<msg time="2024-11-22T13:13:07.726884" level="INFO">${expected_date} = 1996-01-01 23:59:59.000000</msg>
<var>${expected_date}</var>
<arg>${expected_date}</arg>
<arg>result_format=%Y-%m-%d %H:%M:%S.%f</arg>
<doc>Converts between supported `date formats`.</doc>
<status status="PASS" start="2024-11-22T13:13:07.723853" elapsed="0.003049"/>
</kw>
<kw name="Convert Date" owner="DateTime">
<msg time="2024-11-22T13:13:07.727095" level="INFO">${actual_date} = 1996-01-01 23:59:59.000000</msg>
<var>${actual_date}</var>
<arg>${actual_date}</arg>
<arg>result_format=%Y-%m-%d %H:%M:%S.%f</arg>
<doc>Converts between supported `date formats`.</doc>
<status status="PASS" start="2024-11-22T13:13:07.726983" elapsed="0.000126"/>
</kw>
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T13:13:07.727413" level="INFO">
Expected birth_date:
1996-01-01 23:59:59.000000
Actual birth_date:
1996-01-01 23:59:59.000000</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T13:13:07.727356" elapsed="0.000078"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T13:13:07.727493" elapsed="0.000068"/>
</kw>
<arg>Expected ${compare_title}:\n${expected_date}\nActual ${compare_title}:\n${actual_date}</arg>
<status status="PASS" start="2024-11-22T13:13:07.727191" elapsed="0.000398"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${expected_date}</arg>
<arg>${actual_date}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-11-22T13:13:07.727647" elapsed="0.000081"/>
</kw>
<status status="PASS" start="2024-11-22T13:13:07.723784" elapsed="0.003966"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:07.723327" elapsed="0.004440"/>
</if>
<arg>${item[3]}</arg>
<arg>${sql_response['birth_date']}</arg>
<arg>birth_date</arg>
<doc>Format date and compare</doc>
<status status="PASS" start="2024-11-22T13:13:07.722696" elapsed="0.005094"/>
</kw>
<kw name="Compare Date" owner="generic">
<if>
<branch type="IF" condition="'${expected_date}' == '${EMPTY}'">
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T13:13:07.729279" level="INFO">
Expected death_date:
None
Actual death_date:
None</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T13:13:07.729216" elapsed="0.000087"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T13:13:07.729371" elapsed="0.000076"/>
</kw>
<arg>Expected ${compare_title}:\n${None}\nActual ${compare_title}:\n${actual_date}</arg>
<status status="PASS" start="2024-11-22T13:13:07.728925" elapsed="0.000556"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${None}</arg>
<arg>${actual_date}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-11-22T13:13:07.729537" elapsed="0.000080"/>
</kw>
<status status="PASS" start="2024-11-22T13:13:07.728572" elapsed="0.001067"/>
</branch>
<branch type="ELSE">
<kw name="Convert Date" owner="DateTime">
<var>${expected_date}</var>
<arg>${expected_date}</arg>
<arg>result_format=%Y-%m-%d %H:%M:%S.%f</arg>
<doc>Converts between supported `date formats`.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:07.729713" elapsed="0.000011"/>
</kw>
<kw name="Convert Date" owner="DateTime">
<var>${actual_date}</var>
<arg>${actual_date}</arg>
<arg>result_format=%Y-%m-%d %H:%M:%S.%f</arg>
<doc>Converts between supported `date formats`.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:07.729781" elapsed="0.000010"/>
</kw>
<kw name="Log and Log To Console" owner="generic">
<arg>Expected ${compare_title}:\n${expected_date}\nActual ${compare_title}:\n${actual_date}</arg>
<status status="NOT RUN" start="2024-11-22T13:13:07.729851" elapsed="0.000013"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${expected_date}</arg>
<arg>${actual_date}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:07.729923" elapsed="0.000010"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:07.729657" elapsed="0.000294"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:07.728562" elapsed="0.001404"/>
</if>
<arg>${item[4]}</arg>
<arg>${sql_response['death_date']}</arg>
<arg>death_date</arg>
<doc>Format date and compare</doc>
<status status="PASS" start="2024-11-22T13:13:07.727918" elapsed="0.002070"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<if>
<branch type="IF" condition="'${expected_int}' == '${EMPTY}'">
<kw name="Log and Log To Console" owner="generic">
<arg>Expected ${compare_title}:\n${None}\nActual ${compare_title}:\n${actual_int}</arg>
<status status="NOT RUN" start="2024-11-22T13:13:07.731008" elapsed="0.000015"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${None}</arg>
<arg>${actual_int}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:07.731096" elapsed="0.000012"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:07.730695" elapsed="0.000433"/>
</branch>
<branch type="ELSE">
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T13:13:07.731407" level="INFO">
Expected salary:
1000.12
Actual salary:
1000.12</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T13:13:07.731354" elapsed="0.000135"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T13:13:07.731549" elapsed="0.000071"/>
</kw>
<arg>Expected ${compare_title}:\n${expected_int}\nActual ${compare_title}:\n${actual_int}</arg>
<status status="PASS" start="2024-11-22T13:13:07.731200" elapsed="0.000450"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-11-22T13:13:07.731812" level="INFO">${expected_int} = 1000.12</msg>
<var>${expected_int}</var>
<arg>'{:.2f}'.format(float(${expected_int}))</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-11-22T13:13:07.731712" elapsed="0.000113"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-11-22T13:13:07.731973" level="INFO">${actual_int} = 1000.12</msg>
<var>${actual_int}</var>
<arg>'{:.2f}'.format(float(${actual_int}))</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-11-22T13:13:07.731888" elapsed="0.000096"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${expected_int}</arg>
<arg>${actual_int}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-11-22T13:13:07.732047" elapsed="0.000082"/>
</kw>
<status status="PASS" start="2024-11-22T13:13:07.731144" elapsed="0.001008"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:07.730687" elapsed="0.001481"/>
</if>
<arg>${item[5]}</arg>
<arg>${sql_response['salary']}</arg>
<arg>salary</arg>
<doc>Normalize the numbers and compare</doc>
<status status="PASS" start="2024-11-22T13:13:07.730084" elapsed="0.002107"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<if>
<branch type="IF" condition="'${expected_int}' == '${EMPTY}'">
<kw name="Log and Log To Console" owner="generic">
<arg>Expected ${compare_title}:\n${None}\nActual ${compare_title}:\n${actual_int}</arg>
<status status="NOT RUN" start="2024-11-22T13:13:07.733240" elapsed="0.000015"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${None}</arg>
<arg>${actual_int}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:07.733317" elapsed="0.000012"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:07.732921" elapsed="0.000428"/>
</branch>
<branch type="ELSE">
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T13:13:07.733649" level="INFO">
Expected tax_paid:
10.00
Actual tax_paid:
10.0</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T13:13:07.733593" elapsed="0.000076"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T13:13:07.733726" elapsed="0.000061"/>
</kw>
<arg>Expected ${compare_title}:\n${expected_int}\nActual ${compare_title}:\n${actual_int}</arg>
<status status="PASS" start="2024-11-22T13:13:07.733423" elapsed="0.000392"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-11-22T13:13:07.733956" level="INFO">${expected_int} = 10.00</msg>
<var>${expected_int}</var>
<arg>'{:.2f}'.format(float(${expected_int}))</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-11-22T13:13:07.733872" elapsed="0.000096"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-11-22T13:13:07.734107" level="INFO">${actual_int} = 10.00</msg>
<var>${actual_int}</var>
<arg>'{:.2f}'.format(float(${actual_int}))</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-11-22T13:13:07.734025" elapsed="0.000103"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${expected_int}</arg>
<arg>${actual_int}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-11-22T13:13:07.734185" elapsed="0.000075"/>
</kw>
<status status="PASS" start="2024-11-22T13:13:07.733366" elapsed="0.000916"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:07.732913" elapsed="0.001384"/>
</if>
<arg>${item[6]}</arg>
<arg>${sql_response['tax_paid']}</arg>
<arg>tax_paid</arg>
<doc>Normalize the numbers and compare</doc>
<status status="PASS" start="2024-11-22T13:13:07.732291" elapsed="0.002026"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<if>
<branch type="IF" condition="'${expected_int}' == '${EMPTY}'">
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T13:13:07.735688" level="INFO">
Expected brownie_points:
None
Actual brownie_points:
None</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T13:13:07.735623" elapsed="0.000101"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T13:13:07.735793" elapsed="0.000077"/>
</kw>
<arg>Expected ${compare_title}:\n${None}\nActual ${compare_title}:\n${actual_int}</arg>
<status status="PASS" start="2024-11-22T13:13:07.735442" elapsed="0.000460"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${None}</arg>
<arg>${actual_int}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-11-22T13:13:07.735963" elapsed="0.000103"/>
</kw>
<status status="PASS" start="2024-11-22T13:13:07.735085" elapsed="0.001005"/>
</branch>
<branch type="ELSE">
<kw name="Log and Log To Console" owner="generic">
<arg>Expected ${compare_title}:\n${expected_int}\nActual ${compare_title}:\n${actual_int}</arg>
<status status="NOT RUN" start="2024-11-22T13:13:07.736175" elapsed="0.000014"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<var>${expected_int}</var>
<arg>'{:.2f}'.format(float(${expected_int}))</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:07.736253" elapsed="0.000011"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<var>${actual_int}</var>
<arg>'{:.2f}'.format(float(${actual_int}))</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:07.736323" elapsed="0.000011"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${expected_int}</arg>
<arg>${actual_int}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:07.736391" elapsed="0.000012"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:07.736108" elapsed="0.000315"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:07.735075" elapsed="0.001363"/>
</if>
<arg>${item[7]}</arg>
<arg>${sql_response['brownie_points']}</arg>
<arg>brownie_points</arg>
<doc>Normalize the numbers and compare</doc>
<status status="PASS" start="2024-11-22T13:13:07.734410" elapsed="0.002052"/>
</kw>
<var name="${item}">['natid-100', 'Richard Chu', 'MALE', '1996-01-01T23:59:59', '', '1000.12', '10.00', '']</var>
<status status="PASS" start="2024-11-22T13:13:07.682772" elapsed="0.053712"/>
</iter>
<iter>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2024-11-22T13:13:07.736972" level="INFO">${dict} = {'value_natid': 'natid-101'}</msg>
<var>${dict}</var>
<arg>value_natid=${item[0]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2024-11-22T13:13:07.736634" elapsed="0.000351"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<kw name="Connect To Database" owner="DatabaseLibrary">
<msg time="2024-11-22T13:13:07.737445" level="INFO">Looking for configuration file: 'resources/db.cfg'</msg>
<msg time="2024-11-22T13:13:07.737466" level="INFO">Configuration file doesn't exist</msg>
<msg time="2024-11-22T13:13:07.737553" level="INFO">Connect to DB using : mysql.connector.connect(database='testdb', user='user', password=***, host='localhost', port=3306)</msg>
<arg>${DB_API}</arg>
<arg>${DB_NAME}</arg>
<arg>${DB_USER}</arg>
<arg>${DB_PASSWORD}</arg>
<arg>${DB_HOST}</arg>
<arg>${DB_PORT}</arg>
<doc>Creates a database connection using the DB API 2.0 ``db_module`` and the parameters provided.
Along with listed commonly used arguments (`db_name`, `db_host` etc.)
you can set any other DB module specific parameters as key/value pairs.</doc>
<status status="PASS" start="2024-11-22T13:13:07.737216" elapsed="0.019901"/>
</kw>
<kw name="Update SQL Queries With Arguments Dictionary" owner="sql-helper">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-11-22T13:13:07.757681" level="INFO" html="true">Getting file '&lt;a href="file:///Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/object-repo/sql-queries/select_hero_by_natid.sql"&gt;/Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/object-repo/sql-queries/select_hero_by_natid.sql&lt;/a&gt;'.</msg>
<msg time="2024-11-22T13:13:07.757788" level="INFO">${sql_query} = SELECT *
FROM testdb.working_class_heroes
WHERE natid='value_natid';</msg>
<var>${sql_query}</var>
<arg>./object-repo/sql-queries/${sql_file_name}.sql</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-11-22T13:13:07.757537" elapsed="0.000265"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2024-11-22T13:13:07.758374" level="INFO">Argument types are:
&lt;class 'robot.utils.dotdict.DotDict'&gt;
&lt;class 'str'&gt;</msg>
<msg time="2024-11-22T13:13:07.758444" level="FAIL">{'value_natid': 'natid-101'} != </msg>
<arg>${args_dict}</arg>
<arg>${EMPTY}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="FAIL" start="2024-11-22T13:13:07.757990" elapsed="0.000501">{'value_natid': 'natid-101'} != </status>
</kw>
<msg time="2024-11-22T13:13:07.758553" level="INFO">${empty_status} = False</msg>
<var>${empty_status}</var>
<arg>Should Be Equal As Strings</arg>
<arg>${args_dict}</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-11-22T13:13:07.757888" elapsed="0.000679"/>
</kw>
<if>
<branch type="IF" condition="'${empty_status}' == '${False}'">
<if>
<branch type="IF" condition="${args_dict}">
<for flavor="IN">
<iter>
<kw name="Convert To String" owner="BuiltIn">
<msg time="2024-11-22T13:13:07.758957" level="INFO">${args_key_str} = value_natid</msg>
<var>${args_key_str}</var>
<arg>${args_key}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="PASS" start="2024-11-22T13:13:07.758877" elapsed="0.000092"/>
</kw>
<kw name="Convert To String" owner="BuiltIn">
<msg time="2024-11-22T13:13:07.759112" level="INFO">${args_value_str} = natid-101</msg>
<var>${args_value_str}</var>
<arg>${args_dict}[${args_key_str}]</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="PASS" start="2024-11-22T13:13:07.759029" elapsed="0.000094"/>
</kw>
<kw name="Replace String" owner="String">
<msg time="2024-11-22T13:13:07.759267" level="INFO">${sql_query} = SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-101';</msg>
<var>${sql_query}</var>
<arg>${sql_query}</arg>
<arg>${args_key_str}</arg>
<arg>${args_value_str}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="PASS" start="2024-11-22T13:13:07.759180" elapsed="0.000098"/>
</kw>
<var name="${args_key}">value_natid</var>
<status status="PASS" start="2024-11-22T13:13:07.758817" elapsed="0.000484"/>
</iter>
<var>${args_key}</var>
<value>@{args_dict}</value>
<status status="PASS" start="2024-11-22T13:13:07.758750" elapsed="0.000572"/>
</for>
<status status="PASS" start="2024-11-22T13:13:07.758712" elapsed="0.000633"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:07.758705" elapsed="0.000655"/>
</if>
<status status="PASS" start="2024-11-22T13:13:07.758623" elapsed="0.000749"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:07.758608" elapsed="0.000777"/>
</if>
<return>
<value>${sql_query}</value>
<status status="PASS" start="2024-11-22T13:13:07.759402" elapsed="0.000021"/>
</return>
<msg time="2024-11-22T13:13:07.759486" level="INFO">${updated_sql_query} = SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-101';</msg>
<var>${updated_sql_query}</var>
<arg>${sql_file_name}</arg>
<arg>${args_dict}</arg>
<status status="PASS" start="2024-11-22T13:13:07.757325" elapsed="0.002174"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-11-22T13:13:07.759766" level="FAIL">'SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-101';' does not contain 'delete'</msg>
<arg>${updated_sql_query}</arg>
<arg>DELETE</arg>
<arg>ignore_case=${True}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-11-22T13:13:07.759647" elapsed="0.000149">'SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-101';' does not contain 'delete'</status>
</kw>
<msg time="2024-11-22T13:13:07.759840" level="INFO">${delete_status} = False</msg>
<var>${delete_status}</var>
<arg>Should Contain</arg>
<arg>${updated_sql_query}</arg>
<arg>DELETE</arg>
<arg>ignore_case=${True}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-11-22T13:13:07.759570" elapsed="0.000280"/>
</kw>
<if>
<branch type="IF" condition="'${delete_status}' == '${True}'">
<kw name="Execute Sql String" owner="DatabaseLibrary">
<var>${json_response}</var>
<arg>${updated_sql_query}</arg>
<doc>Executes the ``sql_string`` as a single SQL command.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:07.759999" elapsed="0.000011"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:07.759905" elapsed="0.000123"/>
</branch>
<branch type="ELSE">
<kw name="Query" owner="DatabaseLibrary">
<msg time="2024-11-22T13:13:07.760885" level="INFO" html="true">Executing sql:&lt;br&gt;&lt;code style="font-weight: bold;"&gt;SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-101';&lt;/code&gt;</msg>
<msg time="2024-11-22T13:13:07.761944" level="INFO" html="true">&lt;div style="max-width: 100%; overflow-x: auto;"&gt;&lt;table style="width: auto; border-collapse: collapse; border: 2px solid rgb(140 140 140)"&gt;&lt;caption style="text-align: left; font-weight: bold; padding: 5px;"&gt;Query returned 1 rows&lt;/caption&gt;&lt;tr&gt;&lt;th scope="col" style="background-color: #d6ecd4; border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;Row&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;id&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;created_at&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;create_by&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;updated_at&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;updated_by&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;birth_date&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;brownie_points&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;death_date&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;gender&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;name&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;natid&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;salary&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;tax_paid&lt;/th&gt;&lt;/tr&gt;&lt;tr style="background-color: #eee;"&gt;&lt;th scope="row" style="background-color: #d6ecd4;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;0&lt;/th&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;c966d925-391f-4075-b13d-fc134b5f1b61&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;2024-11-22 13:13:07.298999&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;SYSTEM&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;2024-11-22 13:13:07.298999&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;SYSTEM&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;1996-01-01 23:59:59&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;None&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;None&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;MALE&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;Arthur&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;natid-101&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;1000.0&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;10.0&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;</msg>
<msg time="2024-11-22T13:13:07.762545" level="INFO">${json_response} = [{'id': 'c966d925-391f-4075-b13d-fc134b5f1b61', 'created_at': datetime.datetime(2024, 11, 22, 13, 13, 7, 298999), 'create_by': 'SYSTEM', 'updated_at': datetime.datetime(2024, 11, 22, 13, 13, 7, 298999...</msg>
<var>${json_response}</var>
<arg>${updated_sql_query}</arg>
<arg>return_dict=${True}</arg>
<doc>Runs a query with the ``select_statement`` and returns the result as list of rows.
The type of row values depends on the database module -
usually they are tuples or tuple-like objects.</doc>
<status status="PASS" start="2024-11-22T13:13:07.760092" elapsed="0.002470"/>
</kw>
<status status="PASS" start="2024-11-22T13:13:07.760043" elapsed="0.002550"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:07.759897" elapsed="0.002713"/>
</if>
<kw name="Disconnect From Database" owner="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<status status="PASS" start="2024-11-22T13:13:07.762674" elapsed="0.000113"/>
</kw>
<return>
<value>${json_response}</value>
<status status="PASS" start="2024-11-22T13:13:07.762813" elapsed="0.000021"/>
</return>
<msg time="2024-11-22T13:13:07.762908" level="INFO">${sql_response} = [{'id': 'c966d925-391f-4075-b13d-fc134b5f1b61', 'created_at': datetime.datetime(2024, 11, 22, 13, 13, 7, 298999), 'create_by': 'SYSTEM', 'updated_at': datetime.datetime(2024, 11, 22, 13, 13, 7, 298999...</msg>
<var>${sql_response}</var>
<arg>select_hero_by_natid</arg>
<arg>${dict}</arg>
<status status="PASS" start="2024-11-22T13:13:07.737085" elapsed="0.025837"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-11-22T13:13:07.763086" level="INFO">${sql_response} = {'id': 'c966d925-391f-4075-b13d-fc134b5f1b61', 'created_at': datetime.datetime(2024, 11, 22, 13, 13, 7, 298999), 'create_by': 'SYSTEM', 'updated_at': datetime.datetime(2024, 11, 22, 13, 13, 7, 298999)...</msg>
<var>${sql_response}</var>
<arg>${sql_response}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-11-22T13:13:07.762996" elapsed="0.000104"/>
</kw>
<kw name="Compare String" owner="generic">
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T13:13:07.764166" level="INFO">
Expected natid:
natid-101
Actual natid:
natid-101</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T13:13:07.764104" elapsed="0.000085"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T13:13:07.764253" elapsed="0.000074"/>
</kw>
<arg>Expected ${compare_title}:\n${expected_string}\nActual ${compare_title}:\n${actual_string}</arg>
<status status="PASS" start="2024-11-22T13:13:07.763935" elapsed="0.000423"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${expected_string}</arg>
<arg>${actual_string}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-11-22T13:13:07.764421" elapsed="0.000088"/>
</kw>
<arg>${item[0]}</arg>
<arg>${sql_response['natid']}</arg>
<arg>natid</arg>
<doc>Compare Strings</doc>
<status status="PASS" start="2024-11-22T13:13:07.763191" elapsed="0.001351"/>
</kw>
<kw name="Compare String" owner="generic">
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T13:13:07.765494" level="INFO">
Expected name:
Arthur
Actual name:
Arthur</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T13:13:07.765436" elapsed="0.000079"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T13:13:07.765579" elapsed="0.000074"/>
</kw>
<arg>Expected ${compare_title}:\n${expected_string}\nActual ${compare_title}:\n${actual_string}</arg>
<status status="PASS" start="2024-11-22T13:13:07.765276" elapsed="0.000407"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${expected_string}</arg>
<arg>${actual_string}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-11-22T13:13:07.765804" elapsed="0.000089"/>
</kw>
<arg>${item[1]}</arg>
<arg>${sql_response['name']}</arg>
<arg>name</arg>
<doc>Compare Strings</doc>
<status status="PASS" start="2024-11-22T13:13:07.764613" elapsed="0.001313"/>
</kw>
<kw name="Compare String" owner="generic">
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T13:13:07.767007" level="INFO">
Expected gender:
MALE
Actual gender:
MALE</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T13:13:07.766947" elapsed="0.000083"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T13:13:07.767093" elapsed="0.000071"/>
</kw>
<arg>Expected ${compare_title}:\n${expected_string}\nActual ${compare_title}:\n${actual_string}</arg>
<status status="PASS" start="2024-11-22T13:13:07.766654" elapsed="0.000541"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${expected_string}</arg>
<arg>${actual_string}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-11-22T13:13:07.767257" elapsed="0.000085"/>
</kw>
<arg>${item[2]}</arg>
<arg>${sql_response['gender']}</arg>
<arg>gender</arg>
<doc>Compare Strings</doc>
<status status="PASS" start="2024-11-22T13:13:07.765996" elapsed="0.001378"/>
</kw>
<kw name="Compare Date" owner="generic">
<if>
<branch type="IF" condition="'${expected_date}' == '${EMPTY}'">
<kw name="Log and Log To Console" owner="generic">
<arg>Expected ${compare_title}:\n${None}\nActual ${compare_title}:\n${actual_date}</arg>
<status status="NOT RUN" start="2024-11-22T13:13:07.768443" elapsed="0.000015"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${None}</arg>
<arg>${actual_date}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:07.768521" elapsed="0.000012"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:07.768115" elapsed="0.000439"/>
</branch>
<branch type="ELSE">
<kw name="Convert Date" owner="DateTime">
<msg time="2024-11-22T13:13:07.768778" level="INFO">${expected_date} = 1996-01-01 23:59:59.000000</msg>
<var>${expected_date}</var>
<arg>${expected_date}</arg>
<arg>result_format=%Y-%m-%d %H:%M:%S.%f</arg>
<doc>Converts between supported `date formats`.</doc>
<status status="PASS" start="2024-11-22T13:13:07.768632" elapsed="0.000161"/>
</kw>
<kw name="Convert Date" owner="DateTime">
<msg time="2024-11-22T13:13:07.768970" level="INFO">${actual_date} = 1996-01-01 23:59:59.000000</msg>
<var>${actual_date}</var>
<arg>${actual_date}</arg>
<arg>result_format=%Y-%m-%d %H:%M:%S.%f</arg>
<doc>Converts between supported `date formats`.</doc>
<status status="PASS" start="2024-11-22T13:13:07.768873" elapsed="0.000109"/>
</kw>
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T13:13:07.769269" level="INFO">
Expected birth_date:
1996-01-01 23:59:59.000000
Actual birth_date:
1996-01-01 23:59:59.000000</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T13:13:07.769211" elapsed="0.000079"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T13:13:07.769351" elapsed="0.000066"/>
</kw>
<arg>Expected ${compare_title}:\n${expected_date}\nActual ${compare_title}:\n${actual_date}</arg>
<status status="PASS" start="2024-11-22T13:13:07.769050" elapsed="0.000396"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${expected_date}</arg>
<arg>${actual_date}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-11-22T13:13:07.769508" elapsed="0.000085"/>
</kw>
<status status="PASS" start="2024-11-22T13:13:07.768572" elapsed="0.001044"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:07.768106" elapsed="0.001527"/>
</if>
<arg>${item[3]}</arg>
<arg>${sql_response['birth_date']}</arg>
<arg>birth_date</arg>
<doc>Format date and compare</doc>
<status status="PASS" start="2024-11-22T13:13:07.767478" elapsed="0.002177"/>
</kw>
<kw name="Compare Date" owner="generic">
<if>
<branch type="IF" condition="'${expected_date}' == '${EMPTY}'">
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T13:13:07.770910" level="INFO">
Expected death_date:
None
Actual death_date:
None</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T13:13:07.770855" elapsed="0.000076"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T13:13:07.770994" elapsed="0.000068"/>
</kw>
<arg>Expected ${compare_title}:\n${None}\nActual ${compare_title}:\n${actual_date}</arg>
<status status="PASS" start="2024-11-22T13:13:07.770694" elapsed="0.000397"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${None}</arg>
<arg>${actual_date}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-11-22T13:13:07.771151" elapsed="0.000082"/>
</kw>
<status status="PASS" start="2024-11-22T13:13:07.770379" elapsed="0.000876"/>
</branch>
<branch type="ELSE">
<kw name="Convert Date" owner="DateTime">
<var>${expected_date}</var>
<arg>${expected_date}</arg>
<arg>result_format=%Y-%m-%d %H:%M:%S.%f</arg>
<doc>Converts between supported `date formats`.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:07.771333" elapsed="0.000012"/>
</kw>
<kw name="Convert Date" owner="DateTime">
<var>${actual_date}</var>
<arg>${actual_date}</arg>
<arg>result_format=%Y-%m-%d %H:%M:%S.%f</arg>
<doc>Converts between supported `date formats`.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:07.771408" elapsed="0.000011"/>
</kw>
<kw name="Log and Log To Console" owner="generic">
<arg>Expected ${compare_title}:\n${expected_date}\nActual ${compare_title}:\n${actual_date}</arg>
<status status="NOT RUN" start="2024-11-22T13:13:07.771485" elapsed="0.000013"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${expected_date}</arg>
<arg>${actual_date}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:07.771552" elapsed="0.000010"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:07.771274" elapsed="0.000306"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:07.770370" elapsed="0.001225"/>
</if>
<arg>${item[4]}</arg>
<arg>${sql_response['death_date']}</arg>
<arg>death_date</arg>
<doc>Format date and compare</doc>
<status status="PASS" start="2024-11-22T13:13:07.769754" elapsed="0.001861"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<if>
<branch type="IF" condition="'${expected_int}' == '${EMPTY}'">
<kw name="Log and Log To Console" owner="generic">
<arg>Expected ${compare_title}:\n${None}\nActual ${compare_title}:\n${actual_int}</arg>
<status status="NOT RUN" start="2024-11-22T13:13:07.772586" elapsed="0.000014"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${None}</arg>
<arg>${actual_int}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:07.772656" elapsed="0.000011"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:07.772289" elapsed="0.000397"/>
</branch>
<branch type="ELSE">
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T13:13:07.772961" level="INFO">
Expected salary:
1000.00
Actual salary:
1000.0</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T13:13:07.772909" elapsed="0.000131"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T13:13:07.773100" elapsed="0.000065"/>
</kw>
<arg>Expected ${compare_title}:\n${expected_int}\nActual ${compare_title}:\n${actual_int}</arg>
<status status="PASS" start="2024-11-22T13:13:07.772758" elapsed="0.000435"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-11-22T13:13:07.773343" level="INFO">${expected_int} = 1000.00</msg>
<var>${expected_int}</var>
<arg>'{:.2f}'.format(float(${expected_int}))</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-11-22T13:13:07.773250" elapsed="0.000105"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-11-22T13:13:07.773494" level="INFO">${actual_int} = 1000.00</msg>
<var>${actual_int}</var>
<arg>'{:.2f}'.format(float(${actual_int}))</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-11-22T13:13:07.773415" elapsed="0.000091"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${expected_int}</arg>
<arg>${actual_int}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-11-22T13:13:07.773564" elapsed="0.000078"/>
</kw>
<status status="PASS" start="2024-11-22T13:13:07.772703" elapsed="0.000960"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:07.772282" elapsed="0.001395"/>
</if>
<arg>${item[5]}</arg>
<arg>${sql_response['salary']}</arg>
<arg>salary</arg>
<doc>Normalize the numbers and compare</doc>
<status status="PASS" start="2024-11-22T13:13:07.771706" elapsed="0.001991"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<if>
<branch type="IF" condition="'${expected_int}' == '${EMPTY}'">
<kw name="Log and Log To Console" owner="generic">
<arg>Expected ${compare_title}:\n${None}\nActual ${compare_title}:\n${actual_int}</arg>
<status status="NOT RUN" start="2024-11-22T13:13:07.774693" elapsed="0.000013"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${None}</arg>
<arg>${actual_int}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:07.774762" elapsed="0.000012"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:07.774393" elapsed="0.000400"/>
</branch>
<branch type="ELSE">
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T13:13:07.775154" level="INFO">
Expected tax_paid:
10.00
Actual tax_paid:
10.0</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T13:13:07.775102" elapsed="0.000072"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T13:13:07.775232" elapsed="0.000066"/>
</kw>
<arg>Expected ${compare_title}:\n${expected_int}\nActual ${compare_title}:\n${actual_int}</arg>
<status status="PASS" start="2024-11-22T13:13:07.774950" elapsed="0.000376"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-11-22T13:13:07.775468" level="INFO">${expected_int} = 10.00</msg>
<var>${expected_int}</var>
<arg>'{:.2f}'.format(float(${expected_int}))</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-11-22T13:13:07.775383" elapsed="0.000096"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-11-22T13:13:07.775617" level="INFO">${actual_int} = 10.00</msg>
<var>${actual_int}</var>
<arg>'{:.2f}'.format(float(${actual_int}))</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-11-22T13:13:07.775539" elapsed="0.000088"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${expected_int}</arg>
<arg>${actual_int}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-11-22T13:13:07.775685" elapsed="0.000076"/>
</kw>
<status status="PASS" start="2024-11-22T13:13:07.774808" elapsed="0.000975"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:07.774373" elapsed="0.001425"/>
</if>
<arg>${item[6]}</arg>
<arg>${sql_response['tax_paid']}</arg>
<arg>tax_paid</arg>
<doc>Normalize the numbers and compare</doc>
<status status="PASS" start="2024-11-22T13:13:07.773789" elapsed="0.002030"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<if>
<branch type="IF" condition="'${expected_int}' == '${EMPTY}'">
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T13:13:07.776978" level="INFO">
Expected brownie_points:
None
Actual brownie_points:
None</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T13:13:07.776925" elapsed="0.000073"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T13:13:07.777056" elapsed="0.000069"/>
</kw>
<arg>Expected ${compare_title}:\n${None}\nActual ${compare_title}:\n${actual_int}</arg>
<status status="PASS" start="2024-11-22T13:13:07.776775" elapsed="0.000378"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${None}</arg>
<arg>${actual_int}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-11-22T13:13:07.777209" elapsed="0.000075"/>
</kw>
<status status="PASS" start="2024-11-22T13:13:07.776479" elapsed="0.000828"/>
</branch>
<branch type="ELSE">
<kw name="Log and Log To Console" owner="generic">
<arg>Expected ${compare_title}:\n${expected_int}\nActual ${compare_title}:\n${actual_int}</arg>
<status status="NOT RUN" start="2024-11-22T13:13:07.777381" elapsed="0.000013"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<var>${expected_int}</var>
<arg>'{:.2f}'.format(float(${expected_int}))</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:07.777450" elapsed="0.000010"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<var>${actual_int}</var>
<arg>'{:.2f}'.format(float(${actual_int}))</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:07.777511" elapsed="0.000009"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${expected_int}</arg>
<arg>${actual_int}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:07.777573" elapsed="0.000009"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:07.777324" elapsed="0.000274"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:07.776472" elapsed="0.001140"/>
</if>
<arg>${item[7]}</arg>
<arg>${sql_response['brownie_points']}</arg>
<arg>brownie_points</arg>
<doc>Normalize the numbers and compare</doc>
<status status="PASS" start="2024-11-22T13:13:07.775910" elapsed="0.001721"/>
</kw>
<var name="${item}">['natid-101', 'Arthur', 'MALE', '1996-01-01T23:59:59', '', '1000.00', '10.00', '']</var>
<status status="PASS" start="2024-11-22T13:13:07.736574" elapsed="0.041077"/>
</iter>
<iter>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2024-11-22T13:13:07.778100" level="INFO">${dict} = {'value_natid': 'natid-102'}</msg>
<var>${dict}</var>
<arg>value_natid=${item[0]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2024-11-22T13:13:07.777769" elapsed="0.000343"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<kw name="Connect To Database" owner="DatabaseLibrary">
<msg time="2024-11-22T13:13:07.778457" level="INFO">Looking for configuration file: 'resources/db.cfg'</msg>
<msg time="2024-11-22T13:13:07.778480" level="INFO">Configuration file doesn't exist</msg>
<msg time="2024-11-22T13:13:07.778565" level="INFO">Connect to DB using : mysql.connector.connect(database='testdb', user='user', password=***, host='localhost', port=3306)</msg>
<arg>${DB_API}</arg>
<arg>${DB_NAME}</arg>
<arg>${DB_USER}</arg>
<arg>${DB_PASSWORD}</arg>
<arg>${DB_HOST}</arg>
<arg>${DB_PORT}</arg>
<doc>Creates a database connection using the DB API 2.0 ``db_module`` and the parameters provided.
Along with listed commonly used arguments (`db_name`, `db_host` etc.)
you can set any other DB module specific parameters as key/value pairs.</doc>
<status status="PASS" start="2024-11-22T13:13:07.778330" elapsed="0.008172"/>
</kw>
<kw name="Update SQL Queries With Arguments Dictionary" owner="sql-helper">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-11-22T13:13:07.786969" level="INFO" html="true">Getting file '&lt;a href="file:///Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/object-repo/sql-queries/select_hero_by_natid.sql"&gt;/Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/object-repo/sql-queries/select_hero_by_natid.sql&lt;/a&gt;'.</msg>
<msg time="2024-11-22T13:13:07.787051" level="INFO">${sql_query} = SELECT *
FROM testdb.working_class_heroes
WHERE natid='value_natid';</msg>
<var>${sql_query}</var>
<arg>./object-repo/sql-queries/${sql_file_name}.sql</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-11-22T13:13:07.786838" elapsed="0.000225"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2024-11-22T13:13:07.787514" level="INFO">Argument types are:
&lt;class 'robot.utils.dotdict.DotDict'&gt;
&lt;class 'str'&gt;</msg>
<msg time="2024-11-22T13:13:07.787565" level="FAIL">{'value_natid': 'natid-102'} != </msg>
<arg>${args_dict}</arg>
<arg>${EMPTY}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="FAIL" start="2024-11-22T13:13:07.787213" elapsed="0.000385">{'value_natid': 'natid-102'} != </status>
</kw>
<msg time="2024-11-22T13:13:07.787646" level="INFO">${empty_status} = False</msg>
<var>${empty_status}</var>
<arg>Should Be Equal As Strings</arg>
<arg>${args_dict}</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-11-22T13:13:07.787133" elapsed="0.000523"/>
</kw>
<if>
<branch type="IF" condition="'${empty_status}' == '${False}'">
<if>
<branch type="IF" condition="${args_dict}">
<for flavor="IN">
<iter>
<kw name="Convert To String" owner="BuiltIn">
<msg time="2024-11-22T13:13:07.787991" level="INFO">${args_key_str} = value_natid</msg>
<var>${args_key_str}</var>
<arg>${args_key}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="PASS" start="2024-11-22T13:13:07.787913" elapsed="0.000089"/>
</kw>
<kw name="Convert To String" owner="BuiltIn">
<msg time="2024-11-22T13:13:07.788145" level="INFO">${args_value_str} = natid-102</msg>
<var>${args_value_str}</var>
<arg>${args_dict}[${args_key_str}]</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="PASS" start="2024-11-22T13:13:07.788061" elapsed="0.000095"/>
</kw>
<kw name="Replace String" owner="String">
<msg time="2024-11-22T13:13:07.788305" level="INFO">${sql_query} = SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-102';</msg>
<var>${sql_query}</var>
<arg>${sql_query}</arg>
<arg>${args_key_str}</arg>
<arg>${args_value_str}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="PASS" start="2024-11-22T13:13:07.788217" elapsed="0.000099"/>
</kw>
<var name="${args_key}">value_natid</var>
<status status="PASS" start="2024-11-22T13:13:07.787861" elapsed="0.000479"/>
</iter>
<var>${args_key}</var>
<value>@{args_dict}</value>
<status status="PASS" start="2024-11-22T13:13:07.787803" elapsed="0.000557"/>
</for>
<status status="PASS" start="2024-11-22T13:13:07.787766" elapsed="0.000615"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:07.787760" elapsed="0.000637"/>
</if>
<status status="PASS" start="2024-11-22T13:13:07.787696" elapsed="0.000711"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:07.787687" elapsed="0.000733"/>
</if>
<return>
<value>${sql_query}</value>
<status status="PASS" start="2024-11-22T13:13:07.788434" elapsed="0.000017"/>
</return>
<msg time="2024-11-22T13:13:07.788507" level="INFO">${updated_sql_query} = SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-102';</msg>
<var>${updated_sql_query}</var>
<arg>${sql_file_name}</arg>
<arg>${args_dict}</arg>
<status status="PASS" start="2024-11-22T13:13:07.786673" elapsed="0.001845"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-11-22T13:13:07.788779" level="FAIL">'SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-102';' does not contain 'delete'</msg>
<arg>${updated_sql_query}</arg>
<arg>DELETE</arg>
<arg>ignore_case=${True}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-11-22T13:13:07.788667" elapsed="0.000141">'SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-102';' does not contain 'delete'</status>
</kw>
<msg time="2024-11-22T13:13:07.788854" level="INFO">${delete_status} = False</msg>
<var>${delete_status}</var>
<arg>Should Contain</arg>
<arg>${updated_sql_query}</arg>
<arg>DELETE</arg>
<arg>ignore_case=${True}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-11-22T13:13:07.788585" elapsed="0.000394"/>
</kw>
<if>
<branch type="IF" condition="'${delete_status}' == '${True}'">
<kw name="Execute Sql String" owner="DatabaseLibrary">
<var>${json_response}</var>
<arg>${updated_sql_query}</arg>
<doc>Executes the ``sql_string`` as a single SQL command.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:07.789117" elapsed="0.000013"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:07.789020" elapsed="0.000130"/>
</branch>
<branch type="ELSE">
<kw name="Query" owner="DatabaseLibrary">
<msg time="2024-11-22T13:13:07.789648" level="INFO" html="true">Executing sql:&lt;br&gt;&lt;code style="font-weight: bold;"&gt;SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-102';&lt;/code&gt;</msg>
<msg time="2024-11-22T13:13:07.790467" level="INFO" html="true">&lt;div style="max-width: 100%; overflow-x: auto;"&gt;&lt;table style="width: auto; border-collapse: collapse; border: 2px solid rgb(140 140 140)"&gt;&lt;caption style="text-align: left; font-weight: bold; padding: 5px;"&gt;Query returned 1 rows&lt;/caption&gt;&lt;tr&gt;&lt;th scope="col" style="background-color: #d6ecd4; border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;Row&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;id&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;created_at&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;create_by&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;updated_at&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;updated_by&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;birth_date&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;brownie_points&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;death_date&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;gender&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;name&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;natid&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;salary&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;tax_paid&lt;/th&gt;&lt;/tr&gt;&lt;tr style="background-color: #eee;"&gt;&lt;th scope="row" style="background-color: #d6ecd4;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;0&lt;/th&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;7cad0e89-7fc1-4288-a8fb-3c804e57237d&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;2024-11-22 13:13:07.307072&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;SYSTEM&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;2024-11-22 13:13:07.307072&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;SYSTEM&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;1996-01-01 23:59:59&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;None&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;None&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;MALE&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;Jayden&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;natid-102&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;10320.0&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;10.0&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;</msg>
<msg time="2024-11-22T13:13:07.790977" level="INFO">${json_response} = [{'id': '7cad0e89-7fc1-4288-a8fb-3c804e57237d', 'created_at': datetime.datetime(2024, 11, 22, 13, 13, 7, 307072), 'create_by': 'SYSTEM', 'updated_at': datetime.datetime(2024, 11, 22, 13, 13, 7, 307072...</msg>
<var>${json_response}</var>
<arg>${updated_sql_query}</arg>
<arg>return_dict=${True}</arg>
<doc>Runs a query with the ``select_statement`` and returns the result as list of rows.
The type of row values depends on the database module -
usually they are tuples or tuple-like objects.</doc>
<status status="PASS" start="2024-11-22T13:13:07.789216" elapsed="0.001779"/>
</kw>
<status status="PASS" start="2024-11-22T13:13:07.789165" elapsed="0.001863"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:07.789013" elapsed="0.002032"/>
</if>
<kw name="Disconnect From Database" owner="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<status status="PASS" start="2024-11-22T13:13:07.791139" elapsed="0.000104"/>
</kw>
<return>
<value>${json_response}</value>
<status status="PASS" start="2024-11-22T13:13:07.791269" elapsed="0.000018"/>
</return>
<msg time="2024-11-22T13:13:07.791355" level="INFO">${sql_response} = [{'id': '7cad0e89-7fc1-4288-a8fb-3c804e57237d', 'created_at': datetime.datetime(2024, 11, 22, 13, 13, 7, 307072), 'create_by': 'SYSTEM', 'updated_at': datetime.datetime(2024, 11, 22, 13, 13, 7, 307072...</msg>
<var>${sql_response}</var>
<arg>select_hero_by_natid</arg>
<arg>${dict}</arg>
<status status="PASS" start="2024-11-22T13:13:07.778205" elapsed="0.013162"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-11-22T13:13:07.791511" level="INFO">${sql_response} = {'id': '7cad0e89-7fc1-4288-a8fb-3c804e57237d', 'created_at': datetime.datetime(2024, 11, 22, 13, 13, 7, 307072), 'create_by': 'SYSTEM', 'updated_at': datetime.datetime(2024, 11, 22, 13, 13, 7, 307072)...</msg>
<var>${sql_response}</var>
<arg>${sql_response}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-11-22T13:13:07.791433" elapsed="0.000091"/>
</kw>
<kw name="Compare String" owner="generic">
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T13:13:07.792468" level="INFO">
Expected natid:
natid-102
Actual natid:
natid-102</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T13:13:07.792409" elapsed="0.000080"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T13:13:07.792547" elapsed="0.000068"/>
</kw>
<arg>Expected ${compare_title}:\n${expected_string}\nActual ${compare_title}:\n${actual_string}</arg>
<status status="PASS" start="2024-11-22T13:13:07.792254" elapsed="0.000389"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${expected_string}</arg>
<arg>${actual_string}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-11-22T13:13:07.792697" elapsed="0.000076"/>
</kw>
<arg>${item[0]}</arg>
<arg>${sql_response['natid']}</arg>
<arg>natid</arg>
<doc>Compare Strings</doc>
<status status="PASS" start="2024-11-22T13:13:07.791596" elapsed="0.001206"/>
</kw>
<kw name="Compare String" owner="generic">
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T13:13:07.793653" level="INFO">
Expected name:
Jayden
Actual name:
Jayden</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T13:13:07.793601" elapsed="0.000071"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T13:13:07.793726" elapsed="0.000062"/>
</kw>
<arg>Expected ${compare_title}:\n${expected_string}\nActual ${compare_title}:\n${actual_string}</arg>
<status status="PASS" start="2024-11-22T13:13:07.793457" elapsed="0.000359"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${expected_string}</arg>
<arg>${actual_string}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-11-22T13:13:07.793924" elapsed="0.000076"/>
</kw>
<arg>${item[1]}</arg>
<arg>${sql_response['name']}</arg>
<arg>name</arg>
<doc>Compare Strings</doc>
<status status="PASS" start="2024-11-22T13:13:07.792865" elapsed="0.001164"/>
</kw>
<kw name="Compare String" owner="generic">
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T13:13:07.794892" level="INFO">
Expected gender:
MALE
Actual gender:
MALE</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T13:13:07.794841" elapsed="0.000070"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T13:13:07.794965" elapsed="0.000062"/>
</kw>
<arg>Expected ${compare_title}:\n${expected_string}\nActual ${compare_title}:\n${actual_string}</arg>
<status status="PASS" start="2024-11-22T13:13:07.794698" elapsed="0.000357"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${expected_string}</arg>
<arg>${actual_string}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-11-22T13:13:07.795108" elapsed="0.000073"/>
</kw>
<arg>${item[2]}</arg>
<arg>${sql_response['gender']}</arg>
<arg>gender</arg>
<doc>Compare Strings</doc>
<status status="PASS" start="2024-11-22T13:13:07.794093" elapsed="0.001118"/>
</kw>
<kw name="Compare Date" owner="generic">
<if>
<branch type="IF" condition="'${expected_date}' == '${EMPTY}'">
<kw name="Log and Log To Console" owner="generic">
<arg>Expected ${compare_title}:\n${None}\nActual ${compare_title}:\n${actual_date}</arg>
<status status="NOT RUN" start="2024-11-22T13:13:07.796146" elapsed="0.000013"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${None}</arg>
<arg>${actual_date}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:07.796215" elapsed="0.000011"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:07.795861" elapsed="0.000383"/>
</branch>
<branch type="ELSE">
<kw name="Convert Date" owner="DateTime">
<msg time="2024-11-22T13:13:07.796430" level="INFO">${expected_date} = 1996-01-01 23:59:59.000000</msg>
<var>${expected_date}</var>
<arg>${expected_date}</arg>
<arg>result_format=%Y-%m-%d %H:%M:%S.%f</arg>
<doc>Converts between supported `date formats`.</doc>
<status status="PASS" start="2024-11-22T13:13:07.796312" elapsed="0.000130"/>
</kw>
<kw name="Convert Date" owner="DateTime">
<msg time="2024-11-22T13:13:07.796581" level="INFO">${actual_date} = 1996-01-01 23:59:59.000000</msg>
<var>${actual_date}</var>
<arg>${actual_date}</arg>
<arg>result_format=%Y-%m-%d %H:%M:%S.%f</arg>
<doc>Converts between supported `date formats`.</doc>
<status status="PASS" start="2024-11-22T13:13:07.796501" elapsed="0.000091"/>
</kw>
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T13:13:07.796846" level="INFO">
Expected birth_date:
1996-01-01 23:59:59.000000
Actual birth_date:
1996-01-01 23:59:59.000000</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T13:13:07.796794" elapsed="0.000071"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T13:13:07.796920" elapsed="0.000062"/>
</kw>
<arg>Expected ${compare_title}:\n${expected_date}\nActual ${compare_title}:\n${actual_date}</arg>
<status status="PASS" start="2024-11-22T13:13:07.796651" elapsed="0.000359"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${expected_date}</arg>
<arg>${actual_date}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-11-22T13:13:07.797063" elapsed="0.000073"/>
</kw>
<status status="PASS" start="2024-11-22T13:13:07.796260" elapsed="0.000897"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:07.795853" elapsed="0.001319"/>
</if>
<arg>${item[3]}</arg>
<arg>${sql_response['birth_date']}</arg>
<arg>birth_date</arg>
<doc>Format date and compare</doc>
<status status="PASS" start="2024-11-22T13:13:07.795304" elapsed="0.001888"/>
</kw>
<kw name="Compare Date" owner="generic">
<if>
<branch type="IF" condition="'${expected_date}' == '${EMPTY}'">
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T13:13:07.798419" level="INFO">
Expected death_date:
None
Actual death_date:
None</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T13:13:07.798366" elapsed="0.000072"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T13:13:07.798492" elapsed="0.000056"/>
</kw>
<arg>Expected ${compare_title}:\n${None}\nActual ${compare_title}:\n${actual_date}</arg>
<status status="PASS" start="2024-11-22T13:13:07.798124" elapsed="0.000451"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${None}</arg>
<arg>${actual_date}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-11-22T13:13:07.798630" elapsed="0.000075"/>
</kw>
<status status="PASS" start="2024-11-22T13:13:07.797842" elapsed="0.000883"/>
</branch>
<branch type="ELSE">
<kw name="Convert Date" owner="DateTime">
<var>${expected_date}</var>
<arg>${expected_date}</arg>
<arg>result_format=%Y-%m-%d %H:%M:%S.%f</arg>
<doc>Converts between supported `date formats`.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:07.798794" elapsed="0.000011"/>
</kw>
<kw name="Convert Date" owner="DateTime">
<var>${actual_date}</var>
<arg>${actual_date}</arg>
<arg>result_format=%Y-%m-%d %H:%M:%S.%f</arg>
<doc>Converts between supported `date formats`.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:07.798857" elapsed="0.000010"/>
</kw>
<kw name="Log and Log To Console" owner="generic">
<arg>Expected ${compare_title}:\n${expected_date}\nActual ${compare_title}:\n${actual_date}</arg>
<status status="NOT RUN" start="2024-11-22T13:13:07.798923" elapsed="0.000013"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${expected_date}</arg>
<arg>${actual_date}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:07.798988" elapsed="0.000010"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:07.798741" elapsed="0.000274"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:07.797835" elapsed="0.001195"/>
</if>
<arg>${item[4]}</arg>
<arg>${sql_response['death_date']}</arg>
<arg>death_date</arg>
<doc>Format date and compare</doc>
<status status="PASS" start="2024-11-22T13:13:07.797283" elapsed="0.001767"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<if>
<branch type="IF" condition="'${expected_int}' == '${EMPTY}'">
<kw name="Log and Log To Console" owner="generic">
<arg>Expected ${compare_title}:\n${None}\nActual ${compare_title}:\n${actual_int}</arg>
<status status="NOT RUN" start="2024-11-22T13:13:07.799927" elapsed="0.000012"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${None}</arg>
<arg>${actual_int}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:07.799991" elapsed="0.000010"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:07.799662" elapsed="0.000356"/>
</branch>
<branch type="ELSE">
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T13:13:07.800267" level="INFO">
Expected salary:
10320.00
Actual salary:
10320.0</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T13:13:07.800220" elapsed="0.000117"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T13:13:07.800391" elapsed="0.000060"/>
</kw>
<arg>Expected ${compare_title}:\n${expected_int}\nActual ${compare_title}:\n${actual_int}</arg>
<status status="PASS" start="2024-11-22T13:13:07.800082" elapsed="0.000394"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-11-22T13:13:07.800614" level="INFO">${expected_int} = 10320.00</msg>
<var>${expected_int}</var>
<arg>'{:.2f}'.format(float(${expected_int}))</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-11-22T13:13:07.800532" elapsed="0.000093"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-11-22T13:13:07.800750" level="INFO">${actual_int} = 10320.00</msg>
<var>${actual_int}</var>
<arg>'{:.2f}'.format(float(${actual_int}))</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-11-22T13:13:07.800679" elapsed="0.000081"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${expected_int}</arg>
<arg>${actual_int}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-11-22T13:13:07.800814" elapsed="0.000071"/>
</kw>
<status status="PASS" start="2024-11-22T13:13:07.800033" elapsed="0.000873"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:07.799655" elapsed="0.001265"/>
</if>
<arg>${item[5]}</arg>
<arg>${sql_response['salary']}</arg>
<arg>salary</arg>
<doc>Normalize the numbers and compare</doc>
<status status="PASS" start="2024-11-22T13:13:07.799136" elapsed="0.001820"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<if>
<branch type="IF" condition="'${expected_int}' == '${EMPTY}'">
<kw name="Log and Log To Console" owner="generic">
<arg>Expected ${compare_title}:\n${None}\nActual ${compare_title}:\n${actual_int}</arg>
<status status="NOT RUN" start="2024-11-22T13:13:07.801972" elapsed="0.000013"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${None}</arg>
<arg>${actual_int}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:07.802047" elapsed="0.000010"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:07.801683" elapsed="0.000403"/>
</branch>
<branch type="ELSE">
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T13:13:07.802366" level="INFO">
Expected tax_paid:
10.00
Actual tax_paid:
10.0</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T13:13:07.802315" elapsed="0.000071"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T13:13:07.802440" elapsed="0.000064"/>
</kw>
<arg>Expected ${compare_title}:\n${expected_int}\nActual ${compare_title}:\n${actual_int}</arg>
<status status="PASS" start="2024-11-22T13:13:07.802156" elapsed="0.000374"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-11-22T13:13:07.802665" level="INFO">${expected_int} = 10.00</msg>
<var>${expected_int}</var>
<arg>'{:.2f}'.format(float(${expected_int}))</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-11-22T13:13:07.802581" elapsed="0.000094"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-11-22T13:13:07.802799" level="INFO">${actual_int} = 10.00</msg>
<var>${actual_int}</var>
<arg>'{:.2f}'.format(float(${actual_int}))</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-11-22T13:13:07.802728" elapsed="0.000081"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${expected_int}</arg>
<arg>${actual_int}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-11-22T13:13:07.802862" elapsed="0.000070"/>
</kw>
<status status="PASS" start="2024-11-22T13:13:07.802102" elapsed="0.000849"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:07.801675" elapsed="0.001290"/>
</if>
<arg>${item[6]}</arg>
<arg>${sql_response['tax_paid']}</arg>
<arg>tax_paid</arg>
<doc>Normalize the numbers and compare</doc>
<status status="PASS" start="2024-11-22T13:13:07.801084" elapsed="0.001899"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<if>
<branch type="IF" condition="'${expected_int}' == '${EMPTY}'">
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T13:13:07.804015" level="INFO">
Expected brownie_points:
None
Actual brownie_points:
None</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T13:13:07.803968" elapsed="0.000064"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T13:13:07.804082" elapsed="0.000058"/>
</kw>
<arg>Expected ${compare_title}:\n${None}\nActual ${compare_title}:\n${actual_int}</arg>
<status status="PASS" start="2024-11-22T13:13:07.803832" elapsed="0.000332"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${None}</arg>
<arg>${actual_int}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-11-22T13:13:07.804213" elapsed="0.000067"/>
</kw>
<status status="PASS" start="2024-11-22T13:13:07.803576" elapsed="0.000722"/>
</branch>
<branch type="ELSE">
<kw name="Log and Log To Console" owner="generic">
<arg>Expected ${compare_title}:\n${expected_int}\nActual ${compare_title}:\n${actual_int}</arg>
<status status="NOT RUN" start="2024-11-22T13:13:07.804363" elapsed="0.000011"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<var>${expected_int}</var>
<arg>'{:.2f}'.format(float(${expected_int}))</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:07.804421" elapsed="0.000010"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<var>${actual_int}</var>
<arg>'{:.2f}'.format(float(${actual_int}))</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:07.804477" elapsed="0.000009"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${expected_int}</arg>
<arg>${actual_int}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:07.804531" elapsed="0.000009"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:07.804312" elapsed="0.000243"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:07.803570" elapsed="0.000998"/>
</if>
<arg>${item[7]}</arg>
<arg>${sql_response['brownie_points']}</arg>
<arg>brownie_points</arg>
<doc>Normalize the numbers and compare</doc>
<status status="PASS" start="2024-11-22T13:13:07.803068" elapsed="0.001517"/>
</kw>
<var name="${item}">['natid-102', 'Jayden', 'MALE', '1996-01-01T23:59:59', '', '10320.00', '10.00', '']</var>
<status status="PASS" start="2024-11-22T13:13:07.777714" elapsed="0.026889"/>
</iter>
<iter>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2024-11-22T13:13:07.805014" level="INFO">${dict} = {'value_natid': 'natid-103'}</msg>
<var>${dict}</var>
<arg>value_natid=${item[0]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2024-11-22T13:13:07.804709" elapsed="0.000316"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<kw name="Connect To Database" owner="DatabaseLibrary">
<msg time="2024-11-22T13:13:07.805434" level="INFO">Looking for configuration file: 'resources/db.cfg'</msg>
<msg time="2024-11-22T13:13:07.805456" level="INFO">Configuration file doesn't exist</msg>
<msg time="2024-11-22T13:13:07.805535" level="INFO">Connect to DB using : mysql.connector.connect(database='testdb', user='user', password=***, host='localhost', port=3306)</msg>
<arg>${DB_API}</arg>
<arg>${DB_NAME}</arg>
<arg>${DB_USER}</arg>
<arg>${DB_PASSWORD}</arg>
<arg>${DB_HOST}</arg>
<arg>${DB_PORT}</arg>
<doc>Creates a database connection using the DB API 2.0 ``db_module`` and the parameters provided.
Along with listed commonly used arguments (`db_name`, `db_host` etc.)
you can set any other DB module specific parameters as key/value pairs.</doc>
<status status="PASS" start="2024-11-22T13:13:07.805225" elapsed="0.006367"/>
</kw>
<kw name="Update SQL Queries With Arguments Dictionary" owner="sql-helper">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-11-22T13:13:07.812006" level="INFO" html="true">Getting file '&lt;a href="file:///Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/object-repo/sql-queries/select_hero_by_natid.sql"&gt;/Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/object-repo/sql-queries/select_hero_by_natid.sql&lt;/a&gt;'.</msg>
<msg time="2024-11-22T13:13:07.812083" level="INFO">${sql_query} = SELECT *
FROM testdb.working_class_heroes
WHERE natid='value_natid';</msg>
<var>${sql_query}</var>
<arg>./object-repo/sql-queries/${sql_file_name}.sql</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-11-22T13:13:07.811898" elapsed="0.000196"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2024-11-22T13:13:07.812512" level="INFO">Argument types are:
&lt;class 'robot.utils.dotdict.DotDict'&gt;
&lt;class 'str'&gt;</msg>
<msg time="2024-11-22T13:13:07.812558" level="FAIL">{'value_natid': 'natid-103'} != </msg>
<arg>${args_dict}</arg>
<arg>${EMPTY}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="FAIL" start="2024-11-22T13:13:07.812236" elapsed="0.000351">{'value_natid': 'natid-103'} != </status>
</kw>
<msg time="2024-11-22T13:13:07.812634" level="INFO">${empty_status} = False</msg>
<var>${empty_status}</var>
<arg>Should Be Equal As Strings</arg>
<arg>${args_dict}</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-11-22T13:13:07.812160" elapsed="0.000483"/>
</kw>
<if>
<branch type="IF" condition="'${empty_status}' == '${False}'">
<if>
<branch type="IF" condition="${args_dict}">
<for flavor="IN">
<iter>
<kw name="Convert To String" owner="BuiltIn">
<msg time="2024-11-22T13:13:07.812950" level="INFO">${args_key_str} = value_natid</msg>
<var>${args_key_str}</var>
<arg>${args_key}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="PASS" start="2024-11-22T13:13:07.812879" elapsed="0.000081"/>
</kw>
<kw name="Convert To String" owner="BuiltIn">
<msg time="2024-11-22T13:13:07.813088" level="INFO">${args_value_str} = natid-103</msg>
<var>${args_value_str}</var>
<arg>${args_dict}[${args_key_str}]</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="PASS" start="2024-11-22T13:13:07.813015" elapsed="0.000083"/>
</kw>
<kw name="Replace String" owner="String">
<msg time="2024-11-22T13:13:07.813233" level="INFO">${sql_query} = SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-103';</msg>
<var>${sql_query}</var>
<arg>${sql_query}</arg>
<arg>${args_key_str}</arg>
<arg>${args_value_str}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="PASS" start="2024-11-22T13:13:07.813153" elapsed="0.000091"/>
</kw>
<var name="${args_key}">value_natid</var>
<status status="PASS" start="2024-11-22T13:13:07.812830" elapsed="0.000435"/>
</iter>
<var>${args_key}</var>
<value>@{args_dict}</value>
<status status="PASS" start="2024-11-22T13:13:07.812777" elapsed="0.000506"/>
</for>
<status status="PASS" start="2024-11-22T13:13:07.812745" elapsed="0.000557"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:07.812739" elapsed="0.000576"/>
</if>
<status status="PASS" start="2024-11-22T13:13:07.812679" elapsed="0.000645"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:07.812671" elapsed="0.000665"/>
</if>
<return>
<value>${sql_query}</value>
<status status="PASS" start="2024-11-22T13:13:07.813348" elapsed="0.000015"/>
</return>
<msg time="2024-11-22T13:13:07.813412" level="INFO">${updated_sql_query} = SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-103';</msg>
<var>${updated_sql_query}</var>
<arg>${sql_file_name}</arg>
<arg>${args_dict}</arg>
<status status="PASS" start="2024-11-22T13:13:07.811740" elapsed="0.001682"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-11-22T13:13:07.813650" level="FAIL">'SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-103';' does not contain 'delete'</msg>
<arg>${updated_sql_query}</arg>
<arg>DELETE</arg>
<arg>ignore_case=${True}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-11-22T13:13:07.813551" elapsed="0.000125">'SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-103';' does not contain 'delete'</status>
</kw>
<msg time="2024-11-22T13:13:07.813719" level="INFO">${delete_status} = False</msg>
<var>${delete_status}</var>
<arg>Should Contain</arg>
<arg>${updated_sql_query}</arg>
<arg>DELETE</arg>
<arg>ignore_case=${True}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-11-22T13:13:07.813481" elapsed="0.000247"/>
</kw>
<if>
<branch type="IF" condition="'${delete_status}' == '${True}'">
<kw name="Execute Sql String" owner="DatabaseLibrary">
<var>${json_response}</var>
<arg>${updated_sql_query}</arg>
<doc>Executes the ``sql_string`` as a single SQL command.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:07.813845" elapsed="0.000010"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:07.813760" elapsed="0.000113"/>
</branch>
<branch type="ELSE">
<kw name="Query" owner="DatabaseLibrary">
<msg time="2024-11-22T13:13:07.814332" level="INFO" html="true">Executing sql:&lt;br&gt;&lt;code style="font-weight: bold;"&gt;SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-103';&lt;/code&gt;</msg>
<msg time="2024-11-22T13:13:07.815089" level="INFO" html="true">&lt;div style="max-width: 100%; overflow-x: auto;"&gt;&lt;table style="width: auto; border-collapse: collapse; border: 2px solid rgb(140 140 140)"&gt;&lt;caption style="text-align: left; font-weight: bold; padding: 5px;"&gt;Query returned 1 rows&lt;/caption&gt;&lt;tr&gt;&lt;th scope="col" style="background-color: #d6ecd4; border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;Row&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;id&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;created_at&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;create_by&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;updated_at&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;updated_by&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;birth_date&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;brownie_points&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;death_date&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;gender&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;name&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;natid&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;salary&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;tax_paid&lt;/th&gt;&lt;/tr&gt;&lt;tr style="background-color: #eee;"&gt;&lt;th scope="row" style="background-color: #d6ecd4;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;0&lt;/th&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;53a132ff-bcba-4666-8319-0724acfdfe2d&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;2024-11-22 13:13:07.318099&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;SYSTEM&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;2024-11-22 13:13:07.318099&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;SYSTEM&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;1996-01-01 23:59:59&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;None&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;None&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;FEMALE&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;Lily&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;natid-103&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;1000.5&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;10.28&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;</msg>
<msg time="2024-11-22T13:13:07.815592" level="INFO">${json_response} = [{'id': '53a132ff-bcba-4666-8319-0724acfdfe2d', 'created_at': datetime.datetime(2024, 11, 22, 13, 13, 7, 318099), 'create_by': 'SYSTEM', 'updated_at': datetime.datetime(2024, 11, 22, 13, 13, 7, 318099...</msg>
<var>${json_response}</var>
<arg>${updated_sql_query}</arg>
<arg>return_dict=${True}</arg>
<doc>Runs a query with the ``select_statement`` and returns the result as list of rows.
The type of row values depends on the database module -
usually they are tuples or tuple-like objects.</doc>
<status status="PASS" start="2024-11-22T13:13:07.813932" elapsed="0.001674"/>
</kw>
<status status="PASS" start="2024-11-22T13:13:07.813887" elapsed="0.001745"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:07.813754" elapsed="0.001893"/>
</if>
<kw name="Disconnect From Database" owner="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<status status="PASS" start="2024-11-22T13:13:07.815704" elapsed="0.000096"/>
</kw>
<return>
<value>${json_response}</value>
<status status="PASS" start="2024-11-22T13:13:07.815823" elapsed="0.000016"/>
</return>
<msg time="2024-11-22T13:13:07.815901" level="INFO">${sql_response} = [{'id': '53a132ff-bcba-4666-8319-0724acfdfe2d', 'created_at': datetime.datetime(2024, 11, 22, 13, 13, 7, 318099), 'create_by': 'SYSTEM', 'updated_at': datetime.datetime(2024, 11, 22, 13, 13, 7, 318099...</msg>
<var>${sql_response}</var>
<arg>select_hero_by_natid</arg>
<arg>${dict}</arg>
<status status="PASS" start="2024-11-22T13:13:07.805111" elapsed="0.010802"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-11-22T13:13:07.816046" level="INFO">${sql_response} = {'id': '53a132ff-bcba-4666-8319-0724acfdfe2d', 'created_at': datetime.datetime(2024, 11, 22, 13, 13, 7, 318099), 'create_by': 'SYSTEM', 'updated_at': datetime.datetime(2024, 11, 22, 13, 13, 7, 318099)...</msg>
<var>${sql_response}</var>
<arg>${sql_response}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-11-22T13:13:07.815971" elapsed="0.000086"/>
</kw>
<kw name="Compare String" owner="generic">
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T13:13:07.816926" level="INFO">
Expected natid:
natid-103
Actual natid:
natid-103</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T13:13:07.816875" elapsed="0.000069"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T13:13:07.816998" elapsed="0.000059"/>
</kw>
<arg>Expected ${compare_title}:\n${expected_string}\nActual ${compare_title}:\n${actual_string}</arg>
<status status="PASS" start="2024-11-22T13:13:07.816735" elapsed="0.000348"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${expected_string}</arg>
<arg>${actual_string}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-11-22T13:13:07.817135" elapsed="0.000073"/>
</kw>
<arg>${item[0]}</arg>
<arg>${sql_response['natid']}</arg>
<arg>natid</arg>
<doc>Compare Strings</doc>
<status status="PASS" start="2024-11-22T13:13:07.816120" elapsed="0.001114"/>
</kw>
<kw name="Compare String" owner="generic">
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T13:13:07.818024" level="INFO">
Expected name:
Lily
Actual name:
Lily</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T13:13:07.817977" elapsed="0.000065"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T13:13:07.818093" elapsed="0.000055"/>
</kw>
<arg>Expected ${compare_title}:\n${expected_string}\nActual ${compare_title}:\n${actual_string}</arg>
<status status="PASS" start="2024-11-22T13:13:07.817844" elapsed="0.000330"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${expected_string}</arg>
<arg>${actual_string}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-11-22T13:13:07.818271" elapsed="0.000072"/>
</kw>
<arg>${item[1]}</arg>
<arg>${sql_response['name']}</arg>
<arg>name</arg>
<doc>Compare Strings</doc>
<status status="PASS" start="2024-11-22T13:13:07.817293" elapsed="0.001076"/>
</kw>
<kw name="Compare String" owner="generic">
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T13:13:07.819891" level="INFO">
Expected gender:
FEMALE
Actual gender:
FEMALE</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T13:13:07.819840" elapsed="0.000071"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T13:13:07.819963" elapsed="0.000059"/>
</kw>
<arg>Expected ${compare_title}:\n${expected_string}\nActual ${compare_title}:\n${actual_string}</arg>
<status status="PASS" start="2024-11-22T13:13:07.819112" elapsed="0.000937"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${expected_string}</arg>
<arg>${actual_string}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-11-22T13:13:07.820099" elapsed="0.000069"/>
</kw>
<arg>${item[2]}</arg>
<arg>${sql_response['gender']}</arg>
<arg>gender</arg>
<doc>Compare Strings</doc>
<status status="PASS" start="2024-11-22T13:13:07.818430" elapsed="0.001764"/>
</kw>
<kw name="Compare Date" owner="generic">
<if>
<branch type="IF" condition="'${expected_date}' == '${EMPTY}'">
<kw name="Log and Log To Console" owner="generic">
<arg>Expected ${compare_title}:\n${None}\nActual ${compare_title}:\n${actual_date}</arg>
<status status="NOT RUN" start="2024-11-22T13:13:07.821055" elapsed="0.000012"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${None}</arg>
<arg>${actual_date}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:07.821117" elapsed="0.000011"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:07.820791" elapsed="0.000354"/>
</branch>
<branch type="ELSE">
<kw name="Convert Date" owner="DateTime">
<msg time="2024-11-22T13:13:07.821317" level="INFO">${expected_date} = 1996-01-01 23:59:59.000000</msg>
<var>${expected_date}</var>
<arg>${expected_date}</arg>
<arg>result_format=%Y-%m-%d %H:%M:%S.%f</arg>
<doc>Converts between supported `date formats`.</doc>
<status status="PASS" start="2024-11-22T13:13:07.821205" elapsed="0.000124"/>
</kw>
<kw name="Convert Date" owner="DateTime">
<msg time="2024-11-22T13:13:07.821459" level="INFO">${actual_date} = 1996-01-01 23:59:59.000000</msg>
<var>${actual_date}</var>
<arg>${actual_date}</arg>
<arg>result_format=%Y-%m-%d %H:%M:%S.%f</arg>
<doc>Converts between supported `date formats`.</doc>
<status status="PASS" start="2024-11-22T13:13:07.821384" elapsed="0.000085"/>
</kw>
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T13:13:07.821702" level="INFO">
Expected birth_date:
1996-01-01 23:59:59.000000
Actual birth_date:
1996-01-01 23:59:59.000000</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T13:13:07.821656" elapsed="0.000063"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T13:13:07.821772" elapsed="0.000059"/>
</kw>
<arg>Expected ${compare_title}:\n${expected_date}\nActual ${compare_title}:\n${actual_date}</arg>
<status status="PASS" start="2024-11-22T13:13:07.821524" elapsed="0.000332"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${expected_date}</arg>
<arg>${actual_date}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-11-22T13:13:07.821905" elapsed="0.000066"/>
</kw>
<status status="PASS" start="2024-11-22T13:13:07.821160" elapsed="0.000829"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:07.820784" elapsed="0.001219"/>
</if>
<arg>${item[3]}</arg>
<arg>${sql_response['birth_date']}</arg>
<arg>birth_date</arg>
<doc>Format date and compare</doc>
<status status="PASS" start="2024-11-22T13:13:07.820275" elapsed="0.001745"/>
</kw>
<kw name="Compare Date" owner="generic">
<if>
<branch type="IF" condition="'${expected_date}' == '${EMPTY}'">
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T13:13:07.823041" level="INFO">
Expected death_date:
None
Actual death_date:
None</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T13:13:07.822995" elapsed="0.000063"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T13:13:07.823108" elapsed="0.000056"/>
</kw>
<arg>Expected ${compare_title}:\n${None}\nActual ${compare_title}:\n${actual_date}</arg>
<status status="PASS" start="2024-11-22T13:13:07.822863" elapsed="0.000325"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${None}</arg>
<arg>${actual_date}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-11-22T13:13:07.823238" elapsed="0.000065"/>
</kw>
<status status="PASS" start="2024-11-22T13:13:07.822607" elapsed="0.000715"/>
</branch>
<branch type="ELSE">
<kw name="Convert Date" owner="DateTime">
<var>${expected_date}</var>
<arg>${expected_date}</arg>
<arg>result_format=%Y-%m-%d %H:%M:%S.%f</arg>
<doc>Converts between supported `date formats`.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:07.823384" elapsed="0.000010"/>
</kw>
<kw name="Convert Date" owner="DateTime">
<var>${actual_date}</var>
<arg>${actual_date}</arg>
<arg>result_format=%Y-%m-%d %H:%M:%S.%f</arg>
<doc>Converts between supported `date formats`.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:07.823443" elapsed="0.000008"/>
</kw>
<kw name="Log and Log To Console" owner="generic">
<arg>Expected ${compare_title}:\n${expected_date}\nActual ${compare_title}:\n${actual_date}</arg>
<status status="NOT RUN" start="2024-11-22T13:13:07.823503" elapsed="0.000011"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${expected_date}</arg>
<arg>${actual_date}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:07.823562" elapsed="0.000008"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:07.823337" elapsed="0.000249"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:07.822600" elapsed="0.000999"/>
</if>
<arg>${item[4]}</arg>
<arg>${sql_response['death_date']}</arg>
<arg>death_date</arg>
<doc>Format date and compare</doc>
<status status="PASS" start="2024-11-22T13:13:07.822098" elapsed="0.001519"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<if>
<branch type="IF" condition="'${expected_int}' == '${EMPTY}'">
<kw name="Log and Log To Console" owner="generic">
<arg>Expected ${compare_title}:\n${None}\nActual ${compare_title}:\n${actual_int}</arg>
<status status="NOT RUN" start="2024-11-22T13:13:07.824461" elapsed="0.000012"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${None}</arg>
<arg>${actual_int}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:07.824524" elapsed="0.000010"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:07.824191" elapsed="0.000359"/>
</branch>
<branch type="ELSE">
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T13:13:07.824786" level="INFO">
Expected salary:
1000.50
Actual salary:
1000.5</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T13:13:07.824741" elapsed="0.000112"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T13:13:07.824904" elapsed="0.000057"/>
</kw>
<arg>Expected ${compare_title}:\n${expected_int}\nActual ${compare_title}:\n${actual_int}</arg>
<status status="PASS" start="2024-11-22T13:13:07.824610" elapsed="0.000374"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-11-22T13:13:07.825106" level="INFO">${expected_int} = 1000.50</msg>
<var>${expected_int}</var>
<arg>'{:.2f}'.format(float(${expected_int}))</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-11-22T13:13:07.825031" elapsed="0.000086"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-11-22T13:13:07.825231" level="INFO">${actual_int} = 1000.50</msg>
<var>${actual_int}</var>
<arg>'{:.2f}'.format(float(${actual_int}))</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-11-22T13:13:07.825165" elapsed="0.000074"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${expected_int}</arg>
<arg>${actual_int}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-11-22T13:13:07.825288" elapsed="0.000063"/>
</kw>
<status status="PASS" start="2024-11-22T13:13:07.824564" elapsed="0.000805"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:07.824184" elapsed="0.001197"/>
</if>
<arg>${item[5]}</arg>
<arg>${sql_response['salary']}</arg>
<arg>salary</arg>
<doc>Normalize the numbers and compare</doc>
<status status="PASS" start="2024-11-22T13:13:07.823695" elapsed="0.001704"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<if>
<branch type="IF" condition="'${expected_int}' == '${EMPTY}'">
<kw name="Log and Log To Console" owner="generic">
<arg>Expected ${compare_title}:\n${None}\nActual ${compare_title}:\n${actual_int}</arg>
<status status="NOT RUN" start="2024-11-22T13:13:07.826222" elapsed="0.000011"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${None}</arg>
<arg>${actual_int}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:07.826281" elapsed="0.000010"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:07.825972" elapsed="0.000335"/>
</branch>
<branch type="ELSE">
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T13:13:07.826619" level="INFO">
Expected tax_paid:
10.28
Actual tax_paid:
10.28</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T13:13:07.826574" elapsed="0.000063"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T13:13:07.826686" elapsed="0.000054"/>
</kw>
<arg>Expected ${compare_title}:\n${expected_int}\nActual ${compare_title}:\n${actual_int}</arg>
<status status="PASS" start="2024-11-22T13:13:07.826368" elapsed="0.000396"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-11-22T13:13:07.826885" level="INFO">${expected_int} = 10.28</msg>
<var>${expected_int}</var>
<arg>'{:.2f}'.format(float(${expected_int}))</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-11-22T13:13:07.826813" elapsed="0.000082"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-11-22T13:13:07.827009" level="INFO">${actual_int} = 10.28</msg>
<var>${actual_int}</var>
<arg>'{:.2f}'.format(float(${actual_int}))</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-11-22T13:13:07.826944" elapsed="0.000074"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${expected_int}</arg>
<arg>${actual_int}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-11-22T13:13:07.827066" elapsed="0.000065"/>
</kw>
<status status="PASS" start="2024-11-22T13:13:07.826320" elapsed="0.000829"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:07.825965" elapsed="0.001198"/>
</if>
<arg>${item[6]}</arg>
<arg>${sql_response['tax_paid']}</arg>
<arg>tax_paid</arg>
<doc>Normalize the numbers and compare</doc>
<status status="PASS" start="2024-11-22T13:13:07.825480" elapsed="0.001700"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<if>
<branch type="IF" condition="'${expected_int}' == '${EMPTY}'">
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T13:13:07.828158" level="INFO">
Expected brownie_points:
None
Actual brownie_points:
None</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T13:13:07.828114" elapsed="0.000061"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T13:13:07.828224" elapsed="0.000054"/>
</kw>
<arg>Expected ${compare_title}:\n${None}\nActual ${compare_title}:\n${actual_int}</arg>
<status status="PASS" start="2024-11-22T13:13:07.827972" elapsed="0.000328"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${None}</arg>
<arg>${actual_int}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-11-22T13:13:07.828346" elapsed="0.000062"/>
</kw>
<status status="PASS" start="2024-11-22T13:13:07.827728" elapsed="0.000698"/>
</branch>
<branch type="ELSE">
<kw name="Log and Log To Console" owner="generic">
<arg>Expected ${compare_title}:\n${expected_int}\nActual ${compare_title}:\n${actual_int}</arg>
<status status="NOT RUN" start="2024-11-22T13:13:07.828488" elapsed="0.000011"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<var>${expected_int}</var>
<arg>'{:.2f}'.format(float(${expected_int}))</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:07.828547" elapsed="0.000009"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<var>${actual_int}</var>
<arg>'{:.2f}'.format(float(${actual_int}))</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:07.828601" elapsed="0.000008"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${expected_int}</arg>
<arg>${actual_int}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:07.828671" elapsed="0.000008"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:07.828440" elapsed="0.000253"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:07.827722" elapsed="0.000984"/>
</if>
<arg>${item[7]}</arg>
<arg>${sql_response['brownie_points']}</arg>
<arg>brownie_points</arg>
<doc>Normalize the numbers and compare</doc>
<status status="PASS" start="2024-11-22T13:13:07.827256" elapsed="0.001467"/>
</kw>
<var name="${item}">['natid-103', 'Lily', 'FEMALE', '1996-01-01T23:59:59', '', '1000.50', '10.28', '']</var>
<status status="PASS" start="2024-11-22T13:13:07.804660" elapsed="0.024080"/>
</iter>
<iter>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2024-11-22T13:13:07.829122" level="INFO">${dict} = {'value_natid': 'natid-104'}</msg>
<var>${dict}</var>
<arg>value_natid=${item[0]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2024-11-22T13:13:07.828840" elapsed="0.000292"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<kw name="Connect To Database" owner="DatabaseLibrary">
<msg time="2024-11-22T13:13:07.829435" level="INFO">Looking for configuration file: 'resources/db.cfg'</msg>
<msg time="2024-11-22T13:13:07.829456" level="INFO">Configuration file doesn't exist</msg>
<msg time="2024-11-22T13:13:07.829530" level="INFO">Connect to DB using : mysql.connector.connect(database='testdb', user='user', password=***, host='localhost', port=3306)</msg>
<arg>${DB_API}</arg>
<arg>${DB_NAME}</arg>
<arg>${DB_USER}</arg>
<arg>${DB_PASSWORD}</arg>
<arg>${DB_HOST}</arg>
<arg>${DB_PORT}</arg>
<doc>Creates a database connection using the DB API 2.0 ``db_module`` and the parameters provided.
Along with listed commonly used arguments (`db_name`, `db_host` etc.)
you can set any other DB module specific parameters as key/value pairs.</doc>
<status status="PASS" start="2024-11-22T13:13:07.829323" elapsed="0.007356"/>
</kw>
<kw name="Update SQL Queries With Arguments Dictionary" owner="sql-helper">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-11-22T13:13:07.837054" level="INFO" html="true">Getting file '&lt;a href="file:///Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/object-repo/sql-queries/select_hero_by_natid.sql"&gt;/Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/object-repo/sql-queries/select_hero_by_natid.sql&lt;/a&gt;'.</msg>
<msg time="2024-11-22T13:13:07.837127" level="INFO">${sql_query} = SELECT *
FROM testdb.working_class_heroes
WHERE natid='value_natid';</msg>
<var>${sql_query}</var>
<arg>./object-repo/sql-queries/${sql_file_name}.sql</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-11-22T13:13:07.836950" elapsed="0.000187"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2024-11-22T13:13:07.837522" level="INFO">Argument types are:
&lt;class 'robot.utils.dotdict.DotDict'&gt;
&lt;class 'str'&gt;</msg>
<msg time="2024-11-22T13:13:07.837568" level="FAIL">{'value_natid': 'natid-104'} != </msg>
<arg>${args_dict}</arg>
<arg>${EMPTY}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="FAIL" start="2024-11-22T13:13:07.837264" elapsed="0.000337">{'value_natid': 'natid-104'} != </status>
</kw>
<msg time="2024-11-22T13:13:07.837641" level="INFO">${empty_status} = False</msg>
<var>${empty_status}</var>
<arg>Should Be Equal As Strings</arg>
<arg>${args_dict}</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-11-22T13:13:07.837194" elapsed="0.000455"/>
</kw>
<if>
<branch type="IF" condition="'${empty_status}' == '${False}'">
<if>
<branch type="IF" condition="${args_dict}">
<for flavor="IN">
<iter>
<kw name="Convert To String" owner="BuiltIn">
<msg time="2024-11-22T13:13:07.837940" level="INFO">${args_key_str} = value_natid</msg>
<var>${args_key_str}</var>
<arg>${args_key}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="PASS" start="2024-11-22T13:13:07.837875" elapsed="0.000074"/>
</kw>
<kw name="Convert To String" owner="BuiltIn">
<msg time="2024-11-22T13:13:07.838066" level="INFO">${args_value_str} = natid-104</msg>
<var>${args_value_str}</var>
<arg>${args_dict}[${args_key_str}]</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="PASS" start="2024-11-22T13:13:07.837998" elapsed="0.000078"/>
</kw>
<kw name="Replace String" owner="String">
<msg time="2024-11-22T13:13:07.838200" level="INFO">${sql_query} = SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-104';</msg>
<var>${sql_query}</var>
<arg>${sql_query}</arg>
<arg>${args_key_str}</arg>
<arg>${args_value_str}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="PASS" start="2024-11-22T13:13:07.838126" elapsed="0.000083"/>
</kw>
<var name="${args_key}">value_natid</var>
<status status="PASS" start="2024-11-22T13:13:07.837831" elapsed="0.000398"/>
</iter>
<var>${args_key}</var>
<value>@{args_dict}</value>
<status status="PASS" start="2024-11-22T13:13:07.837781" elapsed="0.000467"/>
</for>
<status status="PASS" start="2024-11-22T13:13:07.837750" elapsed="0.000516"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:07.837744" elapsed="0.000535"/>
</if>
<status status="PASS" start="2024-11-22T13:13:07.837693" elapsed="0.000595"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:07.837685" elapsed="0.000614"/>
</if>
<return>
<value>${sql_query}</value>
<status status="PASS" start="2024-11-22T13:13:07.838311" elapsed="0.000014"/>
</return>
<msg time="2024-11-22T13:13:07.838373" level="INFO">${updated_sql_query} = SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-104';</msg>
<var>${updated_sql_query}</var>
<arg>${sql_file_name}</arg>
<arg>${args_dict}</arg>
<status status="PASS" start="2024-11-22T13:13:07.836816" elapsed="0.001567"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-11-22T13:13:07.838603" level="FAIL">'SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-104';' does not contain 'delete'</msg>
<arg>${updated_sql_query}</arg>
<arg>DELETE</arg>
<arg>ignore_case=${True}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-11-22T13:13:07.838506" elapsed="0.000122">'SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-104';' does not contain 'delete'</status>
</kw>
<msg time="2024-11-22T13:13:07.838668" level="INFO">${delete_status} = False</msg>
<var>${delete_status}</var>
<arg>Should Contain</arg>
<arg>${updated_sql_query}</arg>
<arg>DELETE</arg>
<arg>ignore_case=${True}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-11-22T13:13:07.838440" elapsed="0.000237"/>
</kw>
<if>
<branch type="IF" condition="'${delete_status}' == '${True}'">
<kw name="Execute Sql String" owner="DatabaseLibrary">
<var>${json_response}</var>
<arg>${updated_sql_query}</arg>
<doc>Executes the ``sql_string`` as a single SQL command.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:07.838786" elapsed="0.000010"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:07.838708" elapsed="0.000105"/>
</branch>
<branch type="ELSE">
<kw name="Query" owner="DatabaseLibrary">
<msg time="2024-11-22T13:13:07.839376" level="INFO" html="true">Executing sql:&lt;br&gt;&lt;code style="font-weight: bold;"&gt;SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-104';&lt;/code&gt;</msg>
<msg time="2024-11-22T13:13:07.840217" level="INFO" html="true">&lt;div style="max-width: 100%; overflow-x: auto;"&gt;&lt;table style="width: auto; border-collapse: collapse; border: 2px solid rgb(140 140 140)"&gt;&lt;caption style="text-align: left; font-weight: bold; padding: 5px;"&gt;Query returned 1 rows&lt;/caption&gt;&lt;tr&gt;&lt;th scope="col" style="background-color: #d6ecd4; border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;Row&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;id&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;created_at&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;create_by&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;updated_at&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;updated_by&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;birth_date&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;brownie_points&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;death_date&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;gender&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;name&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;natid&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;salary&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;tax_paid&lt;/th&gt;&lt;/tr&gt;&lt;tr style="background-color: #eee;"&gt;&lt;th scope="row" style="background-color: #d6ecd4;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;0&lt;/th&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;1d14b9d3-71be-41fb-a2f5-beb82c958c3e&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;2024-11-22 13:13:07.325807&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;SYSTEM&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;2024-11-22 13:13:07.325807&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;SYSTEM&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;1996-01-01 23:59:59&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;None&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;None&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;MALE&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;Ben&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;natid-104&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;1000.12&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;10.0&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;</msg>
<msg time="2024-11-22T13:13:07.840729" level="INFO">${json_response} = [{'id': '1d14b9d3-71be-41fb-a2f5-beb82c958c3e', 'created_at': datetime.datetime(2024, 11, 22, 13, 13, 7, 325807), 'create_by': 'SYSTEM', 'updated_at': datetime.datetime(2024, 11, 22, 13, 13, 7, 325807...</msg>
<var>${json_response}</var>
<arg>${updated_sql_query}</arg>
<arg>return_dict=${True}</arg>
<doc>Runs a query with the ``select_statement`` and returns the result as list of rows.
The type of row values depends on the database module -
usually they are tuples or tuple-like objects.</doc>
<status status="PASS" start="2024-11-22T13:13:07.838870" elapsed="0.001872"/>
</kw>
<status status="PASS" start="2024-11-22T13:13:07.838826" elapsed="0.001942"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:07.838702" elapsed="0.002081"/>
</if>
<kw name="Disconnect From Database" owner="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<status status="PASS" start="2024-11-22T13:13:07.840839" elapsed="0.000095"/>
</kw>
<return>
<value>${json_response}</value>
<status status="PASS" start="2024-11-22T13:13:07.840958" elapsed="0.000017"/>
</return>
<msg time="2024-11-22T13:13:07.841041" level="INFO">${sql_response} = [{'id': '1d14b9d3-71be-41fb-a2f5-beb82c958c3e', 'created_at': datetime.datetime(2024, 11, 22, 13, 13, 7, 325807), 'create_by': 'SYSTEM', 'updated_at': datetime.datetime(2024, 11, 22, 13, 13, 7, 325807...</msg>
<var>${sql_response}</var>
<arg>select_hero_by_natid</arg>
<arg>${dict}</arg>
<status status="PASS" start="2024-11-22T13:13:07.829214" elapsed="0.011839"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-11-22T13:13:07.841206" level="INFO">${sql_response} = {'id': '1d14b9d3-71be-41fb-a2f5-beb82c958c3e', 'created_at': datetime.datetime(2024, 11, 22, 13, 13, 7, 325807), 'create_by': 'SYSTEM', 'updated_at': datetime.datetime(2024, 11, 22, 13, 13, 7, 325807)...</msg>
<var>${sql_response}</var>
<arg>${sql_response}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-11-22T13:13:07.841131" elapsed="0.000086"/>
</kw>
<kw name="Compare String" owner="generic">
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T13:13:07.842054" level="INFO">
Expected natid:
natid-104
Actual natid:
natid-104</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T13:13:07.842006" elapsed="0.000066"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T13:13:07.842125" elapsed="0.000060"/>
</kw>
<arg>Expected ${compare_title}:\n${expected_string}\nActual ${compare_title}:\n${actual_string}</arg>
<status status="PASS" start="2024-11-22T13:13:07.841875" elapsed="0.000334"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${expected_string}</arg>
<arg>${actual_string}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-11-22T13:13:07.842257" elapsed="0.000068"/>
</kw>
<arg>${item[0]}</arg>
<arg>${sql_response['natid']}</arg>
<arg>natid</arg>
<doc>Compare Strings</doc>
<status status="PASS" start="2024-11-22T13:13:07.841281" elapsed="0.001069"/>
</kw>
<kw name="Compare String" owner="generic">
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T13:13:07.843084" level="INFO">
Expected name:
Ben
Actual name:
Ben</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T13:13:07.843039" elapsed="0.000062"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T13:13:07.843148" elapsed="0.000052"/>
</kw>
<arg>Expected ${compare_title}:\n${expected_string}\nActual ${compare_title}:\n${actual_string}</arg>
<status status="PASS" start="2024-11-22T13:13:07.842917" elapsed="0.000307"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${expected_string}</arg>
<arg>${actual_string}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-11-22T13:13:07.843320" elapsed="0.000066"/>
</kw>
<arg>${item[1]}</arg>
<arg>${sql_response['name']}</arg>
<arg>name</arg>
<doc>Compare Strings</doc>
<status status="PASS" start="2024-11-22T13:13:07.842405" elapsed="0.001006"/>
</kw>
<kw name="Compare String" owner="generic">
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T13:13:07.844148" level="INFO">
Expected gender:
MALE
Actual gender:
MALE</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T13:13:07.844104" elapsed="0.000060"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T13:13:07.844211" elapsed="0.000054"/>
</kw>
<arg>Expected ${compare_title}:\n${expected_string}\nActual ${compare_title}:\n${actual_string}</arg>
<status status="PASS" start="2024-11-22T13:13:07.843981" elapsed="0.000309"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${expected_string}</arg>
<arg>${actual_string}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-11-22T13:13:07.844336" elapsed="0.000064"/>
</kw>
<arg>${item[2]}</arg>
<arg>${sql_response['gender']}</arg>
<arg>gender</arg>
<doc>Compare Strings</doc>
<status status="PASS" start="2024-11-22T13:13:07.843465" elapsed="0.000960"/>
</kw>
<kw name="Compare Date" owner="generic">
<if>
<branch type="IF" condition="'${expected_date}' == '${EMPTY}'">
<kw name="Log and Log To Console" owner="generic">
<arg>Expected ${compare_title}:\n${None}\nActual ${compare_title}:\n${actual_date}</arg>
<status status="NOT RUN" start="2024-11-22T13:13:07.845283" elapsed="0.000011"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${None}</arg>
<arg>${actual_date}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:07.845342" elapsed="0.000010"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:07.845015" elapsed="0.000353"/>
</branch>
<branch type="ELSE">
<kw name="Convert Date" owner="DateTime">
<msg time="2024-11-22T13:13:07.845533" level="INFO">${expected_date} = 1996-01-01 23:59:59.000000</msg>
<var>${expected_date}</var>
<arg>${expected_date}</arg>
<arg>result_format=%Y-%m-%d %H:%M:%S.%f</arg>
<doc>Converts between supported `date formats`.</doc>
<status status="PASS" start="2024-11-22T13:13:07.845429" elapsed="0.000115"/>
</kw>
<kw name="Convert Date" owner="DateTime">
<msg time="2024-11-22T13:13:07.845666" level="INFO">${actual_date} = 1996-01-01 23:59:59.000000</msg>
<var>${actual_date}</var>
<arg>${actual_date}</arg>
<arg>result_format=%Y-%m-%d %H:%M:%S.%f</arg>
<doc>Converts between supported `date formats`.</doc>
<status status="PASS" start="2024-11-22T13:13:07.845593" elapsed="0.000082"/>
</kw>
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T13:13:07.845899" level="INFO">
Expected birth_date:
1996-01-01 23:59:59.000000
Actual birth_date:
1996-01-01 23:59:59.000000</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T13:13:07.845853" elapsed="0.000062"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T13:13:07.845961" elapsed="0.000054"/>
</kw>
<arg>Expected ${compare_title}:\n${expected_date}\nActual ${compare_title}:\n${actual_date}</arg>
<status status="PASS" start="2024-11-22T13:13:07.845728" elapsed="0.000310"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${expected_date}</arg>
<arg>${actual_date}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-11-22T13:13:07.846085" elapsed="0.000065"/>
</kw>
<status status="PASS" start="2024-11-22T13:13:07.845383" elapsed="0.000784"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:07.845008" elapsed="0.001172"/>
</if>
<arg>${item[3]}</arg>
<arg>${sql_response['birth_date']}</arg>
<arg>birth_date</arg>
<doc>Format date and compare</doc>
<status status="PASS" start="2024-11-22T13:13:07.844505" elapsed="0.001692"/>
</kw>
<kw name="Compare Date" owner="generic">
<if>
<branch type="IF" condition="'${expected_date}' == '${EMPTY}'">
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T13:13:07.847165" level="INFO">
Expected death_date:
None
Actual death_date:
None</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T13:13:07.847123" elapsed="0.000139"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T13:13:07.847311" elapsed="0.000056"/>
</kw>
<arg>Expected ${compare_title}:\n${None}\nActual ${compare_title}:\n${actual_date}</arg>
<status status="PASS" start="2024-11-22T13:13:07.846994" elapsed="0.000396"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${None}</arg>
<arg>${actual_date}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-11-22T13:13:07.847437" elapsed="0.000063"/>
</kw>
<status status="PASS" start="2024-11-22T13:13:07.846757" elapsed="0.000759"/>
</branch>
<branch type="ELSE">
<kw name="Convert Date" owner="DateTime">
<var>${expected_date}</var>
<arg>${expected_date}</arg>
<arg>result_format=%Y-%m-%d %H:%M:%S.%f</arg>
<doc>Converts between supported `date formats`.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:07.847576" elapsed="0.000009"/>
</kw>
<kw name="Convert Date" owner="DateTime">
<var>${actual_date}</var>
<arg>${actual_date}</arg>
<arg>result_format=%Y-%m-%d %H:%M:%S.%f</arg>
<doc>Converts between supported `date formats`.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:07.847630" elapsed="0.000008"/>
</kw>
<kw name="Log and Log To Console" owner="generic">
<arg>Expected ${compare_title}:\n${expected_date}\nActual ${compare_title}:\n${actual_date}</arg>
<status status="NOT RUN" start="2024-11-22T13:13:07.847685" elapsed="0.000011"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${expected_date}</arg>
<arg>${actual_date}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:07.847744" elapsed="0.000009"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:07.847530" elapsed="0.000237"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:07.846751" elapsed="0.001028"/>
</if>
<arg>${item[4]}</arg>
<arg>${sql_response['death_date']}</arg>
<arg>death_date</arg>
<doc>Format date and compare</doc>
<status status="PASS" start="2024-11-22T13:13:07.846275" elapsed="0.001521"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<if>
<branch type="IF" condition="'${expected_int}' == '${EMPTY}'">
<kw name="Log and Log To Console" owner="generic">
<arg>Expected ${compare_title}:\n${None}\nActual ${compare_title}:\n${actual_int}</arg>
<status status="NOT RUN" start="2024-11-22T13:13:07.848585" elapsed="0.000011"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${None}</arg>
<arg>${actual_int}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:07.848643" elapsed="0.000009"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:07.848342" elapsed="0.000325"/>
</branch>
<branch type="ELSE">
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T13:13:07.848894" level="INFO">
Expected salary:
1000.12
Actual salary:
1000.12</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T13:13:07.848850" elapsed="0.000106"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T13:13:07.849005" elapsed="0.000054"/>
</kw>
<arg>Expected ${compare_title}:\n${expected_int}\nActual ${compare_title}:\n${actual_int}</arg>
<status status="PASS" start="2024-11-22T13:13:07.848724" elapsed="0.000358"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-11-22T13:13:07.849202" level="INFO">${expected_int} = 1000.12</msg>
<var>${expected_int}</var>
<arg>'{:.2f}'.format(float(${expected_int}))</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-11-22T13:13:07.849129" elapsed="0.000083"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-11-22T13:13:07.849325" level="INFO">${actual_int} = 1000.12</msg>
<var>${actual_int}</var>
<arg>'{:.2f}'.format(float(${actual_int}))</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-11-22T13:13:07.849261" elapsed="0.000073"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${expected_int}</arg>
<arg>${actual_int}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-11-22T13:13:07.849382" elapsed="0.000063"/>
</kw>
<status status="PASS" start="2024-11-22T13:13:07.848680" elapsed="0.000782"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:07.848336" elapsed="0.001139"/>
</if>
<arg>${item[5]}</arg>
<arg>${sql_response['salary']}</arg>
<arg>salary</arg>
<doc>Normalize the numbers and compare</doc>
<status status="PASS" start="2024-11-22T13:13:07.847868" elapsed="0.001623"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<if>
<branch type="IF" condition="'${expected_int}' == '${EMPTY}'">
<kw name="Log and Log To Console" owner="generic">
<arg>Expected ${compare_title}:\n${None}\nActual ${compare_title}:\n${actual_int}</arg>
<status status="NOT RUN" start="2024-11-22T13:13:07.850276" elapsed="0.000011"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${None}</arg>
<arg>${actual_int}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:07.850333" elapsed="0.000009"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:07.850039" elapsed="0.000318"/>
</branch>
<branch type="ELSE">
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T13:13:07.850582" level="INFO">
Expected tax_paid:
10.00
Actual tax_paid:
10.0</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T13:13:07.850537" elapsed="0.000061"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T13:13:07.850645" elapsed="0.000057"/>
</kw>
<arg>Expected ${compare_title}:\n${expected_int}\nActual ${compare_title}:\n${actual_int}</arg>
<status status="PASS" start="2024-11-22T13:13:07.850416" elapsed="0.000308"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-11-22T13:13:07.850838" level="INFO">${expected_int} = 10.00</msg>
<var>${expected_int}</var>
<arg>'{:.2f}'.format(float(${expected_int}))</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-11-22T13:13:07.850771" elapsed="0.000077"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-11-22T13:13:07.850956" level="INFO">${actual_int} = 10.00</msg>
<var>${actual_int}</var>
<arg>'{:.2f}'.format(float(${actual_int}))</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-11-22T13:13:07.850895" elapsed="0.000069"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${expected_int}</arg>
<arg>${actual_int}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-11-22T13:13:07.851012" elapsed="0.000061"/>
</kw>
<status status="PASS" start="2024-11-22T13:13:07.850370" elapsed="0.000719"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:07.850033" elapsed="0.001068"/>
</if>
<arg>${item[6]}</arg>
<arg>${sql_response['tax_paid']}</arg>
<arg>tax_paid</arg>
<doc>Normalize the numbers and compare</doc>
<status status="PASS" start="2024-11-22T13:13:07.849565" elapsed="0.001552"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<if>
<branch type="IF" condition="'${expected_int}' == '${EMPTY}'">
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T13:13:07.852066" level="INFO">
Expected brownie_points:
None
Actual brownie_points:
None</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T13:13:07.852023" elapsed="0.000058"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T13:13:07.852126" elapsed="0.000051"/>
</kw>
<arg>Expected ${compare_title}:\n${None}\nActual ${compare_title}:\n${actual_int}</arg>
<status status="PASS" start="2024-11-22T13:13:07.851905" elapsed="0.000294"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${None}</arg>
<arg>${actual_int}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-11-22T13:13:07.852244" elapsed="0.000062"/>
</kw>
<status status="PASS" start="2024-11-22T13:13:07.851669" elapsed="0.000654"/>
</branch>
<branch type="ELSE">
<kw name="Log and Log To Console" owner="generic">
<arg>Expected ${compare_title}:\n${expected_int}\nActual ${compare_title}:\n${actual_int}</arg>
<status status="NOT RUN" start="2024-11-22T13:13:07.852382" elapsed="0.000011"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<var>${expected_int}</var>
<arg>'{:.2f}'.format(float(${expected_int}))</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:07.852439" elapsed="0.000009"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<var>${actual_int}</var>
<arg>'{:.2f}'.format(float(${actual_int}))</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:07.852495" elapsed="0.000007"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${expected_int}</arg>
<arg>${actual_int}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:07.852545" elapsed="0.000008"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:07.852336" elapsed="0.000231"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:07.851663" elapsed="0.000915"/>
</if>
<arg>${item[7]}</arg>
<arg>${sql_response['brownie_points']}</arg>
<arg>brownie_points</arg>
<doc>Normalize the numbers and compare</doc>
<status status="PASS" start="2024-11-22T13:13:07.851191" elapsed="0.001404"/>
</kw>
<var name="${item}">['natid-104', 'Ben', 'MALE', '1996-01-01T23:59:59', '', '1000.12', '10.00', '']</var>
<status status="PASS" start="2024-11-22T13:13:07.828794" elapsed="0.023816"/>
</iter>
<iter>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2024-11-22T13:13:07.852978" level="INFO">${dict} = {'value_natid': 'natid-105'}</msg>
<var>${dict}</var>
<arg>value_natid=${item[0]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2024-11-22T13:13:07.852710" elapsed="0.000278"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<kw name="Connect To Database" owner="DatabaseLibrary">
<msg time="2024-11-22T13:13:07.853286" level="INFO">Looking for configuration file: 'resources/db.cfg'</msg>
<msg time="2024-11-22T13:13:07.853306" level="INFO">Configuration file doesn't exist</msg>
<msg time="2024-11-22T13:13:07.853459" level="INFO">Connect to DB using : mysql.connector.connect(database='testdb', user='user', password=***, host='localhost', port=3306)</msg>
<arg>${DB_API}</arg>
<arg>${DB_NAME}</arg>
<arg>${DB_USER}</arg>
<arg>${DB_PASSWORD}</arg>
<arg>${DB_HOST}</arg>
<arg>${DB_PORT}</arg>
<doc>Creates a database connection using the DB API 2.0 ``db_module`` and the parameters provided.
Along with listed commonly used arguments (`db_name`, `db_host` etc.)
you can set any other DB module specific parameters as key/value pairs.</doc>
<status status="PASS" start="2024-11-22T13:13:07.853173" elapsed="0.004707"/>
</kw>
<kw name="Update SQL Queries With Arguments Dictionary" owner="sql-helper">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-11-22T13:13:07.858205" level="INFO" html="true">Getting file '&lt;a href="file:///Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/object-repo/sql-queries/select_hero_by_natid.sql"&gt;/Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/object-repo/sql-queries/select_hero_by_natid.sql&lt;/a&gt;'.</msg>
<msg time="2024-11-22T13:13:07.858269" level="INFO">${sql_query} = SELECT *
FROM testdb.working_class_heroes
WHERE natid='value_natid';</msg>
<var>${sql_query}</var>
<arg>./object-repo/sql-queries/${sql_file_name}.sql</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-11-22T13:13:07.858111" elapsed="0.000168"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2024-11-22T13:13:07.858638" level="INFO">Argument types are:
&lt;class 'robot.utils.dotdict.DotDict'&gt;
&lt;class 'str'&gt;</msg>
<msg time="2024-11-22T13:13:07.858677" level="FAIL">{'value_natid': 'natid-105'} != </msg>
<arg>${args_dict}</arg>
<arg>${EMPTY}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="FAIL" start="2024-11-22T13:13:07.858401" elapsed="0.000303">{'value_natid': 'natid-105'} != </status>
</kw>
<msg time="2024-11-22T13:13:07.858742" level="INFO">${empty_status} = False</msg>
<var>${empty_status}</var>
<arg>Should Be Equal As Strings</arg>
<arg>${args_dict}</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-11-22T13:13:07.858336" elapsed="0.000414"/>
</kw>
<if>
<branch type="IF" condition="'${empty_status}' == '${False}'">
<if>
<branch type="IF" condition="${args_dict}">
<for flavor="IN">
<iter>
<kw name="Convert To String" owner="BuiltIn">
<msg time="2024-11-22T13:13:07.859013" level="INFO">${args_key_str} = value_natid</msg>
<var>${args_key_str}</var>
<arg>${args_key}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="PASS" start="2024-11-22T13:13:07.858953" elapsed="0.000070"/>
</kw>
<kw name="Convert To String" owner="BuiltIn">
<msg time="2024-11-22T13:13:07.859135" level="INFO">${args_value_str} = natid-105</msg>
<var>${args_value_str}</var>
<arg>${args_dict}[${args_key_str}]</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="PASS" start="2024-11-22T13:13:07.859070" elapsed="0.000074"/>
</kw>
<kw name="Replace String" owner="String">
<msg time="2024-11-22T13:13:07.859263" level="INFO">${sql_query} = SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-105';</msg>
<var>${sql_query}</var>
<arg>${sql_query}</arg>
<arg>${args_key_str}</arg>
<arg>${args_value_str}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="PASS" start="2024-11-22T13:13:07.859192" elapsed="0.000080"/>
</kw>
<var name="${args_key}">value_natid</var>
<status status="PASS" start="2024-11-22T13:13:07.858910" elapsed="0.000381"/>
</iter>
<var>${args_key}</var>
<value>@{args_dict}</value>
<status status="PASS" start="2024-11-22T13:13:07.858864" elapsed="0.000444"/>
</for>
<status status="PASS" start="2024-11-22T13:13:07.858836" elapsed="0.000489"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:07.858831" elapsed="0.000506"/>
</if>
<status status="PASS" start="2024-11-22T13:13:07.858782" elapsed="0.000564"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:07.858775" elapsed="0.000581"/>
</if>
<return>
<value>${sql_query}</value>
<status status="PASS" start="2024-11-22T13:13:07.859367" elapsed="0.000013"/>
</return>
<msg time="2024-11-22T13:13:07.859424" level="INFO">${updated_sql_query} = SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-105';</msg>
<var>${updated_sql_query}</var>
<arg>${sql_file_name}</arg>
<arg>${args_dict}</arg>
<status status="PASS" start="2024-11-22T13:13:07.857989" elapsed="0.001444"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-11-22T13:13:07.859637" level="FAIL">'SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-105';' does not contain 'delete'</msg>
<arg>${updated_sql_query}</arg>
<arg>DELETE</arg>
<arg>ignore_case=${True}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-11-22T13:13:07.859548" elapsed="0.000113">'SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-105';' does not contain 'delete'</status>
</kw>
<msg time="2024-11-22T13:13:07.859699" level="INFO">${delete_status} = False</msg>
<var>${delete_status}</var>
<arg>Should Contain</arg>
<arg>${updated_sql_query}</arg>
<arg>DELETE</arg>
<arg>ignore_case=${True}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-11-22T13:13:07.859486" elapsed="0.000222"/>
</kw>
<if>
<branch type="IF" condition="'${delete_status}' == '${True}'">
<kw name="Execute Sql String" owner="DatabaseLibrary">
<var>${json_response}</var>
<arg>${updated_sql_query}</arg>
<doc>Executes the ``sql_string`` as a single SQL command.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:07.859811" elapsed="0.000009"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:07.859737" elapsed="0.000099"/>
</branch>
<branch type="ELSE">
<kw name="Query" owner="DatabaseLibrary">
<msg time="2024-11-22T13:13:07.860270" level="INFO" html="true">Executing sql:&lt;br&gt;&lt;code style="font-weight: bold;"&gt;SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-105';&lt;/code&gt;</msg>
<msg time="2024-11-22T13:13:07.860896" level="INFO" html="true">&lt;div style="max-width: 100%; overflow-x: auto;"&gt;&lt;table style="width: auto; border-collapse: collapse; border: 2px solid rgb(140 140 140)"&gt;&lt;caption style="text-align: left; font-weight: bold; padding: 5px;"&gt;Query returned 1 rows&lt;/caption&gt;&lt;tr&gt;&lt;th scope="col" style="background-color: #d6ecd4; border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;Row&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;id&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;created_at&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;create_by&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;updated_at&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;updated_by&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;birth_date&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;brownie_points&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;death_date&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;gender&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;name&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;natid&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;salary&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;tax_paid&lt;/th&gt;&lt;/tr&gt;&lt;tr style="background-color: #eee;"&gt;&lt;th scope="row" style="background-color: #d6ecd4;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;0&lt;/th&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;0cc24764-35cc-420b-b4df-2f1e8b6e608b&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;2024-11-22 13:13:07.331318&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;SYSTEM&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;2024-11-22 13:13:07.331318&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;SYSTEM&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;1996-01-01 23:59:59&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;None&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;None&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;MALE&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;Dexter&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;natid-105&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;1000.0&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;10.0&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;</msg>
<msg time="2024-11-22T13:13:07.861333" level="INFO">${json_response} = [{'id': '0cc24764-35cc-420b-b4df-2f1e8b6e608b', 'created_at': datetime.datetime(2024, 11, 22, 13, 13, 7, 331318), 'create_by': 'SYSTEM', 'updated_at': datetime.datetime(2024, 11, 22, 13, 13, 7, 331318...</msg>
<var>${json_response}</var>
<arg>${updated_sql_query}</arg>
<arg>return_dict=${True}</arg>
<doc>Runs a query with the ``select_statement`` and returns the result as list of rows.
The type of row values depends on the database module -
usually they are tuples or tuple-like objects.</doc>
<status status="PASS" start="2024-11-22T13:13:07.859888" elapsed="0.001456"/>
</kw>
<status status="PASS" start="2024-11-22T13:13:07.859849" elapsed="0.001515"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:07.859731" elapsed="0.001645"/>
</if>
<kw name="Disconnect From Database" owner="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<status status="PASS" start="2024-11-22T13:13:07.861419" elapsed="0.000070"/>
</kw>
<return>
<value>${json_response}</value>
<status status="PASS" start="2024-11-22T13:13:07.861507" elapsed="0.000013"/>
</return>
<msg time="2024-11-22T13:13:07.861573" level="INFO">${sql_response} = [{'id': '0cc24764-35cc-420b-b4df-2f1e8b6e608b', 'created_at': datetime.datetime(2024, 11, 22, 13, 13, 7, 331318), 'create_by': 'SYSTEM', 'updated_at': datetime.datetime(2024, 11, 22, 13, 13, 7, 331318...</msg>
<var>${sql_response}</var>
<arg>select_hero_by_natid</arg>
<arg>${dict}</arg>
<status status="PASS" start="2024-11-22T13:13:07.853067" elapsed="0.008517"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-11-22T13:13:07.861697" level="INFO">${sql_response} = {'id': '0cc24764-35cc-420b-b4df-2f1e8b6e608b', 'created_at': datetime.datetime(2024, 11, 22, 13, 13, 7, 331318), 'create_by': 'SYSTEM', 'updated_at': datetime.datetime(2024, 11, 22, 13, 13, 7, 331318)...</msg>
<var>${sql_response}</var>
<arg>${sql_response}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-11-22T13:13:07.861635" elapsed="0.000072"/>
</kw>
<kw name="Compare String" owner="generic">
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T13:13:07.862457" level="INFO">
Expected natid:
natid-105
Actual natid:
natid-105</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T13:13:07.862413" elapsed="0.000060"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T13:13:07.862520" elapsed="0.000056"/>
</kw>
<arg>Expected ${compare_title}:\n${expected_string}\nActual ${compare_title}:\n${actual_string}</arg>
<status status="PASS" start="2024-11-22T13:13:07.862292" elapsed="0.000307"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${expected_string}</arg>
<arg>${actual_string}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-11-22T13:13:07.862645" elapsed="0.000063"/>
</kw>
<arg>${item[0]}</arg>
<arg>${sql_response['natid']}</arg>
<arg>natid</arg>
<doc>Compare Strings</doc>
<status status="PASS" start="2024-11-22T13:13:07.861766" elapsed="0.000966"/>
</kw>
<kw name="Compare String" owner="generic">
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T13:13:07.863432" level="INFO">
Expected name:
Dexter
Actual name:
Dexter</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T13:13:07.863390" elapsed="0.000058"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T13:13:07.863493" elapsed="0.000052"/>
</kw>
<arg>Expected ${compare_title}:\n${expected_string}\nActual ${compare_title}:\n${actual_string}</arg>
<status status="PASS" start="2024-11-22T13:13:07.863273" elapsed="0.000294"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${expected_string}</arg>
<arg>${actual_string}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-11-22T13:13:07.863658" elapsed="0.000063"/>
</kw>
<arg>${item[1]}</arg>
<arg>${sql_response['name']}</arg>
<arg>name</arg>
<doc>Compare Strings</doc>
<status status="PASS" start="2024-11-22T13:13:07.862786" elapsed="0.000960"/>
</kw>
<kw name="Compare String" owner="generic">
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T13:13:07.864541" level="INFO">
Expected gender:
MALE
Actual gender:
MALE</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T13:13:07.864498" elapsed="0.000059"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T13:13:07.864603" elapsed="0.000053"/>
</kw>
<arg>Expected ${compare_title}:\n${expected_string}\nActual ${compare_title}:\n${actual_string}</arg>
<status status="PASS" start="2024-11-22T13:13:07.864286" elapsed="0.000392"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${expected_string}</arg>
<arg>${actual_string}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-11-22T13:13:07.864723" elapsed="0.000063"/>
</kw>
<arg>${item[2]}</arg>
<arg>${sql_response['gender']}</arg>
<arg>gender</arg>
<doc>Compare Strings</doc>
<status status="PASS" start="2024-11-22T13:13:07.863799" elapsed="0.001011"/>
</kw>
<kw name="Compare Date" owner="generic">
<if>
<branch type="IF" condition="'${expected_date}' == '${EMPTY}'">
<kw name="Log and Log To Console" owner="generic">
<arg>Expected ${compare_title}:\n${None}\nActual ${compare_title}:\n${actual_date}</arg>
<status status="NOT RUN" start="2024-11-22T13:13:07.865609" elapsed="0.000011"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${None}</arg>
<arg>${actual_date}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:07.865665" elapsed="0.000009"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:07.865368" elapsed="0.000321"/>
</branch>
<branch type="ELSE">
<kw name="Convert Date" owner="DateTime">
<msg time="2024-11-22T13:13:07.865844" level="INFO">${expected_date} = 1996-01-01 23:59:59.000000</msg>
<var>${expected_date}</var>
<arg>${expected_date}</arg>
<arg>result_format=%Y-%m-%d %H:%M:%S.%f</arg>
<doc>Converts between supported `date formats`.</doc>
<status status="PASS" start="2024-11-22T13:13:07.865745" elapsed="0.000109"/>
</kw>
<kw name="Convert Date" owner="DateTime">
<msg time="2024-11-22T13:13:07.865978" level="INFO">${actual_date} = 1996-01-01 23:59:59.000000</msg>
<var>${actual_date}</var>
<arg>${actual_date}</arg>
<arg>result_format=%Y-%m-%d %H:%M:%S.%f</arg>
<doc>Converts between supported `date formats`.</doc>
<status status="PASS" start="2024-11-22T13:13:07.865913" elapsed="0.000074"/>
</kw>
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T13:13:07.866198" level="INFO">
Expected birth_date:
1996-01-01 23:59:59.000000
Actual birth_date:
1996-01-01 23:59:59.000000</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T13:13:07.866156" elapsed="0.000057"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T13:13:07.866258" elapsed="0.000048"/>
</kw>
<arg>Expected ${compare_title}:\n${expected_date}\nActual ${compare_title}:\n${actual_date}</arg>
<status status="PASS" start="2024-11-22T13:13:07.866037" elapsed="0.000291"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${expected_date}</arg>
<arg>${actual_date}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-11-22T13:13:07.866372" elapsed="0.000060"/>
</kw>
<status status="PASS" start="2024-11-22T13:13:07.865702" elapsed="0.000747"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:07.865362" elapsed="0.001099"/>
</if>
<arg>${item[3]}</arg>
<arg>${sql_response['birth_date']}</arg>
<arg>birth_date</arg>
<doc>Format date and compare</doc>
<status status="PASS" start="2024-11-22T13:13:07.864894" elapsed="0.001583"/>
</kw>
<kw name="Compare Date" owner="generic">
<if>
<branch type="IF" condition="'${expected_date}' == '${EMPTY}'">
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T13:13:07.867421" level="INFO">
Expected death_date:
None
Actual death_date:
None</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T13:13:07.867380" elapsed="0.000057"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T13:13:07.867482" elapsed="0.000048"/>
</kw>
<arg>Expected ${compare_title}:\n${None}\nActual ${compare_title}:\n${actual_date}</arg>
<status status="PASS" start="2024-11-22T13:13:07.867262" elapsed="0.000290"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${None}</arg>
<arg>${actual_date}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-11-22T13:13:07.867596" elapsed="0.000059"/>
</kw>
<status status="PASS" start="2024-11-22T13:13:07.867030" elapsed="0.000642"/>
</branch>
<branch type="ELSE">
<kw name="Convert Date" owner="DateTime">
<var>${expected_date}</var>
<arg>${expected_date}</arg>
<arg>result_format=%Y-%m-%d %H:%M:%S.%f</arg>
<doc>Converts between supported `date formats`.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:07.867728" elapsed="0.000010"/>
</kw>
<kw name="Convert Date" owner="DateTime">
<var>${actual_date}</var>
<arg>${actual_date}</arg>
<arg>result_format=%Y-%m-%d %H:%M:%S.%f</arg>
<doc>Converts between supported `date formats`.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:07.867782" elapsed="0.000008"/>
</kw>
<kw name="Log and Log To Console" owner="generic">
<arg>Expected ${compare_title}:\n${expected_date}\nActual ${compare_title}:\n${actual_date}</arg>
<status status="NOT RUN" start="2024-11-22T13:13:07.867837" elapsed="0.000010"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${expected_date}</arg>
<arg>${actual_date}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:07.867900" elapsed="0.000010"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:07.867685" elapsed="0.000238"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:07.867024" elapsed="0.000911"/>
</if>
<arg>${item[4]}</arg>
<arg>${sql_response['death_date']}</arg>
<arg>death_date</arg>
<doc>Format date and compare</doc>
<status status="PASS" start="2024-11-22T13:13:07.866549" elapsed="0.001402"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<if>
<branch type="IF" condition="'${expected_int}' == '${EMPTY}'">
<kw name="Log and Log To Console" owner="generic">
<arg>Expected ${compare_title}:\n${None}\nActual ${compare_title}:\n${actual_int}</arg>
<status status="NOT RUN" start="2024-11-22T13:13:07.868756" elapsed="0.000011"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${None}</arg>
<arg>${actual_int}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:07.868811" elapsed="0.000009"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:07.868526" elapsed="0.000309"/>
</branch>
<branch type="ELSE">
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T13:13:07.869060" level="INFO">
Expected salary:
1000.00
Actual salary:
1000.0</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T13:13:07.869009" elapsed="0.000115"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T13:13:07.869171" elapsed="0.000050"/>
</kw>
<arg>Expected ${compare_title}:\n${expected_int}\nActual ${compare_title}:\n${actual_int}</arg>
<status status="PASS" start="2024-11-22T13:13:07.868890" elapsed="0.000353"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-11-22T13:13:07.869358" level="INFO">${expected_int} = 1000.00</msg>
<var>${expected_int}</var>
<arg>'{:.2f}'.format(float(${expected_int}))</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-11-22T13:13:07.869287" elapsed="0.000080"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-11-22T13:13:07.869476" level="INFO">${actual_int} = 1000.00</msg>
<var>${actual_int}</var>
<arg>'{:.2f}'.format(float(${actual_int}))</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-11-22T13:13:07.869415" elapsed="0.000070"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${expected_int}</arg>
<arg>${actual_int}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-11-22T13:13:07.869531" elapsed="0.000062"/>
</kw>
<status status="PASS" start="2024-11-22T13:13:07.868847" elapsed="0.000762"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:07.868520" elapsed="0.001102"/>
</if>
<arg>${item[5]}</arg>
<arg>${sql_response['salary']}</arg>
<arg>salary</arg>
<doc>Normalize the numbers and compare</doc>
<status status="PASS" start="2024-11-22T13:13:07.868025" elapsed="0.001613"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<if>
<branch type="IF" condition="'${expected_int}' == '${EMPTY}'">
<kw name="Log and Log To Console" owner="generic">
<arg>Expected ${compare_title}:\n${None}\nActual ${compare_title}:\n${actual_int}</arg>
<status status="NOT RUN" start="2024-11-22T13:13:07.870387" elapsed="0.000010"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${None}</arg>
<arg>${actual_int}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:07.870440" elapsed="0.000009"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:07.870163" elapsed="0.000300"/>
</branch>
<branch type="ELSE">
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T13:13:07.870737" level="INFO">
Expected tax_paid:
10.00
Actual tax_paid:
10.0</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T13:13:07.870697" elapsed="0.000055"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T13:13:07.870795" elapsed="0.000050"/>
</kw>
<arg>Expected ${compare_title}:\n${expected_int}\nActual ${compare_title}:\n${actual_int}</arg>
<status status="PASS" start="2024-11-22T13:13:07.870517" elapsed="0.000352"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-11-22T13:13:07.870978" level="INFO">${expected_int} = 10.00</msg>
<var>${expected_int}</var>
<arg>'{:.2f}'.format(float(${expected_int}))</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-11-22T13:13:07.870913" elapsed="0.000074"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-11-22T13:13:07.871089" level="INFO">${actual_int} = 10.00</msg>
<var>${actual_int}</var>
<arg>'{:.2f}'.format(float(${actual_int}))</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-11-22T13:13:07.871032" elapsed="0.000065"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${expected_int}</arg>
<arg>${actual_int}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-11-22T13:13:07.871141" elapsed="0.000058"/>
</kw>
<status status="PASS" start="2024-11-22T13:13:07.870475" elapsed="0.000739"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:07.870158" elapsed="0.001068"/>
</if>
<arg>${item[6]}</arg>
<arg>${sql_response['tax_paid']}</arg>
<arg>tax_paid</arg>
<doc>Normalize the numbers and compare</doc>
<status status="PASS" start="2024-11-22T13:13:07.869711" elapsed="0.001530"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<if>
<branch type="IF" condition="'${expected_int}' == '${EMPTY}'">
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T13:13:07.872136" level="INFO">
Expected brownie_points:
None
Actual brownie_points:
None</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T13:13:07.872096" elapsed="0.000055"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T13:13:07.872195" elapsed="0.000052"/>
</kw>
<arg>Expected ${compare_title}:\n${None}\nActual ${compare_title}:\n${actual_int}</arg>
<status status="PASS" start="2024-11-22T13:13:07.871982" elapsed="0.000289"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${None}</arg>
<arg>${actual_int}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-11-22T13:13:07.872314" elapsed="0.000060"/>
</kw>
<status status="PASS" start="2024-11-22T13:13:07.871758" elapsed="0.000633"/>
</branch>
<branch type="ELSE">
<kw name="Log and Log To Console" owner="generic">
<arg>Expected ${compare_title}:\n${expected_int}\nActual ${compare_title}:\n${actual_int}</arg>
<status status="NOT RUN" start="2024-11-22T13:13:07.872447" elapsed="0.000010"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<var>${expected_int}</var>
<arg>'{:.2f}'.format(float(${expected_int}))</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:07.872506" elapsed="0.000009"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<var>${actual_int}</var>
<arg>'{:.2f}'.format(float(${actual_int}))</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:07.872565" elapsed="0.000010"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${expected_int}</arg>
<arg>${actual_int}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:07.872622" elapsed="0.000008"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:07.872403" elapsed="0.000240"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:07.871752" elapsed="0.000901"/>
</if>
<arg>${item[7]}</arg>
<arg>${sql_response['brownie_points']}</arg>
<arg>brownie_points</arg>
<doc>Normalize the numbers and compare</doc>
<status status="PASS" start="2024-11-22T13:13:07.871311" elapsed="0.001358"/>
</kw>
<var name="${item}">['natid-105', 'Dexter', 'MALE', '1996-01-01T23:59:59', '', '1000.00', '10.00', '']</var>
<status status="PASS" start="2024-11-22T13:13:07.852665" elapsed="0.020018"/>
</iter>
<iter>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2024-11-22T13:13:07.873025" level="INFO">${dict} = {'value_natid': 'natid-106'}</msg>
<var>${dict}</var>
<arg>value_natid=${item[0]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2024-11-22T13:13:07.872774" elapsed="0.000260"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<kw name="Connect To Database" owner="DatabaseLibrary">
<msg time="2024-11-22T13:13:07.873308" level="INFO">Looking for configuration file: 'resources/db.cfg'</msg>
<msg time="2024-11-22T13:13:07.873324" level="INFO">Configuration file doesn't exist</msg>
<msg time="2024-11-22T13:13:07.873391" level="INFO">Connect to DB using : mysql.connector.connect(database='testdb', user='user', password=***, host='localhost', port=3306)</msg>
<arg>${DB_API}</arg>
<arg>${DB_NAME}</arg>
<arg>${DB_USER}</arg>
<arg>${DB_PASSWORD}</arg>
<arg>${DB_HOST}</arg>
<arg>${DB_PORT}</arg>
<doc>Creates a database connection using the DB API 2.0 ``db_module`` and the parameters provided.
Along with listed commonly used arguments (`db_name`, `db_host` etc.)
you can set any other DB module specific parameters as key/value pairs.</doc>
<status status="PASS" start="2024-11-22T13:13:07.873208" elapsed="0.006112"/>
</kw>
<kw name="Update SQL Queries With Arguments Dictionary" owner="sql-helper">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-11-22T13:13:07.879643" level="INFO" html="true">Getting file '&lt;a href="file:///Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/object-repo/sql-queries/select_hero_by_natid.sql"&gt;/Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/object-repo/sql-queries/select_hero_by_natid.sql&lt;/a&gt;'.</msg>
<msg time="2024-11-22T13:13:07.879703" level="INFO">${sql_query} = SELECT *
FROM testdb.working_class_heroes
WHERE natid='value_natid';</msg>
<var>${sql_query}</var>
<arg>./object-repo/sql-queries/${sql_file_name}.sql</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-11-22T13:13:07.879559" elapsed="0.000154"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2024-11-22T13:13:07.880066" level="INFO">Argument types are:
&lt;class 'robot.utils.dotdict.DotDict'&gt;
&lt;class 'str'&gt;</msg>
<msg time="2024-11-22T13:13:07.880104" level="FAIL">{'value_natid': 'natid-106'} != </msg>
<arg>${args_dict}</arg>
<arg>${EMPTY}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="FAIL" start="2024-11-22T13:13:07.879830" elapsed="0.000298">{'value_natid': 'natid-106'} != </status>
</kw>
<msg time="2024-11-22T13:13:07.880167" level="INFO">${empty_status} = False</msg>
<var>${empty_status}</var>
<arg>Should Be Equal As Strings</arg>
<arg>${args_dict}</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-11-22T13:13:07.879767" elapsed="0.000408"/>
</kw>
<if>
<branch type="IF" condition="'${empty_status}' == '${False}'">
<if>
<branch type="IF" condition="${args_dict}">
<for flavor="IN">
<iter>
<kw name="Convert To String" owner="BuiltIn">
<msg time="2024-11-22T13:13:07.880432" level="INFO">${args_key_str} = value_natid</msg>
<var>${args_key_str}</var>
<arg>${args_key}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="PASS" start="2024-11-22T13:13:07.880372" elapsed="0.000069"/>
</kw>
<kw name="Convert To String" owner="BuiltIn">
<msg time="2024-11-22T13:13:07.880553" level="INFO">${args_value_str} = natid-106</msg>
<var>${args_value_str}</var>
<arg>${args_dict}[${args_key_str}]</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="PASS" start="2024-11-22T13:13:07.880487" elapsed="0.000075"/>
</kw>
<kw name="Replace String" owner="String">
<msg time="2024-11-22T13:13:07.880678" level="INFO">${sql_query} = SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-106';</msg>
<var>${sql_query}</var>
<arg>${sql_query}</arg>
<arg>${args_key_str}</arg>
<arg>${args_value_str}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="PASS" start="2024-11-22T13:13:07.880610" elapsed="0.000077"/>
</kw>
<var name="${args_key}">value_natid</var>
<status status="PASS" start="2024-11-22T13:13:07.880331" elapsed="0.000375"/>
</iter>
<var>${args_key}</var>
<value>@{args_dict}</value>
<status status="PASS" start="2024-11-22T13:13:07.880286" elapsed="0.000436"/>
</for>
<status status="PASS" start="2024-11-22T13:13:07.880259" elapsed="0.000479"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:07.880254" elapsed="0.000496"/>
</if>
<status status="PASS" start="2024-11-22T13:13:07.880205" elapsed="0.000553"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:07.880198" elapsed="0.000572"/>
</if>
<return>
<value>${sql_query}</value>
<status status="PASS" start="2024-11-22T13:13:07.880781" elapsed="0.000012"/>
</return>
<msg time="2024-11-22T13:13:07.880836" level="INFO">${updated_sql_query} = SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-106';</msg>
<var>${updated_sql_query}</var>
<arg>${sql_file_name}</arg>
<arg>${args_dict}</arg>
<status status="PASS" start="2024-11-22T13:13:07.879435" elapsed="0.001409"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-11-22T13:13:07.881050" level="FAIL">'SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-106';' does not contain 'delete'</msg>
<arg>${updated_sql_query}</arg>
<arg>DELETE</arg>
<arg>ignore_case=${True}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-11-22T13:13:07.880963" elapsed="0.000109">'SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-106';' does not contain 'delete'</status>
</kw>
<msg time="2024-11-22T13:13:07.881118" level="INFO">${delete_status} = False</msg>
<var>${delete_status}</var>
<arg>Should Contain</arg>
<arg>${updated_sql_query}</arg>
<arg>DELETE</arg>
<arg>ignore_case=${True}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-11-22T13:13:07.880895" elapsed="0.000232"/>
</kw>
<if>
<branch type="IF" condition="'${delete_status}' == '${True}'">
<kw name="Execute Sql String" owner="DatabaseLibrary">
<var>${json_response}</var>
<arg>${updated_sql_query}</arg>
<doc>Executes the ``sql_string`` as a single SQL command.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:07.881235" elapsed="0.000010"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:07.881155" elapsed="0.000107"/>
</branch>
<branch type="ELSE">
<kw name="Query" owner="DatabaseLibrary">
<msg time="2024-11-22T13:13:07.881840" level="INFO" html="true">Executing sql:&lt;br&gt;&lt;code style="font-weight: bold;"&gt;SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-106';&lt;/code&gt;</msg>
<msg time="2024-11-22T13:13:07.882486" level="INFO" html="true">&lt;div style="max-width: 100%; overflow-x: auto;"&gt;&lt;table style="width: auto; border-collapse: collapse; border: 2px solid rgb(140 140 140)"&gt;&lt;caption style="text-align: left; font-weight: bold; padding: 5px;"&gt;Query returned 1 rows&lt;/caption&gt;&lt;tr&gt;&lt;th scope="col" style="background-color: #d6ecd4; border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;Row&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;id&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;created_at&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;create_by&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;updated_at&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;updated_by&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;birth_date&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;brownie_points&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;death_date&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;gender&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;name&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;natid&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;salary&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;tax_paid&lt;/th&gt;&lt;/tr&gt;&lt;tr style="background-color: #eee;"&gt;&lt;th scope="row" style="background-color: #d6ecd4;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;0&lt;/th&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;ef62178c-4e09-47d4-ac94-9819af313a3d&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;2024-11-22 13:13:07.339262&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;SYSTEM&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;2024-11-22 13:13:07.339262&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;SYSTEM&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;1996-01-01 23:59:59&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;None&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;None&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;MALE&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;Greg&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;natid-106&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;10320.0&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;10.0&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;</msg>
<msg time="2024-11-22T13:13:07.882929" level="INFO">${json_response} = [{'id': 'ef62178c-4e09-47d4-ac94-9819af313a3d', 'created_at': datetime.datetime(2024, 11, 22, 13, 13, 7, 339262), 'create_by': 'SYSTEM', 'updated_at': datetime.datetime(2024, 11, 22, 13, 13, 7, 339262...</msg>
<var>${json_response}</var>
<arg>${updated_sql_query}</arg>
<arg>return_dict=${True}</arg>
<doc>Runs a query with the ``select_statement`` and returns the result as list of rows.
The type of row values depends on the database module -
usually they are tuples or tuple-like objects.</doc>
<status status="PASS" start="2024-11-22T13:13:07.881408" elapsed="0.001537"/>
</kw>
<status status="PASS" start="2024-11-22T13:13:07.881277" elapsed="0.001696"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:07.881150" elapsed="0.001836"/>
</if>
<kw name="Disconnect From Database" owner="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<status status="PASS" start="2024-11-22T13:13:07.883040" elapsed="0.000083"/>
</kw>
<return>
<value>${json_response}</value>
<status status="PASS" start="2024-11-22T13:13:07.883144" elapsed="0.000015"/>
</return>
<msg time="2024-11-22T13:13:07.883221" level="INFO">${sql_response} = [{'id': 'ef62178c-4e09-47d4-ac94-9819af313a3d', 'created_at': datetime.datetime(2024, 11, 22, 13, 13, 7, 339262), 'create_by': 'SYSTEM', 'updated_at': datetime.datetime(2024, 11, 22, 13, 13, 7, 339262...</msg>
<var>${sql_response}</var>
<arg>select_hero_by_natid</arg>
<arg>${dict}</arg>
<status status="PASS" start="2024-11-22T13:13:07.873108" elapsed="0.010123"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-11-22T13:13:07.883356" level="INFO">${sql_response} = {'id': 'ef62178c-4e09-47d4-ac94-9819af313a3d', 'created_at': datetime.datetime(2024, 11, 22, 13, 13, 7, 339262), 'create_by': 'SYSTEM', 'updated_at': datetime.datetime(2024, 11, 22, 13, 13, 7, 339262)...</msg>
<var>${sql_response}</var>
<arg>${sql_response}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-11-22T13:13:07.883292" elapsed="0.000074"/>
</kw>
<kw name="Compare String" owner="generic">
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T13:13:07.884193" level="INFO">
Expected natid:
natid-106
Actual natid:
natid-106</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T13:13:07.884150" elapsed="0.000062"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T13:13:07.884267" elapsed="0.000059"/>
</kw>
<arg>Expected ${compare_title}:\n${expected_string}\nActual ${compare_title}:\n${actual_string}</arg>
<status status="PASS" start="2024-11-22T13:13:07.884008" elapsed="0.000345"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${expected_string}</arg>
<arg>${actual_string}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-11-22T13:13:07.884396" elapsed="0.000068"/>
</kw>
<arg>${item[0]}</arg>
<arg>${sql_response['natid']}</arg>
<arg>natid</arg>
<doc>Compare Strings</doc>
<status status="PASS" start="2024-11-22T13:13:07.883427" elapsed="0.001060"/>
</kw>
<kw name="Compare String" owner="generic">
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T13:13:07.885265" level="INFO">
Expected name:
Greg
Actual name:
Greg</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T13:13:07.885220" elapsed="0.000060"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T13:13:07.885335" elapsed="0.000052"/>
</kw>
<arg>Expected ${compare_title}:\n${expected_string}\nActual ${compare_title}:\n${actual_string}</arg>
<status status="PASS" start="2024-11-22T13:13:07.885087" elapsed="0.000336"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${expected_string}</arg>
<arg>${actual_string}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-11-22T13:13:07.885553" elapsed="0.000096"/>
</kw>
<arg>${item[1]}</arg>
<arg>${sql_response['name']}</arg>
<arg>name</arg>
<doc>Compare Strings</doc>
<status status="PASS" start="2024-11-22T13:13:07.884548" elapsed="0.001129"/>
</kw>
<kw name="Compare String" owner="generic">
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T13:13:07.886527" level="INFO">
Expected gender:
MALE
Actual gender:
MALE</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T13:13:07.886472" elapsed="0.000072"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T13:13:07.886597" elapsed="0.000061"/>
</kw>
<arg>Expected ${compare_title}:\n${expected_string}\nActual ${compare_title}:\n${actual_string}</arg>
<status status="PASS" start="2024-11-22T13:13:07.886338" elapsed="0.000347"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${expected_string}</arg>
<arg>${actual_string}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-11-22T13:13:07.886733" elapsed="0.000065"/>
</kw>
<arg>${item[2]}</arg>
<arg>${sql_response['gender']}</arg>
<arg>gender</arg>
<doc>Compare Strings</doc>
<status status="PASS" start="2024-11-22T13:13:07.885747" elapsed="0.001078"/>
</kw>
<kw name="Compare Date" owner="generic">
<if>
<branch type="IF" condition="'${expected_date}' == '${EMPTY}'">
<kw name="Log and Log To Console" owner="generic">
<arg>Expected ${compare_title}:\n${None}\nActual ${compare_title}:\n${actual_date}</arg>
<status status="NOT RUN" start="2024-11-22T13:13:07.887640" elapsed="0.000011"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${None}</arg>
<arg>${actual_date}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:07.887697" elapsed="0.000010"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:07.887398" elapsed="0.000324"/>
</branch>
<branch type="ELSE">
<kw name="Convert Date" owner="DateTime">
<msg time="2024-11-22T13:13:07.887880" level="INFO">${expected_date} = 1996-01-01 23:59:59.000000</msg>
<var>${expected_date}</var>
<arg>${expected_date}</arg>
<arg>result_format=%Y-%m-%d %H:%M:%S.%f</arg>
<doc>Converts between supported `date formats`.</doc>
<status status="PASS" start="2024-11-22T13:13:07.887778" elapsed="0.000113"/>
</kw>
<kw name="Convert Date" owner="DateTime">
<msg time="2024-11-22T13:13:07.888018" level="INFO">${actual_date} = 1996-01-01 23:59:59.000000</msg>
<var>${actual_date}</var>
<arg>${actual_date}</arg>
<arg>result_format=%Y-%m-%d %H:%M:%S.%f</arg>
<doc>Converts between supported `date formats`.</doc>
<status status="PASS" start="2024-11-22T13:13:07.887945" elapsed="0.000081"/>
</kw>
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T13:13:07.888236" level="INFO">
Expected birth_date:
1996-01-01 23:59:59.000000
Actual birth_date:
1996-01-01 23:59:59.000000</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T13:13:07.888194" elapsed="0.000057"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T13:13:07.888294" elapsed="0.000050"/>
</kw>
<arg>Expected ${compare_title}:\n${expected_date}\nActual ${compare_title}:\n${actual_date}</arg>
<status status="PASS" start="2024-11-22T13:13:07.888075" elapsed="0.000293"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${expected_date}</arg>
<arg>${actual_date}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-11-22T13:13:07.888412" elapsed="0.000061"/>
</kw>
<status status="PASS" start="2024-11-22T13:13:07.887736" elapsed="0.000753"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:07.887392" elapsed="0.001109"/>
</if>
<arg>${item[3]}</arg>
<arg>${sql_response['birth_date']}</arg>
<arg>birth_date</arg>
<doc>Format date and compare</doc>
<status status="PASS" start="2024-11-22T13:13:07.886909" elapsed="0.001607"/>
</kw>
<kw name="Compare Date" owner="generic">
<if>
<branch type="IF" condition="'${expected_date}' == '${EMPTY}'">
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T13:13:07.889527" level="INFO">
Expected death_date:
None
Actual death_date:
None</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T13:13:07.889482" elapsed="0.000061"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T13:13:07.889587" elapsed="0.000051"/>
</kw>
<arg>Expected ${compare_title}:\n${None}\nActual ${compare_title}:\n${actual_date}</arg>
<status status="PASS" start="2024-11-22T13:13:07.889292" elapsed="0.000371"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${None}</arg>
<arg>${actual_date}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-11-22T13:13:07.889716" elapsed="0.000067"/>
</kw>
<status status="PASS" start="2024-11-22T13:13:07.889067" elapsed="0.000733"/>
</branch>
<branch type="ELSE">
<kw name="Convert Date" owner="DateTime">
<var>${expected_date}</var>
<arg>${expected_date}</arg>
<arg>result_format=%Y-%m-%d %H:%M:%S.%f</arg>
<doc>Converts between supported `date formats`.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:07.889867" elapsed="0.000010"/>
</kw>
<kw name="Convert Date" owner="DateTime">
<var>${actual_date}</var>
<arg>${actual_date}</arg>
<arg>result_format=%Y-%m-%d %H:%M:%S.%f</arg>
<doc>Converts between supported `date formats`.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:07.889925" elapsed="0.000009"/>
</kw>
<kw name="Log and Log To Console" owner="generic">
<arg>Expected ${compare_title}:\n${expected_date}\nActual ${compare_title}:\n${actual_date}</arg>
<status status="NOT RUN" start="2024-11-22T13:13:07.889979" elapsed="0.000009"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${expected_date}</arg>
<arg>${actual_date}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:07.890030" elapsed="0.000008"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:07.889816" elapsed="0.000235"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:07.889062" elapsed="0.001001"/>
</if>
<arg>${item[4]}</arg>
<arg>${sql_response['death_date']}</arg>
<arg>death_date</arg>
<doc>Format date and compare</doc>
<status status="PASS" start="2024-11-22T13:13:07.888586" elapsed="0.001493"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<if>
<branch type="IF" condition="'${expected_int}' == '${EMPTY}'">
<kw name="Log and Log To Console" owner="generic">
<arg>Expected ${compare_title}:\n${None}\nActual ${compare_title}:\n${actual_int}</arg>
<status status="NOT RUN" start="2024-11-22T13:13:07.890874" elapsed="0.000010"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${None}</arg>
<arg>${actual_int}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:07.890927" elapsed="0.000009"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:07.890627" elapsed="0.000324"/>
</branch>
<branch type="ELSE">
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T13:13:07.891178" level="INFO">
Expected salary:
10320.00
Actual salary:
10320.0</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T13:13:07.891132" elapsed="0.000102"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T13:13:07.891281" elapsed="0.000053"/>
</kw>
<arg>Expected ${compare_title}:\n${expected_int}\nActual ${compare_title}:\n${actual_int}</arg>
<status status="PASS" start="2024-11-22T13:13:07.891005" elapsed="0.000352"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-11-22T13:13:07.891481" level="INFO">${expected_int} = 10320.00</msg>
<var>${expected_int}</var>
<arg>'{:.2f}'.format(float(${expected_int}))</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-11-22T13:13:07.891404" elapsed="0.000086"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-11-22T13:13:07.891595" level="INFO">${actual_int} = 10320.00</msg>
<var>${actual_int}</var>
<arg>'{:.2f}'.format(float(${actual_int}))</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-11-22T13:13:07.891537" elapsed="0.000066"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${expected_int}</arg>
<arg>${actual_int}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-11-22T13:13:07.891649" elapsed="0.000057"/>
</kw>
<status status="PASS" start="2024-11-22T13:13:07.890963" elapsed="0.000759"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:07.890621" elapsed="0.001113"/>
</if>
<arg>${item[5]}</arg>
<arg>${sql_response['salary']}</arg>
<arg>salary</arg>
<doc>Normalize the numbers and compare</doc>
<status status="PASS" start="2024-11-22T13:13:07.890147" elapsed="0.001602"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<if>
<branch type="IF" condition="'${expected_int}' == '${EMPTY}'">
<kw name="Log and Log To Console" owner="generic">
<arg>Expected ${compare_title}:\n${None}\nActual ${compare_title}:\n${actual_int}</arg>
<status status="NOT RUN" start="2024-11-22T13:13:07.892500" elapsed="0.000011"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${None}</arg>
<arg>${actual_int}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:07.892554" elapsed="0.000009"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:07.892275" elapsed="0.000303"/>
</branch>
<branch type="ELSE">
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T13:13:07.892785" level="INFO">
Expected tax_paid:
10.00
Actual tax_paid:
10.0</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T13:13:07.892746" elapsed="0.000055"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T13:13:07.892851" elapsed="0.000055"/>
</kw>
<arg>Expected ${compare_title}:\n${expected_int}\nActual ${compare_title}:\n${actual_int}</arg>
<status status="PASS" start="2024-11-22T13:13:07.892631" elapsed="0.000299"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-11-22T13:13:07.893041" level="INFO">${expected_int} = 10.00</msg>
<var>${expected_int}</var>
<arg>'{:.2f}'.format(float(${expected_int}))</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-11-22T13:13:07.892974" elapsed="0.000075"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-11-22T13:13:07.893162" level="INFO">${actual_int} = 10.00</msg>
<var>${actual_int}</var>
<arg>'{:.2f}'.format(float(${actual_int}))</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-11-22T13:13:07.893096" elapsed="0.000074"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${expected_int}</arg>
<arg>${actual_int}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-11-22T13:13:07.893220" elapsed="0.000070"/>
</kw>
<status status="PASS" start="2024-11-22T13:13:07.892590" elapsed="0.000719"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:07.892269" elapsed="0.001052"/>
</if>
<arg>${item[6]}</arg>
<arg>${sql_response['tax_paid']}</arg>
<arg>tax_paid</arg>
<doc>Normalize the numbers and compare</doc>
<status status="PASS" start="2024-11-22T13:13:07.891822" elapsed="0.001514"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<if>
<branch type="IF" condition="'${expected_int}' == '${EMPTY}'">
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T13:13:07.894255" level="INFO">
Expected brownie_points:
None
Actual brownie_points:
None</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T13:13:07.894216" elapsed="0.000054"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T13:13:07.894313" elapsed="0.000051"/>
</kw>
<arg>Expected ${compare_title}:\n${None}\nActual ${compare_title}:\n${actual_int}</arg>
<status status="PASS" start="2024-11-22T13:13:07.894106" elapsed="0.000282"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${None}</arg>
<arg>${actual_int}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-11-22T13:13:07.894431" elapsed="0.000058"/>
</kw>
<status status="PASS" start="2024-11-22T13:13:07.893880" elapsed="0.000625"/>
</branch>
<branch type="ELSE">
<kw name="Log and Log To Console" owner="generic">
<arg>Expected ${compare_title}:\n${expected_int}\nActual ${compare_title}:\n${actual_int}</arg>
<status status="NOT RUN" start="2024-11-22T13:13:07.894560" elapsed="0.000010"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<var>${expected_int}</var>
<arg>'{:.2f}'.format(float(${expected_int}))</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:07.894611" elapsed="0.000008"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<var>${actual_int}</var>
<arg>'{:.2f}'.format(float(${actual_int}))</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:07.894660" elapsed="0.000007"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${expected_int}</arg>
<arg>${actual_int}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:07.894708" elapsed="0.000009"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:07.894517" elapsed="0.000212"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:07.893875" elapsed="0.000865"/>
</if>
<arg>${item[7]}</arg>
<arg>${sql_response['brownie_points']}</arg>
<arg>brownie_points</arg>
<doc>Normalize the numbers and compare</doc>
<status status="PASS" start="2024-11-22T13:13:07.893406" elapsed="0.001349"/>
</kw>
<var name="${item}">['natid-106', 'Greg', 'MALE', '1996-01-01T23:59:59', '', '10320.00', '10.00', '']</var>
<status status="PASS" start="2024-11-22T13:13:07.872732" elapsed="0.022039"/>
</iter>
<iter>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2024-11-22T13:13:07.895136" level="INFO">${dict} = {'value_natid': 'natid-107'}</msg>
<var>${dict}</var>
<arg>value_natid=${item[0]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2024-11-22T13:13:07.894875" elapsed="0.000271"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<kw name="Connect To Database" owner="DatabaseLibrary">
<msg time="2024-11-22T13:13:07.895482" level="INFO">Looking for configuration file: 'resources/db.cfg'</msg>
<msg time="2024-11-22T13:13:07.895499" level="INFO">Configuration file doesn't exist</msg>
<msg time="2024-11-22T13:13:07.895566" level="INFO">Connect to DB using : mysql.connector.connect(database='testdb', user='user', password=***, host='localhost', port=3306)</msg>
<arg>${DB_API}</arg>
<arg>${DB_NAME}</arg>
<arg>${DB_USER}</arg>
<arg>${DB_PASSWORD}</arg>
<arg>${DB_HOST}</arg>
<arg>${DB_PORT}</arg>
<doc>Creates a database connection using the DB API 2.0 ``db_module`` and the parameters provided.
Along with listed commonly used arguments (`db_name`, `db_host` etc.)
you can set any other DB module specific parameters as key/value pairs.</doc>
<status status="PASS" start="2024-11-22T13:13:07.895315" elapsed="0.008002"/>
</kw>
<kw name="Update SQL Queries With Arguments Dictionary" owner="sql-helper">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-11-22T13:13:07.903754" level="INFO" html="true">Getting file '&lt;a href="file:///Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/object-repo/sql-queries/select_hero_by_natid.sql"&gt;/Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/object-repo/sql-queries/select_hero_by_natid.sql&lt;/a&gt;'.</msg>
<msg time="2024-11-22T13:13:07.903845" level="INFO">${sql_query} = SELECT *
FROM testdb.working_class_heroes
WHERE natid='value_natid';</msg>
<var>${sql_query}</var>
<arg>./object-repo/sql-queries/${sql_file_name}.sql</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-11-22T13:13:07.903629" elapsed="0.000229"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2024-11-22T13:13:07.904360" level="INFO">Argument types are:
&lt;class 'robot.utils.dotdict.DotDict'&gt;
&lt;class 'str'&gt;</msg>
<msg time="2024-11-22T13:13:07.904408" level="FAIL">{'value_natid': 'natid-107'} != </msg>
<arg>${args_dict}</arg>
<arg>${EMPTY}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="FAIL" start="2024-11-22T13:13:07.904016" elapsed="0.000428">{'value_natid': 'natid-107'} != </status>
</kw>
<msg time="2024-11-22T13:13:07.904495" level="INFO">${empty_status} = False</msg>
<var>${empty_status}</var>
<arg>Should Be Equal As Strings</arg>
<arg>${args_dict}</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-11-22T13:13:07.903930" elapsed="0.000573"/>
</kw>
<if>
<branch type="IF" condition="'${empty_status}' == '${False}'">
<if>
<branch type="IF" condition="${args_dict}">
<for flavor="IN">
<iter>
<kw name="Convert To String" owner="BuiltIn">
<msg time="2024-11-22T13:13:07.904828" level="INFO">${args_key_str} = value_natid</msg>
<var>${args_key_str}</var>
<arg>${args_key}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="PASS" start="2024-11-22T13:13:07.904757" elapsed="0.000083"/>
</kw>
<kw name="Convert To String" owner="BuiltIn">
<msg time="2024-11-22T13:13:07.904969" level="INFO">${args_value_str} = natid-107</msg>
<var>${args_value_str}</var>
<arg>${args_dict}[${args_key_str}]</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="PASS" start="2024-11-22T13:13:07.904895" elapsed="0.000083"/>
</kw>
<kw name="Replace String" owner="String">
<msg time="2024-11-22T13:13:07.905107" level="INFO">${sql_query} = SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-107';</msg>
<var>${sql_query}</var>
<arg>${sql_query}</arg>
<arg>${args_key_str}</arg>
<arg>${args_value_str}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="PASS" start="2024-11-22T13:13:07.905029" elapsed="0.000087"/>
</kw>
<var name="${args_key}">value_natid</var>
<status status="PASS" start="2024-11-22T13:13:07.904703" elapsed="0.000431"/>
</iter>
<var>${args_key}</var>
<value>@{args_dict}</value>
<status status="PASS" start="2024-11-22T13:13:07.904645" elapsed="0.000505"/>
</for>
<status status="PASS" start="2024-11-22T13:13:07.904609" elapsed="0.000559"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:07.904604" elapsed="0.000578"/>
</if>
<status status="PASS" start="2024-11-22T13:13:07.904543" elapsed="0.000647"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:07.904531" elapsed="0.000669"/>
</if>
<return>
<value>${sql_query}</value>
<status status="PASS" start="2024-11-22T13:13:07.905211" elapsed="0.000018"/>
</return>
<msg time="2024-11-22T13:13:07.905281" level="INFO">${updated_sql_query} = SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-107';</msg>
<var>${updated_sql_query}</var>
<arg>${sql_file_name}</arg>
<arg>${args_dict}</arg>
<status status="PASS" start="2024-11-22T13:13:07.903464" elapsed="0.001826"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-11-22T13:13:07.905495" level="FAIL">'SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-107';' does not contain 'delete'</msg>
<arg>${updated_sql_query}</arg>
<arg>DELETE</arg>
<arg>ignore_case=${True}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-11-22T13:13:07.905398" elapsed="0.000126">'SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-107';' does not contain 'delete'</status>
</kw>
<msg time="2024-11-22T13:13:07.905560" level="INFO">${delete_status} = False</msg>
<var>${delete_status}</var>
<arg>Should Contain</arg>
<arg>${updated_sql_query}</arg>
<arg>DELETE</arg>
<arg>ignore_case=${True}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-11-22T13:13:07.905339" elapsed="0.000229"/>
</kw>
<if>
<branch type="IF" condition="'${delete_status}' == '${True}'">
<kw name="Execute Sql String" owner="DatabaseLibrary">
<var>${json_response}</var>
<arg>${updated_sql_query}</arg>
<doc>Executes the ``sql_string`` as a single SQL command.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:07.905679" elapsed="0.000009"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:07.905607" elapsed="0.000096"/>
</branch>
<branch type="ELSE">
<kw name="Query" owner="DatabaseLibrary">
<msg time="2024-11-22T13:13:07.906204" level="INFO" html="true">Executing sql:&lt;br&gt;&lt;code style="font-weight: bold;"&gt;SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-107';&lt;/code&gt;</msg>
<msg time="2024-11-22T13:13:07.907041" level="INFO" html="true">&lt;div style="max-width: 100%; overflow-x: auto;"&gt;&lt;table style="width: auto; border-collapse: collapse; border: 2px solid rgb(140 140 140)"&gt;&lt;caption style="text-align: left; font-weight: bold; padding: 5px;"&gt;Query returned 1 rows&lt;/caption&gt;&lt;tr&gt;&lt;th scope="col" style="background-color: #d6ecd4; border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;Row&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;id&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;created_at&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;create_by&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;updated_at&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;updated_by&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;birth_date&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;brownie_points&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;death_date&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;gender&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;name&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;natid&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;salary&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;tax_paid&lt;/th&gt;&lt;/tr&gt;&lt;tr style="background-color: #eee;"&gt;&lt;th scope="row" style="background-color: #d6ecd4;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;0&lt;/th&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;79006302-b053-4940-85a7-6dd475d36317&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;2024-11-22 13:13:07.349221&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;SYSTEM&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;2024-11-22 13:13:07.349221&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;SYSTEM&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;1996-01-01 23:59:59&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;None&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;None&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;FEMALE&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;Mary Molo&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;natid-107&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;1000.5&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;10.28&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;</msg>
<msg time="2024-11-22T13:13:07.909024" level="INFO">${json_response} = [{'id': '79006302-b053-4940-85a7-6dd475d36317', 'created_at': datetime.datetime(2024, 11, 22, 13, 13, 7, 349221), 'create_by': 'SYSTEM', 'updated_at': datetime.datetime(2024, 11, 22, 13, 13, 7, 349221...</msg>
<var>${json_response}</var>
<arg>${updated_sql_query}</arg>
<arg>return_dict=${True}</arg>
<doc>Runs a query with the ``select_statement`` and returns the result as list of rows.
The type of row values depends on the database module -
usually they are tuples or tuple-like objects.</doc>
<status status="PASS" start="2024-11-22T13:13:07.905752" elapsed="0.003284"/>
</kw>
<status status="PASS" start="2024-11-22T13:13:07.905714" elapsed="0.003341"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:07.905590" elapsed="0.003478"/>
</if>
<kw name="Disconnect From Database" owner="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<status status="PASS" start="2024-11-22T13:13:07.909113" elapsed="0.000087"/>
</kw>
<return>
<value>${json_response}</value>
<status status="PASS" start="2024-11-22T13:13:07.909226" elapsed="0.000016"/>
</return>
<msg time="2024-11-22T13:13:07.909304" level="INFO">${sql_response} = [{'id': '79006302-b053-4940-85a7-6dd475d36317', 'created_at': datetime.datetime(2024, 11, 22, 13, 13, 7, 349221), 'create_by': 'SYSTEM', 'updated_at': datetime.datetime(2024, 11, 22, 13, 13, 7, 349221...</msg>
<var>${sql_response}</var>
<arg>select_hero_by_natid</arg>
<arg>${dict}</arg>
<status status="PASS" start="2024-11-22T13:13:07.895218" elapsed="0.014099"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-11-22T13:13:07.909443" level="INFO">${sql_response} = {'id': '79006302-b053-4940-85a7-6dd475d36317', 'created_at': datetime.datetime(2024, 11, 22, 13, 13, 7, 349221), 'create_by': 'SYSTEM', 'updated_at': datetime.datetime(2024, 11, 22, 13, 13, 7, 349221)...</msg>
<var>${sql_response}</var>
<arg>${sql_response}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-11-22T13:13:07.909377" elapsed="0.000076"/>
</kw>
<kw name="Compare String" owner="generic">
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T13:13:07.910229" level="INFO">
Expected natid:
natid-107
Actual natid:
natid-107</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T13:13:07.910179" elapsed="0.000066"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T13:13:07.910290" elapsed="0.000053"/>
</kw>
<arg>Expected ${compare_title}:\n${expected_string}\nActual ${compare_title}:\n${actual_string}</arg>
<status status="PASS" start="2024-11-22T13:13:07.910060" elapsed="0.000307"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${expected_string}</arg>
<arg>${actual_string}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-11-22T13:13:07.910411" elapsed="0.000063"/>
</kw>
<arg>${item[0]}</arg>
<arg>${sql_response['natid']}</arg>
<arg>natid</arg>
<doc>Compare Strings</doc>
<status status="PASS" start="2024-11-22T13:13:07.909513" elapsed="0.000983"/>
</kw>
<kw name="Compare String" owner="generic">
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T13:13:07.911194" level="INFO">
Expected name:
Mary Molo
Actual name:
Mary Molo</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T13:13:07.911139" elapsed="0.000076"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T13:13:07.911260" elapsed="0.000054"/>
</kw>
<arg>Expected ${compare_title}:\n${expected_string}\nActual ${compare_title}:\n${actual_string}</arg>
<status status="PASS" start="2024-11-22T13:13:07.911015" elapsed="0.000322"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${expected_string}</arg>
<arg>${actual_string}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-11-22T13:13:07.911423" elapsed="0.000061"/>
</kw>
<arg>${item[1]}</arg>
<arg>${sql_response['name']}</arg>
<arg>name</arg>
<doc>Compare Strings</doc>
<status status="PASS" start="2024-11-22T13:13:07.910546" elapsed="0.000961"/>
</kw>
<kw name="Compare String" owner="generic">
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T13:13:07.912303" level="INFO">
Expected gender:
FEMALE
Actual gender:
FEMALE</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T13:13:07.912259" elapsed="0.000059"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T13:13:07.912364" elapsed="0.000051"/>
</kw>
<arg>Expected ${compare_title}:\n${expected_string}\nActual ${compare_title}:\n${actual_string}</arg>
<status status="PASS" start="2024-11-22T13:13:07.912048" elapsed="0.000391"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${expected_string}</arg>
<arg>${actual_string}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-11-22T13:13:07.912485" elapsed="0.000060"/>
</kw>
<arg>${item[2]}</arg>
<arg>${sql_response['gender']}</arg>
<arg>gender</arg>
<doc>Compare Strings</doc>
<status status="PASS" start="2024-11-22T13:13:07.911574" elapsed="0.000994"/>
</kw>
<kw name="Compare Date" owner="generic">
<if>
<branch type="IF" condition="'${expected_date}' == '${EMPTY}'">
<kw name="Log and Log To Console" owner="generic">
<arg>Expected ${compare_title}:\n${None}\nActual ${compare_title}:\n${actual_date}</arg>
<status status="NOT RUN" start="2024-11-22T13:13:07.913333" elapsed="0.000011"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${None}</arg>
<arg>${actual_date}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:07.913387" elapsed="0.000008"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:07.913107" elapsed="0.000302"/>
</branch>
<branch type="ELSE">
<kw name="Convert Date" owner="DateTime">
<msg time="2024-11-22T13:13:07.913566" level="INFO">${expected_date} = 1996-01-01 23:59:59.000000</msg>
<var>${expected_date}</var>
<arg>${expected_date}</arg>
<arg>result_format=%Y-%m-%d %H:%M:%S.%f</arg>
<doc>Converts between supported `date formats`.</doc>
<status status="PASS" start="2024-11-22T13:13:07.913465" elapsed="0.000110"/>
</kw>
<kw name="Convert Date" owner="DateTime">
<msg time="2024-11-22T13:13:07.913692" level="INFO">${actual_date} = 1996-01-01 23:59:59.000000</msg>
<var>${actual_date}</var>
<arg>${actual_date}</arg>
<arg>result_format=%Y-%m-%d %H:%M:%S.%f</arg>
<doc>Converts between supported `date formats`.</doc>
<status status="PASS" start="2024-11-22T13:13:07.913623" elapsed="0.000078"/>
</kw>
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T13:13:07.913926" level="INFO">
Expected birth_date:
1996-01-01 23:59:59.000000
Actual birth_date:
1996-01-01 23:59:59.000000</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T13:13:07.913870" elapsed="0.000070"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T13:13:07.913983" elapsed="0.000047"/>
</kw>
<arg>Expected ${compare_title}:\n${expected_date}\nActual ${compare_title}:\n${actual_date}</arg>
<status status="PASS" start="2024-11-22T13:13:07.913749" elapsed="0.000304"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${expected_date}</arg>
<arg>${actual_date}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-11-22T13:13:07.914098" elapsed="0.000059"/>
</kw>
<status status="PASS" start="2024-11-22T13:13:07.913421" elapsed="0.000752"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:07.913101" elapsed="0.001083"/>
</if>
<arg>${item[3]}</arg>
<arg>${sql_response['birth_date']}</arg>
<arg>birth_date</arg>
<doc>Format date and compare</doc>
<status status="PASS" start="2024-11-22T13:13:07.912639" elapsed="0.001560"/>
</kw>
<kw name="Compare Date" owner="generic">
<if>
<branch type="IF" condition="'${expected_date}' == '${EMPTY}'">
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T13:13:07.915105" level="INFO">
Expected death_date:
None
Actual death_date:
None</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T13:13:07.915066" elapsed="0.000054"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T13:13:07.915163" elapsed="0.000051"/>
</kw>
<arg>Expected ${compare_title}:\n${None}\nActual ${compare_title}:\n${actual_date}</arg>
<status status="PASS" start="2024-11-22T13:13:07.914952" elapsed="0.000286"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${None}</arg>
<arg>${actual_date}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-11-22T13:13:07.915281" elapsed="0.000058"/>
</kw>
<status status="PASS" start="2024-11-22T13:13:07.914714" elapsed="0.000642"/>
</branch>
<branch type="ELSE">
<kw name="Convert Date" owner="DateTime">
<var>${expected_date}</var>
<arg>${expected_date}</arg>
<arg>result_format=%Y-%m-%d %H:%M:%S.%f</arg>
<doc>Converts between supported `date formats`.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:07.915409" elapsed="0.000010"/>
</kw>
<kw name="Convert Date" owner="DateTime">
<var>${actual_date}</var>
<arg>${actual_date}</arg>
<arg>result_format=%Y-%m-%d %H:%M:%S.%f</arg>
<doc>Converts between supported `date formats`.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:07.915462" elapsed="0.000008"/>
</kw>
<kw name="Log and Log To Console" owner="generic">
<arg>Expected ${compare_title}:\n${expected_date}\nActual ${compare_title}:\n${actual_date}</arg>
<status status="NOT RUN" start="2024-11-22T13:13:07.915515" elapsed="0.000009"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${expected_date}</arg>
<arg>${actual_date}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:07.915567" elapsed="0.000009"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:07.915368" elapsed="0.000221"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:07.914708" elapsed="0.000893"/>
</if>
<arg>${item[4]}</arg>
<arg>${sql_response['death_date']}</arg>
<arg>death_date</arg>
<doc>Format date and compare</doc>
<status status="PASS" start="2024-11-22T13:13:07.914268" elapsed="0.001349"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<if>
<branch type="IF" condition="'${expected_int}' == '${EMPTY}'">
<kw name="Log and Log To Console" owner="generic">
<arg>Expected ${compare_title}:\n${None}\nActual ${compare_title}:\n${actual_int}</arg>
<status status="NOT RUN" start="2024-11-22T13:13:07.916377" elapsed="0.000010"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${None}</arg>
<arg>${actual_int}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:07.916430" elapsed="0.000008"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:07.916124" elapsed="0.000329"/>
</branch>
<branch type="ELSE">
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T13:13:07.916660" level="INFO">
Expected salary:
1000.50
Actual salary:
1000.5</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T13:13:07.916620" elapsed="0.000095"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T13:13:07.916760" elapsed="0.000051"/>
</kw>
<arg>Expected ${compare_title}:\n${expected_int}\nActual ${compare_title}:\n${actual_int}</arg>
<status status="PASS" start="2024-11-22T13:13:07.916506" elapsed="0.000331"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-11-22T13:13:07.916951" level="INFO">${expected_int} = 1000.50</msg>
<var>${expected_int}</var>
<arg>'{:.2f}'.format(float(${expected_int}))</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-11-22T13:13:07.916880" elapsed="0.000080"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-11-22T13:13:07.917062" level="INFO">${actual_int} = 1000.50</msg>
<var>${actual_int}</var>
<arg>'{:.2f}'.format(float(${actual_int}))</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-11-22T13:13:07.917004" elapsed="0.000066"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${expected_int}</arg>
<arg>${actual_int}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-11-22T13:13:07.917115" elapsed="0.000057"/>
</kw>
<status status="PASS" start="2024-11-22T13:13:07.916465" elapsed="0.000722"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:07.916118" elapsed="0.001081"/>
</if>
<arg>${item[5]}</arg>
<arg>${sql_response['salary']}</arg>
<arg>salary</arg>
<doc>Normalize the numbers and compare</doc>
<status status="PASS" start="2024-11-22T13:13:07.915691" elapsed="0.001523"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<if>
<branch type="IF" condition="'${expected_int}' == '${EMPTY}'">
<kw name="Log and Log To Console" owner="generic">
<arg>Expected ${compare_title}:\n${None}\nActual ${compare_title}:\n${actual_int}</arg>
<status status="NOT RUN" start="2024-11-22T13:13:07.917984" elapsed="0.000010"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${None}</arg>
<arg>${actual_int}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:07.918035" elapsed="0.000008"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:07.917755" elapsed="0.000302"/>
</branch>
<branch type="ELSE">
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T13:13:07.918321" level="INFO">
Expected tax_paid:
10.28
Actual tax_paid:
10.28</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T13:13:07.918282" elapsed="0.000054"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T13:13:07.918379" elapsed="0.000052"/>
</kw>
<arg>Expected ${compare_title}:\n${expected_int}\nActual ${compare_title}:\n${actual_int}</arg>
<status status="PASS" start="2024-11-22T13:13:07.918107" elapsed="0.000349"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-11-22T13:13:07.918600" level="INFO">${expected_int} = 10.28</msg>
<var>${expected_int}</var>
<arg>'{:.2f}'.format(float(${expected_int}))</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-11-22T13:13:07.918517" elapsed="0.000093"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-11-22T13:13:07.918709" level="INFO">${actual_int} = 10.28</msg>
<var>${actual_int}</var>
<arg>'{:.2f}'.format(float(${actual_int}))</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-11-22T13:13:07.918652" elapsed="0.000065"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${expected_int}</arg>
<arg>${actual_int}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-11-22T13:13:07.918759" elapsed="0.000055"/>
</kw>
<status status="PASS" start="2024-11-22T13:13:07.918069" elapsed="0.000761"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:07.917747" elapsed="0.001094"/>
</if>
<arg>${item[6]}</arg>
<arg>${sql_response['tax_paid']}</arg>
<arg>tax_paid</arg>
<doc>Normalize the numbers and compare</doc>
<status status="PASS" start="2024-11-22T13:13:07.917282" elapsed="0.001574"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<if>
<branch type="IF" condition="'${expected_int}' == '${EMPTY}'">
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T13:13:07.919706" level="INFO">
Expected brownie_points:
None
Actual brownie_points:
None</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T13:13:07.919666" elapsed="0.000058"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T13:13:07.919769" elapsed="0.000053"/>
</kw>
<arg>Expected ${compare_title}:\n${None}\nActual ${compare_title}:\n${actual_int}</arg>
<status status="PASS" start="2024-11-22T13:13:07.919556" elapsed="0.000290"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${None}</arg>
<arg>${actual_int}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-11-22T13:13:07.919889" elapsed="0.000058"/>
</kw>
<status status="PASS" start="2024-11-22T13:13:07.919345" elapsed="0.000618"/>
</branch>
<branch type="ELSE">
<kw name="Log and Log To Console" owner="generic">
<arg>Expected ${compare_title}:\n${expected_int}\nActual ${compare_title}:\n${actual_int}</arg>
<status status="NOT RUN" start="2024-11-22T13:13:07.920016" elapsed="0.000010"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<var>${expected_int}</var>
<arg>'{:.2f}'.format(float(${expected_int}))</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:07.920066" elapsed="0.000007"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<var>${actual_int}</var>
<arg>'{:.2f}'.format(float(${actual_int}))</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:07.920112" elapsed="0.000007"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${expected_int}</arg>
<arg>${actual_int}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:07.920158" elapsed="0.000007"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:07.919975" elapsed="0.000203"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:07.919339" elapsed="0.000849"/>
</if>
<arg>${item[7]}</arg>
<arg>${sql_response['brownie_points']}</arg>
<arg>brownie_points</arg>
<doc>Normalize the numbers and compare</doc>
<status status="PASS" start="2024-11-22T13:13:07.918923" elapsed="0.001280"/>
</kw>
<var name="${item}">['natid-107', 'Mary Molo', 'FEMALE', '1996-01-01T23:59:59', '', '1000.50', '10.28', '']</var>
<status status="PASS" start="2024-11-22T13:13:07.894822" elapsed="0.025396"/>
</iter>
<var>${item}</var>
<value>@{csv_list}</value>
<status status="PASS" start="2024-11-22T13:13:07.682662" elapsed="0.237574"/>
</for>
<arg>${positive_test_data_path}</arg>
<doc>Verify uploaded heroes in DB</doc>
<status status="PASS" start="2024-11-22T13:13:07.681770" elapsed="0.238492"/>
</kw>
<kw name="Common Test Teardown" owner="generic" type="TEARDOWN">
<kw name="Capture Page Screenshot" owner="SeleniumLibrary">
<msg time="2024-11-22T13:13:08.013191" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="screenshots/Test%20Case%201%20-%20Clerk%20Dashboard%20Create%20Heroes%20Upload%20CSV%20File%20-%20Positive.png"&gt;&lt;img src="screenshots/Test%20Case%201%20-%20Clerk%20Dashboard%20Create%20Heroes%20Upload%20CSV%20File%20-%20Positive.png" width="800px"&gt;&lt;/a&gt;</msg>
<arg>${OUTPUT_DIR}/screenshots/${TEST NAME}.png</arg>
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<status status="PASS" start="2024-11-22T13:13:07.920475" elapsed="0.092820"/>
</kw>
<kw name="Close Browser" owner="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" start="2024-11-22T13:13:08.013395" elapsed="0.086233"/>
</kw>
<status status="PASS" start="2024-11-22T13:13:07.920377" elapsed="0.179324"/>
</kw>
<status status="PASS" start="2024-11-22T13:13:00.921287" elapsed="7.178476"/>
</test>
<test id="s1-t2" name="Test Case 2 - Clerk Dashboard Create Heroes Upload CSV File - Negative - Partial Data Wrong Format" line="22">
<kw name="Open Browser And Navigate To Login Page" owner="generic">
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-11-22T13:13:08.100444" level="INFO">${chrome_options} = &lt;selenium.webdriver.chrome.options.Options object at 0x102c4a590&gt;</msg>
<var>${chrome_options}</var>
<arg>sys.modules['selenium.webdriver'].ChromeOptions()</arg>
<arg>sys, selenium.webdriver</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-11-22T13:13:08.100279" elapsed="0.000182"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2024-11-22T13:13:08.100633" level="INFO">${prefs} = {'download.default_directory': '/Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/reports/downloads'}</msg>
<var>${prefs}</var>
<arg>download.default_directory=${DOWNLOAD_DIR}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2024-11-22T13:13:08.100532" elapsed="0.000112"/>
</kw>
<kw name="Call Method" owner="BuiltIn">
<arg>${chrome_options}</arg>
<arg>add_experimental_option</arg>
<arg>prefs</arg>
<arg>${prefs}</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="PASS" start="2024-11-22T13:13:08.100692" elapsed="0.000056"/>
</kw>
<kw name="Create Webdriver" owner="SeleniumLibrary">
<msg time="2024-11-22T13:13:08.100885" level="INFO">Creating an instance of the Chrome WebDriver.</msg>
<arg>${execution_profile_chrome_name}</arg>
<arg>options=${chrome_options}</arg>
<doc>Creates an instance of Selenium WebDriver.</doc>
<status status="PASS" start="2024-11-22T13:13:08.100805" elapsed="1.008125"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Navigating to ${login_page}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T13:13:09.109211" elapsed="0.000333"/>
</kw>
<kw name="Go To" owner="SeleniumLibrary">
<msg time="2024-11-22T13:13:09.109749" level="INFO">Opening url 'http://localhost:9997/login'</msg>
<arg>${login_page}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<status status="PASS" start="2024-11-22T13:13:09.109657" elapsed="0.134659"/>
</kw>
<status status="PASS" start="2024-11-22T13:13:08.100162" elapsed="1.144299"/>
</kw>
<kw name="Setup Clerk Clear DB Data" owner="clerk">
<kw name="Read Csv File To List" owner="CSVLibrary">
<msg time="2024-11-22T13:13:09.245558" level="INFO">${csv_list} = [['natid-150', 'William Chu', 'MALE', '1996-01-01T23:59:59', '', '1000.12', '10.00', ''], ['natid-151', 'Christopher', 'MALE', '1996-01-01T23:59:59', '', '1000.00', '10.00', ''], ['natid-152', 'Hanks1...</msg>
<var>${csv_list}</var>
<arg>${test_data_path}</arg>
<doc>Read CSV file and return its content as a Python list of tuples.</doc>
<status status="PASS" start="2024-11-22T13:13:09.245069" elapsed="0.000507"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2024-11-22T13:13:09.246309" level="INFO">${cleanup_dict} = {'value_natid': 'natid-150'}</msg>
<var>${cleanup_dict}</var>
<arg>value_natid=${item[0]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2024-11-22T13:13:09.245799" elapsed="0.000526"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<kw name="Connect To Database" owner="DatabaseLibrary">
<msg time="2024-11-22T13:13:09.247641" level="INFO">Looking for configuration file: 'resources/db.cfg'</msg>
<msg time="2024-11-22T13:13:09.247670" level="INFO">Configuration file doesn't exist</msg>
<msg time="2024-11-22T13:13:09.247771" level="INFO">Connect to DB using : mysql.connector.connect(database='testdb', user='user', password=***, host='localhost', port=3306)</msg>
<arg>${DB_API}</arg>
<arg>${DB_NAME}</arg>
<arg>${DB_USER}</arg>
<arg>${DB_PASSWORD}</arg>
<arg>${DB_HOST}</arg>
<arg>${DB_PORT}</arg>
<doc>Creates a database connection using the DB API 2.0 ``db_module`` and the parameters provided.
Along with listed commonly used arguments (`db_name`, `db_host` etc.)
you can set any other DB module specific parameters as key/value pairs.</doc>
<status status="PASS" start="2024-11-22T13:13:09.246616" elapsed="0.039872"/>
</kw>
<kw name="Update SQL Queries With Arguments Dictionary" owner="sql-helper">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-11-22T13:13:09.287396" level="INFO" html="true">Getting file '&lt;a href="file:///Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/object-repo/sql-queries/delete_hero_by_natid.sql"&gt;/Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/object-repo/sql-queries/delete_hero_by_natid.sql&lt;/a&gt;'.</msg>
<msg time="2024-11-22T13:13:09.287595" level="INFO">${sql_query} = DELETE FROM testdb.working_class_heroes
WHERE natid = "value_natid"</msg>
<var>${sql_query}</var>
<arg>./object-repo/sql-queries/${sql_file_name}.sql</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-11-22T13:13:09.286956" elapsed="0.000650"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2024-11-22T13:13:09.288128" level="INFO">Argument types are:
&lt;class 'robot.utils.dotdict.DotDict'&gt;
&lt;class 'str'&gt;</msg>
<msg time="2024-11-22T13:13:09.288368" level="FAIL">{'value_natid': 'natid-150'} != </msg>
<arg>${args_dict}</arg>
<arg>${EMPTY}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="FAIL" start="2024-11-22T13:13:09.287782" elapsed="0.000799">{'value_natid': 'natid-150'} != </status>
</kw>
<msg time="2024-11-22T13:13:09.288631" level="INFO">${empty_status} = False</msg>
<var>${empty_status}</var>
<arg>Should Be Equal As Strings</arg>
<arg>${args_dict}</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-11-22T13:13:09.287681" elapsed="0.000960"/>
</kw>
<if>
<branch type="IF" condition="'${empty_status}' == '${False}'">
<if>
<branch type="IF" condition="${args_dict}">
<for flavor="IN">
<iter>
<kw name="Convert To String" owner="BuiltIn">
<msg time="2024-11-22T13:13:09.289206" level="INFO">${args_key_str} = value_natid</msg>
<var>${args_key_str}</var>
<arg>${args_key}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="PASS" start="2024-11-22T13:13:09.289107" elapsed="0.000109"/>
</kw>
<kw name="Convert To String" owner="BuiltIn">
<msg time="2024-11-22T13:13:09.289338" level="INFO">${args_value_str} = natid-150</msg>
<var>${args_value_str}</var>
<arg>${args_dict}[${args_key_str}]</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="PASS" start="2024-11-22T13:13:09.289269" elapsed="0.000078"/>
</kw>
<kw name="Replace String" owner="String">
<msg time="2024-11-22T13:13:09.289480" level="INFO">${sql_query} = DELETE FROM testdb.working_class_heroes
WHERE natid = "natid-150"</msg>
<var>${sql_query}</var>
<arg>${sql_query}</arg>
<arg>${args_key_str}</arg>
<arg>${args_value_str}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="PASS" start="2024-11-22T13:13:09.289400" elapsed="0.000090"/>
</kw>
<var name="${args_key}">value_natid</var>
<status status="PASS" start="2024-11-22T13:13:09.289041" elapsed="0.058802"/>
</iter>
<var>${args_key}</var>
<value>@{args_dict}</value>
<status status="PASS" start="2024-11-22T13:13:09.288979" elapsed="0.058922"/>
</for>
<status status="PASS" start="2024-11-22T13:13:09.288923" elapsed="0.059044"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:09.288908" elapsed="0.059090"/>
</if>
<status status="PASS" start="2024-11-22T13:13:09.288697" elapsed="0.059318"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:09.288679" elapsed="0.059351"/>
</if>
<return>
<value>${sql_query}</value>
<status status="PASS" start="2024-11-22T13:13:09.348053" elapsed="0.000033"/>
</return>
<msg time="2024-11-22T13:13:09.348181" level="INFO">${updated_sql_query} = DELETE FROM testdb.working_class_heroes
WHERE natid = "natid-150"</msg>
<var>${updated_sql_query}</var>
<arg>${sql_file_name}</arg>
<arg>${args_dict}</arg>
<status status="PASS" start="2024-11-22T13:13:09.286749" elapsed="0.061444"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<arg>${updated_sql_query}</arg>
<arg>DELETE</arg>
<arg>ignore_case=${True}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-11-22T13:13:09.348382" elapsed="0.000124"/>
</kw>
<msg time="2024-11-22T13:13:09.348545" level="INFO">${delete_status} = True</msg>
<var>${delete_status}</var>
<arg>Should Contain</arg>
<arg>${updated_sql_query}</arg>
<arg>DELETE</arg>
<arg>ignore_case=${True}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-11-22T13:13:09.348288" elapsed="0.000267"/>
</kw>
<if>
<branch type="IF" condition="'${delete_status}' == '${True}'">
<kw name="Execute Sql String" owner="DatabaseLibrary">
<msg time="2024-11-22T13:13:09.350261" level="INFO" html="true">Executing sql:&lt;br&gt;&lt;code style="font-weight: bold;"&gt;DELETE FROM testdb.working_class_heroes
WHERE natid = "natid-150"&lt;/code&gt;</msg>
<msg time="2024-11-22T13:13:09.449829" level="INFO">${json_response} = None</msg>
<var>${json_response}</var>
<arg>${updated_sql_query}</arg>
<doc>Executes the ``sql_string`` as a single SQL command.</doc>
<status status="PASS" start="2024-11-22T13:13:09.348702" elapsed="0.101184"/>
</kw>
<status status="PASS" start="2024-11-22T13:13:09.348593" elapsed="0.101378"/>
</branch>
<branch type="ELSE">
<kw name="Query" owner="DatabaseLibrary">
<var>${json_response}</var>
<arg>${updated_sql_query}</arg>
<arg>return_dict=${True}</arg>
<doc>Runs a query with the ``select_statement`` and returns the result as list of rows.
The type of row values depends on the database module -
usually they are tuples or tuple-like objects.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:09.450212" elapsed="0.000024"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:09.450012" elapsed="0.000260"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:09.348584" elapsed="0.101710"/>
</if>
<kw name="Disconnect From Database" owner="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<status status="PASS" start="2024-11-22T13:13:09.450380" elapsed="0.000237"/>
</kw>
<return>
<value>${json_response}</value>
<status status="PASS" start="2024-11-22T13:13:09.450661" elapsed="0.000056"/>
</return>
<arg>delete_hero_by_natid</arg>
<arg>${cleanup_dict}</arg>
<status status="PASS" start="2024-11-22T13:13:09.246456" elapsed="0.204364"/>
</kw>
<var name="${item}">['natid-150', 'William Chu', 'MALE', '1996-01-01T23:59:59', '', '1000.12', '10.00', '']</var>
<status status="PASS" start="2024-11-22T13:13:09.245719" elapsed="0.205140"/>
</iter>
<iter>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2024-11-22T13:13:09.451836" level="INFO">${cleanup_dict} = {'value_natid': 'natid-151'}</msg>
<var>${cleanup_dict}</var>
<arg>value_natid=${item[0]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2024-11-22T13:13:09.451068" elapsed="0.000798"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<kw name="Connect To Database" owner="DatabaseLibrary">
<msg time="2024-11-22T13:13:09.452612" level="INFO">Looking for configuration file: 'resources/db.cfg'</msg>
<msg time="2024-11-22T13:13:09.452652" level="INFO">Configuration file doesn't exist</msg>
<msg time="2024-11-22T13:13:09.452796" level="INFO">Connect to DB using : mysql.connector.connect(database='testdb', user='user', password=***, host='localhost', port=3306)</msg>
<arg>${DB_API}</arg>
<arg>${DB_NAME}</arg>
<arg>${DB_USER}</arg>
<arg>${DB_PASSWORD}</arg>
<arg>${DB_HOST}</arg>
<arg>${DB_PORT}</arg>
<doc>Creates a database connection using the DB API 2.0 ``db_module`` and the parameters provided.
Along with listed commonly used arguments (`db_name`, `db_host` etc.)
you can set any other DB module specific parameters as key/value pairs.</doc>
<status status="PASS" start="2024-11-22T13:13:09.452368" elapsed="0.014581"/>
</kw>
<kw name="Update SQL Queries With Arguments Dictionary" owner="sql-helper">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-11-22T13:13:09.467640" level="INFO" html="true">Getting file '&lt;a href="file:///Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/object-repo/sql-queries/delete_hero_by_natid.sql"&gt;/Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/object-repo/sql-queries/delete_hero_by_natid.sql&lt;/a&gt;'.</msg>
<msg time="2024-11-22T13:13:09.467760" level="INFO">${sql_query} = DELETE FROM testdb.working_class_heroes
WHERE natid = "value_natid"</msg>
<var>${sql_query}</var>
<arg>./object-repo/sql-queries/${sql_file_name}.sql</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-11-22T13:13:09.467465" elapsed="0.000309"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2024-11-22T13:13:09.468510" level="INFO">Argument types are:
&lt;class 'robot.utils.dotdict.DotDict'&gt;
&lt;class 'str'&gt;</msg>
<msg time="2024-11-22T13:13:09.468592" level="FAIL">{'value_natid': 'natid-151'} != </msg>
<arg>${args_dict}</arg>
<arg>${EMPTY}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="FAIL" start="2024-11-22T13:13:09.467979" elapsed="0.000666">{'value_natid': 'natid-151'} != </status>
</kw>
<msg time="2024-11-22T13:13:09.468712" level="INFO">${empty_status} = False</msg>
<var>${empty_status}</var>
<arg>Should Be Equal As Strings</arg>
<arg>${args_dict}</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-11-22T13:13:09.467867" elapsed="0.000857"/>
</kw>
<if>
<branch type="IF" condition="'${empty_status}' == '${False}'">
<if>
<branch type="IF" condition="${args_dict}">
<for flavor="IN">
<iter>
<kw name="Convert To String" owner="BuiltIn">
<msg time="2024-11-22T13:13:09.469363" level="INFO">${args_key_str} = value_natid</msg>
<var>${args_key_str}</var>
<arg>${args_key}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="PASS" start="2024-11-22T13:13:09.469083" elapsed="0.000294"/>
</kw>
<kw name="Convert To String" owner="BuiltIn">
<msg time="2024-11-22T13:13:09.469550" level="INFO">${args_value_str} = natid-151</msg>
<var>${args_value_str}</var>
<arg>${args_dict}[${args_key_str}]</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="PASS" start="2024-11-22T13:13:09.469452" elapsed="0.000111"/>
</kw>
<kw name="Replace String" owner="String">
<msg time="2024-11-22T13:13:09.469737" level="INFO">${sql_query} = DELETE FROM testdb.working_class_heroes
WHERE natid = "natid-151"</msg>
<var>${sql_query}</var>
<arg>${sql_query}</arg>
<arg>${args_key_str}</arg>
<arg>${args_value_str}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="PASS" start="2024-11-22T13:13:09.469634" elapsed="0.000116"/>
</kw>
<var name="${args_key}">value_natid</var>
<status status="PASS" start="2024-11-22T13:13:09.469011" elapsed="0.009813"/>
</iter>
<var>${args_key}</var>
<value>@{args_dict}</value>
<status status="PASS" start="2024-11-22T13:13:09.468932" elapsed="0.009939"/>
</for>
<status status="PASS" start="2024-11-22T13:13:09.468888" elapsed="0.010013"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:09.468881" elapsed="0.010040"/>
</if>
<status status="PASS" start="2024-11-22T13:13:09.468783" elapsed="0.010152"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:09.468765" elapsed="0.010183"/>
</if>
<return>
<value>${sql_query}</value>
<status status="PASS" start="2024-11-22T13:13:09.478971" elapsed="0.000028"/>
</return>
<msg time="2024-11-22T13:13:09.479085" level="INFO">${updated_sql_query} = DELETE FROM testdb.working_class_heroes
WHERE natid = "natid-151"</msg>
<var>${updated_sql_query}</var>
<arg>${sql_file_name}</arg>
<arg>${args_dict}</arg>
<status status="PASS" start="2024-11-22T13:13:09.467213" elapsed="0.011885"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<arg>${updated_sql_query}</arg>
<arg>DELETE</arg>
<arg>ignore_case=${True}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-11-22T13:13:09.479287" elapsed="0.000165"/>
</kw>
<msg time="2024-11-22T13:13:09.479495" level="INFO">${delete_status} = True</msg>
<var>${delete_status}</var>
<arg>Should Contain</arg>
<arg>${updated_sql_query}</arg>
<arg>DELETE</arg>
<arg>ignore_case=${True}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-11-22T13:13:09.479192" elapsed="0.000314"/>
</kw>
<if>
<branch type="IF" condition="'${delete_status}' == '${True}'">
<kw name="Execute Sql String" owner="DatabaseLibrary">
<msg time="2024-11-22T13:13:09.480695" level="INFO" html="true">Executing sql:&lt;br&gt;&lt;code style="font-weight: bold;"&gt;DELETE FROM testdb.working_class_heroes
WHERE natid = "natid-151"&lt;/code&gt;</msg>
<msg time="2024-11-22T13:13:09.571648" level="INFO">${json_response} = None</msg>
<var>${json_response}</var>
<arg>${updated_sql_query}</arg>
<doc>Executes the ``sql_string`` as a single SQL command.</doc>
<status status="PASS" start="2024-11-22T13:13:09.479672" elapsed="0.092026"/>
</kw>
<status status="PASS" start="2024-11-22T13:13:09.479550" elapsed="0.092227"/>
</branch>
<branch type="ELSE">
<kw name="Query" owner="DatabaseLibrary">
<var>${json_response}</var>
<arg>${updated_sql_query}</arg>
<arg>return_dict=${True}</arg>
<doc>Runs a query with the ``select_statement`` and returns the result as list of rows.
The type of row values depends on the database module -
usually they are tuples or tuple-like objects.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:09.572007" elapsed="0.000032"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:09.571825" elapsed="0.000265"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:09.479540" elapsed="0.092582"/>
</if>
<kw name="Disconnect From Database" owner="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<status status="PASS" start="2024-11-22T13:13:09.572242" elapsed="0.000245"/>
</kw>
<return>
<value>${json_response}</value>
<status status="PASS" start="2024-11-22T13:13:09.572543" elapsed="0.000048"/>
</return>
<arg>delete_hero_by_natid</arg>
<arg>${cleanup_dict}</arg>
<status status="PASS" start="2024-11-22T13:13:09.452102" elapsed="0.120618"/>
</kw>
<var name="${item}">['natid-151', 'Christopher', 'MALE', '1996-01-01T23:59:59', '', '1000.00', '10.00', '']</var>
<status status="PASS" start="2024-11-22T13:13:09.450971" elapsed="0.121797"/>
</iter>
<iter>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2024-11-22T13:13:09.573892" level="INFO">${cleanup_dict} = {'value_natid': 'natid-152'}</msg>
<var>${cleanup_dict}</var>
<arg>value_natid=${item[0]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2024-11-22T13:13:09.573025" elapsed="0.000897"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<kw name="Connect To Database" owner="DatabaseLibrary">
<msg time="2024-11-22T13:13:09.574800" level="INFO">Looking for configuration file: 'resources/db.cfg'</msg>
<msg time="2024-11-22T13:13:09.574848" level="INFO">Configuration file doesn't exist</msg>
<msg time="2024-11-22T13:13:09.575043" level="INFO">Connect to DB using : mysql.connector.connect(database='testdb', user='user', password=***, host='localhost', port=3306)</msg>
<arg>${DB_API}</arg>
<arg>${DB_NAME}</arg>
<arg>${DB_USER}</arg>
<arg>${DB_PASSWORD}</arg>
<arg>${DB_HOST}</arg>
<arg>${DB_PORT}</arg>
<doc>Creates a database connection using the DB API 2.0 ``db_module`` and the parameters provided.
Along with listed commonly used arguments (`db_name`, `db_host` etc.)
you can set any other DB module specific parameters as key/value pairs.</doc>
<status status="PASS" start="2024-11-22T13:13:09.574495" elapsed="0.012071"/>
</kw>
<kw name="Update SQL Queries With Arguments Dictionary" owner="sql-helper">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-11-22T13:13:09.587448" level="INFO" html="true">Getting file '&lt;a href="file:///Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/object-repo/sql-queries/delete_hero_by_natid.sql"&gt;/Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/object-repo/sql-queries/delete_hero_by_natid.sql&lt;/a&gt;'.</msg>
<msg time="2024-11-22T13:13:09.587622" level="INFO">${sql_query} = DELETE FROM testdb.working_class_heroes
WHERE natid = "value_natid"</msg>
<var>${sql_query}</var>
<arg>./object-repo/sql-queries/${sql_file_name}.sql</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-11-22T13:13:09.587217" elapsed="0.000430"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2024-11-22T13:13:09.588633" level="INFO">Argument types are:
&lt;class 'robot.utils.dotdict.DotDict'&gt;
&lt;class 'str'&gt;</msg>
<msg time="2024-11-22T13:13:09.588741" level="FAIL">{'value_natid': 'natid-152'} != </msg>
<arg>${args_dict}</arg>
<arg>${EMPTY}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="FAIL" start="2024-11-22T13:13:09.587973" elapsed="0.000836">{'value_natid': 'natid-152'} != </status>
</kw>
<msg time="2024-11-22T13:13:09.588894" level="INFO">${empty_status} = False</msg>
<var>${empty_status}</var>
<arg>Should Be Equal As Strings</arg>
<arg>${args_dict}</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-11-22T13:13:09.587796" elapsed="0.001116"/>
</kw>
<if>
<branch type="IF" condition="'${empty_status}' == '${False}'">
<if>
<branch type="IF" condition="${args_dict}">
<for flavor="IN">
<iter>
<kw name="Convert To String" owner="BuiltIn">
<msg time="2024-11-22T13:13:09.589522" level="INFO">${args_key_str} = value_natid</msg>
<var>${args_key_str}</var>
<arg>${args_key}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="PASS" start="2024-11-22T13:13:09.589389" elapsed="0.000153"/>
</kw>
<kw name="Convert To String" owner="BuiltIn">
<msg time="2024-11-22T13:13:09.589795" level="INFO">${args_value_str} = natid-152</msg>
<var>${args_value_str}</var>
<arg>${args_dict}[${args_key_str}]</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="PASS" start="2024-11-22T13:13:09.589648" elapsed="0.000166"/>
</kw>
<kw name="Replace String" owner="String">
<msg time="2024-11-22T13:13:09.590077" level="INFO">${sql_query} = DELETE FROM testdb.working_class_heroes
WHERE natid = "natid-152"</msg>
<var>${sql_query}</var>
<arg>${sql_query}</arg>
<arg>${args_key_str}</arg>
<arg>${args_value_str}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="PASS" start="2024-11-22T13:13:09.589918" elapsed="0.000180"/>
</kw>
<var name="${args_key}">value_natid</var>
<status status="PASS" start="2024-11-22T13:13:09.589292" elapsed="0.016347"/>
</iter>
<var>${args_key}</var>
<value>@{args_dict}</value>
<status status="PASS" start="2024-11-22T13:13:09.589186" elapsed="0.016498"/>
</for>
<status status="PASS" start="2024-11-22T13:13:09.589125" elapsed="0.016595"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:09.589114" elapsed="0.016630"/>
</if>
<status status="PASS" start="2024-11-22T13:13:09.588989" elapsed="0.016773"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:09.588969" elapsed="0.016813"/>
</if>
<return>
<value>${sql_query}</value>
<status status="PASS" start="2024-11-22T13:13:09.605806" elapsed="0.000027"/>
</return>
<msg time="2024-11-22T13:13:09.605931" level="INFO">${updated_sql_query} = DELETE FROM testdb.working_class_heroes
WHERE natid = "natid-152"</msg>
<var>${updated_sql_query}</var>
<arg>${sql_file_name}</arg>
<arg>${args_dict}</arg>
<status status="PASS" start="2024-11-22T13:13:09.586875" elapsed="0.019074"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<arg>${updated_sql_query}</arg>
<arg>DELETE</arg>
<arg>ignore_case=${True}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-11-22T13:13:09.606189" elapsed="0.000158"/>
</kw>
<msg time="2024-11-22T13:13:09.606418" level="INFO">${delete_status} = True</msg>
<var>${delete_status}</var>
<arg>Should Contain</arg>
<arg>${updated_sql_query}</arg>
<arg>DELETE</arg>
<arg>ignore_case=${True}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-11-22T13:13:09.606063" elapsed="0.000374"/>
</kw>
<if>
<branch type="IF" condition="'${delete_status}' == '${True}'">
<kw name="Execute Sql String" owner="DatabaseLibrary">
<msg time="2024-11-22T13:13:09.608453" level="INFO" html="true">Executing sql:&lt;br&gt;&lt;code style="font-weight: bold;"&gt;DELETE FROM testdb.working_class_heroes
WHERE natid = "natid-152"&lt;/code&gt;</msg>
<msg time="2024-11-22T13:13:09.630624" level="INFO">${json_response} = None</msg>
<var>${json_response}</var>
<arg>${updated_sql_query}</arg>
<doc>Executes the ``sql_string`` as a single SQL command.</doc>
<status status="PASS" start="2024-11-22T13:13:09.606646" elapsed="0.024042"/>
</kw>
<status status="PASS" start="2024-11-22T13:13:09.606496" elapsed="0.024283"/>
</branch>
<branch type="ELSE">
<kw name="Query" owner="DatabaseLibrary">
<var>${json_response}</var>
<arg>${updated_sql_query}</arg>
<arg>return_dict=${True}</arg>
<doc>Runs a query with the ``select_statement`` and returns the result as list of rows.
The type of row values depends on the database module -
usually they are tuples or tuple-like objects.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:09.631068" elapsed="0.000036"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:09.630842" elapsed="0.000329"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:09.606484" elapsed="0.024725"/>
</if>
<kw name="Disconnect From Database" owner="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<status status="PASS" start="2024-11-22T13:13:09.631325" elapsed="0.000311"/>
</kw>
<return>
<value>${json_response}</value>
<status status="PASS" start="2024-11-22T13:13:09.631692" elapsed="0.000051"/>
</return>
<arg>delete_hero_by_natid</arg>
<arg>${cleanup_dict}</arg>
<status status="PASS" start="2024-11-22T13:13:09.574173" elapsed="0.057707"/>
</kw>
<var name="${item}">['natid-152', 'Hanks123@!', 'MALE', '1996-01-01T23:59:59', '', '10320.00', '10.00', '']</var>
<status status="PASS" start="2024-11-22T13:13:09.572892" elapsed="0.059039"/>
</iter>
<iter>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2024-11-22T13:13:09.633175" level="INFO">${cleanup_dict} = {'value_natid': 'natid-153'}</msg>
<var>${cleanup_dict}</var>
<arg>value_natid=${item[0]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2024-11-22T13:13:09.632209" elapsed="0.001007"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<kw name="Connect To Database" owner="DatabaseLibrary">
<msg time="2024-11-22T13:13:09.634106" level="INFO">Looking for configuration file: 'resources/db.cfg'</msg>
<msg time="2024-11-22T13:13:09.634151" level="INFO">Configuration file doesn't exist</msg>
<msg time="2024-11-22T13:13:09.634346" level="INFO">Connect to DB using : mysql.connector.connect(database='testdb', user='user', password=***, host='localhost', port=3306)</msg>
<arg>${DB_API}</arg>
<arg>${DB_NAME}</arg>
<arg>${DB_USER}</arg>
<arg>${DB_PASSWORD}</arg>
<arg>${DB_HOST}</arg>
<arg>${DB_PORT}</arg>
<doc>Creates a database connection using the DB API 2.0 ``db_module`` and the parameters provided.
Along with listed commonly used arguments (`db_name`, `db_host` etc.)
you can set any other DB module specific parameters as key/value pairs.</doc>
<status status="PASS" start="2024-11-22T13:13:09.633813" elapsed="0.011562"/>
</kw>
<kw name="Update SQL Queries With Arguments Dictionary" owner="sql-helper">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-11-22T13:13:09.646343" level="INFO" html="true">Getting file '&lt;a href="file:///Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/object-repo/sql-queries/delete_hero_by_natid.sql"&gt;/Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/object-repo/sql-queries/delete_hero_by_natid.sql&lt;/a&gt;'.</msg>
<msg time="2024-11-22T13:13:09.646482" level="INFO">${sql_query} = DELETE FROM testdb.working_class_heroes
WHERE natid = "value_natid"</msg>
<var>${sql_query}</var>
<arg>./object-repo/sql-queries/${sql_file_name}.sql</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-11-22T13:13:09.646147" elapsed="0.000354"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2024-11-22T13:13:09.647437" level="INFO">Argument types are:
&lt;class 'robot.utils.dotdict.DotDict'&gt;
&lt;class 'str'&gt;</msg>
<msg time="2024-11-22T13:13:09.647551" level="FAIL">{'value_natid': 'natid-153'} != </msg>
<arg>${args_dict}</arg>
<arg>${EMPTY}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="FAIL" start="2024-11-22T13:13:09.646748" elapsed="0.000875">{'value_natid': 'natid-153'} != </status>
</kw>
<msg time="2024-11-22T13:13:09.647729" level="INFO">${empty_status} = False</msg>
<var>${empty_status}</var>
<arg>Should Be Equal As Strings</arg>
<arg>${args_dict}</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-11-22T13:13:09.646611" elapsed="0.001141"/>
</kw>
<if>
<branch type="IF" condition="'${empty_status}' == '${False}'">
<if>
<branch type="IF" condition="${args_dict}">
<for flavor="IN">
<iter>
<kw name="Convert To String" owner="BuiltIn">
<msg time="2024-11-22T13:13:09.648492" level="INFO">${args_key_str} = value_natid</msg>
<var>${args_key_str}</var>
<arg>${args_key}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="PASS" start="2024-11-22T13:13:09.648333" elapsed="0.000184"/>
</kw>
<kw name="Convert To String" owner="BuiltIn">
<msg time="2024-11-22T13:13:09.648831" level="INFO">${args_value_str} = natid-153</msg>
<var>${args_value_str}</var>
<arg>${args_dict}[${args_key_str}]</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="PASS" start="2024-11-22T13:13:09.648648" elapsed="0.000207"/>
</kw>
<kw name="Replace String" owner="String">
<msg time="2024-11-22T13:13:09.649171" level="INFO">${sql_query} = DELETE FROM testdb.working_class_heroes
WHERE natid = "natid-153"</msg>
<var>${sql_query}</var>
<arg>${sql_query}</arg>
<arg>${args_key_str}</arg>
<arg>${args_value_str}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="PASS" start="2024-11-22T13:13:09.648984" elapsed="0.000213"/>
</kw>
<var name="${args_key}">value_natid</var>
<status status="PASS" start="2024-11-22T13:13:09.648217" elapsed="0.015203"/>
</iter>
<var>${args_key}</var>
<value>@{args_dict}</value>
<status status="PASS" start="2024-11-22T13:13:09.648087" elapsed="0.015454"/>
</for>
<status status="PASS" start="2024-11-22T13:13:09.648010" elapsed="0.015611"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:09.647996" elapsed="0.015690"/>
</if>
<status status="PASS" start="2024-11-22T13:13:09.647844" elapsed="0.015886"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:09.647821" elapsed="0.015949"/>
</if>
<return>
<value>${sql_query}</value>
<status status="PASS" start="2024-11-22T13:13:09.663839" elapsed="0.000069"/>
</return>
<msg time="2024-11-22T13:13:09.664125" level="INFO">${updated_sql_query} = DELETE FROM testdb.working_class_heroes
WHERE natid = "natid-153"</msg>
<var>${updated_sql_query}</var>
<arg>${sql_file_name}</arg>
<arg>${args_dict}</arg>
<status status="PASS" start="2024-11-22T13:13:09.645872" elapsed="0.018285"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<arg>${updated_sql_query}</arg>
<arg>DELETE</arg>
<arg>ignore_case=${True}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-11-22T13:13:09.664636" elapsed="0.000288"/>
</kw>
<msg time="2024-11-22T13:13:09.665018" level="INFO">${delete_status} = True</msg>
<var>${delete_status}</var>
<arg>Should Contain</arg>
<arg>${updated_sql_query}</arg>
<arg>DELETE</arg>
<arg>ignore_case=${True}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-11-22T13:13:09.664391" elapsed="0.000651"/>
</kw>
<if>
<branch type="IF" condition="'${delete_status}' == '${True}'">
<kw name="Execute Sql String" owner="DatabaseLibrary">
<msg time="2024-11-22T13:13:09.667058" level="INFO" html="true">Executing sql:&lt;br&gt;&lt;code style="font-weight: bold;"&gt;DELETE FROM testdb.working_class_heroes
WHERE natid = "natid-153"&lt;/code&gt;</msg>
<msg time="2024-11-22T13:13:09.721438" level="INFO">${json_response} = None</msg>
<var>${json_response}</var>
<arg>${updated_sql_query}</arg>
<doc>Executes the ``sql_string`` as a single SQL command.</doc>
<status status="PASS" start="2024-11-22T13:13:09.665401" elapsed="0.056143"/>
</kw>
<status status="PASS" start="2024-11-22T13:13:09.665140" elapsed="0.056571"/>
</branch>
<branch type="ELSE">
<kw name="Query" owner="DatabaseLibrary">
<var>${json_response}</var>
<arg>${updated_sql_query}</arg>
<arg>return_dict=${True}</arg>
<doc>Runs a query with the ``select_statement`` and returns the result as list of rows.
The type of row values depends on the database module -
usually they are tuples or tuple-like objects.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:09.722185" elapsed="0.000050"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:09.721804" elapsed="0.000499"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:09.665118" elapsed="0.057230"/>
</if>
<kw name="Disconnect From Database" owner="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<status status="PASS" start="2024-11-22T13:13:09.722524" elapsed="0.000515"/>
</kw>
<return>
<value>${json_response}</value>
<status status="PASS" start="2024-11-22T13:13:09.723135" elapsed="0.000088"/>
</return>
<arg>delete_hero_by_natid</arg>
<arg>${cleanup_dict}</arg>
<status status="PASS" start="2024-11-22T13:13:09.633483" elapsed="0.089934"/>
</kw>
<var name="${item}">['natid-153', 'Angelina Jolie', '', '1996-01-01T23:59:59', '', '1000.50', '10.28', '']</var>
<status status="PASS" start="2024-11-22T13:13:09.632072" elapsed="0.091412"/>
</iter>
<iter>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2024-11-22T13:13:09.725063" level="INFO">${cleanup_dict} = {'value_natid': 'natid-154'}</msg>
<var>${cleanup_dict}</var>
<arg>value_natid=${item[0]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2024-11-22T13:13:09.723894" elapsed="0.001207"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<kw name="Connect To Database" owner="DatabaseLibrary">
<msg time="2024-11-22T13:13:09.726554" level="INFO">Looking for configuration file: 'resources/db.cfg'</msg>
<msg time="2024-11-22T13:13:09.726636" level="INFO">Configuration file doesn't exist</msg>
<msg time="2024-11-22T13:13:09.726881" level="INFO">Connect to DB using : mysql.connector.connect(database='testdb', user='user', password=***, host='localhost', port=3306)</msg>
<arg>${DB_API}</arg>
<arg>${DB_NAME}</arg>
<arg>${DB_USER}</arg>
<arg>${DB_PASSWORD}</arg>
<arg>${DB_HOST}</arg>
<arg>${DB_PORT}</arg>
<doc>Creates a database connection using the DB API 2.0 ``db_module`` and the parameters provided.
Along with listed commonly used arguments (`db_name`, `db_host` etc.)
you can set any other DB module specific parameters as key/value pairs.</doc>
<status status="PASS" start="2024-11-22T13:13:09.726122" elapsed="0.013015"/>
</kw>
<kw name="Update SQL Queries With Arguments Dictionary" owner="sql-helper">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-11-22T13:13:09.740852" level="INFO" html="true">Getting file '&lt;a href="file:///Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/object-repo/sql-queries/delete_hero_by_natid.sql"&gt;/Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/object-repo/sql-queries/delete_hero_by_natid.sql&lt;/a&gt;'.</msg>
<msg time="2024-11-22T13:13:09.741095" level="INFO">${sql_query} = DELETE FROM testdb.working_class_heroes
WHERE natid = "value_natid"</msg>
<var>${sql_query}</var>
<arg>./object-repo/sql-queries/${sql_file_name}.sql</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-11-22T13:13:09.740466" elapsed="0.000655"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2024-11-22T13:13:09.742241" level="INFO">Argument types are:
&lt;class 'robot.utils.dotdict.DotDict'&gt;
&lt;class 'str'&gt;</msg>
<msg time="2024-11-22T13:13:09.742402" level="FAIL">{'value_natid': 'natid-154'} != </msg>
<arg>${args_dict}</arg>
<arg>${EMPTY}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="FAIL" start="2024-11-22T13:13:09.741487" elapsed="0.001013">{'value_natid': 'natid-154'} != </status>
</kw>
<msg time="2024-11-22T13:13:09.742598" level="INFO">${empty_status} = False</msg>
<var>${empty_status}</var>
<arg>Should Be Equal As Strings</arg>
<arg>${args_dict}</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-11-22T13:13:09.741291" elapsed="0.001329"/>
</kw>
<if>
<branch type="IF" condition="'${empty_status}' == '${False}'">
<if>
<branch type="IF" condition="${args_dict}">
<for flavor="IN">
<iter>
<kw name="Convert To String" owner="BuiltIn">
<msg time="2024-11-22T13:13:09.743596" level="INFO">${args_key_str} = value_natid</msg>
<var>${args_key_str}</var>
<arg>${args_key}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="PASS" start="2024-11-22T13:13:09.743417" elapsed="0.000204"/>
</kw>
<kw name="Convert To String" owner="BuiltIn">
<msg time="2024-11-22T13:13:09.743984" level="INFO">${args_value_str} = natid-154</msg>
<var>${args_value_str}</var>
<arg>${args_dict}[${args_key_str}]</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="PASS" start="2024-11-22T13:13:09.743759" elapsed="0.000254"/>
</kw>
<kw name="Replace String" owner="String">
<msg time="2024-11-22T13:13:09.744360" level="INFO">${sql_query} = DELETE FROM testdb.working_class_heroes
WHERE natid = "natid-154"</msg>
<var>${sql_query}</var>
<arg>${sql_query}</arg>
<arg>${args_key_str}</arg>
<arg>${args_value_str}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="PASS" start="2024-11-22T13:13:09.744151" elapsed="0.000323"/>
</kw>
<var name="${args_key}">value_natid</var>
<status status="PASS" start="2024-11-22T13:13:09.743254" elapsed="0.008322"/>
</iter>
<var>${args_key}</var>
<value>@{args_dict}</value>
<status status="PASS" start="2024-11-22T13:13:09.743073" elapsed="0.008767"/>
</for>
<status status="PASS" start="2024-11-22T13:13:09.742967" elapsed="0.008962"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:09.742954" elapsed="0.009031"/>
</if>
<status status="PASS" start="2024-11-22T13:13:09.742743" elapsed="0.009288"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:09.742703" elapsed="0.009363"/>
</if>
<return>
<value>${sql_query}</value>
<status status="PASS" start="2024-11-22T13:13:09.752146" elapsed="0.000088"/>
</return>
<msg time="2024-11-22T13:13:09.752507" level="INFO">${updated_sql_query} = DELETE FROM testdb.working_class_heroes
WHERE natid = "natid-154"</msg>
<var>${updated_sql_query}</var>
<arg>${sql_file_name}</arg>
<arg>${args_dict}</arg>
<status status="PASS" start="2024-11-22T13:13:09.739884" elapsed="0.012660"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<arg>${updated_sql_query}</arg>
<arg>DELETE</arg>
<arg>ignore_case=${True}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-11-22T13:13:09.753228" elapsed="0.000804"/>
</kw>
<msg time="2024-11-22T13:13:09.754150" level="INFO">${delete_status} = True</msg>
<var>${delete_status}</var>
<arg>Should Contain</arg>
<arg>${updated_sql_query}</arg>
<arg>DELETE</arg>
<arg>ignore_case=${True}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-11-22T13:13:09.752866" elapsed="0.001313"/>
</kw>
<if>
<branch type="IF" condition="'${delete_status}' == '${True}'">
<kw name="Execute Sql String" owner="DatabaseLibrary">
<msg time="2024-11-22T13:13:09.756128" level="INFO" html="true">Executing sql:&lt;br&gt;&lt;code style="font-weight: bold;"&gt;DELETE FROM testdb.working_class_heroes
WHERE natid = "natid-154"&lt;/code&gt;</msg>
<msg time="2024-11-22T13:13:09.788883" level="INFO">${json_response} = None</msg>
<var>${json_response}</var>
<arg>${updated_sql_query}</arg>
<doc>Executes the ``sql_string`` as a single SQL command.</doc>
<status status="PASS" start="2024-11-22T13:13:09.754596" elapsed="0.034374"/>
</kw>
<status status="PASS" start="2024-11-22T13:13:09.754290" elapsed="0.034813"/>
</branch>
<branch type="ELSE">
<kw name="Query" owner="DatabaseLibrary">
<var>${json_response}</var>
<arg>${updated_sql_query}</arg>
<arg>return_dict=${True}</arg>
<doc>Runs a query with the ``select_statement`` and returns the result as list of rows.
The type of row values depends on the database module -
usually they are tuples or tuple-like objects.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:09.789540" elapsed="0.000043"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:09.789185" elapsed="0.000460"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:09.754264" elapsed="0.035420"/>
</if>
<kw name="Disconnect From Database" owner="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<status status="PASS" start="2024-11-22T13:13:09.789831" elapsed="0.000450"/>
</kw>
<return>
<value>${json_response}</value>
<status status="PASS" start="2024-11-22T13:13:09.790378" elapsed="0.000082"/>
</return>
<arg>delete_hero_by_natid</arg>
<arg>${cleanup_dict}</arg>
<status status="PASS" start="2024-11-22T13:13:09.725478" elapsed="0.065170"/>
</kw>
<var name="${item}">['natid-154', 'Lawrence Chu', 'MALE', '4000-01-01T23:59:59', '', '1000.12', '10.00', '']</var>
<status status="PASS" start="2024-11-22T13:13:09.723695" elapsed="0.067025"/>
</iter>
<iter>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2024-11-22T13:13:09.792208" level="INFO">${cleanup_dict} = {'value_natid': 'natid-155'}</msg>
<var>${cleanup_dict}</var>
<arg>value_natid=${item[0]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2024-11-22T13:13:09.791103" elapsed="0.001134"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<kw name="Connect To Database" owner="DatabaseLibrary">
<msg time="2024-11-22T13:13:09.793197" level="INFO">Looking for configuration file: 'resources/db.cfg'</msg>
<msg time="2024-11-22T13:13:09.793265" level="INFO">Configuration file doesn't exist</msg>
<msg time="2024-11-22T13:13:09.793497" level="INFO">Connect to DB using : mysql.connector.connect(database='testdb', user='user', password=***, host='localhost', port=3306)</msg>
<arg>${DB_API}</arg>
<arg>${DB_NAME}</arg>
<arg>${DB_USER}</arg>
<arg>${DB_PASSWORD}</arg>
<arg>${DB_HOST}</arg>
<arg>${DB_PORT}</arg>
<doc>Creates a database connection using the DB API 2.0 ``db_module`` and the parameters provided.
Along with listed commonly used arguments (`db_name`, `db_host` etc.)
you can set any other DB module specific parameters as key/value pairs.</doc>
<status status="PASS" start="2024-11-22T13:13:09.792831" elapsed="0.014155"/>
</kw>
<kw name="Update SQL Queries With Arguments Dictionary" owner="sql-helper">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-11-22T13:13:09.808726" level="INFO" html="true">Getting file '&lt;a href="file:///Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/object-repo/sql-queries/delete_hero_by_natid.sql"&gt;/Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/object-repo/sql-queries/delete_hero_by_natid.sql&lt;/a&gt;'.</msg>
<msg time="2024-11-22T13:13:09.809012" level="INFO">${sql_query} = DELETE FROM testdb.working_class_heroes
WHERE natid = "value_natid"</msg>
<var>${sql_query}</var>
<arg>./object-repo/sql-queries/${sql_file_name}.sql</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-11-22T13:13:09.808295" elapsed="0.000752"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2024-11-22T13:13:09.810173" level="INFO">Argument types are:
&lt;class 'robot.utils.dotdict.DotDict'&gt;
&lt;class 'str'&gt;</msg>
<msg time="2024-11-22T13:13:09.810316" level="FAIL">{'value_natid': 'natid-155'} != </msg>
<arg>${args_dict}</arg>
<arg>${EMPTY}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="FAIL" start="2024-11-22T13:13:09.809455" elapsed="0.000958">{'value_natid': 'natid-155'} != </status>
</kw>
<msg time="2024-11-22T13:13:09.810514" level="INFO">${empty_status} = False</msg>
<var>${empty_status}</var>
<arg>Should Be Equal As Strings</arg>
<arg>${args_dict}</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-11-22T13:13:09.809250" elapsed="0.001286"/>
</kw>
<if>
<branch type="IF" condition="'${empty_status}' == '${False}'">
<if>
<branch type="IF" condition="${args_dict}">
<for flavor="IN">
<iter>
<kw name="Convert To String" owner="BuiltIn">
<msg time="2024-11-22T13:13:09.811412" level="INFO">${args_key_str} = value_natid</msg>
<var>${args_key_str}</var>
<arg>${args_key}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="PASS" start="2024-11-22T13:13:09.811241" elapsed="0.000198"/>
</kw>
<kw name="Convert To String" owner="BuiltIn">
<msg time="2024-11-22T13:13:09.811776" level="INFO">${args_value_str} = natid-155</msg>
<var>${args_value_str}</var>
<arg>${args_dict}[${args_key_str}]</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="PASS" start="2024-11-22T13:13:09.811579" elapsed="0.000223"/>
</kw>
<kw name="Replace String" owner="String">
<msg time="2024-11-22T13:13:09.812151" level="INFO">${sql_query} = DELETE FROM testdb.working_class_heroes
WHERE natid = "natid-155"</msg>
<var>${sql_query}</var>
<arg>${sql_query}</arg>
<arg>${args_key_str}</arg>
<arg>${args_value_str}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="PASS" start="2024-11-22T13:13:09.811943" elapsed="0.000234"/>
</kw>
<var name="${args_key}">value_natid</var>
<status status="PASS" start="2024-11-22T13:13:09.811114" elapsed="0.012112"/>
</iter>
<var>${args_key}</var>
<value>@{args_dict}</value>
<status status="PASS" start="2024-11-22T13:13:09.810947" elapsed="0.012347"/>
</for>
<status status="PASS" start="2024-11-22T13:13:09.810854" elapsed="0.012494"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:09.810841" elapsed="0.012547"/>
</if>
<status status="PASS" start="2024-11-22T13:13:09.810655" elapsed="0.012761"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:09.810614" elapsed="0.012833"/>
</if>
<return>
<value>${sql_query}</value>
<status status="PASS" start="2024-11-22T13:13:09.823484" elapsed="0.000044"/>
</return>
<msg time="2024-11-22T13:13:09.823762" level="INFO">${updated_sql_query} = DELETE FROM testdb.working_class_heroes
WHERE natid = "natid-155"</msg>
<var>${updated_sql_query}</var>
<arg>${sql_file_name}</arg>
<arg>${args_dict}</arg>
<status status="PASS" start="2024-11-22T13:13:09.807634" elapsed="0.016171"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<arg>${updated_sql_query}</arg>
<arg>DELETE</arg>
<arg>ignore_case=${True}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-11-22T13:13:09.824218" elapsed="0.000261"/>
</kw>
<msg time="2024-11-22T13:13:09.824585" level="INFO">${delete_status} = True</msg>
<var>${delete_status}</var>
<arg>Should Contain</arg>
<arg>${updated_sql_query}</arg>
<arg>DELETE</arg>
<arg>ignore_case=${True}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-11-22T13:13:09.824006" elapsed="0.000608"/>
</kw>
<if>
<branch type="IF" condition="'${delete_status}' == '${True}'">
<kw name="Execute Sql String" owner="DatabaseLibrary">
<msg time="2024-11-22T13:13:09.825786" level="INFO" html="true">Executing sql:&lt;br&gt;&lt;code style="font-weight: bold;"&gt;DELETE FROM testdb.working_class_heroes
WHERE natid = "natid-155"&lt;/code&gt;</msg>
<msg time="2024-11-22T13:13:09.846445" level="INFO">${json_response} = None</msg>
<var>${json_response}</var>
<arg>${updated_sql_query}</arg>
<doc>Executes the ``sql_string`` as a single SQL command.</doc>
<status status="PASS" start="2024-11-22T13:13:09.824974" elapsed="0.021525"/>
</kw>
<status status="PASS" start="2024-11-22T13:13:09.824716" elapsed="0.021867"/>
</branch>
<branch type="ELSE">
<kw name="Query" owner="DatabaseLibrary">
<var>${json_response}</var>
<arg>${updated_sql_query}</arg>
<arg>return_dict=${True}</arg>
<doc>Runs a query with the ``select_statement`` and returns the result as list of rows.
The type of row values depends on the database module -
usually they are tuples or tuple-like objects.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:09.846852" elapsed="0.000034"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:09.846637" elapsed="0.000298"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:09.824695" elapsed="0.022272"/>
</if>
<kw name="Disconnect From Database" owner="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<status status="PASS" start="2024-11-22T13:13:09.847085" elapsed="0.000336"/>
</kw>
<return>
<value>${json_response}</value>
<status status="PASS" start="2024-11-22T13:13:09.847476" elapsed="0.000051"/>
</return>
<arg>delete_hero_by_natid</arg>
<arg>${cleanup_dict}</arg>
<status status="PASS" start="2024-11-22T13:13:09.792509" elapsed="0.055144"/>
</kw>
<var name="${item}">['natid-155', 'Karen', 'MALE', '1996-01-01T23:59:59', '', '-1000.00', '10.00', '']</var>
<status status="PASS" start="2024-11-22T13:13:09.790908" elapsed="0.056792"/>
</iter>
<iter>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2024-11-22T13:13:09.848821" level="INFO">${cleanup_dict} = {'value_natid': 'natid-156'}</msg>
<var>${cleanup_dict}</var>
<arg>value_natid=${item[0]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2024-11-22T13:13:09.847948" elapsed="0.000905"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<kw name="Connect To Database" owner="DatabaseLibrary">
<msg time="2024-11-22T13:13:09.849771" level="INFO">Looking for configuration file: 'resources/db.cfg'</msg>
<msg time="2024-11-22T13:13:09.849854" level="INFO">Configuration file doesn't exist</msg>
<msg time="2024-11-22T13:13:09.850242" level="INFO">Connect to DB using : mysql.connector.connect(database='testdb', user='user', password=***, host='localhost', port=3306)</msg>
<arg>${DB_API}</arg>
<arg>${DB_NAME}</arg>
<arg>${DB_USER}</arg>
<arg>${DB_PASSWORD}</arg>
<arg>${DB_HOST}</arg>
<arg>${DB_PORT}</arg>
<doc>Creates a database connection using the DB API 2.0 ``db_module`` and the parameters provided.
Along with listed commonly used arguments (`db_name`, `db_host` etc.)
you can set any other DB module specific parameters as key/value pairs.</doc>
<status status="PASS" start="2024-11-22T13:13:09.849395" elapsed="0.021206"/>
</kw>
<kw name="Update SQL Queries With Arguments Dictionary" owner="sql-helper">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-11-22T13:13:09.873065" level="INFO" html="true">Getting file '&lt;a href="file:///Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/object-repo/sql-queries/delete_hero_by_natid.sql"&gt;/Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/object-repo/sql-queries/delete_hero_by_natid.sql&lt;/a&gt;'.</msg>
<msg time="2024-11-22T13:13:09.873434" level="INFO">${sql_query} = DELETE FROM testdb.working_class_heroes
WHERE natid = "value_natid"</msg>
<var>${sql_query}</var>
<arg>./object-repo/sql-queries/${sql_file_name}.sql</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-11-22T13:13:09.872553" elapsed="0.000944"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2024-11-22T13:13:09.874780" level="INFO">Argument types are:
&lt;class 'robot.utils.dotdict.DotDict'&gt;
&lt;class 'str'&gt;</msg>
<msg time="2024-11-22T13:13:09.874903" level="FAIL">{'value_natid': 'natid-156'} != </msg>
<arg>${args_dict}</arg>
<arg>${EMPTY}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="FAIL" start="2024-11-22T13:13:09.873982" elapsed="0.001006">{'value_natid': 'natid-156'} != </status>
</kw>
<msg time="2024-11-22T13:13:09.875107" level="INFO">${empty_status} = False</msg>
<var>${empty_status}</var>
<arg>Should Be Equal As Strings</arg>
<arg>${args_dict}</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-11-22T13:13:09.873771" elapsed="0.001365"/>
</kw>
<if>
<branch type="IF" condition="'${empty_status}' == '${False}'">
<if>
<branch type="IF" condition="${args_dict}">
<for flavor="IN">
<iter>
<kw name="Convert To String" owner="BuiltIn">
<msg time="2024-11-22T13:13:09.876028" level="INFO">${args_key_str} = value_natid</msg>
<var>${args_key_str}</var>
<arg>${args_key}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="PASS" start="2024-11-22T13:13:09.875840" elapsed="0.000218"/>
</kw>
<kw name="Convert To String" owner="BuiltIn">
<msg time="2024-11-22T13:13:09.876421" level="INFO">${args_value_str} = natid-156</msg>
<var>${args_value_str}</var>
<arg>${args_dict}[${args_key_str}]</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="PASS" start="2024-11-22T13:13:09.876208" elapsed="0.000243"/>
</kw>
<kw name="Replace String" owner="String">
<msg time="2024-11-22T13:13:09.876830" level="INFO">${sql_query} = DELETE FROM testdb.working_class_heroes
WHERE natid = "natid-156"</msg>
<var>${sql_query}</var>
<arg>${sql_query}</arg>
<arg>${args_key_str}</arg>
<arg>${args_value_str}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="PASS" start="2024-11-22T13:13:09.876602" elapsed="0.000258"/>
</kw>
<var name="${args_key}">value_natid</var>
<status status="PASS" start="2024-11-22T13:13:09.875701" elapsed="0.001375"/>
</iter>
<var>${args_key}</var>
<value>@{args_dict}</value>
<status status="PASS" start="2024-11-22T13:13:09.875542" elapsed="0.001591"/>
</for>
<status status="PASS" start="2024-11-22T13:13:09.875444" elapsed="0.001749"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:09.875427" elapsed="0.001809"/>
</if>
<status status="PASS" start="2024-11-22T13:13:09.875248" elapsed="0.002021"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:09.875221" elapsed="0.002085"/>
</if>
<return>
<value>${sql_query}</value>
<status status="PASS" start="2024-11-22T13:13:09.877346" elapsed="0.000046"/>
</return>
<msg time="2024-11-22T13:13:09.877541" level="INFO">${updated_sql_query} = DELETE FROM testdb.working_class_heroes
WHERE natid = "natid-156"</msg>
<var>${updated_sql_query}</var>
<arg>${sql_file_name}</arg>
<arg>${args_dict}</arg>
<status status="PASS" start="2024-11-22T13:13:09.871690" elapsed="0.005882"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<arg>${updated_sql_query}</arg>
<arg>DELETE</arg>
<arg>ignore_case=${True}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-11-22T13:13:09.877923" elapsed="0.000237"/>
</kw>
<msg time="2024-11-22T13:13:09.878263" level="INFO">${delete_status} = True</msg>
<var>${delete_status}</var>
<arg>Should Contain</arg>
<arg>${updated_sql_query}</arg>
<arg>DELETE</arg>
<arg>ignore_case=${True}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-11-22T13:13:09.877739" elapsed="0.000553"/>
</kw>
<if>
<branch type="IF" condition="'${delete_status}' == '${True}'">
<kw name="Execute Sql String" owner="DatabaseLibrary">
<msg time="2024-11-22T13:13:09.879387" level="INFO" html="true">Executing sql:&lt;br&gt;&lt;code style="font-weight: bold;"&gt;DELETE FROM testdb.working_class_heroes
WHERE natid = "natid-156"&lt;/code&gt;</msg>
<msg time="2024-11-22T13:13:09.883682" level="INFO">${json_response} = None</msg>
<var>${json_response}</var>
<arg>${updated_sql_query}</arg>
<doc>Executes the ``sql_string`` as a single SQL command.</doc>
<status status="PASS" start="2024-11-22T13:13:09.878627" elapsed="0.005079"/>
</kw>
<status status="PASS" start="2024-11-22T13:13:09.878384" elapsed="0.005363"/>
</branch>
<branch type="ELSE">
<kw name="Query" owner="DatabaseLibrary">
<var>${json_response}</var>
<arg>${updated_sql_query}</arg>
<arg>return_dict=${True}</arg>
<doc>Runs a query with the ``select_statement`` and returns the result as list of rows.
The type of row values depends on the database module -
usually they are tuples or tuple-like objects.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:09.883909" elapsed="0.000022"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:09.883780" elapsed="0.000192"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:09.878367" elapsed="0.005640"/>
</if>
<kw name="Disconnect From Database" owner="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<status status="PASS" start="2024-11-22T13:13:09.884099" elapsed="0.000162"/>
</kw>
<return>
<value>${json_response}</value>
<status status="PASS" start="2024-11-22T13:13:09.884302" elapsed="0.000027"/>
</return>
<arg>delete_hero_by_natid</arg>
<arg>${cleanup_dict}</arg>
<status status="PASS" start="2024-11-22T13:13:09.849098" elapsed="0.035320"/>
</kw>
<var name="${item}">['natid-156', 'Cherry Chan', 'MALE', '1996-01-01T23:59:59', '', '10320.00', '-10.00', '']</var>
<status status="PASS" start="2024-11-22T13:13:09.847827" elapsed="0.036630"/>
</iter>
<iter>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2024-11-22T13:13:09.885409" level="INFO">${cleanup_dict} = {'value_natid': 'natid-157'}</msg>
<var>${cleanup_dict}</var>
<arg>value_natid=${item[0]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2024-11-22T13:13:09.884643" elapsed="0.000799"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<kw name="Connect To Database" owner="DatabaseLibrary">
<msg time="2024-11-22T13:13:09.886404" level="INFO">Looking for configuration file: 'resources/db.cfg'</msg>
<msg time="2024-11-22T13:13:09.886454" level="INFO">Configuration file doesn't exist</msg>
<msg time="2024-11-22T13:13:09.886731" level="INFO">Connect to DB using : mysql.connector.connect(database='testdb', user='user', password=***, host='localhost', port=3306)</msg>
<arg>${DB_API}</arg>
<arg>${DB_NAME}</arg>
<arg>${DB_USER}</arg>
<arg>${DB_PASSWORD}</arg>
<arg>${DB_HOST}</arg>
<arg>${DB_PORT}</arg>
<doc>Creates a database connection using the DB API 2.0 ``db_module`` and the parameters provided.
Along with listed commonly used arguments (`db_name`, `db_host` etc.)
you can set any other DB module specific parameters as key/value pairs.</doc>
<status status="PASS" start="2024-11-22T13:13:09.886051" elapsed="0.009853"/>
</kw>
<kw name="Update SQL Queries With Arguments Dictionary" owner="sql-helper">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-11-22T13:13:09.896967" level="INFO" html="true">Getting file '&lt;a href="file:///Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/object-repo/sql-queries/delete_hero_by_natid.sql"&gt;/Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/object-repo/sql-queries/delete_hero_by_natid.sql&lt;/a&gt;'.</msg>
<msg time="2024-11-22T13:13:09.897167" level="INFO">${sql_query} = DELETE FROM testdb.working_class_heroes
WHERE natid = "value_natid"</msg>
<var>${sql_query}</var>
<arg>./object-repo/sql-queries/${sql_file_name}.sql</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-11-22T13:13:09.896709" elapsed="0.000489"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2024-11-22T13:13:09.898327" level="INFO">Argument types are:
&lt;class 'robot.utils.dotdict.DotDict'&gt;
&lt;class 'str'&gt;</msg>
<msg time="2024-11-22T13:13:09.898444" level="FAIL">{'value_natid': 'natid-157'} != </msg>
<arg>${args_dict}</arg>
<arg>${EMPTY}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="FAIL" start="2024-11-22T13:13:09.897566" elapsed="0.000960">{'value_natid': 'natid-157'} != </status>
</kw>
<msg time="2024-11-22T13:13:09.898645" level="INFO">${empty_status} = False</msg>
<var>${empty_status}</var>
<arg>Should Be Equal As Strings</arg>
<arg>${args_dict}</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-11-22T13:13:09.897369" elapsed="0.001304"/>
</kw>
<if>
<branch type="IF" condition="'${empty_status}' == '${False}'">
<if>
<branch type="IF" condition="${args_dict}">
<for flavor="IN">
<iter>
<kw name="Convert To String" owner="BuiltIn">
<msg time="2024-11-22T13:13:09.899566" level="INFO">${args_key_str} = value_natid</msg>
<var>${args_key_str}</var>
<arg>${args_key}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="PASS" start="2024-11-22T13:13:09.899373" elapsed="0.000224"/>
</kw>
<kw name="Convert To String" owner="BuiltIn">
<msg time="2024-11-22T13:13:09.899968" level="INFO">${args_value_str} = natid-157</msg>
<var>${args_value_str}</var>
<arg>${args_dict}[${args_key_str}]</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="PASS" start="2024-11-22T13:13:09.899754" elapsed="0.000244"/>
</kw>
<kw name="Replace String" owner="String">
<msg time="2024-11-22T13:13:09.900650" level="INFO">${sql_query} = DELETE FROM testdb.working_class_heroes
WHERE natid = "natid-157"</msg>
<var>${sql_query}</var>
<arg>${sql_query}</arg>
<arg>${args_key_str}</arg>
<arg>${args_value_str}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="PASS" start="2024-11-22T13:13:09.900151" elapsed="0.000531"/>
</kw>
<var name="${args_key}">value_natid</var>
<status status="PASS" start="2024-11-22T13:13:09.899228" elapsed="0.001663"/>
</iter>
<var>${args_key}</var>
<value>@{args_dict}</value>
<status status="PASS" start="2024-11-22T13:13:09.899073" elapsed="0.001877"/>
</for>
<status status="PASS" start="2024-11-22T13:13:09.898976" elapsed="0.002035"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:09.898959" elapsed="0.002095"/>
</if>
<status status="PASS" start="2024-11-22T13:13:09.898783" elapsed="0.002301"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:09.898759" elapsed="0.002363"/>
</if>
<return>
<value>${sql_query}</value>
<status status="PASS" start="2024-11-22T13:13:09.901163" elapsed="0.000059"/>
</return>
<msg time="2024-11-22T13:13:09.901386" level="INFO">${updated_sql_query} = DELETE FROM testdb.working_class_heroes
WHERE natid = "natid-157"</msg>
<var>${updated_sql_query}</var>
<arg>${sql_file_name}</arg>
<arg>${args_dict}</arg>
<status status="PASS" start="2024-11-22T13:13:09.896284" elapsed="0.005132"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<arg>${updated_sql_query}</arg>
<arg>DELETE</arg>
<arg>ignore_case=${True}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-11-22T13:13:09.901749" elapsed="0.000242"/>
</kw>
<msg time="2024-11-22T13:13:09.902111" level="INFO">${delete_status} = True</msg>
<var>${delete_status}</var>
<arg>Should Contain</arg>
<arg>${updated_sql_query}</arg>
<arg>DELETE</arg>
<arg>ignore_case=${True}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-11-22T13:13:09.901574" elapsed="0.000567"/>
</kw>
<if>
<branch type="IF" condition="'${delete_status}' == '${True}'">
<kw name="Execute Sql String" owner="DatabaseLibrary">
<msg time="2024-11-22T13:13:09.903130" level="INFO" html="true">Executing sql:&lt;br&gt;&lt;code style="font-weight: bold;"&gt;DELETE FROM testdb.working_class_heroes
WHERE natid = "natid-157"&lt;/code&gt;</msg>
<msg time="2024-11-22T13:13:09.905499" level="INFO">${json_response} = None</msg>
<var>${json_response}</var>
<arg>${updated_sql_query}</arg>
<doc>Executes the ``sql_string`` as a single SQL command.</doc>
<status status="PASS" start="2024-11-22T13:13:09.902485" elapsed="0.003050"/>
</kw>
<status status="PASS" start="2024-11-22T13:13:09.902232" elapsed="0.003359"/>
</branch>
<branch type="ELSE">
<kw name="Query" owner="DatabaseLibrary">
<var>${json_response}</var>
<arg>${updated_sql_query}</arg>
<arg>return_dict=${True}</arg>
<doc>Runs a query with the ``select_statement`` and returns the result as list of rows.
The type of row values depends on the database module -
usually they are tuples or tuple-like objects.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:09.905774" elapsed="0.000029"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:09.905632" elapsed="0.000221"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:09.902215" elapsed="0.003672"/>
</if>
<kw name="Disconnect From Database" owner="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<status status="PASS" start="2024-11-22T13:13:09.905999" elapsed="0.000207"/>
</kw>
<return>
<value>${json_response}</value>
<status status="PASS" start="2024-11-22T13:13:09.906292" elapsed="0.000037"/>
</return>
<arg>delete_hero_by_natid</arg>
<arg>${cleanup_dict}</arg>
<status status="PASS" start="2024-11-22T13:13:09.885702" elapsed="0.020723"/>
</kw>
<var name="${item}">['natid-157', 'Apple Xu', 'FEMALE', '1996-01-01T23:59:59', '', '1000.50', '10.28', '']</var>
<status status="PASS" start="2024-11-22T13:13:09.884545" elapsed="0.021922"/>
</iter>
<iter>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2024-11-22T13:13:09.907443" level="INFO">${cleanup_dict} = {'value_natid': 'natid-158'}</msg>
<var>${cleanup_dict}</var>
<arg>value_natid=${item[0]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2024-11-22T13:13:09.906668" elapsed="0.000805"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<kw name="Connect To Database" owner="DatabaseLibrary">
<msg time="2024-11-22T13:13:09.908373" level="INFO">Looking for configuration file: 'resources/db.cfg'</msg>
<msg time="2024-11-22T13:13:09.908420" level="INFO">Configuration file doesn't exist</msg>
<msg time="2024-11-22T13:13:09.908651" level="INFO">Connect to DB using : mysql.connector.connect(database='testdb', user='user', password=***, host='localhost', port=3306)</msg>
<arg>${DB_API}</arg>
<arg>${DB_NAME}</arg>
<arg>${DB_USER}</arg>
<arg>${DB_PASSWORD}</arg>
<arg>${DB_HOST}</arg>
<arg>${DB_PORT}</arg>
<doc>Creates a database connection using the DB API 2.0 ``db_module`` and the parameters provided.
Along with listed commonly used arguments (`db_name`, `db_host` etc.)
you can set any other DB module specific parameters as key/value pairs.</doc>
<status status="PASS" start="2024-11-22T13:13:09.908055" elapsed="0.006419"/>
</kw>
<kw name="Update SQL Queries With Arguments Dictionary" owner="sql-helper">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-11-22T13:13:09.915332" level="INFO" html="true">Getting file '&lt;a href="file:///Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/object-repo/sql-queries/delete_hero_by_natid.sql"&gt;/Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/object-repo/sql-queries/delete_hero_by_natid.sql&lt;/a&gt;'.</msg>
<msg time="2024-11-22T13:13:09.915490" level="INFO">${sql_query} = DELETE FROM testdb.working_class_heroes
WHERE natid = "value_natid"</msg>
<var>${sql_query}</var>
<arg>./object-repo/sql-queries/${sql_file_name}.sql</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-11-22T13:13:09.915094" elapsed="0.000422"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2024-11-22T13:13:09.916396" level="INFO">Argument types are:
&lt;class 'robot.utils.dotdict.DotDict'&gt;
&lt;class 'str'&gt;</msg>
<msg time="2024-11-22T13:13:09.916493" level="FAIL">{'value_natid': 'natid-158'} != </msg>
<arg>${args_dict}</arg>
<arg>${EMPTY}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="FAIL" start="2024-11-22T13:13:09.915809" elapsed="0.000751">{'value_natid': 'natid-158'} != </status>
</kw>
<msg time="2024-11-22T13:13:09.916652" level="INFO">${empty_status} = False</msg>
<var>${empty_status}</var>
<arg>Should Be Equal As Strings</arg>
<arg>${args_dict}</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-11-22T13:13:09.915651" elapsed="0.001023"/>
</kw>
<if>
<branch type="IF" condition="'${empty_status}' == '${False}'">
<if>
<branch type="IF" condition="${args_dict}">
<for flavor="IN">
<iter>
<kw name="Convert To String" owner="BuiltIn">
<msg time="2024-11-22T13:13:09.917429" level="INFO">${args_key_str} = value_natid</msg>
<var>${args_key_str}</var>
<arg>${args_key}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="PASS" start="2024-11-22T13:13:09.917285" elapsed="0.000164"/>
</kw>
<kw name="Convert To String" owner="BuiltIn">
<msg time="2024-11-22T13:13:09.917677" level="INFO">${args_value_str} = natid-158</msg>
<var>${args_value_str}</var>
<arg>${args_dict}[${args_key_str}]</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="PASS" start="2024-11-22T13:13:09.917545" elapsed="0.000147"/>
</kw>
<kw name="Replace String" owner="String">
<msg time="2024-11-22T13:13:09.917904" level="INFO">${sql_query} = DELETE FROM testdb.working_class_heroes
WHERE natid = "natid-158"</msg>
<var>${sql_query}</var>
<arg>${sql_query}</arg>
<arg>${args_key_str}</arg>
<arg>${args_value_str}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="PASS" start="2024-11-22T13:13:09.917778" elapsed="0.000142"/>
</kw>
<var name="${args_key}">value_natid</var>
<status status="PASS" start="2024-11-22T13:13:09.917178" elapsed="0.000868"/>
</iter>
<var>${args_key}</var>
<value>@{args_dict}</value>
<status status="PASS" start="2024-11-22T13:13:09.917019" elapsed="0.001059"/>
</for>
<status status="PASS" start="2024-11-22T13:13:09.916908" elapsed="0.001201"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:09.916895" elapsed="0.001237"/>
</if>
<status status="PASS" start="2024-11-22T13:13:09.916760" elapsed="0.001387"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:09.916738" elapsed="0.001426"/>
</if>
<return>
<value>${sql_query}</value>
<status status="PASS" start="2024-11-22T13:13:09.918185" elapsed="0.000026"/>
</return>
<msg time="2024-11-22T13:13:09.918290" level="INFO">${updated_sql_query} = DELETE FROM testdb.working_class_heroes
WHERE natid = "natid-158"</msg>
<var>${updated_sql_query}</var>
<arg>${sql_file_name}</arg>
<arg>${args_dict}</arg>
<status status="PASS" start="2024-11-22T13:13:09.914769" elapsed="0.003536"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<arg>${updated_sql_query}</arg>
<arg>DELETE</arg>
<arg>ignore_case=${True}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-11-22T13:13:09.918504" elapsed="0.000134"/>
</kw>
<msg time="2024-11-22T13:13:09.918691" level="INFO">${delete_status} = True</msg>
<var>${delete_status}</var>
<arg>Should Contain</arg>
<arg>${updated_sql_query}</arg>
<arg>DELETE</arg>
<arg>ignore_case=${True}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-11-22T13:13:09.918398" elapsed="0.000307"/>
</kw>
<if>
<branch type="IF" condition="'${delete_status}' == '${True}'">
<kw name="Execute Sql String" owner="DatabaseLibrary">
<msg time="2024-11-22T13:13:09.919438" level="INFO" html="true">Executing sql:&lt;br&gt;&lt;code style="font-weight: bold;"&gt;DELETE FROM testdb.working_class_heroes
WHERE natid = "natid-158"&lt;/code&gt;</msg>
<msg time="2024-11-22T13:13:09.920903" level="INFO">${json_response} = None</msg>
<var>${json_response}</var>
<arg>${updated_sql_query}</arg>
<doc>Executes the ``sql_string`` as a single SQL command.</doc>
<status status="PASS" start="2024-11-22T13:13:09.918897" elapsed="0.002026"/>
</kw>
<status status="PASS" start="2024-11-22T13:13:09.918755" elapsed="0.002198"/>
</branch>
<branch type="ELSE">
<kw name="Query" owner="DatabaseLibrary">
<var>${json_response}</var>
<arg>${updated_sql_query}</arg>
<arg>return_dict=${True}</arg>
<doc>Runs a query with the ``select_statement`` and returns the result as list of rows.
The type of row values depends on the database module -
usually they are tuples or tuple-like objects.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:09.921053" elapsed="0.000016"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:09.920974" elapsed="0.000125"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:09.918745" elapsed="0.002372"/>
</if>
<kw name="Disconnect From Database" owner="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<status status="PASS" start="2024-11-22T13:13:09.921182" elapsed="0.000123"/>
</kw>
<return>
<value>${json_response}</value>
<status status="PASS" start="2024-11-22T13:13:09.921337" elapsed="0.000021"/>
</return>
<arg>delete_hero_by_natid</arg>
<arg>${cleanup_dict}</arg>
<status status="PASS" start="2024-11-22T13:13:09.907722" elapsed="0.013702"/>
</kw>
<var name="${item}">['natid-158', 'Orange Xu', 'F', '1996-01-01T23:59:59', '', '1000.50', '10.28', '']</var>
<status status="PASS" start="2024-11-22T13:13:09.906563" elapsed="0.014888"/>
</iter>
<iter>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2024-11-22T13:13:09.922098" level="INFO">${cleanup_dict} = {'value_natid': 'natid-159'}</msg>
<var>${cleanup_dict}</var>
<arg>value_natid=${item[0]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2024-11-22T13:13:09.921592" elapsed="0.000524"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<kw name="Connect To Database" owner="DatabaseLibrary">
<msg time="2024-11-22T13:13:09.922624" level="INFO">Looking for configuration file: 'resources/db.cfg'</msg>
<msg time="2024-11-22T13:13:09.922651" level="INFO">Configuration file doesn't exist</msg>
<msg time="2024-11-22T13:13:09.922766" level="INFO">Connect to DB using : mysql.connector.connect(database='testdb', user='user', password=***, host='localhost', port=3306)</msg>
<arg>${DB_API}</arg>
<arg>${DB_NAME}</arg>
<arg>${DB_USER}</arg>
<arg>${DB_PASSWORD}</arg>
<arg>${DB_HOST}</arg>
<arg>${DB_PORT}</arg>
<doc>Creates a database connection using the DB API 2.0 ``db_module`` and the parameters provided.
Along with listed commonly used arguments (`db_name`, `db_host` etc.)
you can set any other DB module specific parameters as key/value pairs.</doc>
<status status="PASS" start="2024-11-22T13:13:09.922448" elapsed="0.005582"/>
</kw>
<kw name="Update SQL Queries With Arguments Dictionary" owner="sql-helper">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-11-22T13:13:09.928866" level="INFO" html="true">Getting file '&lt;a href="file:///Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/object-repo/sql-queries/delete_hero_by_natid.sql"&gt;/Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/object-repo/sql-queries/delete_hero_by_natid.sql&lt;/a&gt;'.</msg>
<msg time="2024-11-22T13:13:09.928993" level="INFO">${sql_query} = DELETE FROM testdb.working_class_heroes
WHERE natid = "value_natid"</msg>
<var>${sql_query}</var>
<arg>./object-repo/sql-queries/${sql_file_name}.sql</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-11-22T13:13:09.928677" elapsed="0.000335"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2024-11-22T13:13:09.929697" level="INFO">Argument types are:
&lt;class 'robot.utils.dotdict.DotDict'&gt;
&lt;class 'str'&gt;</msg>
<msg time="2024-11-22T13:13:09.929787" level="FAIL">{'value_natid': 'natid-159'} != </msg>
<arg>${args_dict}</arg>
<arg>${EMPTY}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="FAIL" start="2024-11-22T13:13:09.929239" elapsed="0.000604">{'value_natid': 'natid-159'} != </status>
</kw>
<msg time="2024-11-22T13:13:09.929917" level="INFO">${empty_status} = False</msg>
<var>${empty_status}</var>
<arg>Should Be Equal As Strings</arg>
<arg>${args_dict}</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-11-22T13:13:09.929118" elapsed="0.000814"/>
</kw>
<if>
<branch type="IF" condition="'${empty_status}' == '${False}'">
<if>
<branch type="IF" condition="${args_dict}">
<for flavor="IN">
<iter>
<kw name="Convert To String" owner="BuiltIn">
<msg time="2024-11-22T13:13:09.930435" level="INFO">${args_key_str} = value_natid</msg>
<var>${args_key_str}</var>
<arg>${args_key}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="PASS" start="2024-11-22T13:13:09.930320" elapsed="0.000131"/>
</kw>
<kw name="Convert To String" owner="BuiltIn">
<msg time="2024-11-22T13:13:09.930665" level="INFO">${args_value_str} = natid-159</msg>
<var>${args_value_str}</var>
<arg>${args_dict}[${args_key_str}]</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="PASS" start="2024-11-22T13:13:09.930542" elapsed="0.000140"/>
</kw>
<kw name="Replace String" owner="String">
<msg time="2024-11-22T13:13:09.930905" level="INFO">${sql_query} = DELETE FROM testdb.working_class_heroes
WHERE natid = "natid-159"</msg>
<var>${sql_query}</var>
<arg>${sql_query}</arg>
<arg>${args_key_str}</arg>
<arg>${args_value_str}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="PASS" start="2024-11-22T13:13:09.930772" elapsed="0.000150"/>
</kw>
<var name="${args_key}">value_natid</var>
<status status="PASS" start="2024-11-22T13:13:09.930241" elapsed="0.000817"/>
</iter>
<var>${args_key}</var>
<value>@{args_dict}</value>
<status status="PASS" start="2024-11-22T13:13:09.930154" elapsed="0.000938"/>
</for>
<status status="PASS" start="2024-11-22T13:13:09.930100" elapsed="0.001025"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:09.930091" elapsed="0.001057"/>
</if>
<status status="PASS" start="2024-11-22T13:13:09.929993" elapsed="0.001171"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:09.929978" elapsed="0.001205"/>
</if>
<return>
<value>${sql_query}</value>
<status status="PASS" start="2024-11-22T13:13:09.931204" elapsed="0.000023"/>
</return>
<msg time="2024-11-22T13:13:09.931314" level="INFO">${updated_sql_query} = DELETE FROM testdb.working_class_heroes
WHERE natid = "natid-159"</msg>
<var>${updated_sql_query}</var>
<arg>${sql_file_name}</arg>
<arg>${args_dict}</arg>
<status status="PASS" start="2024-11-22T13:13:09.928437" elapsed="0.002894"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<arg>${updated_sql_query}</arg>
<arg>DELETE</arg>
<arg>ignore_case=${True}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-11-22T13:13:09.931549" elapsed="0.000144"/>
</kw>
<msg time="2024-11-22T13:13:09.931755" level="INFO">${delete_status} = True</msg>
<var>${delete_status}</var>
<arg>Should Contain</arg>
<arg>${updated_sql_query}</arg>
<arg>DELETE</arg>
<arg>ignore_case=${True}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-11-22T13:13:09.931434" elapsed="0.000337"/>
</kw>
<if>
<branch type="IF" condition="'${delete_status}' == '${True}'">
<kw name="Execute Sql String" owner="DatabaseLibrary">
<msg time="2024-11-22T13:13:09.932591" level="INFO" html="true">Executing sql:&lt;br&gt;&lt;code style="font-weight: bold;"&gt;DELETE FROM testdb.working_class_heroes
WHERE natid = "natid-159"&lt;/code&gt;</msg>
<msg time="2024-11-22T13:13:09.934436" level="INFO">${json_response} = None</msg>
<var>${json_response}</var>
<arg>${updated_sql_query}</arg>
<doc>Executes the ``sql_string`` as a single SQL command.</doc>
<status status="PASS" start="2024-11-22T13:13:09.931988" elapsed="0.002478"/>
</kw>
<status status="PASS" start="2024-11-22T13:13:09.931826" elapsed="0.002689"/>
</branch>
<branch type="ELSE">
<kw name="Query" owner="DatabaseLibrary">
<var>${json_response}</var>
<arg>${updated_sql_query}</arg>
<arg>return_dict=${True}</arg>
<doc>Runs a query with the ``select_statement`` and returns the result as list of rows.
The type of row values depends on the database module -
usually they are tuples or tuple-like objects.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:09.934658" elapsed="0.000027"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:09.934547" elapsed="0.000174"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:09.931816" elapsed="0.002930"/>
</if>
<kw name="Disconnect From Database" owner="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<status status="PASS" start="2024-11-22T13:13:09.934882" elapsed="0.000159"/>
</kw>
<return>
<value>${json_response}</value>
<status status="PASS" start="2024-11-22T13:13:09.935079" elapsed="0.000025"/>
</return>
<arg>delete_hero_by_natid</arg>
<arg>${cleanup_dict}</arg>
<status status="PASS" start="2024-11-22T13:13:09.922260" elapsed="0.012917"/>
</kw>
<var name="${item}">['natid-159', 'Durian Xu', 'FEMALE', '1996-01-01T23:59:59', '', '1000.50', '10.28', '']</var>
<status status="PASS" start="2024-11-22T13:13:09.921516" elapsed="0.013692"/>
</iter>
<var>${item}</var>
<value>@{csv_list}</value>
<status status="PASS" start="2024-11-22T13:13:09.245638" elapsed="0.689603"/>
</for>
<arg>${negative_test_data_path}</arg>
<doc>Precondition to clear DB data before running test</doc>
<status status="PASS" start="2024-11-22T13:13:09.244776" elapsed="0.690524"/>
</kw>
<kw name="Login As Clerk" owner="clerk">
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T13:13:09.935918" level="INFO">
Logging In As Clerk</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T13:13:09.935821" elapsed="0.000128"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T13:13:09.936039" elapsed="0.000101"/>
</kw>
<arg>Logging In As Clerk</arg>
<status status="PASS" start="2024-11-22T13:13:09.935657" elapsed="0.000527"/>
</kw>
<kw name="Login With Credential" owner="login">
<kw name="Page Should Contain Element With Scroll And Retry" owner="generic">
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Page Should Contain Element With Scroll" owner="generic">
<kw name="Scroll Element Into View" owner="SeleniumLibrary">
<arg>${xpath}</arg>
<doc>Scrolls the element identified by ``locator`` into view.</doc>
<status status="PASS" start="2024-11-22T13:13:09.937086" elapsed="0.277415"/>
</kw>
<kw name="Page Should Contain Element" owner="SeleniumLibrary">
<msg time="2024-11-22T13:13:10.227787" level="INFO">Current page contains element '//h1[normalize-space()='Working Class Hero System']'.</msg>
<arg>${xpath}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<status status="PASS" start="2024-11-22T13:13:10.215098" elapsed="0.012795"/>
</kw>
<arg>${xpath}</arg>
<status status="PASS" start="2024-11-22T13:13:09.936885" elapsed="0.291116"/>
</kw>
<arg>10x</arg>
<arg>50ms</arg>
<arg>Page Should Contain Element With Scroll</arg>
<arg>${xpath}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-11-22T13:13:09.936659" elapsed="0.291394"/>
</kw>
<arg>${lbl_header_login}</arg>
<status status="PASS" start="2024-11-22T13:13:09.936469" elapsed="0.291644"/>
</kw>
<kw name="Get Login Credential" owner="login">
<kw name="Read Csv File To Associative" owner="CSVLibrary">
<msg time="2024-11-22T13:13:10.229406" level="INFO">${credential_dict_list} = [{'role': 'Clerk', 'username': 'clerk', 'password': 'clerk'}, {'role': 'Book Keeper', 'username': 'bk', 'password': 'bk'}]</msg>
<var>${credential_dict_list}</var>
<arg>./test-data/role-credential.csv</arg>
<doc>Read CSV file and return its content as a Python list of dictionaries.</doc>
<status status="PASS" start="2024-11-22T13:13:10.228841" elapsed="0.000601"/>
</kw>
<for flavor="IN">
<iter>
<if>
<branch type="IF" condition="'${item['role']}' == '${role}'">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-11-22T13:13:10.231621" level="INFO">${username} = clerk</msg>
<var>${username}</var>
<arg>${item['username']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-11-22T13:13:10.230909" elapsed="0.000740"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-11-22T13:13:10.232407" level="INFO">${password} = clerk</msg>
<var>${password}</var>
<arg>${item['password']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-11-22T13:13:10.231801" elapsed="0.000630"/>
</kw>
<status status="PASS" start="2024-11-22T13:13:10.229763" elapsed="0.002709"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:10.229746" elapsed="0.002763"/>
</if>
<var name="${item}">{'role': 'Clerk', 'username': 'clerk', 'password': 'clerk'}</var>
<status status="PASS" start="2024-11-22T13:13:10.229701" elapsed="0.002874"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item['role']}' == '${role}'">
<kw name="Set Variable" owner="BuiltIn">
<var>${username}</var>
<arg>${item['username']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:10.233551" elapsed="0.000023"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<var>${password}</var>
<arg>${item['password']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:10.233818" elapsed="0.000026"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:10.232907" elapsed="0.000972"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:10.232893" elapsed="0.001014"/>
</if>
<var name="${item}">{'role': 'Book Keeper', 'username': 'bk', 'password': 'bk'}</var>
<status status="PASS" start="2024-11-22T13:13:10.232785" elapsed="0.001140"/>
</iter>
<var>${item}</var>
<value>@{credential_dict_list}</value>
<status status="PASS" start="2024-11-22T13:13:10.229517" elapsed="0.004454"/>
</for>
<return>
<value>${username}</value>
<value>${password}</value>
<status status="PASS" start="2024-11-22T13:13:10.234024" elapsed="0.000039"/>
</return>
<msg time="2024-11-22T13:13:10.234192" level="INFO">${username} = clerk</msg>
<msg time="2024-11-22T13:13:10.234220" level="INFO">${password} = clerk</msg>
<var>${username}</var>
<var>${password}</var>
<arg>${role}</arg>
<doc>Get Book Keeper Login Credential From Credential Data Files</doc>
<status status="PASS" start="2024-11-22T13:13:10.228465" elapsed="0.005771"/>
</kw>
<kw name="Input Text With Scroll And Retry" owner="generic">
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Input Text With Scroll" owner="generic">
<kw name="Scroll Element Into View" owner="SeleniumLibrary">
<arg>${xpath}</arg>
<doc>Scrolls the element identified by ``locator`` into view.</doc>
<status status="PASS" start="2024-11-22T13:13:10.235043" elapsed="0.291187"/>
</kw>
<kw name="Input Text" owner="SeleniumLibrary">
<msg time="2024-11-22T13:13:10.528729" level="INFO">Typing text 'clerk' into text field '//input[@id='username-in']'.</msg>
<arg>${xpath}</arg>
<arg>${value}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<status status="PASS" start="2024-11-22T13:13:10.526711" elapsed="0.091737"/>
</kw>
<arg>${xpath}</arg>
<arg>${value}</arg>
<status status="PASS" start="2024-11-22T13:13:10.234821" elapsed="0.383716"/>
</kw>
<arg>10x</arg>
<arg>50ms</arg>
<arg>Input Text With Scroll</arg>
<arg>${xpath}</arg>
<arg>${value}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-11-22T13:13:10.234605" elapsed="0.383965"/>
</kw>
<arg>${input_username_login}</arg>
<arg>${username}</arg>
<status status="PASS" start="2024-11-22T13:13:10.234358" elapsed="0.384247"/>
</kw>
<kw name="Input Text With Scroll And Retry" owner="generic">
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Input Text With Scroll" owner="generic">
<kw name="Scroll Element Into View" owner="SeleniumLibrary">
<arg>${xpath}</arg>
<doc>Scrolls the element identified by ``locator`` into view.</doc>
<status status="PASS" start="2024-11-22T13:13:10.619227" elapsed="0.273963"/>
</kw>
<kw name="Input Text" owner="SeleniumLibrary">
<msg time="2024-11-22T13:13:10.894793" level="INFO">Typing text 'clerk' into text field '//input[@id='password-in']'.</msg>
<arg>${xpath}</arg>
<arg>${value}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<status status="PASS" start="2024-11-22T13:13:10.894093" elapsed="0.048588"/>
</kw>
<arg>${xpath}</arg>
<arg>${value}</arg>
<status status="PASS" start="2024-11-22T13:13:10.619079" elapsed="0.323674"/>
</kw>
<arg>10x</arg>
<arg>50ms</arg>
<arg>Input Text With Scroll</arg>
<arg>${xpath}</arg>
<arg>${value}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-11-22T13:13:10.618952" elapsed="0.323832"/>
</kw>
<arg>${input_password_login}</arg>
<arg>${password}</arg>
<status status="PASS" start="2024-11-22T13:13:10.618725" elapsed="0.324094"/>
</kw>
<kw name="Click Element With Scroll And Retry" owner="generic">
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Click Element With Scroll" owner="generic">
<kw name="Scroll Element Into View" owner="SeleniumLibrary">
<arg>${xpath}</arg>
<doc>Scrolls the element identified by ``locator`` into view.</doc>
<status status="PASS" start="2024-11-22T13:13:10.943370" elapsed="0.262870"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-11-22T13:13:11.207944" level="INFO">Clicking element '//input[@type='submit']'.</msg>
<arg>${xpath}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-11-22T13:13:11.206987" elapsed="0.252331"/>
</kw>
<arg>${xpath}</arg>
<status status="PASS" start="2024-11-22T13:13:10.943241" elapsed="0.516254"/>
</kw>
<arg>10x</arg>
<arg>50ms</arg>
<arg>Click Element With Scroll</arg>
<arg>${xpath}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-11-22T13:13:10.943119" elapsed="0.516422"/>
</kw>
<arg>${btn_submit_login}</arg>
<status status="PASS" start="2024-11-22T13:13:10.942926" elapsed="0.516654"/>
</kw>
<arg>Clerk</arg>
<doc>Login With Credential</doc>
<status status="PASS" start="2024-11-22T13:13:09.936294" elapsed="1.523331"/>
</kw>
<doc>Login As Clerk</doc>
<status status="PASS" start="2024-11-22T13:13:09.935464" elapsed="1.524196"/>
</kw>
<kw name="Upload CSV Files Via Clerk Dashboard" owner="clerk">
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T13:13:11.460307" level="INFO">
Upload CSV files from clerk dashboard to create heroes</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T13:13:11.460228" elapsed="0.000099"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T13:13:11.460378" elapsed="0.000089"/>
</kw>
<arg>Upload CSV files from clerk dashboard to create heroes</arg>
<status status="PASS" start="2024-11-22T13:13:11.460109" elapsed="0.000390"/>
</kw>
<kw name="Page Should Contain Element With Scroll And Retry" owner="generic">
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Page Should Contain Element With Scroll" owner="generic">
<kw name="Scroll Element Into View" owner="SeleniumLibrary">
<arg>${xpath}</arg>
<doc>Scrolls the element identified by ``locator`` into view.</doc>
<status status="PASS" start="2024-11-22T13:13:11.460971" elapsed="0.281883"/>
</kw>
<kw name="Page Should Contain Element" owner="SeleniumLibrary">
<msg time="2024-11-22T13:13:11.752297" level="INFO">Current page contains element '//h1[normalize-space()='Clerk Dashboard']'.</msg>
<arg>${xpath}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<status status="PASS" start="2024-11-22T13:13:11.743736" elapsed="0.008663"/>
</kw>
<arg>${xpath}</arg>
<status status="PASS" start="2024-11-22T13:13:11.460832" elapsed="0.291673"/>
</kw>
<arg>10x</arg>
<arg>50ms</arg>
<arg>Page Should Contain Element With Scroll</arg>
<arg>${xpath}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-11-22T13:13:11.460710" elapsed="0.291843"/>
</kw>
<arg>${lbl_header_clerk}</arg>
<status status="PASS" start="2024-11-22T13:13:11.460565" elapsed="0.292039"/>
</kw>
<kw name="Click Element With Scroll And Retry" owner="generic">
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Click Element With Scroll" owner="generic">
<kw name="Scroll Element Into View" owner="SeleniumLibrary">
<arg>${xpath}</arg>
<doc>Scrolls the element identified by ``locator`` into view.</doc>
<status status="PASS" start="2024-11-22T13:13:11.753618" elapsed="0.270832"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-11-22T13:13:12.025168" level="INFO">Clicking element '//button[@id='dropdownMenuButton2']'.</msg>
<arg>${xpath}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-11-22T13:13:12.024814" elapsed="0.047353"/>
</kw>
<arg>${xpath}</arg>
<status status="PASS" start="2024-11-22T13:13:11.753370" elapsed="0.318897"/>
</kw>
<arg>10x</arg>
<arg>50ms</arg>
<arg>Click Element With Scroll</arg>
<arg>${xpath}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-11-22T13:13:11.753150" elapsed="0.319294"/>
</kw>
<arg>${btn_add_hero_clerk}</arg>
<status status="PASS" start="2024-11-22T13:13:11.752808" elapsed="0.319679"/>
</kw>
<kw name="Click Element With Scroll And Retry" owner="generic">
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Click Element With Scroll" owner="generic">
<kw name="Scroll Element Into View" owner="SeleniumLibrary">
<arg>${xpath}</arg>
<doc>Scrolls the element identified by ``locator`` into view.</doc>
<status status="PASS" start="2024-11-22T13:13:12.073207" elapsed="0.269582"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-11-22T13:13:12.344034" level="INFO">Clicking element '//a[@class='dropdown-item' and text()='Upload a csv file']'.</msg>
<arg>${xpath}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-11-22T13:13:12.343396" elapsed="0.128617"/>
</kw>
<arg>${xpath}</arg>
<status status="PASS" start="2024-11-22T13:13:12.073054" elapsed="0.399104"/>
</kw>
<arg>10x</arg>
<arg>50ms</arg>
<arg>Click Element With Scroll</arg>
<arg>${xpath}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-11-22T13:13:12.072905" elapsed="0.399291"/>
</kw>
<arg>${dropdown_option_upload_csv_clerk}</arg>
<status status="PASS" start="2024-11-22T13:13:12.072639" elapsed="0.399595"/>
</kw>
<kw name="Page Should Contain Element With Scroll And Retry" owner="generic">
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Page Should Contain Element With Scroll" owner="generic">
<kw name="Scroll Element Into View" owner="SeleniumLibrary">
<arg>${xpath}</arg>
<doc>Scrolls the element identified by ``locator`` into view.</doc>
<status status="PASS" start="2024-11-22T13:13:12.472988" elapsed="0.286792"/>
</kw>
<kw name="Page Should Contain Element" owner="SeleniumLibrary">
<msg time="2024-11-22T13:13:12.769233" level="INFO">Current page contains element '//input[@id='upload-csv-file']'.</msg>
<arg>${xpath}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<status status="PASS" start="2024-11-22T13:13:12.760775" elapsed="0.008559"/>
</kw>
<arg>${xpath}</arg>
<status status="PASS" start="2024-11-22T13:13:12.472849" elapsed="0.296588"/>
</kw>
<arg>10x</arg>
<arg>50ms</arg>
<arg>Page Should Contain Element With Scroll</arg>
<arg>${xpath}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-11-22T13:13:12.472706" elapsed="0.296780"/>
</kw>
<arg>${input_upload_csv_file_clerk}</arg>
<status status="PASS" start="2024-11-22T13:13:12.472426" elapsed="0.297119"/>
</kw>
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T13:13:12.770231" level="INFO">
Uploading CSV Files From Path "/Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/test-data/US2-data-negative.csv"</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T13:13:12.770099" elapsed="0.000173"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T13:13:12.770390" elapsed="0.000170"/>
</kw>
<arg>Uploading CSV Files From Path "${test_data_path}"</arg>
<status status="PASS" start="2024-11-22T13:13:12.769751" elapsed="0.000864"/>
</kw>
<kw name="Choose File" owner="SeleniumLibrary">
<msg time="2024-11-22T13:13:12.771013" level="INFO">Sending /Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/test-data/US2-data-negative.csv to browser.</msg>
<arg>${input_upload_csv_file_clerk}</arg>
<arg>${test_data_path}</arg>
<doc>Inputs the ``file_path`` into the file input field ``locator``.</doc>
<status status="PASS" start="2024-11-22T13:13:12.770763" elapsed="0.030474"/>
</kw>
<kw name="Click Element With Scroll And Retry" owner="generic">
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Click Element With Scroll" owner="generic">
<kw name="Scroll Element Into View" owner="SeleniumLibrary">
<arg>${xpath}</arg>
<doc>Scrolls the element identified by ``locator`` into view.</doc>
<status status="PASS" start="2024-11-22T13:13:12.802084" elapsed="0.263992"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-11-22T13:13:13.066355" level="INFO">Clicking element '//button[normalize-space()='Create']'.</msg>
<arg>${xpath}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-11-22T13:13:13.066212" elapsed="0.025843"/>
</kw>
<arg>${xpath}</arg>
<status status="PASS" start="2024-11-22T13:13:12.801938" elapsed="0.290199"/>
</kw>
<arg>10x</arg>
<arg>50ms</arg>
<arg>Click Element With Scroll</arg>
<arg>${xpath}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-11-22T13:13:12.801792" elapsed="0.290380"/>
</kw>
<arg>${btn_create_clerk}</arg>
<status status="PASS" start="2024-11-22T13:13:12.801541" elapsed="0.290669"/>
</kw>
<if>
<branch type="IF" condition="'${flow}' == 'Positive'">
<kw name="Page Should Contain Element With Scroll And Retry" owner="generic">
<arg>${lbl_created_success_clerk}</arg>
<status status="NOT RUN" start="2024-11-22T13:13:13.092491" elapsed="0.000020"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:13.092271" elapsed="0.000263"/>
</branch>
<branch type="ELSE">
<kw name="Page Should Contain Element With Scroll And Retry" owner="generic">
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Page Should Contain Element With Scroll" owner="generic">
<kw name="Scroll Element Into View" owner="SeleniumLibrary">
<msg time="2024-11-22T13:13:13.224369" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="screenshots/selenium-screenshot-4.png"&gt;&lt;img src="screenshots/selenium-screenshot-4.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg time="2024-11-22T13:13:13.224493" level="FAIL">Element with locator '//div[@class='bg-warning pt-2']' not found.</msg>
<arg>${xpath}</arg>
<doc>Scrolls the element identified by ``locator`` into view.</doc>
<status status="FAIL" start="2024-11-22T13:13:13.093113" elapsed="0.131841">Element with locator '//div[@class='bg-warning pt-2']' not found.</status>
</kw>
<kw name="Page Should Contain Element" owner="SeleniumLibrary">
<arg>${xpath}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.225077" elapsed="0.000015"/>
</kw>
<arg>${xpath}</arg>
<status status="FAIL" start="2024-11-22T13:13:13.092967" elapsed="0.132184">Element with locator '//div[@class='bg-warning pt-2']' not found.</status>
</kw>
<kw name="Page Should Contain Element With Scroll" owner="generic">
<kw name="Scroll Element Into View" owner="SeleniumLibrary">
<msg time="2024-11-22T13:13:13.361640" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="screenshots/selenium-screenshot-5.png"&gt;&lt;img src="screenshots/selenium-screenshot-5.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg time="2024-11-22T13:13:13.361736" level="FAIL">Element with locator '//div[@class='bg-warning pt-2']' not found.</msg>
<arg>${xpath}</arg>
<doc>Scrolls the element identified by ``locator`` into view.</doc>
<status status="FAIL" start="2024-11-22T13:13:13.275796" elapsed="0.086173">Element with locator '//div[@class='bg-warning pt-2']' not found.</status>
</kw>
<kw name="Page Should Contain Element" owner="SeleniumLibrary">
<arg>${xpath}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.362089" elapsed="0.000016"/>
</kw>
<arg>${xpath}</arg>
<status status="FAIL" start="2024-11-22T13:13:13.275547" elapsed="0.086608">Element with locator '//div[@class='bg-warning pt-2']' not found.</status>
</kw>
<kw name="Page Should Contain Element With Scroll" owner="generic">
<kw name="Scroll Element Into View" owner="SeleniumLibrary">
<arg>${xpath}</arg>
<doc>Scrolls the element identified by ``locator`` into view.</doc>
<status status="PASS" start="2024-11-22T13:13:13.413264" elapsed="0.264996"/>
</kw>
<kw name="Page Should Contain Element" owner="SeleniumLibrary">
<msg time="2024-11-22T13:13:13.687264" level="INFO">Current page contains element '//div[@class='bg-warning pt-2']'.</msg>
<arg>${xpath}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<status status="PASS" start="2024-11-22T13:13:13.679295" elapsed="0.008082"/>
</kw>
<arg>${xpath}</arg>
<status status="PASS" start="2024-11-22T13:13:13.413047" elapsed="0.274451"/>
</kw>
<arg>10x</arg>
<arg>50ms</arg>
<arg>Page Should Contain Element With Scroll</arg>
<arg>${xpath}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-11-22T13:13:13.092827" elapsed="0.594746"/>
</kw>
<arg>${lbl_created_unsuccess_warning_clerk}</arg>
<status status="PASS" start="2024-11-22T13:13:13.092623" elapsed="0.595029"/>
</kw>
<status status="PASS" start="2024-11-22T13:13:13.092556" elapsed="0.595143"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:13.092252" elapsed="0.595501"/>
</if>
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T13:13:13.688563" level="INFO">
Uploaded Successfully</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T13:13:13.688380" elapsed="0.000231"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T13:13:13.688749" elapsed="0.000205"/>
</kw>
<arg>Uploaded Successfully</arg>
<status status="PASS" start="2024-11-22T13:13:13.687997" elapsed="0.001026"/>
</kw>
<arg>${negative_test_data_path}</arg>
<arg>Negative</arg>
<doc>Upload CSV files from clerk dashboard to create heroes</doc>
<status status="PASS" start="2024-11-22T13:13:11.459929" elapsed="2.229151"/>
</kw>
<kw name="Common Test Teardown" owner="generic" type="TEARDOWN">
<kw name="Capture Page Screenshot" owner="SeleniumLibrary">
<msg time="2024-11-22T13:13:13.828436" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="screenshots/Test%20Case%202%20-%20Clerk%20Dashboard%20Create%20Heroes%20Upload%20CSV%20File%20-%20Negative%20-%20Partial%20Data%20Wrong%20Format.png"&gt;&lt;img src="screenshots/Test%20Case%202%20-%20Clerk%20Dashboard%20Create%20Heroes%20Upload%20CSV%20File%20-%20Negative%20-%20Partial%20Data%20Wrong%20Format.png" width="800px"&gt;&lt;/a&gt;</msg>
<arg>${OUTPUT_DIR}/screenshots/${TEST NAME}.png</arg>
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<status status="PASS" start="2024-11-22T13:13:13.689748" elapsed="0.138740"/>
</kw>
<kw name="Close Browser" owner="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" start="2024-11-22T13:13:13.828611" elapsed="0.070459"/>
</kw>
<status status="PASS" start="2024-11-22T13:13:13.689445" elapsed="0.209691"/>
</kw>
<status status="PASS" start="2024-11-22T13:13:08.099919" elapsed="5.799274"/>
</test>
<test id="s1-t3" name="Test Case 3 - Partial Data Wrong Format - Positive" line="28">
<kw name="Verify Partial Uploaded Data In DB" owner="clerk">
<kw name="Read Csv File To List" owner="CSVLibrary">
<msg time="2024-11-22T13:13:13.900013" level="INFO">${csv_list} = [['natid-150', 'William Chu', 'MALE', '1996-01-01T23:59:59', '', '1000.12', '10.00', ''], ['natid-151', 'Christopher', 'MALE', '1996-01-01T23:59:59', '', '1000.00', '10.00', ''], ['natid-152', 'Hanks1...</msg>
<var>${csv_list}</var>
<arg>${test_data_path}</arg>
<doc>Read CSV file and return its content as a Python list of tuples.</doc>
<status status="PASS" start="2024-11-22T13:13:13.899826" elapsed="0.000200"/>
</kw>
<if>
<branch type="IF" condition="'${flow}' == 'Positive'">
<for flavor="IN">
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2024-11-22T13:13:13.900882" level="INFO">${dict} = {'value_natid': 'natid-150'}</msg>
<var>${dict}</var>
<arg>value_natid=${item[0]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2024-11-22T13:13:13.900586" elapsed="0.000307"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<kw name="Connect To Database" owner="DatabaseLibrary">
<msg time="2024-11-22T13:13:13.901306" level="INFO">Looking for configuration file: 'resources/db.cfg'</msg>
<msg time="2024-11-22T13:13:13.901324" level="INFO">Configuration file doesn't exist</msg>
<msg time="2024-11-22T13:13:13.901430" level="INFO">Connect to DB using : mysql.connector.connect(database='testdb', user='user', password=***, host='localhost', port=3306)</msg>
<arg>${DB_API}</arg>
<arg>${DB_NAME}</arg>
<arg>${DB_USER}</arg>
<arg>${DB_PASSWORD}</arg>
<arg>${DB_HOST}</arg>
<arg>${DB_PORT}</arg>
<doc>Creates a database connection using the DB API 2.0 ``db_module`` and the parameters provided.
Along with listed commonly used arguments (`db_name`, `db_host` etc.)
you can set any other DB module specific parameters as key/value pairs.</doc>
<status status="PASS" start="2024-11-22T13:13:13.901119" elapsed="0.018730"/>
</kw>
<kw name="Update SQL Queries With Arguments Dictionary" owner="sql-helper">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-11-22T13:13:13.920220" level="INFO" html="true">Getting file '&lt;a href="file:///Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/object-repo/sql-queries/select_hero_by_natid.sql"&gt;/Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/object-repo/sql-queries/select_hero_by_natid.sql&lt;/a&gt;'.</msg>
<msg time="2024-11-22T13:13:13.920287" level="INFO">${sql_query} = SELECT *
FROM testdb.working_class_heroes
WHERE natid='value_natid';</msg>
<var>${sql_query}</var>
<arg>./object-repo/sql-queries/${sql_file_name}.sql</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-11-22T13:13:13.920117" elapsed="0.000179"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2024-11-22T13:13:13.920671" level="INFO">Argument types are:
&lt;class 'robot.utils.dotdict.DotDict'&gt;
&lt;class 'str'&gt;</msg>
<msg time="2024-11-22T13:13:13.920717" level="FAIL">{'value_natid': 'natid-150'} != </msg>
<arg>${args_dict}</arg>
<arg>${EMPTY}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="FAIL" start="2024-11-22T13:13:13.920429" elapsed="0.000320">{'value_natid': 'natid-150'} != </status>
</kw>
<msg time="2024-11-22T13:13:13.920787" level="INFO">${empty_status} = False</msg>
<var>${empty_status}</var>
<arg>Should Be Equal As Strings</arg>
<arg>${args_dict}</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-11-22T13:13:13.920363" elapsed="0.000433"/>
</kw>
<if>
<branch type="IF" condition="'${empty_status}' == '${False}'">
<if>
<branch type="IF" condition="${args_dict}">
<for flavor="IN">
<iter>
<kw name="Convert To String" owner="BuiltIn">
<msg time="2024-11-22T13:13:13.921070" level="INFO">${args_key_str} = value_natid</msg>
<var>${args_key_str}</var>
<arg>${args_key}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="PASS" start="2024-11-22T13:13:13.921009" elapsed="0.000070"/>
</kw>
<kw name="Convert To String" owner="BuiltIn">
<msg time="2024-11-22T13:13:13.921192" level="INFO">${args_value_str} = natid-150</msg>
<var>${args_value_str}</var>
<arg>${args_dict}[${args_key_str}]</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="PASS" start="2024-11-22T13:13:13.921127" elapsed="0.000073"/>
</kw>
<kw name="Replace String" owner="String">
<msg time="2024-11-22T13:13:13.921374" level="INFO">${sql_query} = SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-150';</msg>
<var>${sql_query}</var>
<arg>${sql_query}</arg>
<arg>${args_key_str}</arg>
<arg>${args_value_str}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="PASS" start="2024-11-22T13:13:13.921246" elapsed="0.000138"/>
</kw>
<var name="${args_key}">value_natid</var>
<status status="PASS" start="2024-11-22T13:13:13.920965" elapsed="0.000437"/>
</iter>
<var>${args_key}</var>
<value>@{args_dict}</value>
<status status="PASS" start="2024-11-22T13:13:13.920914" elapsed="0.000505"/>
</for>
<status status="PASS" start="2024-11-22T13:13:13.920887" elapsed="0.000549"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:13.920882" elapsed="0.000567"/>
</if>
<status status="PASS" start="2024-11-22T13:13:13.920829" elapsed="0.000628"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:13.920821" elapsed="0.000646"/>
</if>
<return>
<value>${sql_query}</value>
<status status="PASS" start="2024-11-22T13:13:13.921480" elapsed="0.000016"/>
</return>
<msg time="2024-11-22T13:13:13.921541" level="INFO">${updated_sql_query} = SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-150';</msg>
<var>${updated_sql_query}</var>
<arg>${sql_file_name}</arg>
<arg>${args_dict}</arg>
<status status="PASS" start="2024-11-22T13:13:13.919980" elapsed="0.001571"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-11-22T13:13:13.921767" level="FAIL">'SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-150';' does not contain 'delete'</msg>
<arg>${updated_sql_query}</arg>
<arg>DELETE</arg>
<arg>ignore_case=${True}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-11-22T13:13:13.921665" elapsed="0.000125">'SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-150';' does not contain 'delete'</status>
</kw>
<msg time="2024-11-22T13:13:13.921826" level="INFO">${delete_status} = False</msg>
<var>${delete_status}</var>
<arg>Should Contain</arg>
<arg>${updated_sql_query}</arg>
<arg>DELETE</arg>
<arg>ignore_case=${True}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-11-22T13:13:13.921604" elapsed="0.000231"/>
</kw>
<if>
<branch type="IF" condition="'${delete_status}' == '${True}'">
<kw name="Execute Sql String" owner="DatabaseLibrary">
<var>${json_response}</var>
<arg>${updated_sql_query}</arg>
<doc>Executes the ``sql_string`` as a single SQL command.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.921941" elapsed="0.000010"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:13.921863" elapsed="0.000103"/>
</branch>
<branch type="ELSE">
<kw name="Query" owner="DatabaseLibrary">
<msg time="2024-11-22T13:13:13.924206" level="INFO" html="true">Executing sql:&lt;br&gt;&lt;code style="font-weight: bold;"&gt;SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-150';&lt;/code&gt;</msg>
<msg time="2024-11-22T13:13:13.926122" level="INFO" html="true">&lt;div style="max-width: 100%; overflow-x: auto;"&gt;&lt;table style="width: auto; border-collapse: collapse; border: 2px solid rgb(140 140 140)"&gt;&lt;caption style="text-align: left; font-weight: bold; padding: 5px;"&gt;Query returned 1 rows&lt;/caption&gt;&lt;tr&gt;&lt;th scope="col" style="background-color: #d6ecd4; border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;Row&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;id&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;created_at&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;create_by&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;updated_at&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;updated_by&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;birth_date&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;brownie_points&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;death_date&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;gender&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;name&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;natid&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;salary&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;tax_paid&lt;/th&gt;&lt;/tr&gt;&lt;tr style="background-color: #eee;"&gt;&lt;th scope="row" style="background-color: #d6ecd4;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;0&lt;/th&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;da7577d1-6d52-4519-a84a-fa05bfdfe0d4&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;2024-11-22 13:13:13.250346&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;SYSTEM&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;2024-11-22 13:13:13.250346&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;SYSTEM&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;1996-01-01 23:59:59&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;None&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;None&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;MALE&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;William Chu&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;natid-150&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;1000.12&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;10.0&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;</msg>
<msg time="2024-11-22T13:13:13.927284" level="INFO">${json_response} = [{'id': 'da7577d1-6d52-4519-a84a-fa05bfdfe0d4', 'created_at': datetime.datetime(2024, 11, 22, 13, 13, 13, 250346), 'create_by': 'SYSTEM', 'updated_at': datetime.datetime(2024, 11, 22, 13, 13, 13, 2503...</msg>
<var>${json_response}</var>
<arg>${updated_sql_query}</arg>
<arg>return_dict=${True}</arg>
<doc>Runs a query with the ``select_statement`` and returns the result as list of rows.
The type of row values depends on the database module -
usually they are tuples or tuple-like objects.</doc>
<status status="PASS" start="2024-11-22T13:13:13.922019" elapsed="0.005283"/>
</kw>
<status status="PASS" start="2024-11-22T13:13:13.921978" elapsed="0.005353"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:13.921857" elapsed="0.005580"/>
</if>
<kw name="Disconnect From Database" owner="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<status status="PASS" start="2024-11-22T13:13:13.927506" elapsed="0.000124"/>
</kw>
<return>
<value>${json_response}</value>
<status status="PASS" start="2024-11-22T13:13:13.927654" elapsed="0.000021"/>
</return>
<msg time="2024-11-22T13:13:13.927741" level="INFO">${sql_response} = [{'id': 'da7577d1-6d52-4519-a84a-fa05bfdfe0d4', 'created_at': datetime.datetime(2024, 11, 22, 13, 13, 13, 250346), 'create_by': 'SYSTEM', 'updated_at': datetime.datetime(2024, 11, 22, 13, 13, 13, 2503...</msg>
<var>${sql_response}</var>
<arg>select_hero_by_natid</arg>
<arg>${dict}</arg>
<status status="PASS" start="2024-11-22T13:13:13.900989" elapsed="0.026763"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${sql_response} == []</arg>
<arg>Fail</arg>
<arg>${natid} not created in DB</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-11-22T13:13:13.927821" elapsed="0.000180"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-11-22T13:13:13.928139" level="INFO">${sql_response} = {'id': 'da7577d1-6d52-4519-a84a-fa05bfdfe0d4', 'created_at': datetime.datetime(2024, 11, 22, 13, 13, 13, 250346), 'create_by': 'SYSTEM', 'updated_at': datetime.datetime(2024, 11, 22, 13, 13, 13, 25034...</msg>
<var>${sql_response}</var>
<arg>${sql_response}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-11-22T13:13:13.928063" elapsed="0.000087"/>
</kw>
<kw name="Compare String" owner="generic">
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T13:13:13.929002" level="INFO">
Expected natid:
natid-150
Actual natid:
natid-150</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T13:13:13.928952" elapsed="0.000067"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T13:13:13.929068" elapsed="0.000065"/>
</kw>
<arg>Expected ${compare_title}:\n${expected_string}\nActual ${compare_title}:\n${actual_string}</arg>
<status status="PASS" start="2024-11-22T13:13:13.928821" elapsed="0.000340"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${expected_string}</arg>
<arg>${actual_string}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-11-22T13:13:13.929211" elapsed="0.000068"/>
</kw>
<arg>${item[0]}</arg>
<arg>${sql_response['natid']}</arg>
<arg>natid</arg>
<doc>Compare Strings</doc>
<status status="PASS" start="2024-11-22T13:13:13.928213" elapsed="0.001091"/>
</kw>
<kw name="Compare String" owner="generic">
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T13:13:13.930142" level="INFO">
Expected name:
William Chu
Actual name:
William Chu</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T13:13:13.930098" elapsed="0.000060"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T13:13:13.930204" elapsed="0.000052"/>
</kw>
<arg>Expected ${compare_title}:\n${expected_string}\nActual ${compare_title}:\n${actual_string}</arg>
<status status="PASS" start="2024-11-22T13:13:13.929945" elapsed="0.000334"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${expected_string}</arg>
<arg>${actual_string}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-11-22T13:13:13.930334" elapsed="0.000066"/>
</kw>
<arg>${item[1]}</arg>
<arg>${sql_response['name']}</arg>
<arg>name</arg>
<doc>Compare Strings</doc>
<status status="PASS" start="2024-11-22T13:13:13.929363" elapsed="0.001062"/>
</kw>
<kw name="Compare String" owner="generic">
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T13:13:13.931247" level="INFO">
Expected gender:
MALE
Actual gender:
MALE</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T13:13:13.931204" elapsed="0.000059"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T13:13:13.931308" elapsed="0.000052"/>
</kw>
<arg>Expected ${compare_title}:\n${expected_string}\nActual ${compare_title}:\n${actual_string}</arg>
<status status="PASS" start="2024-11-22T13:13:13.930974" elapsed="0.000411"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${expected_string}</arg>
<arg>${actual_string}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-11-22T13:13:13.931431" elapsed="0.000062"/>
</kw>
<arg>${item[2]}</arg>
<arg>${sql_response['gender']}</arg>
<arg>gender</arg>
<doc>Compare Strings</doc>
<status status="PASS" start="2024-11-22T13:13:13.930477" elapsed="0.001040"/>
</kw>
<kw name="Compare Date" owner="generic">
<if>
<branch type="IF" condition="'${expected_date}' == '${EMPTY}'">
<kw name="Log and Log To Console" owner="generic">
<arg>Expected ${compare_title}:\n${None}\nActual ${compare_title}:\n${actual_date}</arg>
<status status="NOT RUN" start="2024-11-22T13:13:13.932299" elapsed="0.000011"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${None}</arg>
<arg>${actual_date}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.932354" elapsed="0.000010"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:13.932062" elapsed="0.000317"/>
</branch>
<branch type="ELSE">
<kw name="Convert Date" owner="DateTime">
<msg time="2024-11-22T13:13:13.932566" level="INFO">${expected_date} = 1996-01-01 23:59:59.000000</msg>
<var>${expected_date}</var>
<arg>${expected_date}</arg>
<arg>result_format=%Y-%m-%d %H:%M:%S.%f</arg>
<doc>Converts between supported `date formats`.</doc>
<status status="PASS" start="2024-11-22T13:13:13.932441" elapsed="0.000134"/>
</kw>
<kw name="Convert Date" owner="DateTime">
<msg time="2024-11-22T13:13:13.932688" level="INFO">${actual_date} = 1996-01-01 23:59:59.000000</msg>
<var>${actual_date}</var>
<arg>${actual_date}</arg>
<arg>result_format=%Y-%m-%d %H:%M:%S.%f</arg>
<doc>Converts between supported `date formats`.</doc>
<status status="PASS" start="2024-11-22T13:13:13.932622" elapsed="0.000074"/>
</kw>
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T13:13:13.932906" level="INFO">
Expected birth_date:
1996-01-01 23:59:59.000000
Actual birth_date:
1996-01-01 23:59:59.000000</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T13:13:13.932865" elapsed="0.000057"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T13:13:13.932965" elapsed="0.000053"/>
</kw>
<arg>Expected ${compare_title}:\n${expected_date}\nActual ${compare_title}:\n${actual_date}</arg>
<status status="PASS" start="2024-11-22T13:13:13.932750" elapsed="0.000293"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${expected_date}</arg>
<arg>${actual_date}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-11-22T13:13:13.933097" elapsed="0.000061"/>
</kw>
<status status="PASS" start="2024-11-22T13:13:13.932392" elapsed="0.000782"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:13.932054" elapsed="0.001132"/>
</if>
<arg>${item[3]}</arg>
<arg>${sql_response['birth_date']}</arg>
<arg>birth_date</arg>
<doc>Format date and compare</doc>
<status status="PASS" start="2024-11-22T13:13:13.931594" elapsed="0.001608"/>
</kw>
<kw name="Compare Date" owner="generic">
<if>
<branch type="IF" condition="'${expected_date}' == '${EMPTY}'">
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T13:13:13.934273" level="INFO">
Expected death_date:
None
Actual death_date:
None</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T13:13:13.934219" elapsed="0.000072"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T13:13:13.934346" elapsed="0.000054"/>
</kw>
<arg>Expected ${compare_title}:\n${None}\nActual ${compare_title}:\n${actual_date}</arg>
<status status="PASS" start="2024-11-22T13:13:13.934087" elapsed="0.000343"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${None}</arg>
<arg>${actual_date}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-11-22T13:13:13.934499" elapsed="0.000062"/>
</kw>
<status status="PASS" start="2024-11-22T13:13:13.933823" elapsed="0.000756"/>
</branch>
<branch type="ELSE">
<kw name="Convert Date" owner="DateTime">
<var>${expected_date}</var>
<arg>${expected_date}</arg>
<arg>result_format=%Y-%m-%d %H:%M:%S.%f</arg>
<doc>Converts between supported `date formats`.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.934656" elapsed="0.000013"/>
</kw>
<kw name="Convert Date" owner="DateTime">
<var>${actual_date}</var>
<arg>${actual_date}</arg>
<arg>result_format=%Y-%m-%d %H:%M:%S.%f</arg>
<doc>Converts between supported `date formats`.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.934721" elapsed="0.000012"/>
</kw>
<kw name="Log and Log To Console" owner="generic">
<arg>Expected ${compare_title}:\n${expected_date}\nActual ${compare_title}:\n${actual_date}</arg>
<status status="NOT RUN" start="2024-11-22T13:13:13.934797" elapsed="0.000013"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${expected_date}</arg>
<arg>${actual_date}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.934853" elapsed="0.000007"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:13.934592" elapsed="0.000281"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:13.933817" elapsed="0.001068"/>
</if>
<arg>${item[4]}</arg>
<arg>${sql_response['death_date']}</arg>
<arg>death_date</arg>
<doc>Format date and compare</doc>
<status status="PASS" start="2024-11-22T13:13:13.933333" elapsed="0.001573"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<if>
<branch type="IF" condition="'${expected_int}' == '${EMPTY}'">
<kw name="Log and Log To Console" owner="generic">
<arg>Expected ${compare_title}:\n${None}\nActual ${compare_title}:\n${actual_int}</arg>
<status status="NOT RUN" start="2024-11-22T13:13:13.935694" elapsed="0.000010"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${None}</arg>
<arg>${actual_int}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.935748" elapsed="0.000008"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:13.935438" elapsed="0.000332"/>
</branch>
<branch type="ELSE">
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T13:13:13.935978" level="INFO">
Expected salary:
1000.12
Actual salary:
1000.12</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T13:13:13.935939" elapsed="0.000055"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T13:13:13.936038" elapsed="0.000051"/>
</kw>
<arg>Expected ${compare_title}:\n${expected_int}\nActual ${compare_title}:\n${actual_int}</arg>
<status status="PASS" start="2024-11-22T13:13:13.935821" elapsed="0.000291"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-11-22T13:13:13.936229" level="INFO">${expected_int} = 1000.12</msg>
<var>${expected_int}</var>
<arg>'{:.2f}'.format(float(${expected_int}))</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-11-22T13:13:13.936156" elapsed="0.000082"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-11-22T13:13:13.936341" level="INFO">${actual_int} = 1000.12</msg>
<var>${actual_int}</var>
<arg>'{:.2f}'.format(float(${actual_int}))</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-11-22T13:13:13.936282" elapsed="0.000067"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${expected_int}</arg>
<arg>${actual_int}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-11-22T13:13:13.936394" elapsed="0.000057"/>
</kw>
<status status="PASS" start="2024-11-22T13:13:13.935782" elapsed="0.000685"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:13.935433" elapsed="0.001045"/>
</if>
<arg>${item[5]}</arg>
<arg>${sql_response['salary']}</arg>
<arg>salary</arg>
<doc>Normalize the numbers and compare</doc>
<status status="PASS" start="2024-11-22T13:13:13.934991" elapsed="0.001501"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<if>
<branch type="IF" condition="'${expected_int}' == '${EMPTY}'">
<kw name="Log and Log To Console" owner="generic">
<arg>Expected ${compare_title}:\n${None}\nActual ${compare_title}:\n${actual_int}</arg>
<status status="NOT RUN" start="2024-11-22T13:13:13.937233" elapsed="0.000011"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${None}</arg>
<arg>${actual_int}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.937286" elapsed="0.000008"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:13.937016" elapsed="0.000292"/>
</branch>
<branch type="ELSE">
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T13:13:13.938205" level="INFO">
Expected tax_paid:
10.00
Actual tax_paid:
10.0</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T13:13:13.938165" elapsed="0.000056"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T13:13:13.938264" elapsed="0.000051"/>
</kw>
<arg>Expected ${compare_title}:\n${expected_int}\nActual ${compare_title}:\n${actual_int}</arg>
<status status="PASS" start="2024-11-22T13:13:13.938046" elapsed="0.000294"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-11-22T13:13:13.938451" level="INFO">${expected_int} = 10.00</msg>
<var>${expected_int}</var>
<arg>'{:.2f}'.format(float(${expected_int}))</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-11-22T13:13:13.938384" elapsed="0.000075"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-11-22T13:13:13.938565" level="INFO">${actual_int} = 10.00</msg>
<var>${actual_int}</var>
<arg>'{:.2f}'.format(float(${actual_int}))</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-11-22T13:13:13.938503" elapsed="0.000070"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${expected_int}</arg>
<arg>${actual_int}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-11-22T13:13:13.938616" elapsed="0.000055"/>
</kw>
<status status="PASS" start="2024-11-22T13:13:13.937320" elapsed="0.001367"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:13.937011" elapsed="0.001688"/>
</if>
<arg>${item[6]}</arg>
<arg>${sql_response['tax_paid']}</arg>
<arg>tax_paid</arg>
<doc>Normalize the numbers and compare</doc>
<status status="PASS" start="2024-11-22T13:13:13.936562" elapsed="0.002152"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<if>
<branch type="IF" condition="'${expected_int}' == '${EMPTY}'">
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T13:13:13.939640" level="INFO">
Expected brownie_points:
None
Actual brownie_points:
None</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T13:13:13.939600" elapsed="0.000055"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T13:13:13.939702" elapsed="0.000053"/>
</kw>
<arg>Expected ${compare_title}:\n${None}\nActual ${compare_title}:\n${actual_int}</arg>
<status status="PASS" start="2024-11-22T13:13:13.939488" elapsed="0.000292"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${None}</arg>
<arg>${actual_int}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-11-22T13:13:13.939824" elapsed="0.000061"/>
</kw>
<status status="PASS" start="2024-11-22T13:13:13.939269" elapsed="0.000632"/>
</branch>
<branch type="ELSE">
<kw name="Log and Log To Console" owner="generic">
<arg>Expected ${compare_title}:\n${expected_int}\nActual ${compare_title}:\n${actual_int}</arg>
<status status="NOT RUN" start="2024-11-22T13:13:13.939956" elapsed="0.000010"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<var>${expected_int}</var>
<arg>'{:.2f}'.format(float(${expected_int}))</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.940007" elapsed="0.000008"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<var>${actual_int}</var>
<arg>'{:.2f}'.format(float(${actual_int}))</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.940055" elapsed="0.000007"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${expected_int}</arg>
<arg>${actual_int}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.940103" elapsed="0.000007"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:13.939914" elapsed="0.000209"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:13.939264" elapsed="0.000870"/>
</if>
<arg>${item[7]}</arg>
<arg>${sql_response['brownie_points']}</arg>
<arg>brownie_points</arg>
<doc>Normalize the numbers and compare</doc>
<status status="PASS" start="2024-11-22T13:13:13.938829" elapsed="0.001321"/>
</kw>
<status status="PASS" start="2024-11-22T13:13:13.900219" elapsed="0.039947"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:13.900215" elapsed="0.039963"/>
</if>
<var name="${item}">['natid-150', 'William Chu', 'MALE', '1996-01-01T23:59:59', '', '1000.12', '10.00', '']</var>
<status status="PASS" start="2024-11-22T13:13:13.900199" elapsed="0.039986"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Create Dictionary" owner="BuiltIn">
<var>${dict}</var>
<arg>value_natid=${item[0]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.940510" elapsed="0.000010"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<var>${sql_response}</var>
<arg>select_hero_by_natid</arg>
<arg>${dict}</arg>
<status status="NOT RUN" start="2024-11-22T13:13:13.940590" elapsed="0.000010"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${sql_response} == []</arg>
<arg>Fail</arg>
<arg>${natid} not created in DB</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.940647" elapsed="0.000008"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<var>${sql_response}</var>
<arg>${sql_response}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.940697" elapsed="0.000025"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[0]}</arg>
<arg>${sql_response['natid']}</arg>
<arg>natid</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.940765" elapsed="0.000009"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[1]}</arg>
<arg>${sql_response['name']}</arg>
<arg>name</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.940816" elapsed="0.000010"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[2]}</arg>
<arg>${sql_response['gender']}</arg>
<arg>gender</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.940867" elapsed="0.000009"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[3]}</arg>
<arg>${sql_response['birth_date']}</arg>
<arg>birth_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.940935" elapsed="0.000009"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[4]}</arg>
<arg>${sql_response['death_date']}</arg>
<arg>death_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.941003" elapsed="0.000009"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[5]}</arg>
<arg>${sql_response['salary']}</arg>
<arg>salary</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.941085" elapsed="0.000012"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[6]}</arg>
<arg>${sql_response['tax_paid']}</arg>
<arg>tax_paid</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.941162" elapsed="0.000009"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[7]}</arg>
<arg>${sql_response['brownie_points']}</arg>
<arg>brownie_points</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.941232" elapsed="0.000008"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:13.940266" elapsed="0.000988"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:13.940261" elapsed="0.001005"/>
</if>
<var name="${item}">['natid-151', 'Christopher', 'MALE', '1996-01-01T23:59:59', '', '1000.00', '10.00', '']</var>
<status status="PASS" start="2024-11-22T13:13:13.940248" elapsed="0.001026"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Create Dictionary" owner="BuiltIn">
<var>${dict}</var>
<arg>value_natid=${item[0]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.941592" elapsed="0.000010"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<var>${sql_response}</var>
<arg>select_hero_by_natid</arg>
<arg>${dict}</arg>
<status status="NOT RUN" start="2024-11-22T13:13:13.941669" elapsed="0.000011"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${sql_response} == []</arg>
<arg>Fail</arg>
<arg>${natid} not created in DB</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.941726" elapsed="0.000009"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<var>${sql_response}</var>
<arg>${sql_response}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.941778" elapsed="0.000008"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[0]}</arg>
<arg>${sql_response['natid']}</arg>
<arg>natid</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.941828" elapsed="0.000009"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[1]}</arg>
<arg>${sql_response['name']}</arg>
<arg>name</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.941877" elapsed="0.000010"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[2]}</arg>
<arg>${sql_response['gender']}</arg>
<arg>gender</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.941928" elapsed="0.000009"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[3]}</arg>
<arg>${sql_response['birth_date']}</arg>
<arg>birth_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.942037" elapsed="0.000010"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[4]}</arg>
<arg>${sql_response['death_date']}</arg>
<arg>death_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.942105" elapsed="0.000009"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[5]}</arg>
<arg>${sql_response['salary']}</arg>
<arg>salary</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.942246" elapsed="0.000010"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[6]}</arg>
<arg>${sql_response['tax_paid']}</arg>
<arg>tax_paid</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.942317" elapsed="0.000009"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[7]}</arg>
<arg>${sql_response['brownie_points']}</arg>
<arg>brownie_points</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.942385" elapsed="0.000008"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:13.941345" elapsed="0.001063"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:13.941340" elapsed="0.001081"/>
</if>
<var name="${item}">['natid-152', 'Hanks123@!', 'MALE', '1996-01-01T23:59:59', '', '10320.00', '10.00', '']</var>
<status status="PASS" start="2024-11-22T13:13:13.941328" elapsed="0.001101"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Create Dictionary" owner="BuiltIn">
<var>${dict}</var>
<arg>value_natid=${item[0]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.942751" elapsed="0.000010"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<var>${sql_response}</var>
<arg>select_hero_by_natid</arg>
<arg>${dict}</arg>
<status status="NOT RUN" start="2024-11-22T13:13:13.942826" elapsed="0.000011"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${sql_response} == []</arg>
<arg>Fail</arg>
<arg>${natid} not created in DB</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.942882" elapsed="0.000008"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<var>${sql_response}</var>
<arg>${sql_response}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.942932" elapsed="0.000008"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[0]}</arg>
<arg>${sql_response['natid']}</arg>
<arg>natid</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.942981" elapsed="0.000009"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[1]}</arg>
<arg>${sql_response['name']}</arg>
<arg>name</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.943032" elapsed="0.000010"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[2]}</arg>
<arg>${sql_response['gender']}</arg>
<arg>gender</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.943083" elapsed="0.000009"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[3]}</arg>
<arg>${sql_response['birth_date']}</arg>
<arg>birth_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.943154" elapsed="0.000013"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[4]}</arg>
<arg>${sql_response['death_date']}</arg>
<arg>death_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.943228" elapsed="0.000008"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[5]}</arg>
<arg>${sql_response['salary']}</arg>
<arg>salary</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.943294" elapsed="0.000009"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[6]}</arg>
<arg>${sql_response['tax_paid']}</arg>
<arg>tax_paid</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.943360" elapsed="0.000009"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[7]}</arg>
<arg>${sql_response['brownie_points']}</arg>
<arg>brownie_points</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.943425" elapsed="0.000009"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:13.942500" elapsed="0.000947"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:13.942495" elapsed="0.000964"/>
</if>
<var name="${item}">['natid-153', 'Angelina Jolie', '', '1996-01-01T23:59:59', '', '1000.50', '10.28', '']</var>
<status status="PASS" start="2024-11-22T13:13:13.942483" elapsed="0.000984"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Create Dictionary" owner="BuiltIn">
<var>${dict}</var>
<arg>value_natid=${item[0]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.943781" elapsed="0.000010"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<var>${sql_response}</var>
<arg>select_hero_by_natid</arg>
<arg>${dict}</arg>
<status status="NOT RUN" start="2024-11-22T13:13:13.943857" elapsed="0.000010"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${sql_response} == []</arg>
<arg>Fail</arg>
<arg>${natid} not created in DB</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.943912" elapsed="0.000008"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<var>${sql_response}</var>
<arg>${sql_response}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.943961" elapsed="0.000008"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[0]}</arg>
<arg>${sql_response['natid']}</arg>
<arg>natid</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.944010" elapsed="0.000009"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[1]}</arg>
<arg>${sql_response['name']}</arg>
<arg>name</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.944060" elapsed="0.000011"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[2]}</arg>
<arg>${sql_response['gender']}</arg>
<arg>gender</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.944119" elapsed="0.000008"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[3]}</arg>
<arg>${sql_response['birth_date']}</arg>
<arg>birth_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.944185" elapsed="0.000009"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[4]}</arg>
<arg>${sql_response['death_date']}</arg>
<arg>death_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.944253" elapsed="0.000008"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[5]}</arg>
<arg>${sql_response['salary']}</arg>
<arg>salary</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.944319" elapsed="0.000009"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[6]}</arg>
<arg>${sql_response['tax_paid']}</arg>
<arg>tax_paid</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.944385" elapsed="0.000009"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[7]}</arg>
<arg>${sql_response['brownie_points']}</arg>
<arg>brownie_points</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.944451" elapsed="0.000008"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:13.943536" elapsed="0.000974"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:13.943532" elapsed="0.000990"/>
</if>
<var name="${item}">['natid-154', 'Lawrence Chu', 'MALE', '4000-01-01T23:59:59', '', '1000.12', '10.00', '']</var>
<status status="PASS" start="2024-11-22T13:13:13.943520" elapsed="0.001010"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Create Dictionary" owner="BuiltIn">
<var>${dict}</var>
<arg>value_natid=${item[0]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.944847" elapsed="0.000010"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<var>${sql_response}</var>
<arg>select_hero_by_natid</arg>
<arg>${dict}</arg>
<status status="NOT RUN" start="2024-11-22T13:13:13.944923" elapsed="0.000010"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${sql_response} == []</arg>
<arg>Fail</arg>
<arg>${natid} not created in DB</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.944979" elapsed="0.000008"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<var>${sql_response}</var>
<arg>${sql_response}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.945030" elapsed="0.000008"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[0]}</arg>
<arg>${sql_response['natid']}</arg>
<arg>natid</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.945080" elapsed="0.000073"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[1]}</arg>
<arg>${sql_response['name']}</arg>
<arg>name</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.945197" elapsed="0.000010"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[2]}</arg>
<arg>${sql_response['gender']}</arg>
<arg>gender</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.945249" elapsed="0.000009"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[3]}</arg>
<arg>${sql_response['birth_date']}</arg>
<arg>birth_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.945321" elapsed="0.000008"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[4]}</arg>
<arg>${sql_response['death_date']}</arg>
<arg>death_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.945387" elapsed="0.000009"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[5]}</arg>
<arg>${sql_response['salary']}</arg>
<arg>salary</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.945468" elapsed="0.000009"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[6]}</arg>
<arg>${sql_response['tax_paid']}</arg>
<arg>tax_paid</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.945537" elapsed="0.000008"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[7]}</arg>
<arg>${sql_response['brownie_points']}</arg>
<arg>brownie_points</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.945603" elapsed="0.000009"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:13.944600" elapsed="0.001027"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:13.944596" elapsed="0.001043"/>
</if>
<var name="${item}">['natid-155', 'Karen', 'MALE', '1996-01-01T23:59:59', '', '-1000.00', '10.00', '']</var>
<status status="PASS" start="2024-11-22T13:13:13.944584" elapsed="0.001063"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Create Dictionary" owner="BuiltIn">
<var>${dict}</var>
<arg>value_natid=${item[0]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.945962" elapsed="0.000009"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<var>${sql_response}</var>
<arg>select_hero_by_natid</arg>
<arg>${dict}</arg>
<status status="NOT RUN" start="2024-11-22T13:13:13.946037" elapsed="0.000010"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${sql_response} == []</arg>
<arg>Fail</arg>
<arg>${natid} not created in DB</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.946092" elapsed="0.000008"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<var>${sql_response}</var>
<arg>${sql_response}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.946142" elapsed="0.000008"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[0]}</arg>
<arg>${sql_response['natid']}</arg>
<arg>natid</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.946192" elapsed="0.000009"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[1]}</arg>
<arg>${sql_response['name']}</arg>
<arg>name</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.946242" elapsed="0.000009"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[2]}</arg>
<arg>${sql_response['gender']}</arg>
<arg>gender</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.946292" elapsed="0.000009"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[3]}</arg>
<arg>${sql_response['birth_date']}</arg>
<arg>birth_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.946358" elapsed="0.000009"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[4]}</arg>
<arg>${sql_response['death_date']}</arg>
<arg>death_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.946424" elapsed="0.000009"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[5]}</arg>
<arg>${sql_response['salary']}</arg>
<arg>salary</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.946489" elapsed="0.000010"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[6]}</arg>
<arg>${sql_response['tax_paid']}</arg>
<arg>tax_paid</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.946556" elapsed="0.000009"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[7]}</arg>
<arg>${sql_response['brownie_points']}</arg>
<arg>brownie_points</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.946622" elapsed="0.000008"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:13.945719" elapsed="0.000925"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:13.945715" elapsed="0.000942"/>
</if>
<var name="${item}">['natid-156', 'Cherry Chan', 'MALE', '1996-01-01T23:59:59', '', '10320.00', '-10.00', '']</var>
<status status="PASS" start="2024-11-22T13:13:13.945703" elapsed="0.000961"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Create Dictionary" owner="BuiltIn">
<var>${dict}</var>
<arg>value_natid=${item[0]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.946975" elapsed="0.000010"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<var>${sql_response}</var>
<arg>select_hero_by_natid</arg>
<arg>${dict}</arg>
<status status="NOT RUN" start="2024-11-22T13:13:13.947050" elapsed="0.000011"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${sql_response} == []</arg>
<arg>Fail</arg>
<arg>${natid} not created in DB</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.947106" elapsed="0.000008"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<var>${sql_response}</var>
<arg>${sql_response}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.947196" elapsed="0.000009"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[0]}</arg>
<arg>${sql_response['natid']}</arg>
<arg>natid</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.947250" elapsed="0.000009"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[1]}</arg>
<arg>${sql_response['name']}</arg>
<arg>name</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.947300" elapsed="0.000010"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[2]}</arg>
<arg>${sql_response['gender']}</arg>
<arg>gender</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.947351" elapsed="0.000009"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[3]}</arg>
<arg>${sql_response['birth_date']}</arg>
<arg>birth_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.947417" elapsed="0.000010"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[4]}</arg>
<arg>${sql_response['death_date']}</arg>
<arg>death_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.947486" elapsed="0.000008"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[5]}</arg>
<arg>${sql_response['salary']}</arg>
<arg>salary</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.947552" elapsed="0.000010"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[6]}</arg>
<arg>${sql_response['tax_paid']}</arg>
<arg>tax_paid</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.947685" elapsed="0.000010"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[7]}</arg>
<arg>${sql_response['brownie_points']}</arg>
<arg>brownie_points</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.947756" elapsed="0.000009"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:13.946734" elapsed="0.001046"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:13.946730" elapsed="0.001062"/>
</if>
<var name="${item}">['natid-157', 'Apple Xu', 'FEMALE', '1996-01-01T23:59:59', '', '1000.50', '10.28', '']</var>
<status status="PASS" start="2024-11-22T13:13:13.946718" elapsed="0.001082"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Create Dictionary" owner="BuiltIn">
<var>${dict}</var>
<arg>value_natid=${item[0]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.948119" elapsed="0.000010"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<var>${sql_response}</var>
<arg>select_hero_by_natid</arg>
<arg>${dict}</arg>
<status status="NOT RUN" start="2024-11-22T13:13:13.948194" elapsed="0.000010"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${sql_response} == []</arg>
<arg>Fail</arg>
<arg>${natid} not created in DB</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.948249" elapsed="0.000009"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<var>${sql_response}</var>
<arg>${sql_response}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.948299" elapsed="0.000009"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[0]}</arg>
<arg>${sql_response['natid']}</arg>
<arg>natid</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.948351" elapsed="0.000009"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[1]}</arg>
<arg>${sql_response['name']}</arg>
<arg>name</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.948402" elapsed="0.000010"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[2]}</arg>
<arg>${sql_response['gender']}</arg>
<arg>gender</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.948453" elapsed="0.000008"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[3]}</arg>
<arg>${sql_response['birth_date']}</arg>
<arg>birth_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.948518" elapsed="0.000010"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[4]}</arg>
<arg>${sql_response['death_date']}</arg>
<arg>death_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.948585" elapsed="0.000008"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[5]}</arg>
<arg>${sql_response['salary']}</arg>
<arg>salary</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.948650" elapsed="0.000009"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[6]}</arg>
<arg>${sql_response['tax_paid']}</arg>
<arg>tax_paid</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.948714" elapsed="0.000009"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[7]}</arg>
<arg>${sql_response['brownie_points']}</arg>
<arg>brownie_points</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.948790" elapsed="0.000012"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:13.947871" elapsed="0.000949"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:13.947866" elapsed="0.000970"/>
</if>
<var name="${item}">['natid-158', 'Orange Xu', 'F', '1996-01-01T23:59:59', '', '1000.50', '10.28', '']</var>
<status status="PASS" start="2024-11-22T13:13:13.947854" elapsed="0.000991"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Create Dictionary" owner="BuiltIn">
<var>${dict}</var>
<arg>value_natid=${item[0]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.949160" elapsed="0.000010"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<var>${sql_response}</var>
<arg>select_hero_by_natid</arg>
<arg>${dict}</arg>
<status status="NOT RUN" start="2024-11-22T13:13:13.949235" elapsed="0.000009"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${sql_response} == []</arg>
<arg>Fail</arg>
<arg>${natid} not created in DB</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.949289" elapsed="0.000008"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<var>${sql_response}</var>
<arg>${sql_response}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.949339" elapsed="0.000008"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[0]}</arg>
<arg>${sql_response['natid']}</arg>
<arg>natid</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.949388" elapsed="0.000009"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[1]}</arg>
<arg>${sql_response['name']}</arg>
<arg>name</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.949438" elapsed="0.000009"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[2]}</arg>
<arg>${sql_response['gender']}</arg>
<arg>gender</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.949487" elapsed="0.000009"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[3]}</arg>
<arg>${sql_response['birth_date']}</arg>
<arg>birth_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.949553" elapsed="0.000009"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[4]}</arg>
<arg>${sql_response['death_date']}</arg>
<arg>death_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.949655" elapsed="0.000008"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[5]}</arg>
<arg>${sql_response['salary']}</arg>
<arg>salary</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.949721" elapsed="0.000010"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[6]}</arg>
<arg>${sql_response['tax_paid']}</arg>
<arg>tax_paid</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.949787" elapsed="0.000009"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[7]}</arg>
<arg>${sql_response['brownie_points']}</arg>
<arg>brownie_points</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.949853" elapsed="0.000009"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:13.948915" elapsed="0.000961"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:13.948911" elapsed="0.000977"/>
</if>
<var name="${item}">['natid-159', 'Durian Xu', 'FEMALE', '1996-01-01T23:59:59', '', '1000.50', '10.28', '']</var>
<status status="PASS" start="2024-11-22T13:13:13.948899" elapsed="0.000997"/>
</iter>
<var>${item}</var>
<value>@{csv_list}</value>
<status status="PASS" start="2024-11-22T13:13:13.900127" elapsed="0.049783"/>
</for>
<status status="PASS" start="2024-11-22T13:13:13.900063" elapsed="0.049865"/>
</branch>
<branch type="ELSE">
<for flavor="IN">
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Set Variable" owner="BuiltIn">
<var>${negative_col_name}</var>
<arg>${item[2]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.950038" elapsed="0.000009"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:13.949998" elapsed="0.000064"/>
</branch>
<status status="NOT RUN" start="2024-11-22T13:13:13.949994" elapsed="0.000079"/>
</if>
<var name="${item}"/>
<status status="NOT RUN" start="2024-11-22T13:13:13.949983" elapsed="0.000098"/>
</iter>
<var>${item}</var>
<value>@{csv_list}</value>
<status status="NOT RUN" start="2024-11-22T13:13:13.949956" elapsed="0.000136"/>
</for>
<kw name="Create Dictionary" owner="BuiltIn">
<var>${dict}</var>
<arg>value_natid=${natid}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.950136" elapsed="0.000008"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<var>${sql_response}</var>
<arg>select_hero_by_natid</arg>
<arg>${dict}</arg>
<status status="NOT RUN" start="2024-11-22T13:13:13.950207" elapsed="0.000010"/>
</kw>
<kw name="Log and Log To Console" owner="generic">
<arg>${sql_response}</arg>
<status status="NOT RUN" start="2024-11-22T13:13:13.950259" elapsed="0.000009"/>
</kw>
<if>
<branch type="IF" condition="${sql_response} != []">
<kw name="Set Variable" owner="BuiltIn">
<var>${sql_response}</var>
<arg>${sql_response}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.950328" elapsed="0.000009"/>
</kw>
<kw name="Log and Log To Console" owner="generic">
<arg>${sql_response}</arg>
<status status="NOT RUN" start="2024-11-22T13:13:13.950379" elapsed="0.000008"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<var>${failure_msg}</var>
<arg>${sql_response['${negative_col_name}']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.950426" elapsed="0.000008"/>
</kw>
<kw name="Log and Log To Console" owner="generic">
<arg>${sql_response}</arg>
<status status="NOT RUN" start="2024-11-22T13:13:13.950477" elapsed="0.000008"/>
</kw>
<kw name="Fail" owner="BuiltIn">
<arg>Record created with invalid column named "${negative_col_name}": ${sql_response['${negative_col_name}']}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.950523" elapsed="0.000008"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:13.950289" elapsed="0.000254"/>
</branch>
<status status="NOT RUN" start="2024-11-22T13:13:13.950284" elapsed="0.000270"/>
</if>
<status status="NOT RUN" start="2024-11-22T13:13:13.949939" elapsed="0.000623"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:13.900053" elapsed="0.050518"/>
</if>
<arg>${negative_test_data_path}</arg>
<arg>Positive</arg>
<arg>natid-150</arg>
<doc>Verify partial uploaded heroes in DB</doc>
<status status="PASS" start="2024-11-22T13:13:13.899663" elapsed="0.050924"/>
</kw>
<kw name="Verify Partial Uploaded Data In DB" owner="clerk">
<kw name="Read Csv File To List" owner="CSVLibrary">
<msg time="2024-11-22T13:13:13.951054" level="INFO">${csv_list} = [['natid-150', 'William Chu', 'MALE', '1996-01-01T23:59:59', '', '1000.12', '10.00', ''], ['natid-151', 'Christopher', 'MALE', '1996-01-01T23:59:59', '', '1000.00', '10.00', ''], ['natid-152', 'Hanks1...</msg>
<var>${csv_list}</var>
<arg>${test_data_path}</arg>
<doc>Read CSV file and return its content as a Python list of tuples.</doc>
<status status="PASS" start="2024-11-22T13:13:13.950910" elapsed="0.000155"/>
</kw>
<if>
<branch type="IF" condition="'${flow}' == 'Positive'">
<for flavor="IN">
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Create Dictionary" owner="BuiltIn">
<var>${dict}</var>
<arg>value_natid=${item[0]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.951492" elapsed="0.000013"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<var>${sql_response}</var>
<arg>select_hero_by_natid</arg>
<arg>${dict}</arg>
<status status="NOT RUN" start="2024-11-22T13:13:13.951592" elapsed="0.000011"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${sql_response} == []</arg>
<arg>Fail</arg>
<arg>${natid} not created in DB</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.951649" elapsed="0.000008"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<var>${sql_response}</var>
<arg>${sql_response}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.951699" elapsed="0.000008"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[0]}</arg>
<arg>${sql_response['natid']}</arg>
<arg>natid</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.951749" elapsed="0.000009"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[1]}</arg>
<arg>${sql_response['name']}</arg>
<arg>name</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.951800" elapsed="0.000009"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[2]}</arg>
<arg>${sql_response['gender']}</arg>
<arg>gender</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.951849" elapsed="0.000009"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[3]}</arg>
<arg>${sql_response['birth_date']}</arg>
<arg>birth_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.951916" elapsed="0.000010"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[4]}</arg>
<arg>${sql_response['death_date']}</arg>
<arg>death_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.951986" elapsed="0.000010"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[5]}</arg>
<arg>${sql_response['salary']}</arg>
<arg>salary</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.952054" elapsed="0.000009"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[6]}</arg>
<arg>${sql_response['tax_paid']}</arg>
<arg>tax_paid</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.952162" elapsed="0.000009"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[7]}</arg>
<arg>${sql_response['brownie_points']}</arg>
<arg>brownie_points</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.952228" elapsed="0.000009"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:13.951206" elapsed="0.001047"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:13.951201" elapsed="0.001064"/>
</if>
<var name="${item}">['natid-150', 'William Chu', 'MALE', '1996-01-01T23:59:59', '', '1000.12', '10.00', '']</var>
<status status="PASS" start="2024-11-22T13:13:13.951188" elapsed="0.001085"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2024-11-22T13:13:13.952857" level="INFO">${dict} = {'value_natid': 'natid-151'}</msg>
<var>${dict}</var>
<arg>value_natid=${item[0]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2024-11-22T13:13:13.952608" elapsed="0.000259"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<kw name="Connect To Database" owner="DatabaseLibrary">
<msg time="2024-11-22T13:13:13.953141" level="INFO">Looking for configuration file: 'resources/db.cfg'</msg>
<msg time="2024-11-22T13:13:13.953159" level="INFO">Configuration file doesn't exist</msg>
<msg time="2024-11-22T13:13:13.953227" level="INFO">Connect to DB using : mysql.connector.connect(database='testdb', user='user', password=***, host='localhost', port=3306)</msg>
<arg>${DB_API}</arg>
<arg>${DB_NAME}</arg>
<arg>${DB_USER}</arg>
<arg>${DB_PASSWORD}</arg>
<arg>${DB_HOST}</arg>
<arg>${DB_PORT}</arg>
<doc>Creates a database connection using the DB API 2.0 ``db_module`` and the parameters provided.
Along with listed commonly used arguments (`db_name`, `db_host` etc.)
you can set any other DB module specific parameters as key/value pairs.</doc>
<status status="PASS" start="2024-11-22T13:13:13.953037" elapsed="0.010536"/>
</kw>
<kw name="Update SQL Queries With Arguments Dictionary" owner="sql-helper">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-11-22T13:13:13.963925" level="INFO" html="true">Getting file '&lt;a href="file:///Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/object-repo/sql-queries/select_hero_by_natid.sql"&gt;/Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/object-repo/sql-queries/select_hero_by_natid.sql&lt;/a&gt;'.</msg>
<msg time="2024-11-22T13:13:13.963987" level="INFO">${sql_query} = SELECT *
FROM testdb.working_class_heroes
WHERE natid='value_natid';</msg>
<var>${sql_query}</var>
<arg>./object-repo/sql-queries/${sql_file_name}.sql</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-11-22T13:13:13.963842" elapsed="0.000154"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2024-11-22T13:13:13.964358" level="INFO">Argument types are:
&lt;class 'robot.utils.dotdict.DotDict'&gt;
&lt;class 'str'&gt;</msg>
<msg time="2024-11-22T13:13:13.964406" level="FAIL">{'value_natid': 'natid-151'} != </msg>
<arg>${args_dict}</arg>
<arg>${EMPTY}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="FAIL" start="2024-11-22T13:13:13.964116" elapsed="0.000323">{'value_natid': 'natid-151'} != </status>
</kw>
<msg time="2024-11-22T13:13:13.964480" level="INFO">${empty_status} = False</msg>
<var>${empty_status}</var>
<arg>Should Be Equal As Strings</arg>
<arg>${args_dict}</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-11-22T13:13:13.964052" elapsed="0.000436"/>
</kw>
<if>
<branch type="IF" condition="'${empty_status}' == '${False}'">
<if>
<branch type="IF" condition="${args_dict}">
<for flavor="IN">
<iter>
<kw name="Convert To String" owner="BuiltIn">
<msg time="2024-11-22T13:13:13.964880" level="INFO">${args_key_str} = value_natid</msg>
<var>${args_key_str}</var>
<arg>${args_key}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="PASS" start="2024-11-22T13:13:13.964818" elapsed="0.000072"/>
</kw>
<kw name="Convert To String" owner="BuiltIn">
<msg time="2024-11-22T13:13:13.965008" level="INFO">${args_value_str} = natid-151</msg>
<var>${args_value_str}</var>
<arg>${args_dict}[${args_key_str}]</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="PASS" start="2024-11-22T13:13:13.964941" elapsed="0.000076"/>
</kw>
<kw name="Replace String" owner="String">
<msg time="2024-11-22T13:13:13.965139" level="INFO">${sql_query} = SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-151';</msg>
<var>${sql_query}</var>
<arg>${sql_query}</arg>
<arg>${args_key_str}</arg>
<arg>${args_value_str}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="PASS" start="2024-11-22T13:13:13.965066" elapsed="0.000082"/>
</kw>
<var name="${args_key}">value_natid</var>
<status status="PASS" start="2024-11-22T13:13:13.964773" elapsed="0.000395"/>
</iter>
<var>${args_key}</var>
<value>@{args_dict}</value>
<status status="PASS" start="2024-11-22T13:13:13.964723" elapsed="0.000462"/>
</for>
<status status="PASS" start="2024-11-22T13:13:13.964695" elapsed="0.000507"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:13.964689" elapsed="0.000525"/>
</if>
<status status="PASS" start="2024-11-22T13:13:13.964632" elapsed="0.000590"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:13.964513" elapsed="0.000720"/>
</if>
<return>
<value>${sql_query}</value>
<status status="PASS" start="2024-11-22T13:13:13.965245" elapsed="0.000015"/>
</return>
<msg time="2024-11-22T13:13:13.965307" level="INFO">${updated_sql_query} = SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-151';</msg>
<var>${updated_sql_query}</var>
<arg>${sql_file_name}</arg>
<arg>${args_dict}</arg>
<status status="PASS" start="2024-11-22T13:13:13.963709" elapsed="0.001607"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-11-22T13:13:13.965527" level="FAIL">'SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-151';' does not contain 'delete'</msg>
<arg>${updated_sql_query}</arg>
<arg>DELETE</arg>
<arg>ignore_case=${True}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-11-22T13:13:13.965433" elapsed="0.000118">'SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-151';' does not contain 'delete'</status>
</kw>
<msg time="2024-11-22T13:13:13.965588" level="INFO">${delete_status} = False</msg>
<var>${delete_status}</var>
<arg>Should Contain</arg>
<arg>${updated_sql_query}</arg>
<arg>DELETE</arg>
<arg>ignore_case=${True}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-11-22T13:13:13.965371" elapsed="0.000226"/>
</kw>
<if>
<branch type="IF" condition="'${delete_status}' == '${True}'">
<kw name="Execute Sql String" owner="DatabaseLibrary">
<var>${json_response}</var>
<arg>${updated_sql_query}</arg>
<doc>Executes the ``sql_string`` as a single SQL command.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.965706" elapsed="0.000010"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:13.965627" elapsed="0.000105"/>
</branch>
<branch type="ELSE">
<kw name="Query" owner="DatabaseLibrary">
<msg time="2024-11-22T13:13:13.966929" level="INFO" html="true">Executing sql:&lt;br&gt;&lt;code style="font-weight: bold;"&gt;SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-151';&lt;/code&gt;</msg>
<msg time="2024-11-22T13:13:13.968609" level="INFO" html="true">&lt;div style="max-width: 100%; overflow-x: auto;"&gt;&lt;table style="width: auto; border-collapse: collapse; border: 2px solid rgb(140 140 140)"&gt;&lt;caption style="text-align: left; font-weight: bold; padding: 5px;"&gt;Query returned 1 rows&lt;/caption&gt;&lt;tr&gt;&lt;th scope="col" style="background-color: #d6ecd4; border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;Row&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;id&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;created_at&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;create_by&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;updated_at&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;updated_by&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;birth_date&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;brownie_points&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;death_date&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;gender&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;name&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;natid&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;salary&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;tax_paid&lt;/th&gt;&lt;/tr&gt;&lt;tr style="background-color: #eee;"&gt;&lt;th scope="row" style="background-color: #d6ecd4;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;0&lt;/th&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;dfa9c7ba-8990-484a-bba2-89458b3d226d&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;2024-11-22 13:13:13.265361&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;SYSTEM&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;2024-11-22 13:13:13.265361&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;SYSTEM&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;1996-01-01 23:59:59&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;None&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;None&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;MALE&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;Christopher&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;natid-151&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;1000.0&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;10.0&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;</msg>
<msg time="2024-11-22T13:13:13.969324" level="INFO">${json_response} = [{'id': 'dfa9c7ba-8990-484a-bba2-89458b3d226d', 'created_at': datetime.datetime(2024, 11, 22, 13, 13, 13, 265361), 'create_by': 'SYSTEM', 'updated_at': datetime.datetime(2024, 11, 22, 13, 13, 13, 2653...</msg>
<var>${json_response}</var>
<arg>${updated_sql_query}</arg>
<arg>return_dict=${True}</arg>
<doc>Runs a query with the ``select_statement`` and returns the result as list of rows.
The type of row values depends on the database module -
usually they are tuples or tuple-like objects.</doc>
<status status="PASS" start="2024-11-22T13:13:13.965787" elapsed="0.003548"/>
</kw>
<status status="PASS" start="2024-11-22T13:13:13.965745" elapsed="0.003611"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:13.965621" elapsed="0.003747"/>
</if>
<kw name="Disconnect From Database" owner="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<status status="PASS" start="2024-11-22T13:13:13.969419" elapsed="0.000086"/>
</kw>
<return>
<value>${json_response}</value>
<status status="PASS" start="2024-11-22T13:13:13.969525" elapsed="0.000014"/>
</return>
<msg time="2024-11-22T13:13:13.969591" level="INFO">${sql_response} = [{'id': 'dfa9c7ba-8990-484a-bba2-89458b3d226d', 'created_at': datetime.datetime(2024, 11, 22, 13, 13, 13, 265361), 'create_by': 'SYSTEM', 'updated_at': datetime.datetime(2024, 11, 22, 13, 13, 13, 2653...</msg>
<var>${sql_response}</var>
<arg>select_hero_by_natid</arg>
<arg>${dict}</arg>
<status status="PASS" start="2024-11-22T13:13:13.952936" elapsed="0.016665"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${sql_response} == []</arg>
<arg>Fail</arg>
<arg>${natid} not created in DB</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-11-22T13:13:13.969663" elapsed="0.000147"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-11-22T13:13:13.969919" level="INFO">${sql_response} = {'id': 'dfa9c7ba-8990-484a-bba2-89458b3d226d', 'created_at': datetime.datetime(2024, 11, 22, 13, 13, 13, 265361), 'create_by': 'SYSTEM', 'updated_at': datetime.datetime(2024, 11, 22, 13, 13, 13, 26536...</msg>
<var>${sql_response}</var>
<arg>${sql_response}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-11-22T13:13:13.969861" elapsed="0.000068"/>
</kw>
<kw name="Compare String" owner="generic">
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T13:13:13.970677" level="INFO">
Expected natid:
natid-151
Actual natid:
natid-151</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T13:13:13.970631" elapsed="0.000063"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T13:13:13.970741" elapsed="0.000060"/>
</kw>
<arg>Expected ${compare_title}:\n${expected_string}\nActual ${compare_title}:\n${actual_string}</arg>
<status status="PASS" start="2024-11-22T13:13:13.970511" elapsed="0.000316"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${expected_string}</arg>
<arg>${actual_string}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-11-22T13:13:13.970872" elapsed="0.000065"/>
</kw>
<arg>${item[0]}</arg>
<arg>${sql_response['natid']}</arg>
<arg>natid</arg>
<doc>Compare Strings</doc>
<status status="PASS" start="2024-11-22T13:13:13.969984" elapsed="0.000977"/>
</kw>
<kw name="Compare String" owner="generic">
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T13:13:13.971651" level="INFO">
Expected name:
Christopher
Actual name:
Christopher</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T13:13:13.971610" elapsed="0.000056"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T13:13:13.971779" elapsed="0.000056"/>
</kw>
<arg>Expected ${compare_title}:\n${expected_string}\nActual ${compare_title}:\n${actual_string}</arg>
<status status="PASS" start="2024-11-22T13:13:13.971495" elapsed="0.000366"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${expected_string}</arg>
<arg>${actual_string}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-11-22T13:13:13.971907" elapsed="0.000063"/>
</kw>
<arg>${item[1]}</arg>
<arg>${sql_response['name']}</arg>
<arg>name</arg>
<doc>Compare Strings</doc>
<status status="PASS" start="2024-11-22T13:13:13.971014" elapsed="0.000980"/>
</kw>
<kw name="Compare String" owner="generic">
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T13:13:13.972710" level="INFO">
Expected gender:
MALE
Actual gender:
MALE</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T13:13:13.972668" elapsed="0.000058"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T13:13:13.972771" elapsed="0.000053"/>
</kw>
<arg>Expected ${compare_title}:\n${expected_string}\nActual ${compare_title}:\n${actual_string}</arg>
<status status="PASS" start="2024-11-22T13:13:13.972549" elapsed="0.000298"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${expected_string}</arg>
<arg>${actual_string}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-11-22T13:13:13.972894" elapsed="0.000064"/>
</kw>
<arg>${item[2]}</arg>
<arg>${sql_response['gender']}</arg>
<arg>gender</arg>
<doc>Compare Strings</doc>
<status status="PASS" start="2024-11-22T13:13:13.972046" elapsed="0.000937"/>
</kw>
<kw name="Compare Date" owner="generic">
<if>
<branch type="IF" condition="'${expected_date}' == '${EMPTY}'">
<kw name="Log and Log To Console" owner="generic">
<arg>Expected ${compare_title}:\n${None}\nActual ${compare_title}:\n${actual_date}</arg>
<status status="NOT RUN" start="2024-11-22T13:13:13.973779" elapsed="0.000011"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${None}</arg>
<arg>${actual_date}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.973837" elapsed="0.000009"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:13.973539" elapsed="0.000323"/>
</branch>
<branch type="ELSE">
<kw name="Convert Date" owner="DateTime">
<msg time="2024-11-22T13:13:13.974020" level="INFO">${expected_date} = 1996-01-01 23:59:59.000000</msg>
<var>${expected_date}</var>
<arg>${expected_date}</arg>
<arg>result_format=%Y-%m-%d %H:%M:%S.%f</arg>
<doc>Converts between supported `date formats`.</doc>
<status status="PASS" start="2024-11-22T13:13:13.973918" elapsed="0.000112"/>
</kw>
<kw name="Convert Date" owner="DateTime">
<msg time="2024-11-22T13:13:13.974146" level="INFO">${actual_date} = 1996-01-01 23:59:59.000000</msg>
<var>${actual_date}</var>
<arg>${actual_date}</arg>
<arg>result_format=%Y-%m-%d %H:%M:%S.%f</arg>
<doc>Converts between supported `date formats`.</doc>
<status status="PASS" start="2024-11-22T13:13:13.974078" elapsed="0.000076"/>
</kw>
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T13:13:13.974466" level="INFO">
Expected birth_date:
1996-01-01 23:59:59.000000
Actual birth_date:
1996-01-01 23:59:59.000000</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T13:13:13.974423" elapsed="0.000059"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T13:13:13.974529" elapsed="0.000053"/>
</kw>
<arg>Expected ${compare_title}:\n${expected_date}\nActual ${compare_title}:\n${actual_date}</arg>
<status status="PASS" start="2024-11-22T13:13:13.974204" elapsed="0.000401"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${expected_date}</arg>
<arg>${actual_date}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-11-22T13:13:13.974651" elapsed="0.000064"/>
</kw>
<status status="PASS" start="2024-11-22T13:13:13.973875" elapsed="0.000857"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:13.973532" elapsed="0.001213"/>
</if>
<arg>${item[3]}</arg>
<arg>${sql_response['birth_date']}</arg>
<arg>birth_date</arg>
<doc>Format date and compare</doc>
<status status="PASS" start="2024-11-22T13:13:13.973062" elapsed="0.001700"/>
</kw>
<kw name="Compare Date" owner="generic">
<if>
<branch type="IF" condition="'${expected_date}' == '${EMPTY}'">
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T13:13:13.975743" level="INFO">
Expected death_date:
None
Actual death_date:
None</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T13:13:13.975701" elapsed="0.000058"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T13:13:13.975805" elapsed="0.000053"/>
</kw>
<arg>Expected ${compare_title}:\n${None}\nActual ${compare_title}:\n${actual_date}</arg>
<status status="PASS" start="2024-11-22T13:13:13.975576" elapsed="0.000305"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${None}</arg>
<arg>${actual_date}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-11-22T13:13:13.975927" elapsed="0.000063"/>
</kw>
<status status="PASS" start="2024-11-22T13:13:13.975332" elapsed="0.000675"/>
</branch>
<branch type="ELSE">
<kw name="Convert Date" owner="DateTime">
<var>${expected_date}</var>
<arg>${expected_date}</arg>
<arg>result_format=%Y-%m-%d %H:%M:%S.%f</arg>
<doc>Converts between supported `date formats`.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.976065" elapsed="0.000009"/>
</kw>
<kw name="Convert Date" owner="DateTime">
<var>${actual_date}</var>
<arg>${actual_date}</arg>
<arg>result_format=%Y-%m-%d %H:%M:%S.%f</arg>
<doc>Converts between supported `date formats`.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.976119" elapsed="0.000008"/>
</kw>
<kw name="Log and Log To Console" owner="generic">
<arg>Expected ${compare_title}:\n${expected_date}\nActual ${compare_title}:\n${actual_date}</arg>
<status status="NOT RUN" start="2024-11-22T13:13:13.976174" elapsed="0.000011"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${expected_date}</arg>
<arg>${actual_date}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.976229" elapsed="0.000009"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:13.976021" elapsed="0.000231"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:13.975326" elapsed="0.000938"/>
</if>
<arg>${item[4]}</arg>
<arg>${sql_response['death_date']}</arg>
<arg>death_date</arg>
<doc>Format date and compare</doc>
<status status="PASS" start="2024-11-22T13:13:13.974836" elapsed="0.001444"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<if>
<branch type="IF" condition="'${expected_int}' == '${EMPTY}'">
<kw name="Log and Log To Console" owner="generic">
<arg>Expected ${compare_title}:\n${None}\nActual ${compare_title}:\n${actual_int}</arg>
<status status="NOT RUN" start="2024-11-22T13:13:13.977397" elapsed="0.000012"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${None}</arg>
<arg>${actual_int}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.977461" elapsed="0.000010"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:13.977143" elapsed="0.000391"/>
</branch>
<branch type="ELSE">
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T13:13:13.977776" level="INFO">
Expected salary:
1000.00
Actual salary:
1000.0</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T13:13:13.977729" elapsed="0.000066"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T13:13:13.977843" elapsed="0.000056"/>
</kw>
<arg>Expected ${compare_title}:\n${expected_int}\nActual ${compare_title}:\n${actual_int}</arg>
<status status="PASS" start="2024-11-22T13:13:13.977598" elapsed="0.000325"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-11-22T13:13:13.978046" level="INFO">${expected_int} = 1000.00</msg>
<var>${expected_int}</var>
<arg>'{:.2f}'.format(float(${expected_int}))</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-11-22T13:13:13.977971" elapsed="0.000085"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-11-22T13:13:13.978173" level="INFO">${actual_int} = 1000.00</msg>
<var>${actual_int}</var>
<arg>'{:.2f}'.format(float(${actual_int}))</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-11-22T13:13:13.978106" elapsed="0.000076"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${expected_int}</arg>
<arg>${actual_int}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-11-22T13:13:13.978231" elapsed="0.000064"/>
</kw>
<status status="PASS" start="2024-11-22T13:13:13.977550" elapsed="0.000763"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:13.977136" elapsed="0.001190"/>
</if>
<arg>${item[5]}</arg>
<arg>${sql_response['salary']}</arg>
<arg>salary</arg>
<doc>Normalize the numbers and compare</doc>
<status status="PASS" start="2024-11-22T13:13:13.976598" elapsed="0.001746"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<if>
<branch type="IF" condition="'${expected_int}' == '${EMPTY}'">
<kw name="Log and Log To Console" owner="generic">
<arg>Expected ${compare_title}:\n${None}\nActual ${compare_title}:\n${actual_int}</arg>
<status status="NOT RUN" start="2024-11-22T13:13:13.979203" elapsed="0.000011"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${None}</arg>
<arg>${actual_int}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.979262" elapsed="0.000010"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:13.978943" elapsed="0.000344"/>
</branch>
<branch type="ELSE">
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T13:13:13.979518" level="INFO">
Expected tax_paid:
10.00
Actual tax_paid:
10.0</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T13:13:13.979472" elapsed="0.000062"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T13:13:13.979581" elapsed="0.000054"/>
</kw>
<arg>Expected ${compare_title}:\n${expected_int}\nActual ${compare_title}:\n${actual_int}</arg>
<status status="PASS" start="2024-11-22T13:13:13.979346" elapsed="0.000312"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-11-22T13:13:13.979773" level="INFO">${expected_int} = 10.00</msg>
<var>${expected_int}</var>
<arg>'{:.2f}'.format(float(${expected_int}))</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-11-22T13:13:13.979704" elapsed="0.000079"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-11-22T13:13:13.979897" level="INFO">${actual_int} = 10.00</msg>
<var>${actual_int}</var>
<arg>'{:.2f}'.format(float(${actual_int}))</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-11-22T13:13:13.979833" elapsed="0.000073"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${expected_int}</arg>
<arg>${actual_int}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-11-22T13:13:13.979958" elapsed="0.000063"/>
</kw>
<status status="PASS" start="2024-11-22T13:13:13.979301" elapsed="0.000737"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:13.978935" elapsed="0.001116"/>
</if>
<arg>${item[6]}</arg>
<arg>${sql_response['tax_paid']}</arg>
<arg>tax_paid</arg>
<doc>Normalize the numbers and compare</doc>
<status status="PASS" start="2024-11-22T13:13:13.978423" elapsed="0.001645"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<if>
<branch type="IF" condition="'${expected_int}' == '${EMPTY}'">
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T13:13:13.981100" level="INFO">
Expected brownie_points:
None
Actual brownie_points:
None</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T13:13:13.981055" elapsed="0.000061"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T13:13:13.981163" elapsed="0.000053"/>
</kw>
<arg>Expected ${compare_title}:\n${None}\nActual ${compare_title}:\n${actual_int}</arg>
<status status="PASS" start="2024-11-22T13:13:13.980854" elapsed="0.000388"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${None}</arg>
<arg>${actual_int}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-11-22T13:13:13.981291" elapsed="0.000065"/>
</kw>
<status status="PASS" start="2024-11-22T13:13:13.980621" elapsed="0.000751"/>
</branch>
<branch type="ELSE">
<kw name="Log and Log To Console" owner="generic">
<arg>Expected ${compare_title}:\n${expected_int}\nActual ${compare_title}:\n${actual_int}</arg>
<status status="NOT RUN" start="2024-11-22T13:13:13.981434" elapsed="0.000011"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<var>${expected_int}</var>
<arg>'{:.2f}'.format(float(${expected_int}))</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.981491" elapsed="0.000008"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<var>${actual_int}</var>
<arg>'{:.2f}'.format(float(${actual_int}))</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.981545" elapsed="0.000008"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${expected_int}</arg>
<arg>${actual_int}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.981597" elapsed="0.000008"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:13.981386" elapsed="0.000232"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:13.980615" elapsed="0.001015"/>
</if>
<arg>${item[7]}</arg>
<arg>${sql_response['brownie_points']}</arg>
<arg>brownie_points</arg>
<doc>Normalize the numbers and compare</doc>
<status status="PASS" start="2024-11-22T13:13:13.980147" elapsed="0.001500"/>
</kw>
<status status="PASS" start="2024-11-22T13:13:13.952353" elapsed="0.029311"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:13.952347" elapsed="0.029329"/>
</if>
<var name="${item}">['natid-151', 'Christopher', 'MALE', '1996-01-01T23:59:59', '', '1000.00', '10.00', '']</var>
<status status="PASS" start="2024-11-22T13:13:13.952330" elapsed="0.029355"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Create Dictionary" owner="BuiltIn">
<var>${dict}</var>
<arg>value_natid=${item[0]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.982048" elapsed="0.000010"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<var>${sql_response}</var>
<arg>select_hero_by_natid</arg>
<arg>${dict}</arg>
<status status="NOT RUN" start="2024-11-22T13:13:13.982181" elapsed="0.000012"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${sql_response} == []</arg>
<arg>Fail</arg>
<arg>${natid} not created in DB</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.982244" elapsed="0.000009"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<var>${sql_response}</var>
<arg>${sql_response}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.982298" elapsed="0.000010"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[0]}</arg>
<arg>${sql_response['natid']}</arg>
<arg>natid</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.982354" elapsed="0.000010"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[1]}</arg>
<arg>${sql_response['name']}</arg>
<arg>name</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.982408" elapsed="0.000010"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[2]}</arg>
<arg>${sql_response['gender']}</arg>
<arg>gender</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.982463" elapsed="0.000009"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[3]}</arg>
<arg>${sql_response['birth_date']}</arg>
<arg>birth_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.982534" elapsed="0.000011"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[4]}</arg>
<arg>${sql_response['death_date']}</arg>
<arg>death_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.982607" elapsed="0.000010"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[5]}</arg>
<arg>${sql_response['salary']}</arg>
<arg>salary</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.982678" elapsed="0.000010"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[6]}</arg>
<arg>${sql_response['tax_paid']}</arg>
<arg>tax_paid</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.982756" elapsed="0.000010"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[7]}</arg>
<arg>${sql_response['brownie_points']}</arg>
<arg>brownie_points</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.982827" elapsed="0.000010"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:13.981775" elapsed="0.001079"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:13.981770" elapsed="0.001097"/>
</if>
<var name="${item}">['natid-152', 'Hanks123@!', 'MALE', '1996-01-01T23:59:59', '', '10320.00', '10.00', '']</var>
<status status="PASS" start="2024-11-22T13:13:13.981754" elapsed="0.001122"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Create Dictionary" owner="BuiltIn">
<var>${dict}</var>
<arg>value_natid=${item[0]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.983233" elapsed="0.000011"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<var>${sql_response}</var>
<arg>select_hero_by_natid</arg>
<arg>${dict}</arg>
<status status="NOT RUN" start="2024-11-22T13:13:13.983316" elapsed="0.000011"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${sql_response} == []</arg>
<arg>Fail</arg>
<arg>${natid} not created in DB</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.983376" elapsed="0.000009"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<var>${sql_response}</var>
<arg>${sql_response}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.983431" elapsed="0.000009"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[0]}</arg>
<arg>${sql_response['natid']}</arg>
<arg>natid</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.983486" elapsed="0.000009"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[1]}</arg>
<arg>${sql_response['name']}</arg>
<arg>name</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.983539" elapsed="0.000009"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[2]}</arg>
<arg>${sql_response['gender']}</arg>
<arg>gender</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.983593" elapsed="0.000009"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[3]}</arg>
<arg>${sql_response['birth_date']}</arg>
<arg>birth_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.983666" elapsed="0.000010"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[4]}</arg>
<arg>${sql_response['death_date']}</arg>
<arg>death_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.983740" elapsed="0.000010"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[5]}</arg>
<arg>${sql_response['salary']}</arg>
<arg>salary</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.983812" elapsed="0.000010"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[6]}</arg>
<arg>${sql_response['tax_paid']}</arg>
<arg>tax_paid</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.983883" elapsed="0.000010"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[7]}</arg>
<arg>${sql_response['brownie_points']}</arg>
<arg>brownie_points</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.983957" elapsed="0.000009"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:13.982957" elapsed="0.001025"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:13.982952" elapsed="0.001043"/>
</if>
<var name="${item}">['natid-153', 'Angelina Jolie', '', '1996-01-01T23:59:59', '', '1000.50', '10.28', '']</var>
<status status="PASS" start="2024-11-22T13:13:13.982938" elapsed="0.001065"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Create Dictionary" owner="BuiltIn">
<var>${dict}</var>
<arg>value_natid=${item[0]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.984361" elapsed="0.000011"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<var>${sql_response}</var>
<arg>select_hero_by_natid</arg>
<arg>${dict}</arg>
<status status="NOT RUN" start="2024-11-22T13:13:13.984443" elapsed="0.000013"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${sql_response} == []</arg>
<arg>Fail</arg>
<arg>${natid} not created in DB</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.984506" elapsed="0.000009"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<var>${sql_response}</var>
<arg>${sql_response}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.984569" elapsed="0.000012"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[0]}</arg>
<arg>${sql_response['natid']}</arg>
<arg>natid</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.984626" elapsed="0.000093"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[1]}</arg>
<arg>${sql_response['name']}</arg>
<arg>name</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.984768" elapsed="0.000010"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[2]}</arg>
<arg>${sql_response['gender']}</arg>
<arg>gender</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.984866" elapsed="0.000011"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[3]}</arg>
<arg>${sql_response['birth_date']}</arg>
<arg>birth_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.984946" elapsed="0.000011"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[4]}</arg>
<arg>${sql_response['death_date']}</arg>
<arg>death_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.985020" elapsed="0.000010"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[5]}</arg>
<arg>${sql_response['salary']}</arg>
<arg>salary</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.985090" elapsed="0.000010"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[6]}</arg>
<arg>${sql_response['tax_paid']}</arg>
<arg>tax_paid</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.985162" elapsed="0.000009"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[7]}</arg>
<arg>${sql_response['brownie_points']}</arg>
<arg>brownie_points</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.985234" elapsed="0.000010"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:13.984081" elapsed="0.001179"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:13.984076" elapsed="0.001197"/>
</if>
<var name="${item}">['natid-154', 'Lawrence Chu', 'MALE', '4000-01-01T23:59:59', '', '1000.12', '10.00', '']</var>
<status status="PASS" start="2024-11-22T13:13:13.984063" elapsed="0.001219"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Create Dictionary" owner="BuiltIn">
<var>${dict}</var>
<arg>value_natid=${item[0]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.985725" elapsed="0.000010"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<var>${sql_response}</var>
<arg>select_hero_by_natid</arg>
<arg>${dict}</arg>
<status status="NOT RUN" start="2024-11-22T13:13:13.985827" elapsed="0.000011"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${sql_response} == []</arg>
<arg>Fail</arg>
<arg>${natid} not created in DB</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.985896" elapsed="0.000009"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<var>${sql_response}</var>
<arg>${sql_response}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.985946" elapsed="0.000009"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[0]}</arg>
<arg>${sql_response['natid']}</arg>
<arg>natid</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.985996" elapsed="0.000009"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[1]}</arg>
<arg>${sql_response['name']}</arg>
<arg>name</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.986046" elapsed="0.000009"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[2]}</arg>
<arg>${sql_response['gender']}</arg>
<arg>gender</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.986096" elapsed="0.000011"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[3]}</arg>
<arg>${sql_response['birth_date']}</arg>
<arg>birth_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.986170" elapsed="0.000010"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[4]}</arg>
<arg>${sql_response['death_date']}</arg>
<arg>death_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.986240" elapsed="0.000009"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[5]}</arg>
<arg>${sql_response['salary']}</arg>
<arg>salary</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.986306" elapsed="0.000009"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[6]}</arg>
<arg>${sql_response['tax_paid']}</arg>
<arg>tax_paid</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.986380" elapsed="0.000009"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[7]}</arg>
<arg>${sql_response['brownie_points']}</arg>
<arg>brownie_points</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.986448" elapsed="0.000010"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:13.985368" elapsed="0.001106"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:13.985361" elapsed="0.001125"/>
</if>
<var name="${item}">['natid-155', 'Karen', 'MALE', '1996-01-01T23:59:59', '', '-1000.00', '10.00', '']</var>
<status status="PASS" start="2024-11-22T13:13:13.985345" elapsed="0.001149"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Create Dictionary" owner="BuiltIn">
<var>${dict}</var>
<arg>value_natid=${item[0]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.986844" elapsed="0.000014"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<var>${sql_response}</var>
<arg>select_hero_by_natid</arg>
<arg>${dict}</arg>
<status status="NOT RUN" start="2024-11-22T13:13:13.986945" elapsed="0.000011"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${sql_response} == []</arg>
<arg>Fail</arg>
<arg>${natid} not created in DB</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.987006" elapsed="0.000009"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<var>${sql_response}</var>
<arg>${sql_response}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.987061" elapsed="0.000009"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[0]}</arg>
<arg>${sql_response['natid']}</arg>
<arg>natid</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.987117" elapsed="0.000010"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[1]}</arg>
<arg>${sql_response['name']}</arg>
<arg>name</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.987176" elapsed="0.000011"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[2]}</arg>
<arg>${sql_response['gender']}</arg>
<arg>gender</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.987228" elapsed="0.000009"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[3]}</arg>
<arg>${sql_response['birth_date']}</arg>
<arg>birth_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.987299" elapsed="0.000009"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[4]}</arg>
<arg>${sql_response['death_date']}</arg>
<arg>death_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.987376" elapsed="0.000011"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[5]}</arg>
<arg>${sql_response['salary']}</arg>
<arg>salary</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.987449" elapsed="0.000009"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[6]}</arg>
<arg>${sql_response['tax_paid']}</arg>
<arg>tax_paid</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.987596" elapsed="0.000011"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[7]}</arg>
<arg>${sql_response['brownie_points']}</arg>
<arg>brownie_points</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.987713" elapsed="0.000010"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:13.986567" elapsed="0.001173"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:13.986562" elapsed="0.001191"/>
</if>
<var name="${item}">['natid-156', 'Cherry Chan', 'MALE', '1996-01-01T23:59:59', '', '10320.00', '-10.00', '']</var>
<status status="PASS" start="2024-11-22T13:13:13.986550" elapsed="0.001212"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Create Dictionary" owner="BuiltIn">
<var>${dict}</var>
<arg>value_natid=${item[0]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.988108" elapsed="0.000010"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<var>${sql_response}</var>
<arg>select_hero_by_natid</arg>
<arg>${dict}</arg>
<status status="NOT RUN" start="2024-11-22T13:13:13.988189" elapsed="0.000010"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${sql_response} == []</arg>
<arg>Fail</arg>
<arg>${natid} not created in DB</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.988246" elapsed="0.000010"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<var>${sql_response}</var>
<arg>${sql_response}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.988300" elapsed="0.000008"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[0]}</arg>
<arg>${sql_response['natid']}</arg>
<arg>natid</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.988351" elapsed="0.000009"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[1]}</arg>
<arg>${sql_response['name']}</arg>
<arg>name</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.988403" elapsed="0.000009"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[2]}</arg>
<arg>${sql_response['gender']}</arg>
<arg>gender</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.988453" elapsed="0.000009"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[3]}</arg>
<arg>${sql_response['birth_date']}</arg>
<arg>birth_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.988523" elapsed="0.000010"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[4]}</arg>
<arg>${sql_response['death_date']}</arg>
<arg>death_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.988594" elapsed="0.000009"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[5]}</arg>
<arg>${sql_response['salary']}</arg>
<arg>salary</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.988664" elapsed="0.000010"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[6]}</arg>
<arg>${sql_response['tax_paid']}</arg>
<arg>tax_paid</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.988734" elapsed="0.000009"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[7]}</arg>
<arg>${sql_response['brownie_points']}</arg>
<arg>brownie_points</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.988804" elapsed="0.000010"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:13.987839" elapsed="0.000990"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:13.987834" elapsed="0.001008"/>
</if>
<var name="${item}">['natid-157', 'Apple Xu', 'FEMALE', '1996-01-01T23:59:59', '', '1000.50', '10.28', '']</var>
<status status="PASS" start="2024-11-22T13:13:13.987821" elapsed="0.001029"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Create Dictionary" owner="BuiltIn">
<var>${dict}</var>
<arg>value_natid=${item[0]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.989183" elapsed="0.000010"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<var>${sql_response}</var>
<arg>select_hero_by_natid</arg>
<arg>${dict}</arg>
<status status="NOT RUN" start="2024-11-22T13:13:13.989262" elapsed="0.000011"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${sql_response} == []</arg>
<arg>Fail</arg>
<arg>${natid} not created in DB</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.989321" elapsed="0.000009"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<var>${sql_response}</var>
<arg>${sql_response}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.989375" elapsed="0.000009"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[0]}</arg>
<arg>${sql_response['natid']}</arg>
<arg>natid</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.989435" elapsed="0.000010"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[1]}</arg>
<arg>${sql_response['name']}</arg>
<arg>name</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.989491" elapsed="0.000011"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[2]}</arg>
<arg>${sql_response['gender']}</arg>
<arg>gender</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.989552" elapsed="0.000010"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[3]}</arg>
<arg>${sql_response['birth_date']}</arg>
<arg>birth_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.989626" elapsed="0.000011"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[4]}</arg>
<arg>${sql_response['death_date']}</arg>
<arg>death_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.989700" elapsed="0.000010"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[5]}</arg>
<arg>${sql_response['salary']}</arg>
<arg>salary</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.989774" elapsed="0.000009"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[6]}</arg>
<arg>${sql_response['tax_paid']}</arg>
<arg>tax_paid</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.989847" elapsed="0.000010"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[7]}</arg>
<arg>${sql_response['brownie_points']}</arg>
<arg>brownie_points</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.989920" elapsed="0.000010"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:13.988925" elapsed="0.001021"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:13.988920" elapsed="0.001039"/>
</if>
<var name="${item}">['natid-158', 'Orange Xu', 'F', '1996-01-01T23:59:59', '', '1000.50', '10.28', '']</var>
<status status="PASS" start="2024-11-22T13:13:13.988907" elapsed="0.001061"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Create Dictionary" owner="BuiltIn">
<var>${dict}</var>
<arg>value_natid=${item[0]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.990308" elapsed="0.000009"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<var>${sql_response}</var>
<arg>select_hero_by_natid</arg>
<arg>${dict}</arg>
<status status="NOT RUN" start="2024-11-22T13:13:13.990382" elapsed="0.000009"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${sql_response} == []</arg>
<arg>Fail</arg>
<arg>${natid} not created in DB</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.990435" elapsed="0.000047"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<var>${sql_response}</var>
<arg>${sql_response}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.990527" elapsed="0.000008"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[0]}</arg>
<arg>${sql_response['natid']}</arg>
<arg>natid</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.990578" elapsed="0.000009"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[1]}</arg>
<arg>${sql_response['name']}</arg>
<arg>name</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.990629" elapsed="0.000009"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[2]}</arg>
<arg>${sql_response['gender']}</arg>
<arg>gender</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.990744" elapsed="0.000010"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[3]}</arg>
<arg>${sql_response['birth_date']}</arg>
<arg>birth_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.990822" elapsed="0.000013"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[4]}</arg>
<arg>${sql_response['death_date']}</arg>
<arg>death_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.990902" elapsed="0.000009"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[5]}</arg>
<arg>${sql_response['salary']}</arg>
<arg>salary</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.990974" elapsed="0.000011"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[6]}</arg>
<arg>${sql_response['tax_paid']}</arg>
<arg>tax_paid</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.991049" elapsed="0.000010"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[7]}</arg>
<arg>${sql_response['brownie_points']}</arg>
<arg>brownie_points</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.991125" elapsed="0.000009"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:13.990049" elapsed="0.001101"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:13.990042" elapsed="0.001122"/>
</if>
<var name="${item}">['natid-159', 'Durian Xu', 'FEMALE', '1996-01-01T23:59:59', '', '1000.50', '10.28', '']</var>
<status status="PASS" start="2024-11-22T13:13:13.990029" elapsed="0.001143"/>
</iter>
<var>${item}</var>
<value>@{csv_list}</value>
<status status="PASS" start="2024-11-22T13:13:13.951125" elapsed="0.040063"/>
</for>
<status status="PASS" start="2024-11-22T13:13:13.951091" elapsed="0.040116"/>
</branch>
<branch type="ELSE">
<for flavor="IN">
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Set Variable" owner="BuiltIn">
<var>${negative_col_name}</var>
<arg>${item[2]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.991325" elapsed="0.000010"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:13.991282" elapsed="0.000069"/>
</branch>
<status status="NOT RUN" start="2024-11-22T13:13:13.991278" elapsed="0.000085"/>
</if>
<var name="${item}"/>
<status status="NOT RUN" start="2024-11-22T13:13:13.991266" elapsed="0.000105"/>
</iter>
<var>${item}</var>
<value>@{csv_list}</value>
<status status="NOT RUN" start="2024-11-22T13:13:13.991237" elapsed="0.000147"/>
</for>
<kw name="Create Dictionary" owner="BuiltIn">
<var>${dict}</var>
<arg>value_natid=${natid}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.991433" elapsed="0.000009"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<var>${sql_response}</var>
<arg>select_hero_by_natid</arg>
<arg>${dict}</arg>
<status status="NOT RUN" start="2024-11-22T13:13:13.991511" elapsed="0.000010"/>
</kw>
<kw name="Log and Log To Console" owner="generic">
<arg>${sql_response}</arg>
<status status="NOT RUN" start="2024-11-22T13:13:13.991565" elapsed="0.000009"/>
</kw>
<if>
<branch type="IF" condition="${sql_response} != []">
<kw name="Set Variable" owner="BuiltIn">
<var>${sql_response}</var>
<arg>${sql_response}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.991635" elapsed="0.000009"/>
</kw>
<kw name="Log and Log To Console" owner="generic">
<arg>${sql_response}</arg>
<status status="NOT RUN" start="2024-11-22T13:13:13.991688" elapsed="0.000008"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<var>${failure_msg}</var>
<arg>${sql_response['${negative_col_name}']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.991736" elapsed="0.000008"/>
</kw>
<kw name="Log and Log To Console" owner="generic">
<arg>${sql_response}</arg>
<status status="NOT RUN" start="2024-11-22T13:13:13.991786" elapsed="0.000008"/>
</kw>
<kw name="Fail" owner="BuiltIn">
<arg>Record created with invalid column named "${negative_col_name}": ${sql_response['${negative_col_name}']}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.991832" elapsed="0.000008"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:13.991595" elapsed="0.000258"/>
</branch>
<status status="NOT RUN" start="2024-11-22T13:13:13.991590" elapsed="0.000274"/>
</if>
<status status="NOT RUN" start="2024-11-22T13:13:13.991219" elapsed="0.000652"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:13.951086" elapsed="0.040795"/>
</if>
<arg>${negative_test_data_path}</arg>
<arg>Positive</arg>
<arg>natid-151</arg>
<doc>Verify partial uploaded heroes in DB</doc>
<status status="PASS" start="2024-11-22T13:13:13.950798" elapsed="0.041103"/>
</kw>
<kw name="Common Test Teardown" owner="generic" type="TEARDOWN">
<kw name="Capture Page Screenshot" owner="SeleniumLibrary">
<msg time="2024-11-22T13:13:13.992172" level="INFO">Cannot capture screenshot because no browser is open.</msg>
<arg>${OUTPUT_DIR}/screenshots/${TEST NAME}.png</arg>
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<status status="PASS" start="2024-11-22T13:13:13.992104" elapsed="0.000085"/>
</kw>
<kw name="Close Browser" owner="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" start="2024-11-22T13:13:13.992236" elapsed="0.000033"/>
</kw>
<status status="PASS" start="2024-11-22T13:13:13.992006" elapsed="0.000283"/>
</kw>
<status status="PASS" start="2024-11-22T13:13:13.899347" elapsed="0.092971"/>
</test>
<test id="s1-t4" name="Test Case 4 - Partial Data Wrong Format - Negative - name" line="32">
<kw name="Verify Partial Uploaded Data In DB" owner="clerk">
<kw name="Read Csv File To List" owner="CSVLibrary">
<msg time="2024-11-22T13:13:13.993082" level="INFO">${csv_list} = [['${natid}', '${flow}', '${negative_col_name}'], ['natid-150', 'Positive', ''], ['natid-151', 'Positive', ''], ['natid-152', 'Negative', 'name'], ['natid-153', 'Negative', 'gender'], ['natid-154', 'N...</msg>
<var>${csv_list}</var>
<arg>${test_data_path}</arg>
<doc>Read CSV file and return its content as a Python list of tuples.</doc>
<status status="PASS" start="2024-11-22T13:13:13.992742" elapsed="0.000354"/>
</kw>
<if>
<branch type="IF" condition="'${flow}' == 'Positive'">
<for flavor="IN">
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Create Dictionary" owner="BuiltIn">
<var>${dict}</var>
<arg>value_natid=${item[0]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.993300" elapsed="0.000011"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<var>${sql_response}</var>
<arg>select_hero_by_natid</arg>
<arg>${dict}</arg>
<status status="NOT RUN" start="2024-11-22T13:13:13.993432" elapsed="0.000011"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${sql_response} == []</arg>
<arg>Fail</arg>
<arg>${natid} not created in DB</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.993496" elapsed="0.000009"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<var>${sql_response}</var>
<arg>${sql_response}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.993550" elapsed="0.000009"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[0]}</arg>
<arg>${sql_response['natid']}</arg>
<arg>natid</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.993606" elapsed="0.000010"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[1]}</arg>
<arg>${sql_response['name']}</arg>
<arg>name</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.993659" elapsed="0.000009"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[2]}</arg>
<arg>${sql_response['gender']}</arg>
<arg>gender</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.993713" elapsed="0.000009"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[3]}</arg>
<arg>${sql_response['birth_date']}</arg>
<arg>birth_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.993796" elapsed="0.000010"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[4]}</arg>
<arg>${sql_response['death_date']}</arg>
<arg>death_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.993869" elapsed="0.000009"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[5]}</arg>
<arg>${sql_response['salary']}</arg>
<arg>salary</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.994023" elapsed="0.000011"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[6]}</arg>
<arg>${sql_response['tax_paid']}</arg>
<arg>tax_paid</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.994099" elapsed="0.000010"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[7]}</arg>
<arg>${sql_response['brownie_points']}</arg>
<arg>brownie_points</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.994171" elapsed="0.000009"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:13.993252" elapsed="0.000943"/>
</branch>
<status status="NOT RUN" start="2024-11-22T13:13:13.993248" elapsed="0.000961"/>
</if>
<var name="${item}"/>
<status status="NOT RUN" start="2024-11-22T13:13:13.993234" elapsed="0.000983"/>
</iter>
<var>${item}</var>
<value>@{csv_list}</value>
<status status="NOT RUN" start="2024-11-22T13:13:13.993186" elapsed="0.001044"/>
</for>
<status status="NOT RUN" start="2024-11-22T13:13:13.993134" elapsed="0.001111"/>
</branch>
<branch type="ELSE">
<for flavor="IN">
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Set Variable" owner="BuiltIn">
<var>${negative_col_name}</var>
<arg>${item[2]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.996047" elapsed="0.000012"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:13.994342" elapsed="0.001737"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:13.994338" elapsed="0.001756"/>
</if>
<var name="${item}">['${natid}', '${flow}', '${negative_col_name}']</var>
<status status="PASS" start="2024-11-22T13:13:13.994325" elapsed="0.001778"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Set Variable" owner="BuiltIn">
<var>${negative_col_name}</var>
<arg>${item[2]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.996456" elapsed="0.000012"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:13.996170" elapsed="0.000316"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:13.996165" elapsed="0.000335"/>
</if>
<var name="${item}">['natid-150', 'Positive', '']</var>
<status status="PASS" start="2024-11-22T13:13:13.996151" elapsed="0.000357"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Set Variable" owner="BuiltIn">
<var>${negative_col_name}</var>
<arg>${item[2]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.996842" elapsed="0.000011"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:13.996571" elapsed="0.000300"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:13.996566" elapsed="0.000318"/>
</if>
<var name="${item}">['natid-151', 'Positive', '']</var>
<status status="PASS" start="2024-11-22T13:13:13.996552" elapsed="0.000341"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-11-22T13:13:13.997446" level="INFO">${negative_col_name} = name</msg>
<var>${negative_col_name}</var>
<arg>${item[2]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-11-22T13:13:13.997215" elapsed="0.000242"/>
</kw>
<status status="PASS" start="2024-11-22T13:13:13.996953" elapsed="0.000522"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:13.996948" elapsed="0.000539"/>
</if>
<var name="${item}">['natid-152', 'Negative', 'name']</var>
<status status="PASS" start="2024-11-22T13:13:13.996935" elapsed="0.000560"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Set Variable" owner="BuiltIn">
<var>${negative_col_name}</var>
<arg>${item[2]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.997785" elapsed="0.000010"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:13.997551" elapsed="0.000260"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:13.997546" elapsed="0.000278"/>
</if>
<var name="${item}">['natid-153', 'Negative', 'gender']</var>
<status status="PASS" start="2024-11-22T13:13:13.997534" elapsed="0.000297"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Set Variable" owner="BuiltIn">
<var>${negative_col_name}</var>
<arg>${item[2]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.998115" elapsed="0.000010"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:13.997884" elapsed="0.000256"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:13.997880" elapsed="0.000272"/>
</if>
<var name="${item}">['natid-154', 'Negative', 'birth_date']</var>
<status status="PASS" start="2024-11-22T13:13:13.997868" elapsed="0.000291"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Set Variable" owner="BuiltIn">
<var>${negative_col_name}</var>
<arg>${item[2]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.998443" elapsed="0.000010"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:13.998212" elapsed="0.000256"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:13.998208" elapsed="0.000271"/>
</if>
<var name="${item}">['natid-155', 'Negative', 'salary']</var>
<status status="PASS" start="2024-11-22T13:13:13.998196" elapsed="0.000291"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Set Variable" owner="BuiltIn">
<var>${negative_col_name}</var>
<arg>${item[2]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.998769" elapsed="0.000010"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:13.998540" elapsed="0.000298"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:13.998536" elapsed="0.000314"/>
</if>
<var name="${item}">['natid-156', 'Negative', 'tax_paid']</var>
<status status="PASS" start="2024-11-22T13:13:13.998524" elapsed="0.000333"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Set Variable" owner="BuiltIn">
<var>${negative_col_name}</var>
<arg>${item[2]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.999161" elapsed="0.000010"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:13.998912" elapsed="0.000276"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:13.998907" elapsed="0.000294"/>
</if>
<var name="${item}">['natid-157', 'Positive', '']</var>
<status status="PASS" start="2024-11-22T13:13:13.998895" elapsed="0.000314"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Set Variable" owner="BuiltIn">
<var>${negative_col_name}</var>
<arg>${item[2]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.999511" elapsed="0.000010"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:13.999268" elapsed="0.000270"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:13.999263" elapsed="0.000287"/>
</if>
<var name="${item}">['natid-158', 'Negative', 'gender']</var>
<status status="PASS" start="2024-11-22T13:13:13.999250" elapsed="0.000307"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Set Variable" owner="BuiltIn">
<var>${negative_col_name}</var>
<arg>${item[2]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:13.999860" elapsed="0.000010"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:13.999626" elapsed="0.000259"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:13.999621" elapsed="0.000276"/>
</if>
<var name="${item}">['natid-159', 'Positive', '']</var>
<status status="PASS" start="2024-11-22T13:13:13.999606" elapsed="0.000298"/>
</iter>
<var>${item}</var>
<value>@{csv_list}</value>
<status status="PASS" start="2024-11-22T13:13:13.994271" elapsed="0.005661"/>
</for>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2024-11-22T13:13:14.000066" level="INFO">${dict} = {'value_natid': 'natid-152'}</msg>
<var>${dict}</var>
<arg>value_natid=${natid}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2024-11-22T13:13:13.999986" elapsed="0.000100"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<kw name="Connect To Database" owner="DatabaseLibrary">
<msg time="2024-11-22T13:13:14.000390" level="INFO">Looking for configuration file: 'resources/db.cfg'</msg>
<msg time="2024-11-22T13:13:14.000408" level="INFO">Configuration file doesn't exist</msg>
<msg time="2024-11-22T13:13:14.000477" level="INFO">Connect to DB using : mysql.connector.connect(database='testdb', user='user', password=***, host='localhost', port=3306)</msg>
<arg>${DB_API}</arg>
<arg>${DB_NAME}</arg>
<arg>${DB_USER}</arg>
<arg>${DB_PASSWORD}</arg>
<arg>${DB_HOST}</arg>
<arg>${DB_PORT}</arg>
<doc>Creates a database connection using the DB API 2.0 ``db_module`` and the parameters provided.
Along with listed commonly used arguments (`db_name`, `db_host` etc.)
you can set any other DB module specific parameters as key/value pairs.</doc>
<status status="PASS" start="2024-11-22T13:13:14.000286" elapsed="0.007458"/>
</kw>
<kw name="Update SQL Queries With Arguments Dictionary" owner="sql-helper">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-11-22T13:13:14.008062" level="INFO" html="true">Getting file '&lt;a href="file:///Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/object-repo/sql-queries/select_hero_by_natid.sql"&gt;/Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/object-repo/sql-queries/select_hero_by_natid.sql&lt;/a&gt;'.</msg>
<msg time="2024-11-22T13:13:14.008128" level="INFO">${sql_query} = SELECT *
FROM testdb.working_class_heroes
WHERE natid='value_natid';</msg>
<var>${sql_query}</var>
<arg>./object-repo/sql-queries/${sql_file_name}.sql</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-11-22T13:13:14.007964" elapsed="0.000176"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2024-11-22T13:13:14.008513" level="INFO">Argument types are:
&lt;class 'robot.utils.dotdict.DotDict'&gt;
&lt;class 'str'&gt;</msg>
<msg time="2024-11-22T13:13:14.008573" level="FAIL">{'value_natid': 'natid-152'} != </msg>
<arg>${args_dict}</arg>
<arg>${EMPTY}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="FAIL" start="2024-11-22T13:13:14.008283" elapsed="0.000324">{'value_natid': 'natid-152'} != </status>
</kw>
<msg time="2024-11-22T13:13:14.008646" level="INFO">${empty_status} = False</msg>
<var>${empty_status}</var>
<arg>Should Be Equal As Strings</arg>
<arg>${args_dict}</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-11-22T13:13:14.008204" elapsed="0.000450"/>
</kw>
<if>
<branch type="IF" condition="'${empty_status}' == '${False}'">
<if>
<branch type="IF" condition="${args_dict}">
<for flavor="IN">
<iter>
<kw name="Convert To String" owner="BuiltIn">
<msg time="2024-11-22T13:13:14.008893" level="INFO">${args_key_str} = value_natid</msg>
<var>${args_key_str}</var>
<arg>${args_key}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="PASS" start="2024-11-22T13:13:14.008838" elapsed="0.000063"/>
</kw>
<kw name="Convert To String" owner="BuiltIn">
<msg time="2024-11-22T13:13:14.009031" level="INFO">${args_value_str} = natid-152</msg>
<var>${args_value_str}</var>
<arg>${args_dict}[${args_key_str}]</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="PASS" start="2024-11-22T13:13:14.008952" elapsed="0.000090"/>
</kw>
<kw name="Replace String" owner="String">
<msg time="2024-11-22T13:13:14.009159" level="INFO">${sql_query} = SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-152';</msg>
<var>${sql_query}</var>
<arg>${sql_query}</arg>
<arg>${args_key_str}</arg>
<arg>${args_value_str}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="PASS" start="2024-11-22T13:13:14.009093" elapsed="0.000074"/>
</kw>
<var name="${args_key}">value_natid</var>
<status status="PASS" start="2024-11-22T13:13:14.008799" elapsed="0.000385"/>
</iter>
<var>${args_key}</var>
<value>@{args_dict}</value>
<status status="PASS" start="2024-11-22T13:13:14.008755" elapsed="0.000444"/>
</for>
<status status="PASS" start="2024-11-22T13:13:14.008731" elapsed="0.000483"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:14.008727" elapsed="0.000497"/>
</if>
<status status="PASS" start="2024-11-22T13:13:14.008683" elapsed="0.000549"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:14.008677" elapsed="0.000565"/>
</if>
<return>
<value>${sql_query}</value>
<status status="PASS" start="2024-11-22T13:13:14.009253" elapsed="0.000014"/>
</return>
<msg time="2024-11-22T13:13:14.009309" level="INFO">${updated_sql_query} = SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-152';</msg>
<var>${updated_sql_query}</var>
<arg>${sql_file_name}</arg>
<arg>${args_dict}</arg>
<status status="PASS" start="2024-11-22T13:13:14.007850" elapsed="0.001467"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-11-22T13:13:14.009594" level="FAIL">'SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-152';' does not contain 'delete'</msg>
<arg>${updated_sql_query}</arg>
<arg>DELETE</arg>
<arg>ignore_case=${True}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-11-22T13:13:14.009423" elapsed="0.000241">'SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-152';' does not contain 'delete'</status>
</kw>
<msg time="2024-11-22T13:13:14.009699" level="INFO">${delete_status} = False</msg>
<var>${delete_status}</var>
<arg>Should Contain</arg>
<arg>${updated_sql_query}</arg>
<arg>DELETE</arg>
<arg>ignore_case=${True}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-11-22T13:13:14.009366" elapsed="0.000341"/>
</kw>
<if>
<branch type="IF" condition="'${delete_status}' == '${True}'">
<kw name="Execute Sql String" owner="DatabaseLibrary">
<var>${json_response}</var>
<arg>${updated_sql_query}</arg>
<doc>Executes the ``sql_string`` as a single SQL command.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.009802" elapsed="0.000009"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:14.009734" elapsed="0.000092"/>
</branch>
<branch type="ELSE">
<kw name="Query" owner="DatabaseLibrary">
<msg time="2024-11-22T13:13:14.010574" level="INFO" html="true">Executing sql:&lt;br&gt;&lt;code style="font-weight: bold;"&gt;SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-152';&lt;/code&gt;</msg>
<msg time="2024-11-22T13:13:14.011669" level="INFO" html="true">&lt;div style="max-width: 100%; overflow-x: auto;"&gt;&lt;table style="width: auto; border-collapse: collapse; border: 2px solid rgb(140 140 140)"&gt;&lt;caption style="text-align: left; font-weight: bold; padding: 5px;"&gt;Query returned 1 rows&lt;/caption&gt;&lt;tr&gt;&lt;th scope="col" style="background-color: #d6ecd4; border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;Row&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;id&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;created_at&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;create_by&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;updated_at&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;updated_by&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;birth_date&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;brownie_points&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;death_date&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;gender&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;name&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;natid&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;salary&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;tax_paid&lt;/th&gt;&lt;/tr&gt;&lt;tr style="background-color: #eee;"&gt;&lt;th scope="row" style="background-color: #d6ecd4;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;0&lt;/th&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;e7888bfc-a11b-4ff3-aa27-14b8279ba709&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;2024-11-22 13:13:13.272631&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;SYSTEM&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;2024-11-22 13:13:13.272631&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;SYSTEM&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;1996-01-01 23:59:59&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;None&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;None&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;MALE&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;Hanks123@!&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;natid-152&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;10320.0&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;10.0&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;</msg>
<msg time="2024-11-22T13:13:14.012207" level="INFO">${json_response} = [{'id': 'e7888bfc-a11b-4ff3-aa27-14b8279ba709', 'created_at': datetime.datetime(2024, 11, 22, 13, 13, 13, 272631), 'create_by': 'SYSTEM', 'updated_at': datetime.datetime(2024, 11, 22, 13, 13, 13, 2726...</msg>
<var>${json_response}</var>
<arg>${updated_sql_query}</arg>
<arg>return_dict=${True}</arg>
<doc>Runs a query with the ``select_statement`` and returns the result as list of rows.
The type of row values depends on the database module -
usually they are tuples or tuple-like objects.</doc>
<status status="PASS" start="2024-11-22T13:13:14.009876" elapsed="0.002342"/>
</kw>
<status status="PASS" start="2024-11-22T13:13:14.009838" elapsed="0.002399"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:14.009729" elapsed="0.002519"/>
</if>
<kw name="Disconnect From Database" owner="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<status status="PASS" start="2024-11-22T13:13:14.012288" elapsed="0.000071"/>
</kw>
<return>
<value>${json_response}</value>
<status status="PASS" start="2024-11-22T13:13:14.012377" elapsed="0.000011"/>
</return>
<msg time="2024-11-22T13:13:14.012436" level="INFO">${sql_response} = [{'id': 'e7888bfc-a11b-4ff3-aa27-14b8279ba709', 'created_at': datetime.datetime(2024, 11, 22, 13, 13, 13, 272631), 'create_by': 'SYSTEM', 'updated_at': datetime.datetime(2024, 11, 22, 13, 13, 13, 2726...</msg>
<var>${sql_response}</var>
<arg>select_hero_by_natid</arg>
<arg>${dict}</arg>
<status status="PASS" start="2024-11-22T13:13:14.000165" elapsed="0.012280"/>
</kw>
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T13:13:14.012635" level="INFO">
[{'id': 'e7888bfc-a11b-4ff3-aa27-14b8279ba709', 'created_at': datetime.datetime(2024, 11, 22, 13, 13, 13, 272631), 'create_by': 'SYSTEM', 'updated_at': datetime.datetime(2024, 11, 22, 13, 13, 13, 272631), 'updated_by': 'SYSTEM', 'birth_date': datetime.datetime(1996, 1, 1, 23, 59, 59), 'brownie_points': None, 'death_date': None, 'gender': 'MALE', 'name': 'Hanks123@!', 'natid': 'natid-152', 'salary': 10320.0, 'tax_paid': 10.0}]</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T13:13:14.012590" elapsed="0.000062"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T13:13:14.012732" elapsed="0.000061"/>
</kw>
<arg>${sql_response}</arg>
<status status="PASS" start="2024-11-22T13:13:14.012497" elapsed="0.000323"/>
</kw>
<if>
<branch type="IF" condition="${sql_response} != []">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-11-22T13:13:14.013027" level="INFO">${sql_response} = {'id': 'e7888bfc-a11b-4ff3-aa27-14b8279ba709', 'created_at': datetime.datetime(2024, 11, 22, 13, 13, 13, 272631), 'create_by': 'SYSTEM', 'updated_at': datetime.datetime(2024, 11, 22, 13, 13, 13, 27263...</msg>
<var>${sql_response}</var>
<arg>${sql_response}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-11-22T13:13:14.012971" elapsed="0.000065"/>
</kw>
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T13:13:14.013218" level="INFO">
{'id': 'e7888bfc-a11b-4ff3-aa27-14b8279ba709', 'created_at': datetime.datetime(2024, 11, 22, 13, 13, 13, 272631), 'create_by': 'SYSTEM', 'updated_at': datetime.datetime(2024, 11, 22, 13, 13, 13, 272631), 'updated_by': 'SYSTEM', 'birth_date': datetime.datetime(1996, 1, 1, 23, 59, 59), 'brownie_points': None, 'death_date': None, 'gender': 'MALE', 'name': 'Hanks123@!', 'natid': 'natid-152', 'salary': 10320.0, 'tax_paid': 10.0}</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T13:13:14.013175" elapsed="0.000059"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T13:13:14.013277" elapsed="0.000055"/>
</kw>
<arg>${sql_response}</arg>
<status status="PASS" start="2024-11-22T13:13:14.013085" elapsed="0.000271"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-11-22T13:13:14.013652" level="INFO">${failure_msg} = Hanks123@!</msg>
<var>${failure_msg}</var>
<arg>${sql_response['${negative_col_name}']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-11-22T13:13:14.013399" elapsed="0.000262"/>
</kw>
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T13:13:14.013846" level="INFO">
{'id': 'e7888bfc-a11b-4ff3-aa27-14b8279ba709', 'created_at': datetime.datetime(2024, 11, 22, 13, 13, 13, 272631), 'create_by': 'SYSTEM', 'updated_at': datetime.datetime(2024, 11, 22, 13, 13, 13, 272631), 'updated_by': 'SYSTEM', 'birth_date': datetime.datetime(1996, 1, 1, 23, 59, 59), 'brownie_points': None, 'death_date': None, 'gender': 'MALE', 'name': 'Hanks123@!', 'natid': 'natid-152', 'salary': 10320.0, 'tax_paid': 10.0}</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T13:13:14.013802" elapsed="0.000060"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T13:13:14.013906" elapsed="0.000052"/>
</kw>
<arg>${sql_response}</arg>
<status status="PASS" start="2024-11-22T13:13:14.013712" elapsed="0.000270"/>
</kw>
<kw name="Fail" owner="BuiltIn">
<msg time="2024-11-22T13:13:14.014306" level="FAIL">Record created with invalid column named "name": Hanks123@!</msg>
<arg>Record created with invalid column named "${negative_col_name}": ${sql_response['${negative_col_name}']}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="FAIL" start="2024-11-22T13:13:14.014025" elapsed="0.000305">Record created with invalid column named "name": Hanks123@!</status>
</kw>
<status status="FAIL" start="2024-11-22T13:13:14.012844" elapsed="0.001517">Record created with invalid column named "name": Hanks123@!</status>
</branch>
<status status="FAIL" start="2024-11-22T13:13:14.012838" elapsed="0.001540">Record created with invalid column named "name": Hanks123@!</status>
</if>
<status status="FAIL" start="2024-11-22T13:13:13.994255" elapsed="0.020142">Record created with invalid column named "name": Hanks123@!</status>
</branch>
<status status="FAIL" start="2024-11-22T13:13:13.993124" elapsed="0.021288">Record created with invalid column named "name": Hanks123@!</status>
</if>
<arg>${negative_driver_test_data_path}</arg>
<arg>Negative</arg>
<arg>natid-152</arg>
<doc>Verify partial uploaded heroes in DB</doc>
<status status="FAIL" start="2024-11-22T13:13:13.992635" elapsed="0.021814">Record created with invalid column named "name": Hanks123@!</status>
</kw>
<kw name="Common Test Teardown" owner="generic" type="TEARDOWN">
<kw name="Capture Page Screenshot" owner="SeleniumLibrary">
<msg time="2024-11-22T13:13:14.014731" level="INFO">Cannot capture screenshot because no browser is open.</msg>
<arg>${OUTPUT_DIR}/screenshots/${TEST NAME}.png</arg>
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<status status="PASS" start="2024-11-22T13:13:14.014666" elapsed="0.000081"/>
</kw>
<kw name="Close Browser" owner="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" start="2024-11-22T13:13:14.014796" elapsed="0.000036"/>
</kw>
<status status="PASS" start="2024-11-22T13:13:14.014567" elapsed="0.000291"/>
</kw>
<status status="FAIL" start="2024-11-22T13:13:13.992417" elapsed="0.022469">Record created with invalid column named "name": Hanks123@!</status>
</test>
<test id="s1-t5" name="Test Case 5 - Partial Data Wrong Format - Negative - gender - Missing" line="35">
<kw name="Verify Partial Uploaded Data In DB" owner="clerk">
<kw name="Read Csv File To List" owner="CSVLibrary">
<msg time="2024-11-22T13:13:14.015479" level="INFO">${csv_list} = [['${natid}', '${flow}', '${negative_col_name}'], ['natid-150', 'Positive', ''], ['natid-151', 'Positive', ''], ['natid-152', 'Negative', 'name'], ['natid-153', 'Negative', 'gender'], ['natid-154', 'N...</msg>
<var>${csv_list}</var>
<arg>${test_data_path}</arg>
<doc>Read CSV file and return its content as a Python list of tuples.</doc>
<status status="PASS" start="2024-11-22T13:13:14.015366" elapsed="0.000123"/>
</kw>
<if>
<branch type="IF" condition="'${flow}' == 'Positive'">
<for flavor="IN">
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Create Dictionary" owner="BuiltIn">
<var>${dict}</var>
<arg>value_natid=${item[0]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.015758" elapsed="0.000011"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<var>${sql_response}</var>
<arg>select_hero_by_natid</arg>
<arg>${dict}</arg>
<status status="NOT RUN" start="2024-11-22T13:13:14.015855" elapsed="0.000015"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${sql_response} == []</arg>
<arg>Fail</arg>
<arg>${natid} not created in DB</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.015938" elapsed="0.000012"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<var>${sql_response}</var>
<arg>${sql_response}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.015996" elapsed="0.000008"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[0]}</arg>
<arg>${sql_response['natid']}</arg>
<arg>natid</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.016047" elapsed="0.000010"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[1]}</arg>
<arg>${sql_response['name']}</arg>
<arg>name</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.016099" elapsed="0.000009"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[2]}</arg>
<arg>${sql_response['gender']}</arg>
<arg>gender</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.016148" elapsed="0.000010"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[3]}</arg>
<arg>${sql_response['birth_date']}</arg>
<arg>birth_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.016260" elapsed="0.000013"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[4]}</arg>
<arg>${sql_response['death_date']}</arg>
<arg>death_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.016346" elapsed="0.000010"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[5]}</arg>
<arg>${sql_response['salary']}</arg>
<arg>salary</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.016415" elapsed="0.000009"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[6]}</arg>
<arg>${sql_response['tax_paid']}</arg>
<arg>tax_paid</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.016482" elapsed="0.000009"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[7]}</arg>
<arg>${sql_response['brownie_points']}</arg>
<arg>brownie_points</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.016547" elapsed="0.000009"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:14.015636" elapsed="0.000934"/>
</branch>
<status status="NOT RUN" start="2024-11-22T13:13:14.015632" elapsed="0.000950"/>
</if>
<var name="${item}"/>
<status status="NOT RUN" start="2024-11-22T13:13:14.015616" elapsed="0.000974"/>
</iter>
<var>${item}</var>
<value>@{csv_list}</value>
<status status="NOT RUN" start="2024-11-22T13:13:14.015557" elapsed="0.001046"/>
</for>
<status status="NOT RUN" start="2024-11-22T13:13:14.015516" elapsed="0.001101"/>
</branch>
<branch type="ELSE">
<for flavor="IN">
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Set Variable" owner="BuiltIn">
<var>${negative_col_name}</var>
<arg>${item[2]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.017014" elapsed="0.000009"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:14.016706" elapsed="0.000334"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:14.016702" elapsed="0.000350"/>
</if>
<var name="${item}">['${natid}', '${flow}', '${negative_col_name}']</var>
<status status="PASS" start="2024-11-22T13:13:14.016689" elapsed="0.000370"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Set Variable" owner="BuiltIn">
<var>${negative_col_name}</var>
<arg>${item[2]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.017376" elapsed="0.000010"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:14.017115" elapsed="0.000287"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:14.017110" elapsed="0.000304"/>
</if>
<var name="${item}">['natid-150', 'Positive', '']</var>
<status status="PASS" start="2024-11-22T13:13:14.017098" elapsed="0.000323"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Set Variable" owner="BuiltIn">
<var>${negative_col_name}</var>
<arg>${item[2]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.017721" elapsed="0.000011"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:14.017475" elapsed="0.000275"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:14.017471" elapsed="0.000294"/>
</if>
<var name="${item}">['natid-151', 'Positive', '']</var>
<status status="PASS" start="2024-11-22T13:13:14.017459" elapsed="0.000313"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Set Variable" owner="BuiltIn">
<var>${negative_col_name}</var>
<arg>${item[2]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.018085" elapsed="0.000010"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:14.017840" elapsed="0.000277"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:14.017834" elapsed="0.000300"/>
</if>
<var name="${item}">['natid-152', 'Negative', 'name']</var>
<status status="PASS" start="2024-11-22T13:13:14.017817" elapsed="0.000325"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-11-22T13:13:14.018750" level="INFO">${negative_col_name} = gender</msg>
<var>${negative_col_name}</var>
<arg>${item[2]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-11-22T13:13:14.018490" elapsed="0.000269"/>
</kw>
<status status="PASS" start="2024-11-22T13:13:14.018212" elapsed="0.000563"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:14.018208" elapsed="0.000579"/>
</if>
<var name="${item}">['natid-153', 'Negative', 'gender']</var>
<status status="PASS" start="2024-11-22T13:13:14.018191" elapsed="0.000604"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Set Variable" owner="BuiltIn">
<var>${negative_col_name}</var>
<arg>${item[2]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.019140" elapsed="0.000010"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:14.018862" elapsed="0.000303"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:14.018857" elapsed="0.000319"/>
</if>
<var name="${item}">['natid-154', 'Negative', 'birth_date']</var>
<status status="PASS" start="2024-11-22T13:13:14.018844" elapsed="0.000339"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Set Variable" owner="BuiltIn">
<var>${negative_col_name}</var>
<arg>${item[2]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.019463" elapsed="0.000009"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:14.019236" elapsed="0.000252"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:14.019231" elapsed="0.000268"/>
</if>
<var name="${item}">['natid-155', 'Negative', 'salary']</var>
<status status="PASS" start="2024-11-22T13:13:14.019220" elapsed="0.000286"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Set Variable" owner="BuiltIn">
<var>${negative_col_name}</var>
<arg>${item[2]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.019793" elapsed="0.000010"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:14.019559" elapsed="0.000268"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:14.019555" elapsed="0.000284"/>
</if>
<var name="${item}">['natid-156', 'Negative', 'tax_paid']</var>
<status status="PASS" start="2024-11-22T13:13:14.019543" elapsed="0.000304"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Set Variable" owner="BuiltIn">
<var>${negative_col_name}</var>
<arg>${item[2]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.020144" elapsed="0.000009"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:14.019915" elapsed="0.000253"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:14.019911" elapsed="0.000269"/>
</if>
<var name="${item}">['natid-157', 'Positive', '']</var>
<status status="PASS" start="2024-11-22T13:13:14.019897" elapsed="0.000290"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Set Variable" owner="BuiltIn">
<var>${negative_col_name}</var>
<arg>${item[2]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.020464" elapsed="0.000010"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:14.020239" elapsed="0.000301"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:14.020235" elapsed="0.000318"/>
</if>
<var name="${item}">['natid-158', 'Negative', 'gender']</var>
<status status="PASS" start="2024-11-22T13:13:14.020224" elapsed="0.000337"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Set Variable" owner="BuiltIn">
<var>${negative_col_name}</var>
<arg>${item[2]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.020863" elapsed="0.000009"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:14.020613" elapsed="0.000275"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:14.020609" elapsed="0.000290"/>
</if>
<var name="${item}">['natid-159', 'Positive', '']</var>
<status status="PASS" start="2024-11-22T13:13:14.020598" elapsed="0.000309"/>
</iter>
<var>${item}</var>
<value>@{csv_list}</value>
<status status="PASS" start="2024-11-22T13:13:14.016641" elapsed="0.004279"/>
</for>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2024-11-22T13:13:14.021040" level="INFO">${dict} = {'value_natid': 'natid-153'}</msg>
<var>${dict}</var>
<arg>value_natid=${natid}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2024-11-22T13:13:14.020967" elapsed="0.000082"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<kw name="Connect To Database" owner="DatabaseLibrary">
<msg time="2024-11-22T13:13:14.021315" level="INFO">Looking for configuration file: 'resources/db.cfg'</msg>
<msg time="2024-11-22T13:13:14.021331" level="INFO">Configuration file doesn't exist</msg>
<msg time="2024-11-22T13:13:14.021397" level="INFO">Connect to DB using : mysql.connector.connect(database='testdb', user='user', password=***, host='localhost', port=3306)</msg>
<arg>${DB_API}</arg>
<arg>${DB_NAME}</arg>
<arg>${DB_USER}</arg>
<arg>${DB_PASSWORD}</arg>
<arg>${DB_HOST}</arg>
<arg>${DB_PORT}</arg>
<doc>Creates a database connection using the DB API 2.0 ``db_module`` and the parameters provided.
Along with listed commonly used arguments (`db_name`, `db_host` etc.)
you can set any other DB module specific parameters as key/value pairs.</doc>
<status status="PASS" start="2024-11-22T13:13:14.021219" elapsed="0.005071"/>
</kw>
<kw name="Update SQL Queries With Arguments Dictionary" owner="sql-helper">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-11-22T13:13:14.026604" level="INFO" html="true">Getting file '&lt;a href="file:///Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/object-repo/sql-queries/select_hero_by_natid.sql"&gt;/Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/object-repo/sql-queries/select_hero_by_natid.sql&lt;/a&gt;'.</msg>
<msg time="2024-11-22T13:13:14.026663" level="INFO">${sql_query} = SELECT *
FROM testdb.working_class_heroes
WHERE natid='value_natid';</msg>
<var>${sql_query}</var>
<arg>./object-repo/sql-queries/${sql_file_name}.sql</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-11-22T13:13:14.026524" elapsed="0.000149"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2024-11-22T13:13:14.027022" level="INFO">Argument types are:
&lt;class 'robot.utils.dotdict.DotDict'&gt;
&lt;class 'str'&gt;</msg>
<msg time="2024-11-22T13:13:14.027060" level="FAIL">{'value_natid': 'natid-153'} != </msg>
<arg>${args_dict}</arg>
<arg>${EMPTY}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="FAIL" start="2024-11-22T13:13:14.026789" elapsed="0.000296">{'value_natid': 'natid-153'} != </status>
</kw>
<msg time="2024-11-22T13:13:14.027120" level="INFO">${empty_status} = False</msg>
<var>${empty_status}</var>
<arg>Should Be Equal As Strings</arg>
<arg>${args_dict}</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-11-22T13:13:14.026727" elapsed="0.000401"/>
</kw>
<if>
<branch type="IF" condition="'${empty_status}' == '${False}'">
<if>
<branch type="IF" condition="${args_dict}">
<for flavor="IN">
<iter>
<kw name="Convert To String" owner="BuiltIn">
<msg time="2024-11-22T13:13:14.027394" level="INFO">${args_key_str} = value_natid</msg>
<var>${args_key_str}</var>
<arg>${args_key}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="PASS" start="2024-11-22T13:13:14.027335" elapsed="0.000068"/>
</kw>
<kw name="Convert To String" owner="BuiltIn">
<msg time="2024-11-22T13:13:14.027518" level="INFO">${args_value_str} = natid-153</msg>
<var>${args_value_str}</var>
<arg>${args_dict}[${args_key_str}]</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="PASS" start="2024-11-22T13:13:14.027451" elapsed="0.000076"/>
</kw>
<kw name="Replace String" owner="String">
<msg time="2024-11-22T13:13:14.027651" level="INFO">${sql_query} = SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-153';</msg>
<var>${sql_query}</var>
<arg>${sql_query}</arg>
<arg>${args_key_str}</arg>
<arg>${args_value_str}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="PASS" start="2024-11-22T13:13:14.027574" elapsed="0.000086"/>
</kw>
<var name="${args_key}">value_natid</var>
<status status="PASS" start="2024-11-22T13:13:14.027292" elapsed="0.000386"/>
</iter>
<var>${args_key}</var>
<value>@{args_dict}</value>
<status status="PASS" start="2024-11-22T13:13:14.027237" elapsed="0.000457"/>
</for>
<status status="PASS" start="2024-11-22T13:13:14.027209" elapsed="0.000502"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:14.027205" elapsed="0.000518"/>
</if>
<status status="PASS" start="2024-11-22T13:13:14.027157" elapsed="0.000574"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:14.027150" elapsed="0.000592"/>
</if>
<return>
<value>${sql_query}</value>
<status status="PASS" start="2024-11-22T13:13:14.027753" elapsed="0.000013"/>
</return>
<msg time="2024-11-22T13:13:14.027807" level="INFO">${updated_sql_query} = SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-153';</msg>
<var>${updated_sql_query}</var>
<arg>${sql_file_name}</arg>
<arg>${args_dict}</arg>
<status status="PASS" start="2024-11-22T13:13:14.026399" elapsed="0.001417"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-11-22T13:13:14.028018" level="FAIL">'SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-153';' does not contain 'delete'</msg>
<arg>${updated_sql_query}</arg>
<arg>DELETE</arg>
<arg>ignore_case=${True}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-11-22T13:13:14.027935" elapsed="0.000104">'SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-153';' does not contain 'delete'</status>
</kw>
<msg time="2024-11-22T13:13:14.028072" level="INFO">${delete_status} = False</msg>
<var>${delete_status}</var>
<arg>Should Contain</arg>
<arg>${updated_sql_query}</arg>
<arg>DELETE</arg>
<arg>ignore_case=${True}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-11-22T13:13:14.027866" elapsed="0.000215"/>
</kw>
<if>
<branch type="IF" condition="'${delete_status}' == '${True}'">
<kw name="Execute Sql String" owner="DatabaseLibrary">
<var>${json_response}</var>
<arg>${updated_sql_query}</arg>
<doc>Executes the ``sql_string`` as a single SQL command.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.028179" elapsed="0.000009"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:14.028108" elapsed="0.000095"/>
</branch>
<branch type="ELSE">
<kw name="Query" owner="DatabaseLibrary">
<msg time="2024-11-22T13:13:14.028635" level="INFO" html="true">Executing sql:&lt;br&gt;&lt;code style="font-weight: bold;"&gt;SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-153';&lt;/code&gt;</msg>
<msg time="2024-11-22T13:13:14.029345" level="INFO" html="true">&lt;div style="max-width: 100%; overflow-x: auto;"&gt;&lt;table style="width: auto; border-collapse: collapse; border: 2px solid rgb(140 140 140)"&gt;&lt;caption style="text-align: left; font-weight: bold; padding: 5px;"&gt;Query returned 1 rows&lt;/caption&gt;&lt;tr&gt;&lt;th scope="col" style="background-color: #d6ecd4; border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;Row&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;id&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;created_at&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;create_by&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;updated_at&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;updated_by&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;birth_date&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;brownie_points&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;death_date&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;gender&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;name&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;natid&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;salary&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;tax_paid&lt;/th&gt;&lt;/tr&gt;&lt;tr style="background-color: #eee;"&gt;&lt;th scope="row" style="background-color: #d6ecd4;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;0&lt;/th&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;80d38677-04aa-4909-a912-af4576d524c6&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;2024-11-22 13:13:13.284579&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;SYSTEM&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;2024-11-22 13:13:13.284579&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;SYSTEM&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;1996-01-01 23:59:59&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;None&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;None&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;None&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;Angelina Jolie&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;natid-153&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;1000.5&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;10.28&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;</msg>
<msg time="2024-11-22T13:13:14.029706" level="INFO">${json_response} = [{'id': '80d38677-04aa-4909-a912-af4576d524c6', 'created_at': datetime.datetime(2024, 11, 22, 13, 13, 13, 284579), 'create_by': 'SYSTEM', 'updated_at': datetime.datetime(2024, 11, 22, 13, 13, 13, 2845...</msg>
<var>${json_response}</var>
<arg>${updated_sql_query}</arg>
<arg>return_dict=${True}</arg>
<doc>Runs a query with the ``select_statement`` and returns the result as list of rows.
The type of row values depends on the database module -
usually they are tuples or tuple-like objects.</doc>
<status status="PASS" start="2024-11-22T13:13:14.028259" elapsed="0.001458"/>
</kw>
<status status="PASS" start="2024-11-22T13:13:14.028215" elapsed="0.001522"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:14.028103" elapsed="0.001647"/>
</if>
<kw name="Disconnect From Database" owner="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<status status="PASS" start="2024-11-22T13:13:14.029793" elapsed="0.000071"/>
</kw>
<return>
<value>${json_response}</value>
<status status="PASS" start="2024-11-22T13:13:14.029883" elapsed="0.000013"/>
</return>
<msg time="2024-11-22T13:13:14.029954" level="INFO">${sql_response} = [{'id': '80d38677-04aa-4909-a912-af4576d524c6', 'created_at': datetime.datetime(2024, 11, 22, 13, 13, 13, 284579), 'create_by': 'SYSTEM', 'updated_at': datetime.datetime(2024, 11, 22, 13, 13, 13, 2845...</msg>
<var>${sql_response}</var>
<arg>select_hero_by_natid</arg>
<arg>${dict}</arg>
<status status="PASS" start="2024-11-22T13:13:14.021121" elapsed="0.008845"/>
</kw>
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T13:13:14.030188" level="INFO">
[{'id': '80d38677-04aa-4909-a912-af4576d524c6', 'created_at': datetime.datetime(2024, 11, 22, 13, 13, 13, 284579), 'create_by': 'SYSTEM', 'updated_at': datetime.datetime(2024, 11, 22, 13, 13, 13, 284579), 'updated_by': 'SYSTEM', 'birth_date': datetime.datetime(1996, 1, 1, 23, 59, 59), 'brownie_points': None, 'death_date': None, 'gender': None, 'name': 'Angelina Jolie', 'natid': 'natid-153', 'salary': 1000.5, 'tax_paid': 10.28}]</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T13:13:14.030132" elapsed="0.000080"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T13:13:14.030268" elapsed="0.000060"/>
</kw>
<arg>${sql_response}</arg>
<status status="PASS" start="2024-11-22T13:13:14.030034" elapsed="0.000326"/>
</kw>
<if>
<branch type="IF" condition="${sql_response} != []">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-11-22T13:13:14.030586" level="INFO">${sql_response} = {'id': '80d38677-04aa-4909-a912-af4576d524c6', 'created_at': datetime.datetime(2024, 11, 22, 13, 13, 13, 284579), 'create_by': 'SYSTEM', 'updated_at': datetime.datetime(2024, 11, 22, 13, 13, 13, 28457...</msg>
<var>${sql_response}</var>
<arg>${sql_response}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-11-22T13:13:14.030526" elapsed="0.000071"/>
</kw>
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T13:13:14.030800" level="INFO">
{'id': '80d38677-04aa-4909-a912-af4576d524c6', 'created_at': datetime.datetime(2024, 11, 22, 13, 13, 13, 284579), 'create_by': 'SYSTEM', 'updated_at': datetime.datetime(2024, 11, 22, 13, 13, 13, 284579), 'updated_by': 'SYSTEM', 'birth_date': datetime.datetime(1996, 1, 1, 23, 59, 59), 'brownie_points': None, 'death_date': None, 'gender': None, 'name': 'Angelina Jolie', 'natid': 'natid-153', 'salary': 1000.5, 'tax_paid': 10.28}</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T13:13:14.030755" elapsed="0.000106"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T13:13:14.030910" elapsed="0.000062"/>
</kw>
<arg>${sql_response}</arg>
<status status="PASS" start="2024-11-22T13:13:14.030655" elapsed="0.000346"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-11-22T13:13:14.031371" level="INFO">${failure_msg} = None</msg>
<var>${failure_msg}</var>
<arg>${sql_response['${negative_col_name}']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-11-22T13:13:14.031048" elapsed="0.000336"/>
</kw>
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T13:13:14.031615" level="INFO">
{'id': '80d38677-04aa-4909-a912-af4576d524c6', 'created_at': datetime.datetime(2024, 11, 22, 13, 13, 13, 284579), 'create_by': 'SYSTEM', 'updated_at': datetime.datetime(2024, 11, 22, 13, 13, 13, 284579), 'updated_by': 'SYSTEM', 'birth_date': datetime.datetime(1996, 1, 1, 23, 59, 59), 'brownie_points': None, 'death_date': None, 'gender': None, 'name': 'Angelina Jolie', 'natid': 'natid-153', 'salary': 1000.5, 'tax_paid': 10.28}</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T13:13:14.031556" elapsed="0.000077"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T13:13:14.031689" elapsed="0.000067"/>
</kw>
<arg>${sql_response}</arg>
<status status="PASS" start="2024-11-22T13:13:14.031445" elapsed="0.000337"/>
</kw>
<kw name="Fail" owner="BuiltIn">
<msg time="2024-11-22T13:13:14.032162" level="FAIL">Record created with invalid column named "gender": None</msg>
<arg>Record created with invalid column named "${negative_col_name}": ${sql_response['${negative_col_name}']}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="FAIL" start="2024-11-22T13:13:14.031832" elapsed="0.000361">Record created with invalid column named "gender": None</status>
</kw>
<status status="FAIL" start="2024-11-22T13:13:14.030385" elapsed="0.001845">Record created with invalid column named "gender": None</status>
</branch>
<status status="FAIL" start="2024-11-22T13:13:14.030379" elapsed="0.001867">Record created with invalid column named "gender": None</status>
</if>
<status status="FAIL" start="2024-11-22T13:13:14.016627" elapsed="0.015642">Record created with invalid column named "gender": None</status>
</branch>
<status status="FAIL" start="2024-11-22T13:13:14.015510" elapsed="0.016776">Record created with invalid column named "gender": None</status>
</if>
<arg>${negative_driver_test_data_path}</arg>
<arg>Negative</arg>
<arg>natid-153</arg>
<doc>Verify partial uploaded heroes in DB</doc>
<status status="FAIL" start="2024-11-22T13:13:14.015238" elapsed="0.017087">Record created with invalid column named "gender": None</status>
</kw>
<kw name="Common Test Teardown" owner="generic" type="TEARDOWN">
<kw name="Capture Page Screenshot" owner="SeleniumLibrary">
<msg time="2024-11-22T13:13:14.032749" level="INFO">Cannot capture screenshot because no browser is open.</msg>
<arg>${OUTPUT_DIR}/screenshots/${TEST NAME}.png</arg>
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<status status="PASS" start="2024-11-22T13:13:14.032669" elapsed="0.000101"/>
</kw>
<kw name="Close Browser" owner="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" start="2024-11-22T13:13:14.032832" elapsed="0.000037"/>
</kw>
<status status="PASS" start="2024-11-22T13:13:14.032443" elapsed="0.000449"/>
</kw>
<status status="FAIL" start="2024-11-22T13:13:14.014986" elapsed="0.017934">Record created with invalid column named "gender": None</status>
</test>
<test id="s1-t6" name="Test Case 6 - Partial Data Wrong Format - Negative - birth_date" line="38">
<kw name="Verify Partial Uploaded Data In DB" owner="clerk">
<kw name="Read Csv File To List" owner="CSVLibrary">
<msg time="2024-11-22T13:13:14.033513" level="INFO">${csv_list} = [['${natid}', '${flow}', '${negative_col_name}'], ['natid-150', 'Positive', ''], ['natid-151', 'Positive', ''], ['natid-152', 'Negative', 'name'], ['natid-153', 'Negative', 'gender'], ['natid-154', 'N...</msg>
<var>${csv_list}</var>
<arg>${test_data_path}</arg>
<doc>Read CSV file and return its content as a Python list of tuples.</doc>
<status status="PASS" start="2024-11-22T13:13:14.033391" elapsed="0.000133"/>
</kw>
<if>
<branch type="IF" condition="'${flow}' == 'Positive'">
<for flavor="IN">
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Create Dictionary" owner="BuiltIn">
<var>${dict}</var>
<arg>value_natid=${item[0]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.033731" elapsed="0.000012"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<var>${sql_response}</var>
<arg>select_hero_by_natid</arg>
<arg>${dict}</arg>
<status status="NOT RUN" start="2024-11-22T13:13:14.033826" elapsed="0.000013"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${sql_response} == []</arg>
<arg>Fail</arg>
<arg>${natid} not created in DB</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.033906" elapsed="0.000013"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<var>${sql_response}</var>
<arg>${sql_response}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.033973" elapsed="0.000013"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[0]}</arg>
<arg>${sql_response['natid']}</arg>
<arg>natid</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.034033" elapsed="0.000009"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[1]}</arg>
<arg>${sql_response['name']}</arg>
<arg>name</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.034083" elapsed="0.000009"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[2]}</arg>
<arg>${sql_response['gender']}</arg>
<arg>gender</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.034133" elapsed="0.000008"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[3]}</arg>
<arg>${sql_response['birth_date']}</arg>
<arg>birth_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.034206" elapsed="0.000010"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[4]}</arg>
<arg>${sql_response['death_date']}</arg>
<arg>death_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.034297" elapsed="0.000013"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[5]}</arg>
<arg>${sql_response['salary']}</arg>
<arg>salary</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.034368" elapsed="0.000010"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[6]}</arg>
<arg>${sql_response['tax_paid']}</arg>
<arg>tax_paid</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.034434" elapsed="0.000009"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[7]}</arg>
<arg>${sql_response['brownie_points']}</arg>
<arg>brownie_points</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.034501" elapsed="0.000008"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:14.033682" elapsed="0.000891"/>
</branch>
<status status="NOT RUN" start="2024-11-22T13:13:14.033676" elapsed="0.000910"/>
</if>
<var name="${item}"/>
<status status="NOT RUN" start="2024-11-22T13:13:14.033657" elapsed="0.000937"/>
</iter>
<var>${item}</var>
<value>@{csv_list}</value>
<status status="NOT RUN" start="2024-11-22T13:13:14.033604" elapsed="0.001002"/>
</for>
<status status="NOT RUN" start="2024-11-22T13:13:14.033555" elapsed="0.001066"/>
</branch>
<branch type="ELSE">
<for flavor="IN">
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Set Variable" owner="BuiltIn">
<var>${negative_col_name}</var>
<arg>${item[2]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.035032" elapsed="0.000010"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:14.034740" elapsed="0.000318"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:14.034733" elapsed="0.000337"/>
</if>
<var name="${item}">['${natid}', '${flow}', '${negative_col_name}']</var>
<status status="PASS" start="2024-11-22T13:13:14.034703" elapsed="0.000375"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Set Variable" owner="BuiltIn">
<var>${negative_col_name}</var>
<arg>${item[2]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.035377" elapsed="0.000010"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:14.035132" elapsed="0.000271"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:14.035127" elapsed="0.000289"/>
</if>
<var name="${item}">['natid-150', 'Positive', '']</var>
<status status="PASS" start="2024-11-22T13:13:14.035115" elapsed="0.000309"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Set Variable" owner="BuiltIn">
<var>${negative_col_name}</var>
<arg>${item[2]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.035755" elapsed="0.000010"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:14.035478" elapsed="0.000307"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:14.035474" elapsed="0.000328"/>
</if>
<var name="${item}">['natid-151', 'Positive', '']</var>
<status status="PASS" start="2024-11-22T13:13:14.035462" elapsed="0.000350"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Set Variable" owner="BuiltIn">
<var>${negative_col_name}</var>
<arg>${item[2]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.036107" elapsed="0.000009"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:14.035871" elapsed="0.000261"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:14.035867" elapsed="0.000277"/>
</if>
<var name="${item}">['natid-152', 'Negative', 'name']</var>
<status status="PASS" start="2024-11-22T13:13:14.035854" elapsed="0.000297"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Set Variable" owner="BuiltIn">
<var>${negative_col_name}</var>
<arg>${item[2]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.036439" elapsed="0.000009"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:14.036204" elapsed="0.000260"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:14.036200" elapsed="0.000275"/>
</if>
<var name="${item}">['natid-153', 'Negative', 'gender']</var>
<status status="PASS" start="2024-11-22T13:13:14.036188" elapsed="0.000295"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-11-22T13:13:14.037053" level="INFO">${negative_col_name} = birth_date</msg>
<var>${negative_col_name}</var>
<arg>${item[2]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-11-22T13:13:14.036766" elapsed="0.000297"/>
</kw>
<status status="PASS" start="2024-11-22T13:13:14.036535" elapsed="0.000545"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:14.036531" elapsed="0.000561"/>
</if>
<var name="${item}">['natid-154', 'Negative', 'birth_date']</var>
<status status="PASS" start="2024-11-22T13:13:14.036519" elapsed="0.000580"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Set Variable" owner="BuiltIn">
<var>${negative_col_name}</var>
<arg>${item[2]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.037418" elapsed="0.000010"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:14.037153" elapsed="0.000291"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:14.037148" elapsed="0.000307"/>
</if>
<var name="${item}">['natid-155', 'Negative', 'salary']</var>
<status status="PASS" start="2024-11-22T13:13:14.037136" elapsed="0.000327"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Set Variable" owner="BuiltIn">
<var>${negative_col_name}</var>
<arg>${item[2]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.037761" elapsed="0.000014"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:14.037515" elapsed="0.000282"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:14.037510" elapsed="0.000302"/>
</if>
<var name="${item}">['natid-156', 'Negative', 'tax_paid']</var>
<status status="PASS" start="2024-11-22T13:13:14.037499" elapsed="0.000320"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Set Variable" owner="BuiltIn">
<var>${negative_col_name}</var>
<arg>${item[2]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.038100" elapsed="0.000009"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:14.037872" elapsed="0.000253"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:14.037868" elapsed="0.000269"/>
</if>
<var name="${item}">['natid-157', 'Positive', '']</var>
<status status="PASS" start="2024-11-22T13:13:14.037856" elapsed="0.000289"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Set Variable" owner="BuiltIn">
<var>${negative_col_name}</var>
<arg>${item[2]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.038426" elapsed="0.000009"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:14.038197" elapsed="0.000254"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:14.038193" elapsed="0.000269"/>
</if>
<var name="${item}">['natid-158', 'Negative', 'gender']</var>
<status status="PASS" start="2024-11-22T13:13:14.038181" elapsed="0.000289"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Set Variable" owner="BuiltIn">
<var>${negative_col_name}</var>
<arg>${item[2]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.038748" elapsed="0.000009"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:14.038523" elapsed="0.000250"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:14.038519" elapsed="0.000265"/>
</if>
<var name="${item}">['natid-159', 'Positive', '']</var>
<status status="PASS" start="2024-11-22T13:13:14.038507" elapsed="0.000284"/>
</iter>
<var>${item}</var>
<value>@{csv_list}</value>
<status status="PASS" start="2024-11-22T13:13:14.034646" elapsed="0.004158"/>
</for>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2024-11-22T13:13:14.039169" level="INFO">${dict} = {'value_natid': 'natid-154'}</msg>
<var>${dict}</var>
<arg>value_natid=${natid}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2024-11-22T13:13:14.038853" elapsed="0.000326"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<kw name="Connect To Database" owner="DatabaseLibrary">
<msg time="2024-11-22T13:13:14.039449" level="INFO">Looking for configuration file: 'resources/db.cfg'</msg>
<msg time="2024-11-22T13:13:14.039472" level="INFO">Configuration file doesn't exist</msg>
<msg time="2024-11-22T13:13:14.039538" level="INFO">Connect to DB using : mysql.connector.connect(database='testdb', user='user', password=***, host='localhost', port=3306)</msg>
<arg>${DB_API}</arg>
<arg>${DB_NAME}</arg>
<arg>${DB_USER}</arg>
<arg>${DB_PASSWORD}</arg>
<arg>${DB_HOST}</arg>
<arg>${DB_PORT}</arg>
<doc>Creates a database connection using the DB API 2.0 ``db_module`` and the parameters provided.
Along with listed commonly used arguments (`db_name`, `db_host` etc.)
you can set any other DB module specific parameters as key/value pairs.</doc>
<status status="PASS" start="2024-11-22T13:13:14.039352" elapsed="0.005129"/>
</kw>
<kw name="Update SQL Queries With Arguments Dictionary" owner="sql-helper">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-11-22T13:13:14.044867" level="INFO" html="true">Getting file '&lt;a href="file:///Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/object-repo/sql-queries/select_hero_by_natid.sql"&gt;/Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/object-repo/sql-queries/select_hero_by_natid.sql&lt;/a&gt;'.</msg>
<msg time="2024-11-22T13:13:14.044931" level="INFO">${sql_query} = SELECT *
FROM testdb.working_class_heroes
WHERE natid='value_natid';</msg>
<var>${sql_query}</var>
<arg>./object-repo/sql-queries/${sql_file_name}.sql</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-11-22T13:13:14.044756" elapsed="0.000185"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2024-11-22T13:13:14.045328" level="INFO">Argument types are:
&lt;class 'robot.utils.dotdict.DotDict'&gt;
&lt;class 'str'&gt;</msg>
<msg time="2024-11-22T13:13:14.045366" level="FAIL">{'value_natid': 'natid-154'} != </msg>
<arg>${args_dict}</arg>
<arg>${EMPTY}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="FAIL" start="2024-11-22T13:13:14.045075" elapsed="0.000315">{'value_natid': 'natid-154'} != </status>
</kw>
<msg time="2024-11-22T13:13:14.045435" level="INFO">${empty_status} = False</msg>
<var>${empty_status}</var>
<arg>Should Be Equal As Strings</arg>
<arg>${args_dict}</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-11-22T13:13:14.045008" elapsed="0.000435"/>
</kw>
<if>
<branch type="IF" condition="'${empty_status}' == '${False}'">
<if>
<branch type="IF" condition="${args_dict}">
<for flavor="IN">
<iter>
<kw name="Convert To String" owner="BuiltIn">
<msg time="2024-11-22T13:13:14.045729" level="INFO">${args_key_str} = value_natid</msg>
<var>${args_key_str}</var>
<arg>${args_key}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="PASS" start="2024-11-22T13:13:14.045665" elapsed="0.000073"/>
</kw>
<kw name="Convert To String" owner="BuiltIn">
<msg time="2024-11-22T13:13:14.045853" level="INFO">${args_value_str} = natid-154</msg>
<var>${args_value_str}</var>
<arg>${args_dict}[${args_key_str}]</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="PASS" start="2024-11-22T13:13:14.045787" elapsed="0.000076"/>
</kw>
<kw name="Replace String" owner="String">
<msg time="2024-11-22T13:13:14.045979" level="INFO">${sql_query} = SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-154';</msg>
<var>${sql_query}</var>
<arg>${sql_query}</arg>
<arg>${args_key_str}</arg>
<arg>${args_value_str}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="PASS" start="2024-11-22T13:13:14.045912" elapsed="0.000075"/>
</kw>
<var name="${args_key}">value_natid</var>
<status status="PASS" start="2024-11-22T13:13:14.045620" elapsed="0.000385"/>
</iter>
<var>${args_key}</var>
<value>@{args_dict}</value>
<status status="PASS" start="2024-11-22T13:13:14.045568" elapsed="0.000452"/>
</for>
<status status="PASS" start="2024-11-22T13:13:14.045542" elapsed="0.000493"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:14.045537" elapsed="0.000509"/>
</if>
<status status="PASS" start="2024-11-22T13:13:14.045480" elapsed="0.000573"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:14.045470" elapsed="0.000592"/>
</if>
<return>
<value>${sql_query}</value>
<status status="PASS" start="2024-11-22T13:13:14.046073" elapsed="0.000012"/>
</return>
<msg time="2024-11-22T13:13:14.046126" level="INFO">${updated_sql_query} = SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-154';</msg>
<var>${updated_sql_query}</var>
<arg>${sql_file_name}</arg>
<arg>${args_dict}</arg>
<status status="PASS" start="2024-11-22T13:13:14.044610" elapsed="0.001524"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-11-22T13:13:14.046320" level="FAIL">'SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-154';' does not contain 'delete'</msg>
<arg>${updated_sql_query}</arg>
<arg>DELETE</arg>
<arg>ignore_case=${True}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-11-22T13:13:14.046239" elapsed="0.000103">'SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-154';' does not contain 'delete'</status>
</kw>
<msg time="2024-11-22T13:13:14.046376" level="INFO">${delete_status} = False</msg>
<var>${delete_status}</var>
<arg>Should Contain</arg>
<arg>${updated_sql_query}</arg>
<arg>DELETE</arg>
<arg>ignore_case=${True}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-11-22T13:13:14.046181" elapsed="0.000203"/>
</kw>
<if>
<branch type="IF" condition="'${delete_status}' == '${True}'">
<kw name="Execute Sql String" owner="DatabaseLibrary">
<var>${json_response}</var>
<arg>${updated_sql_query}</arg>
<doc>Executes the ``sql_string`` as a single SQL command.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.046479" elapsed="0.000009"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:14.046410" elapsed="0.000093"/>
</branch>
<branch type="ELSE">
<kw name="Query" owner="DatabaseLibrary">
<msg time="2024-11-22T13:13:14.046919" level="INFO" html="true">Executing sql:&lt;br&gt;&lt;code style="font-weight: bold;"&gt;SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-154';&lt;/code&gt;</msg>
<msg time="2024-11-22T13:13:14.047480" level="INFO" html="true">&lt;div style="max-width: 100%; overflow-x: auto;"&gt;&lt;table style="width: auto; border-collapse: collapse; border: 2px solid rgb(140 140 140)"&gt;&lt;caption style="text-align: left; font-weight: bold; padding: 5px;"&gt;Query returned 1 rows&lt;/caption&gt;&lt;tr&gt;&lt;th scope="col" style="background-color: #d6ecd4; border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;Row&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;id&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;created_at&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;create_by&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;updated_at&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;updated_by&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;birth_date&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;brownie_points&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;death_date&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;gender&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;name&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;natid&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;salary&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;tax_paid&lt;/th&gt;&lt;/tr&gt;&lt;tr style="background-color: #eee;"&gt;&lt;th scope="row" style="background-color: #d6ecd4;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;0&lt;/th&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;2a70d757-7eec-4db9-aa8d-17e0bbc2ae0b&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;2024-11-22 13:13:13.291166&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;SYSTEM&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;2024-11-22 13:13:13.291166&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;SYSTEM&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;4000-01-01 23:59:59&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;None&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;None&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;MALE&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;Lawrence Chu&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;natid-154&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;1000.12&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;10.0&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;</msg>
<msg time="2024-11-22T13:13:14.047903" level="INFO">${json_response} = [{'id': '2a70d757-7eec-4db9-aa8d-17e0bbc2ae0b', 'created_at': datetime.datetime(2024, 11, 22, 13, 13, 13, 291166), 'create_by': 'SYSTEM', 'updated_at': datetime.datetime(2024, 11, 22, 13, 13, 13, 2911...</msg>
<var>${json_response}</var>
<arg>${updated_sql_query}</arg>
<arg>return_dict=${True}</arg>
<doc>Runs a query with the ``select_statement`` and returns the result as list of rows.
The type of row values depends on the database module -
usually they are tuples or tuple-like objects.</doc>
<status status="PASS" start="2024-11-22T13:13:14.046550" elapsed="0.001366"/>
</kw>
<status status="PASS" start="2024-11-22T13:13:14.046513" elapsed="0.001425"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:14.046405" elapsed="0.001546"/>
</if>
<kw name="Disconnect From Database" owner="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<status status="PASS" start="2024-11-22T13:13:14.047999" elapsed="0.000075"/>
</kw>
<return>
<value>${json_response}</value>
<status status="PASS" start="2024-11-22T13:13:14.048093" elapsed="0.000014"/>
</return>
<msg time="2024-11-22T13:13:14.048160" level="INFO">${sql_response} = [{'id': '2a70d757-7eec-4db9-aa8d-17e0bbc2ae0b', 'created_at': datetime.datetime(2024, 11, 22, 13, 13, 13, 291166), 'create_by': 'SYSTEM', 'updated_at': datetime.datetime(2024, 11, 22, 13, 13, 13, 2911...</msg>
<var>${sql_response}</var>
<arg>select_hero_by_natid</arg>
<arg>${dict}</arg>
<status status="PASS" start="2024-11-22T13:13:14.039252" elapsed="0.008919"/>
</kw>
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T13:13:14.048473" level="INFO">
[{'id': '2a70d757-7eec-4db9-aa8d-17e0bbc2ae0b', 'created_at': datetime.datetime(2024, 11, 22, 13, 13, 13, 291166), 'create_by': 'SYSTEM', 'updated_at': datetime.datetime(2024, 11, 22, 13, 13, 13, 291166), 'updated_by': 'SYSTEM', 'birth_date': datetime.datetime(4000, 1, 1, 23, 59, 59), 'brownie_points': None, 'death_date': None, 'gender': 'MALE', 'name': 'Lawrence Chu', 'natid': 'natid-154', 'salary': 1000.12, 'tax_paid': 10.0}]</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T13:13:14.048330" elapsed="0.000162"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T13:13:14.048543" elapsed="0.000063"/>
</kw>
<arg>${sql_response}</arg>
<status status="PASS" start="2024-11-22T13:13:14.048228" elapsed="0.000403"/>
</kw>
<if>
<branch type="IF" condition="${sql_response} != []">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-11-22T13:13:14.048851" level="INFO">${sql_response} = {'id': '2a70d757-7eec-4db9-aa8d-17e0bbc2ae0b', 'created_at': datetime.datetime(2024, 11, 22, 13, 13, 13, 291166), 'create_by': 'SYSTEM', 'updated_at': datetime.datetime(2024, 11, 22, 13, 13, 13, 29116...</msg>
<var>${sql_response}</var>
<arg>${sql_response}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-11-22T13:13:14.048790" elapsed="0.000072"/>
</kw>
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T13:13:14.049059" level="INFO">
{'id': '2a70d757-7eec-4db9-aa8d-17e0bbc2ae0b', 'created_at': datetime.datetime(2024, 11, 22, 13, 13, 13, 291166), 'create_by': 'SYSTEM', 'updated_at': datetime.datetime(2024, 11, 22, 13, 13, 13, 291166), 'updated_by': 'SYSTEM', 'birth_date': datetime.datetime(4000, 1, 1, 23, 59, 59), 'brownie_points': None, 'death_date': None, 'gender': 'MALE', 'name': 'Lawrence Chu', 'natid': 'natid-154', 'salary': 1000.12, 'tax_paid': 10.0}</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T13:13:14.049011" elapsed="0.000066"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T13:13:14.049123" elapsed="0.000099"/>
</kw>
<arg>${sql_response}</arg>
<status status="PASS" start="2024-11-22T13:13:14.048915" elapsed="0.000330"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-11-22T13:13:14.049585" level="INFO">${failure_msg} = 4000-01-01 23:59:59</msg>
<var>${failure_msg}</var>
<arg>${sql_response['${negative_col_name}']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-11-22T13:13:14.049291" elapsed="0.000305"/>
</kw>
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T13:13:14.049827" level="INFO">
{'id': '2a70d757-7eec-4db9-aa8d-17e0bbc2ae0b', 'created_at': datetime.datetime(2024, 11, 22, 13, 13, 13, 291166), 'create_by': 'SYSTEM', 'updated_at': datetime.datetime(2024, 11, 22, 13, 13, 13, 291166), 'updated_by': 'SYSTEM', 'birth_date': datetime.datetime(4000, 1, 1, 23, 59, 59), 'brownie_points': None, 'death_date': None, 'gender': 'MALE', 'name': 'Lawrence Chu', 'natid': 'natid-154', 'salary': 1000.12, 'tax_paid': 10.0}</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T13:13:14.049772" elapsed="0.000073"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T13:13:14.049902" elapsed="0.000068"/>
</kw>
<arg>${sql_response}</arg>
<status status="PASS" start="2024-11-22T13:13:14.049658" elapsed="0.000342"/>
</kw>
<kw name="Fail" owner="BuiltIn">
<msg time="2024-11-22T13:13:14.050392" level="FAIL">Record created with invalid column named "birth_date": 4000-01-01 23:59:59</msg>
<arg>Record created with invalid column named "${negative_col_name}": ${sql_response['${negative_col_name}']}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="FAIL" start="2024-11-22T13:13:14.050044" elapsed="0.000372">Record created with invalid column named "birth_date": 4000-01-01 23:59:59</status>
</kw>
<status status="FAIL" start="2024-11-22T13:13:14.048657" elapsed="0.001799">Record created with invalid column named "birth_date": 4000-01-01 23:59:59</status>
</branch>
<status status="FAIL" start="2024-11-22T13:13:14.048650" elapsed="0.001826">Record created with invalid column named "birth_date": 4000-01-01 23:59:59</status>
</if>
<status status="FAIL" start="2024-11-22T13:13:14.034631" elapsed="0.015867">Record created with invalid column named "birth_date": 4000-01-01 23:59:59</status>
</branch>
<status status="FAIL" start="2024-11-22T13:13:14.033547" elapsed="0.016964">Record created with invalid column named "birth_date": 4000-01-01 23:59:59</status>
</if>
<arg>${negative_driver_test_data_path}</arg>
<arg>Negative</arg>
<arg>natid-154</arg>
<doc>Verify partial uploaded heroes in DB</doc>
<status status="FAIL" start="2024-11-22T13:13:14.033251" elapsed="0.017300">Record created with invalid column named "birth_date": 4000-01-01 23:59:59</status>
</kw>
<kw name="Common Test Teardown" owner="generic" type="TEARDOWN">
<kw name="Capture Page Screenshot" owner="SeleniumLibrary">
<msg time="2024-11-22T13:13:14.050862" level="INFO">Cannot capture screenshot because no browser is open.</msg>
<arg>${OUTPUT_DIR}/screenshots/${TEST NAME}.png</arg>
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<status status="PASS" start="2024-11-22T13:13:14.050798" elapsed="0.000085"/>
</kw>
<kw name="Close Browser" owner="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" start="2024-11-22T13:13:14.050936" elapsed="0.000045"/>
</kw>
<status status="PASS" start="2024-11-22T13:13:14.050682" elapsed="0.000319"/>
</kw>
<status status="FAIL" start="2024-11-22T13:13:14.033012" elapsed="0.018013">Record created with invalid column named "birth_date": 4000-01-01 23:59:59</status>
</test>
<test id="s1-t7" name="Test Case 7 - Partial Data Wrong Format - Negative - salary" line="41">
<kw name="Verify Partial Uploaded Data In DB" owner="clerk">
<kw name="Read Csv File To List" owner="CSVLibrary">
<msg time="2024-11-22T13:13:14.051581" level="INFO">${csv_list} = [['${natid}', '${flow}', '${negative_col_name}'], ['natid-150', 'Positive', ''], ['natid-151', 'Positive', ''], ['natid-152', 'Negative', 'name'], ['natid-153', 'Negative', 'gender'], ['natid-154', 'N...</msg>
<var>${csv_list}</var>
<arg>${test_data_path}</arg>
<doc>Read CSV file and return its content as a Python list of tuples.</doc>
<status status="PASS" start="2024-11-22T13:13:14.051471" elapsed="0.000121"/>
</kw>
<if>
<branch type="IF" condition="'${flow}' == 'Positive'">
<for flavor="IN">
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Create Dictionary" owner="BuiltIn">
<var>${dict}</var>
<arg>value_natid=${item[0]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.051793" elapsed="0.000014"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<var>${sql_response}</var>
<arg>select_hero_by_natid</arg>
<arg>${dict}</arg>
<status status="NOT RUN" start="2024-11-22T13:13:14.051897" elapsed="0.000010"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${sql_response} == []</arg>
<arg>Fail</arg>
<arg>${natid} not created in DB</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.051953" elapsed="0.000012"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<var>${sql_response}</var>
<arg>${sql_response}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.052013" elapsed="0.000009"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[0]}</arg>
<arg>${sql_response['natid']}</arg>
<arg>natid</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.052066" elapsed="0.000009"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[1]}</arg>
<arg>${sql_response['name']}</arg>
<arg>name</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.052117" elapsed="0.000009"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[2]}</arg>
<arg>${sql_response['gender']}</arg>
<arg>gender</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.052166" elapsed="0.000008"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[3]}</arg>
<arg>${sql_response['birth_date']}</arg>
<arg>birth_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.052304" elapsed="0.000011"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[4]}</arg>
<arg>${sql_response['death_date']}</arg>
<arg>death_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.052378" elapsed="0.000010"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[5]}</arg>
<arg>${sql_response['salary']}</arg>
<arg>salary</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.052455" elapsed="0.000010"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[6]}</arg>
<arg>${sql_response['tax_paid']}</arg>
<arg>tax_paid</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.052525" elapsed="0.000010"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[7]}</arg>
<arg>${sql_response['brownie_points']}</arg>
<arg>brownie_points</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.052592" elapsed="0.000010"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:14.051722" elapsed="0.000894"/>
</branch>
<status status="NOT RUN" start="2024-11-22T13:13:14.051718" elapsed="0.000911"/>
</if>
<var name="${item}"/>
<status status="NOT RUN" start="2024-11-22T13:13:14.051705" elapsed="0.000931"/>
</iter>
<var>${item}</var>
<value>@{csv_list}</value>
<status status="NOT RUN" start="2024-11-22T13:13:14.051655" elapsed="0.001031"/>
</for>
<status status="NOT RUN" start="2024-11-22T13:13:14.051619" elapsed="0.001084"/>
</branch>
<branch type="ELSE">
<for flavor="IN">
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Set Variable" owner="BuiltIn">
<var>${negative_col_name}</var>
<arg>${item[2]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.053092" elapsed="0.000010"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:14.052799" elapsed="0.000319"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:14.052795" elapsed="0.000335"/>
</if>
<var name="${item}">['${natid}', '${flow}', '${negative_col_name}']</var>
<status status="PASS" start="2024-11-22T13:13:14.052779" elapsed="0.000359"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Set Variable" owner="BuiltIn">
<var>${negative_col_name}</var>
<arg>${item[2]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.053441" elapsed="0.000009"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:14.053192" elapsed="0.000274"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:14.053187" elapsed="0.000290"/>
</if>
<var name="${item}">['natid-150', 'Positive', '']</var>
<status status="PASS" start="2024-11-22T13:13:14.053175" elapsed="0.000310"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Set Variable" owner="BuiltIn">
<var>${negative_col_name}</var>
<arg>${item[2]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.053774" elapsed="0.000013"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:14.053537" elapsed="0.000272"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:14.053533" elapsed="0.000288"/>
</if>
<var name="${item}">['natid-151', 'Positive', '']</var>
<status status="PASS" start="2024-11-22T13:13:14.053522" elapsed="0.000308"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Set Variable" owner="BuiltIn">
<var>${negative_col_name}</var>
<arg>${item[2]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.054123" elapsed="0.000010"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:14.053885" elapsed="0.000264"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:14.053881" elapsed="0.000281"/>
</if>
<var name="${item}">['natid-152', 'Negative', 'name']</var>
<status status="PASS" start="2024-11-22T13:13:14.053870" elapsed="0.000299"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Set Variable" owner="BuiltIn">
<var>${negative_col_name}</var>
<arg>${item[2]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.054452" elapsed="0.000009"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:14.054221" elapsed="0.000255"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:14.054217" elapsed="0.000271"/>
</if>
<var name="${item}">['natid-153', 'Negative', 'gender']</var>
<status status="PASS" start="2024-11-22T13:13:14.054206" elapsed="0.000289"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Set Variable" owner="BuiltIn">
<var>${negative_col_name}</var>
<arg>${item[2]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.054780" elapsed="0.000013"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:14.054546" elapsed="0.000268"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:14.054542" elapsed="0.000285"/>
</if>
<var name="${item}">['natid-154', 'Negative', 'birth_date']</var>
<status status="PASS" start="2024-11-22T13:13:14.054531" elapsed="0.000304"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-11-22T13:13:14.055329" level="INFO">${negative_col_name} = salary</msg>
<var>${negative_col_name}</var>
<arg>${item[2]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-11-22T13:13:14.055116" elapsed="0.000222"/>
</kw>
<status status="PASS" start="2024-11-22T13:13:14.054889" elapsed="0.000465"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:14.054884" elapsed="0.000482"/>
</if>
<var name="${item}">['natid-155', 'Negative', 'salary']</var>
<status status="PASS" start="2024-11-22T13:13:14.054873" elapsed="0.000500"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Set Variable" owner="BuiltIn">
<var>${negative_col_name}</var>
<arg>${item[2]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.055656" elapsed="0.000009"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:14.055427" elapsed="0.000254"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:14.055422" elapsed="0.000271"/>
</if>
<var name="${item}">['natid-156', 'Negative', 'tax_paid']</var>
<status status="PASS" start="2024-11-22T13:13:14.055410" elapsed="0.000290"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Set Variable" owner="BuiltIn">
<var>${negative_col_name}</var>
<arg>${item[2]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.056001" elapsed="0.000009"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:14.055752" elapsed="0.000273"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:14.055747" elapsed="0.000290"/>
</if>
<var name="${item}">['natid-157', 'Positive', '']</var>
<status status="PASS" start="2024-11-22T13:13:14.055736" elapsed="0.000308"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Set Variable" owner="BuiltIn">
<var>${negative_col_name}</var>
<arg>${item[2]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.056322" elapsed="0.000010"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:14.056096" elapsed="0.000251"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:14.056092" elapsed="0.000266"/>
</if>
<var name="${item}">['natid-158', 'Negative', 'gender']</var>
<status status="PASS" start="2024-11-22T13:13:14.056081" elapsed="0.000284"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Set Variable" owner="BuiltIn">
<var>${negative_col_name}</var>
<arg>${item[2]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.056642" elapsed="0.000009"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:14.056416" elapsed="0.000251"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:14.056412" elapsed="0.000267"/>
</if>
<var name="${item}">['natid-159', 'Positive', '']</var>
<status status="PASS" start="2024-11-22T13:13:14.056401" elapsed="0.000285"/>
</iter>
<var>${item}</var>
<value>@{csv_list}</value>
<status status="PASS" start="2024-11-22T13:13:14.052728" elapsed="0.003971"/>
</for>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2024-11-22T13:13:14.056833" level="INFO">${dict} = {'value_natid': 'natid-155'}</msg>
<var>${dict}</var>
<arg>value_natid=${natid}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2024-11-22T13:13:14.056746" elapsed="0.000100"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<kw name="Connect To Database" owner="DatabaseLibrary">
<msg time="2024-11-22T13:13:14.057159" level="INFO">Looking for configuration file: 'resources/db.cfg'</msg>
<msg time="2024-11-22T13:13:14.057174" level="INFO">Configuration file doesn't exist</msg>
<msg time="2024-11-22T13:13:14.057241" level="INFO">Connect to DB using : mysql.connector.connect(database='testdb', user='user', password=***, host='localhost', port=3306)</msg>
<arg>${DB_API}</arg>
<arg>${DB_NAME}</arg>
<arg>${DB_USER}</arg>
<arg>${DB_PASSWORD}</arg>
<arg>${DB_HOST}</arg>
<arg>${DB_PORT}</arg>
<doc>Creates a database connection using the DB API 2.0 ``db_module`` and the parameters provided.
Along with listed commonly used arguments (`db_name`, `db_host` etc.)
you can set any other DB module specific parameters as key/value pairs.</doc>
<status status="PASS" start="2024-11-22T13:13:14.057024" elapsed="0.004959"/>
</kw>
<kw name="Update SQL Queries With Arguments Dictionary" owner="sql-helper">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-11-22T13:13:14.062336" level="INFO" html="true">Getting file '&lt;a href="file:///Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/object-repo/sql-queries/select_hero_by_natid.sql"&gt;/Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/object-repo/sql-queries/select_hero_by_natid.sql&lt;/a&gt;'.</msg>
<msg time="2024-11-22T13:13:14.062403" level="INFO">${sql_query} = SELECT *
FROM testdb.working_class_heroes
WHERE natid='value_natid';</msg>
<var>${sql_query}</var>
<arg>./object-repo/sql-queries/${sql_file_name}.sql</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-11-22T13:13:14.062238" elapsed="0.000174"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2024-11-22T13:13:14.062914" level="INFO">Argument types are:
&lt;class 'robot.utils.dotdict.DotDict'&gt;
&lt;class 'str'&gt;</msg>
<msg time="2024-11-22T13:13:14.062961" level="FAIL">{'value_natid': 'natid-155'} != </msg>
<arg>${args_dict}</arg>
<arg>${EMPTY}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="FAIL" start="2024-11-22T13:13:14.062631" elapsed="0.000359">{'value_natid': 'natid-155'} != </status>
</kw>
<msg time="2024-11-22T13:13:14.063031" level="INFO">${empty_status} = False</msg>
<var>${empty_status}</var>
<arg>Should Be Equal As Strings</arg>
<arg>${args_dict}</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-11-22T13:13:14.062477" elapsed="0.000565"/>
</kw>
<if>
<branch type="IF" condition="'${empty_status}' == '${False}'">
<if>
<branch type="IF" condition="${args_dict}">
<for flavor="IN">
<iter>
<kw name="Convert To String" owner="BuiltIn">
<msg time="2024-11-22T13:13:14.063346" level="INFO">${args_key_str} = value_natid</msg>
<var>${args_key_str}</var>
<arg>${args_key}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="PASS" start="2024-11-22T13:13:14.063277" elapsed="0.000081"/>
</kw>
<kw name="Convert To String" owner="BuiltIn">
<msg time="2024-11-22T13:13:14.063493" level="INFO">${args_value_str} = natid-155</msg>
<var>${args_value_str}</var>
<arg>${args_dict}[${args_key_str}]</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="PASS" start="2024-11-22T13:13:14.063412" elapsed="0.000090"/>
</kw>
<kw name="Replace String" owner="String">
<msg time="2024-11-22T13:13:14.063638" level="INFO">${sql_query} = SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-155';</msg>
<var>${sql_query}</var>
<arg>${sql_query}</arg>
<arg>${args_key_str}</arg>
<arg>${args_value_str}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="PASS" start="2024-11-22T13:13:14.063556" elapsed="0.000095"/>
</kw>
<var name="${args_key}">value_natid</var>
<status status="PASS" start="2024-11-22T13:13:14.063224" elapsed="0.000450"/>
</iter>
<var>${args_key}</var>
<value>@{args_dict}</value>
<status status="PASS" start="2024-11-22T13:13:14.063176" elapsed="0.000519"/>
</for>
<status status="PASS" start="2024-11-22T13:13:14.063143" elapsed="0.000568"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:14.063136" elapsed="0.000586"/>
</if>
<status status="PASS" start="2024-11-22T13:13:14.063082" elapsed="0.000651"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:14.063073" elapsed="0.000674"/>
</if>
<return>
<value>${sql_query}</value>
<status status="PASS" start="2024-11-22T13:13:14.063762" elapsed="0.000015"/>
</return>
<msg time="2024-11-22T13:13:14.063825" level="INFO">${updated_sql_query} = SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-155';</msg>
<var>${updated_sql_query}</var>
<arg>${sql_file_name}</arg>
<arg>${args_dict}</arg>
<status status="PASS" start="2024-11-22T13:13:14.062105" elapsed="0.001732"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-11-22T13:13:14.064076" level="FAIL">'SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-155';' does not contain 'delete'</msg>
<arg>${updated_sql_query}</arg>
<arg>DELETE</arg>
<arg>ignore_case=${True}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-11-22T13:13:14.063976" elapsed="0.000122">'SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-155';' does not contain 'delete'</status>
</kw>
<msg time="2024-11-22T13:13:14.064140" level="INFO">${delete_status} = False</msg>
<var>${delete_status}</var>
<arg>Should Contain</arg>
<arg>${updated_sql_query}</arg>
<arg>DELETE</arg>
<arg>ignore_case=${True}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-11-22T13:13:14.063903" elapsed="0.000245"/>
</kw>
<if>
<branch type="IF" condition="'${delete_status}' == '${True}'">
<kw name="Execute Sql String" owner="DatabaseLibrary">
<var>${json_response}</var>
<arg>${updated_sql_query}</arg>
<doc>Executes the ``sql_string`` as a single SQL command.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.064255" elapsed="0.000009"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:14.064185" elapsed="0.000095"/>
</branch>
<branch type="ELSE">
<kw name="Query" owner="DatabaseLibrary">
<msg time="2024-11-22T13:13:14.064803" level="INFO" html="true">Executing sql:&lt;br&gt;&lt;code style="font-weight: bold;"&gt;SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-155';&lt;/code&gt;</msg>
<msg time="2024-11-22T13:13:14.065454" level="INFO" html="true">&lt;div style="max-width: 100%; overflow-x: auto;"&gt;&lt;table style="width: auto; border-collapse: collapse; border: 2px solid rgb(140 140 140)"&gt;&lt;caption style="text-align: left; font-weight: bold; padding: 5px;"&gt;Query returned 1 rows&lt;/caption&gt;&lt;tr&gt;&lt;th scope="col" style="background-color: #d6ecd4; border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;Row&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;id&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;created_at&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;create_by&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;updated_at&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;updated_by&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;birth_date&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;brownie_points&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;death_date&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;gender&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;name&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;natid&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;salary&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;tax_paid&lt;/th&gt;&lt;/tr&gt;&lt;tr style="background-color: #eee;"&gt;&lt;th scope="row" style="background-color: #d6ecd4;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;0&lt;/th&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;ac1b87e6-b71e-43d1-9200-d15e9ff11c77&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;2024-11-22 13:13:13.295723&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;SYSTEM&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;2024-11-22 13:13:13.295723&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;SYSTEM&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;1996-01-01 23:59:59&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;None&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;None&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;MALE&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;Karen&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;natid-155&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;-1000.0&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;10.0&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;</msg>
<msg time="2024-11-22T13:13:14.065928" level="INFO">${json_response} = [{'id': 'ac1b87e6-b71e-43d1-9200-d15e9ff11c77', 'created_at': datetime.datetime(2024, 11, 22, 13, 13, 13, 295723), 'create_by': 'SYSTEM', 'updated_at': datetime.datetime(2024, 11, 22, 13, 13, 13, 2957...</msg>
<var>${json_response}</var>
<arg>${updated_sql_query}</arg>
<arg>return_dict=${True}</arg>
<doc>Runs a query with the ``select_statement`` and returns the result as list of rows.
The type of row values depends on the database module -
usually they are tuples or tuple-like objects.</doc>
<status status="PASS" start="2024-11-22T13:13:14.064339" elapsed="0.001602"/>
</kw>
<status status="PASS" start="2024-11-22T13:13:14.064295" elapsed="0.001668"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:14.064178" elapsed="0.001798"/>
</if>
<kw name="Disconnect From Database" owner="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<status status="PASS" start="2024-11-22T13:13:14.066021" elapsed="0.000088"/>
</kw>
<return>
<value>${json_response}</value>
<status status="PASS" start="2024-11-22T13:13:14.066134" elapsed="0.000015"/>
</return>
<msg time="2024-11-22T13:13:14.066208" level="INFO">${sql_response} = [{'id': 'ac1b87e6-b71e-43d1-9200-d15e9ff11c77', 'created_at': datetime.datetime(2024, 11, 22, 13, 13, 13, 295723), 'create_by': 'SYSTEM', 'updated_at': datetime.datetime(2024, 11, 22, 13, 13, 13, 2957...</msg>
<var>${sql_response}</var>
<arg>select_hero_by_natid</arg>
<arg>${dict}</arg>
<status status="PASS" start="2024-11-22T13:13:14.056923" elapsed="0.009296"/>
</kw>
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T13:13:14.066466" level="INFO">
[{'id': 'ac1b87e6-b71e-43d1-9200-d15e9ff11c77', 'created_at': datetime.datetime(2024, 11, 22, 13, 13, 13, 295723), 'create_by': 'SYSTEM', 'updated_at': datetime.datetime(2024, 11, 22, 13, 13, 13, 295723), 'updated_by': 'SYSTEM', 'birth_date': datetime.datetime(1996, 1, 1, 23, 59, 59), 'brownie_points': None, 'death_date': None, 'gender': 'MALE', 'name': 'Karen', 'natid': 'natid-155', 'salary': -1000.0, 'tax_paid': 10.0}]</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T13:13:14.066401" elapsed="0.000088"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T13:13:14.066546" elapsed="0.000065"/>
</kw>
<arg>${sql_response}</arg>
<status status="PASS" start="2024-11-22T13:13:14.066284" elapsed="0.000358"/>
</kw>
<if>
<branch type="IF" condition="${sql_response} != []">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-11-22T13:13:14.066877" level="INFO">${sql_response} = {'id': 'ac1b87e6-b71e-43d1-9200-d15e9ff11c77', 'created_at': datetime.datetime(2024, 11, 22, 13, 13, 13, 295723), 'create_by': 'SYSTEM', 'updated_at': datetime.datetime(2024, 11, 22, 13, 13, 13, 29572...</msg>
<var>${sql_response}</var>
<arg>${sql_response}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-11-22T13:13:14.066821" elapsed="0.000066"/>
</kw>
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T13:13:14.067073" level="INFO">
{'id': 'ac1b87e6-b71e-43d1-9200-d15e9ff11c77', 'created_at': datetime.datetime(2024, 11, 22, 13, 13, 13, 295723), 'create_by': 'SYSTEM', 'updated_at': datetime.datetime(2024, 11, 22, 13, 13, 13, 295723), 'updated_by': 'SYSTEM', 'birth_date': datetime.datetime(1996, 1, 1, 23, 59, 59), 'brownie_points': None, 'death_date': None, 'gender': 'MALE', 'name': 'Karen', 'natid': 'natid-155', 'salary': -1000.0, 'tax_paid': 10.0}</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T13:13:14.067029" elapsed="0.000062"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T13:13:14.067140" elapsed="0.000096"/>
</kw>
<arg>${sql_response}</arg>
<status status="PASS" start="2024-11-22T13:13:14.066938" elapsed="0.000324"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-11-22T13:13:14.067569" level="INFO">${failure_msg} = -1000.0</msg>
<var>${failure_msg}</var>
<arg>${sql_response['${negative_col_name}']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-11-22T13:13:14.067307" elapsed="0.000272"/>
</kw>
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T13:13:14.067768" level="INFO">
{'id': 'ac1b87e6-b71e-43d1-9200-d15e9ff11c77', 'created_at': datetime.datetime(2024, 11, 22, 13, 13, 13, 295723), 'create_by': 'SYSTEM', 'updated_at': datetime.datetime(2024, 11, 22, 13, 13, 13, 295723), 'updated_by': 'SYSTEM', 'birth_date': datetime.datetime(1996, 1, 1, 23, 59, 59), 'brownie_points': None, 'death_date': None, 'gender': 'MALE', 'name': 'Karen', 'natid': 'natid-155', 'salary': -1000.0, 'tax_paid': 10.0}</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T13:13:14.067727" elapsed="0.000057"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T13:13:14.067836" elapsed="0.000062"/>
</kw>
<arg>${sql_response}</arg>
<status status="PASS" start="2024-11-22T13:13:14.067629" elapsed="0.000297"/>
</kw>
<kw name="Fail" owner="BuiltIn">
<msg time="2024-11-22T13:13:14.068274" level="FAIL">Record created with invalid column named "salary": -1000.0</msg>
<arg>Record created with invalid column named "${negative_col_name}": ${sql_response['${negative_col_name}']}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="FAIL" start="2024-11-22T13:13:14.067970" elapsed="0.000328">Record created with invalid column named "salary": -1000.0</status>
</kw>
<status status="FAIL" start="2024-11-22T13:13:14.066669" elapsed="0.001659">Record created with invalid column named "salary": -1000.0</status>
</branch>
<status status="FAIL" start="2024-11-22T13:13:14.066662" elapsed="0.001683">Record created with invalid column named "salary": -1000.0</status>
</if>
<status status="FAIL" start="2024-11-22T13:13:14.052713" elapsed="0.015651">Record created with invalid column named "salary": -1000.0</status>
</branch>
<status status="FAIL" start="2024-11-22T13:13:14.051613" elapsed="0.016764">Record created with invalid column named "salary": -1000.0</status>
</if>
<arg>${negative_driver_test_data_path}</arg>
<arg>Negative</arg>
<arg>natid-155</arg>
<doc>Verify partial uploaded heroes in DB</doc>
<status status="FAIL" start="2024-11-22T13:13:14.051352" elapsed="0.017057">Record created with invalid column named "salary": -1000.0</status>
</kw>
<kw name="Common Test Teardown" owner="generic" type="TEARDOWN">
<kw name="Capture Page Screenshot" owner="SeleniumLibrary">
<msg time="2024-11-22T13:13:14.068682" level="INFO">Cannot capture screenshot because no browser is open.</msg>
<arg>${OUTPUT_DIR}/screenshots/${TEST NAME}.png</arg>
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<status status="PASS" start="2024-11-22T13:13:14.068619" elapsed="0.000078"/>
</kw>
<kw name="Close Browser" owner="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" start="2024-11-22T13:13:14.068742" elapsed="0.000061"/>
</kw>
<status status="PASS" start="2024-11-22T13:13:14.068525" elapsed="0.000301"/>
</kw>
<status status="FAIL" start="2024-11-22T13:13:14.051114" elapsed="0.017740">Record created with invalid column named "salary": -1000.0</status>
</test>
<test id="s1-t8" name="Test Case 8 - Partial Data Wrong Format - Negative - tax_paid" line="44">
<kw name="Verify Partial Uploaded Data In DB" owner="clerk">
<kw name="Read Csv File To List" owner="CSVLibrary">
<msg time="2024-11-22T13:13:14.069487" level="INFO">${csv_list} = [['${natid}', '${flow}', '${negative_col_name}'], ['natid-150', 'Positive', ''], ['natid-151', 'Positive', ''], ['natid-152', 'Negative', 'name'], ['natid-153', 'Negative', 'gender'], ['natid-154', 'N...</msg>
<var>${csv_list}</var>
<arg>${test_data_path}</arg>
<doc>Read CSV file and return its content as a Python list of tuples.</doc>
<status status="PASS" start="2024-11-22T13:13:14.069383" elapsed="0.000114"/>
</kw>
<if>
<branch type="IF" condition="'${flow}' == 'Positive'">
<for flavor="IN">
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Create Dictionary" owner="BuiltIn">
<var>${dict}</var>
<arg>value_natid=${item[0]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.069668" elapsed="0.000009"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<var>${sql_response}</var>
<arg>select_hero_by_natid</arg>
<arg>${dict}</arg>
<status status="NOT RUN" start="2024-11-22T13:13:14.069745" elapsed="0.000011"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${sql_response} == []</arg>
<arg>Fail</arg>
<arg>${natid} not created in DB</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.069816" elapsed="0.000010"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<var>${sql_response}</var>
<arg>${sql_response}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.069872" elapsed="0.000009"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[0]}</arg>
<arg>${sql_response['natid']}</arg>
<arg>natid</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.069926" elapsed="0.000009"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[1]}</arg>
<arg>${sql_response['name']}</arg>
<arg>name</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.069976" elapsed="0.000009"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[2]}</arg>
<arg>${sql_response['gender']}</arg>
<arg>gender</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.070027" elapsed="0.000008"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[3]}</arg>
<arg>${sql_response['birth_date']}</arg>
<arg>birth_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.070094" elapsed="0.000010"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[4]}</arg>
<arg>${sql_response['death_date']}</arg>
<arg>death_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.070164" elapsed="0.000009"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[5]}</arg>
<arg>${sql_response['salary']}</arg>
<arg>salary</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.070232" elapsed="0.000010"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[6]}</arg>
<arg>${sql_response['tax_paid']}</arg>
<arg>tax_paid</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.070298" elapsed="0.000010"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[7]}</arg>
<arg>${sql_response['brownie_points']}</arg>
<arg>brownie_points</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.070365" elapsed="0.000009"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:14.069624" elapsed="0.000764"/>
</branch>
<status status="NOT RUN" start="2024-11-22T13:13:14.069620" elapsed="0.000781"/>
</if>
<var name="${item}"/>
<status status="NOT RUN" start="2024-11-22T13:13:14.069606" elapsed="0.000803"/>
</iter>
<var>${item}</var>
<value>@{csv_list}</value>
<status status="NOT RUN" start="2024-11-22T13:13:14.069561" elapsed="0.000860"/>
</for>
<status status="NOT RUN" start="2024-11-22T13:13:14.069525" elapsed="0.000949"/>
</branch>
<branch type="ELSE">
<for flavor="IN">
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Set Variable" owner="BuiltIn">
<var>${negative_col_name}</var>
<arg>${item[2]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.070860" elapsed="0.000010"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:14.070567" elapsed="0.000319"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:14.070562" elapsed="0.000336"/>
</if>
<var name="${item}">['${natid}', '${flow}', '${negative_col_name}']</var>
<status status="PASS" start="2024-11-22T13:13:14.070550" elapsed="0.000355"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Set Variable" owner="BuiltIn">
<var>${negative_col_name}</var>
<arg>${item[2]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.071208" elapsed="0.000010"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:14.070961" elapsed="0.000272"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:14.070956" elapsed="0.000290"/>
</if>
<var name="${item}">['natid-150', 'Positive', '']</var>
<status status="PASS" start="2024-11-22T13:13:14.070944" elapsed="0.000309"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Set Variable" owner="BuiltIn">
<var>${negative_col_name}</var>
<arg>${item[2]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.071549" elapsed="0.000009"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:14.071309" elapsed="0.000265"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:14.071304" elapsed="0.000282"/>
</if>
<var name="${item}">['natid-151', 'Positive', '']</var>
<status status="PASS" start="2024-11-22T13:13:14.071292" elapsed="0.000301"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Set Variable" owner="BuiltIn">
<var>${negative_col_name}</var>
<arg>${item[2]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.071898" elapsed="0.000010"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:14.071647" elapsed="0.000277"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:14.071643" elapsed="0.000292"/>
</if>
<var name="${item}">['natid-152', 'Negative', 'name']</var>
<status status="PASS" start="2024-11-22T13:13:14.071631" elapsed="0.000312"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Set Variable" owner="BuiltIn">
<var>${negative_col_name}</var>
<arg>${item[2]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.072227" elapsed="0.000010"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:14.071995" elapsed="0.000257"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:14.071991" elapsed="0.000273"/>
</if>
<var name="${item}">['natid-153', 'Negative', 'gender']</var>
<status status="PASS" start="2024-11-22T13:13:14.071979" elapsed="0.000292"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Set Variable" owner="BuiltIn">
<var>${negative_col_name}</var>
<arg>${item[2]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.072560" elapsed="0.000010"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:14.072323" elapsed="0.000262"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:14.072319" elapsed="0.000278"/>
</if>
<var name="${item}">['natid-154', 'Negative', 'birth_date']</var>
<status status="PASS" start="2024-11-22T13:13:14.072307" elapsed="0.000296"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Set Variable" owner="BuiltIn">
<var>${negative_col_name}</var>
<arg>${item[2]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.072882" elapsed="0.000010"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:14.072655" elapsed="0.000252"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:14.072651" elapsed="0.000268"/>
</if>
<var name="${item}">['natid-155', 'Negative', 'salary']</var>
<status status="PASS" start="2024-11-22T13:13:14.072639" elapsed="0.000287"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-11-22T13:13:14.073420" level="INFO">${negative_col_name} = tax_paid</msg>
<var>${negative_col_name}</var>
<arg>${item[2]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-11-22T13:13:14.073204" elapsed="0.000226"/>
</kw>
<status status="PASS" start="2024-11-22T13:13:14.072978" elapsed="0.000469"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:14.072974" elapsed="0.000485"/>
</if>
<var name="${item}">['natid-156', 'Negative', 'tax_paid']</var>
<status status="PASS" start="2024-11-22T13:13:14.072962" elapsed="0.000505"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Set Variable" owner="BuiltIn">
<var>${negative_col_name}</var>
<arg>${item[2]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.073749" elapsed="0.000010"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:14.073520" elapsed="0.000254"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:14.073515" elapsed="0.000271"/>
</if>
<var name="${item}">['natid-157', 'Positive', '']</var>
<status status="PASS" start="2024-11-22T13:13:14.073504" elapsed="0.000292"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Set Variable" owner="BuiltIn">
<var>${negative_col_name}</var>
<arg>${item[2]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.074181" elapsed="0.000010"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:14.073859" elapsed="0.000349"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:14.073853" elapsed="0.000368"/>
</if>
<var name="${item}">['natid-158', 'Negative', 'gender']</var>
<status status="PASS" start="2024-11-22T13:13:14.073837" elapsed="0.000392"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Set Variable" owner="BuiltIn">
<var>${negative_col_name}</var>
<arg>${item[2]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.074561" elapsed="0.000010"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:14.074286" elapsed="0.000302"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:14.074281" elapsed="0.000320"/>
</if>
<var name="${item}">['natid-159', 'Positive', '']</var>
<status status="PASS" start="2024-11-22T13:13:14.074269" elapsed="0.000339"/>
</iter>
<var>${item}</var>
<value>@{csv_list}</value>
<status status="PASS" start="2024-11-22T13:13:14.070501" elapsed="0.004121"/>
</for>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2024-11-22T13:13:14.074752" level="INFO">${dict} = {'value_natid': 'natid-156'}</msg>
<var>${dict}</var>
<arg>value_natid=${natid}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2024-11-22T13:13:14.074672" elapsed="0.000090"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<kw name="Connect To Database" owner="DatabaseLibrary">
<msg time="2024-11-22T13:13:14.075049" level="INFO">Looking for configuration file: 'resources/db.cfg'</msg>
<msg time="2024-11-22T13:13:14.075067" level="INFO">Configuration file doesn't exist</msg>
<msg time="2024-11-22T13:13:14.075188" level="INFO">Connect to DB using : mysql.connector.connect(database='testdb', user='user', password=***, host='localhost', port=3306)</msg>
<arg>${DB_API}</arg>
<arg>${DB_NAME}</arg>
<arg>${DB_USER}</arg>
<arg>${DB_PASSWORD}</arg>
<arg>${DB_HOST}</arg>
<arg>${DB_PORT}</arg>
<doc>Creates a database connection using the DB API 2.0 ``db_module`` and the parameters provided.
Along with listed commonly used arguments (`db_name`, `db_host` etc.)
you can set any other DB module specific parameters as key/value pairs.</doc>
<status status="PASS" start="2024-11-22T13:13:14.074944" elapsed="0.006147"/>
</kw>
<kw name="Update SQL Queries With Arguments Dictionary" owner="sql-helper">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-11-22T13:13:14.081439" level="INFO" html="true">Getting file '&lt;a href="file:///Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/object-repo/sql-queries/select_hero_by_natid.sql"&gt;/Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/object-repo/sql-queries/select_hero_by_natid.sql&lt;/a&gt;'.</msg>
<msg time="2024-11-22T13:13:14.081503" level="INFO">${sql_query} = SELECT *
FROM testdb.working_class_heroes
WHERE natid='value_natid';</msg>
<var>${sql_query}</var>
<arg>./object-repo/sql-queries/${sql_file_name}.sql</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-11-22T13:13:14.081357" elapsed="0.000156"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2024-11-22T13:13:14.081882" level="INFO">Argument types are:
&lt;class 'robot.utils.dotdict.DotDict'&gt;
&lt;class 'str'&gt;</msg>
<msg time="2024-11-22T13:13:14.081918" level="FAIL">{'value_natid': 'natid-156'} != </msg>
<arg>${args_dict}</arg>
<arg>${EMPTY}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="FAIL" start="2024-11-22T13:13:14.081634" elapsed="0.000309">{'value_natid': 'natid-156'} != </status>
</kw>
<msg time="2024-11-22T13:13:14.081985" level="INFO">${empty_status} = False</msg>
<var>${empty_status}</var>
<arg>Should Be Equal As Strings</arg>
<arg>${args_dict}</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-11-22T13:13:14.081569" elapsed="0.000424"/>
</kw>
<if>
<branch type="IF" condition="'${empty_status}' == '${False}'">
<if>
<branch type="IF" condition="${args_dict}">
<for flavor="IN">
<iter>
<kw name="Convert To String" owner="BuiltIn">
<msg time="2024-11-22T13:13:14.082249" level="INFO">${args_key_str} = value_natid</msg>
<var>${args_key_str}</var>
<arg>${args_key}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="PASS" start="2024-11-22T13:13:14.082193" elapsed="0.000065"/>
</kw>
<kw name="Convert To String" owner="BuiltIn">
<msg time="2024-11-22T13:13:14.082385" level="INFO">${args_value_str} = natid-156</msg>
<var>${args_value_str}</var>
<arg>${args_dict}[${args_key_str}]</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="PASS" start="2024-11-22T13:13:14.082310" elapsed="0.000084"/>
</kw>
<kw name="Replace String" owner="String">
<msg time="2024-11-22T13:13:14.082502" level="INFO">${sql_query} = SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-156';</msg>
<var>${sql_query}</var>
<arg>${sql_query}</arg>
<arg>${args_key_str}</arg>
<arg>${args_value_str}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="PASS" start="2024-11-22T13:13:14.082438" elapsed="0.000073"/>
</kw>
<var name="${args_key}">value_natid</var>
<status status="PASS" start="2024-11-22T13:13:14.082152" elapsed="0.000376"/>
</iter>
<var>${args_key}</var>
<value>@{args_dict}</value>
<status status="PASS" start="2024-11-22T13:13:14.082108" elapsed="0.000438"/>
</for>
<status status="PASS" start="2024-11-22T13:13:14.082078" elapsed="0.000486"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:14.082073" elapsed="0.000502"/>
</if>
<status status="PASS" start="2024-11-22T13:13:14.082024" elapsed="0.000559"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:14.082017" elapsed="0.000579"/>
</if>
<return>
<value>${sql_query}</value>
<status status="PASS" start="2024-11-22T13:13:14.082610" elapsed="0.000016"/>
</return>
<msg time="2024-11-22T13:13:14.082669" level="INFO">${updated_sql_query} = SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-156';</msg>
<var>${updated_sql_query}</var>
<arg>${sql_file_name}</arg>
<arg>${args_dict}</arg>
<status status="PASS" start="2024-11-22T13:13:14.081228" elapsed="0.001450"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-11-22T13:13:14.082864" level="FAIL">'SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-156';' does not contain 'delete'</msg>
<arg>${updated_sql_query}</arg>
<arg>DELETE</arg>
<arg>ignore_case=${True}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-11-22T13:13:14.082783" elapsed="0.000102">'SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-156';' does not contain 'delete'</status>
</kw>
<msg time="2024-11-22T13:13:14.082917" level="INFO">${delete_status} = False</msg>
<var>${delete_status}</var>
<arg>Should Contain</arg>
<arg>${updated_sql_query}</arg>
<arg>DELETE</arg>
<arg>ignore_case=${True}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-11-22T13:13:14.082726" elapsed="0.000199"/>
</kw>
<if>
<branch type="IF" condition="'${delete_status}' == '${True}'">
<kw name="Execute Sql String" owner="DatabaseLibrary">
<var>${json_response}</var>
<arg>${updated_sql_query}</arg>
<doc>Executes the ``sql_string`` as a single SQL command.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.083026" elapsed="0.000012"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:14.082954" elapsed="0.000108"/>
</branch>
<branch type="ELSE">
<kw name="Query" owner="DatabaseLibrary">
<msg time="2024-11-22T13:13:14.083579" level="INFO" html="true">Executing sql:&lt;br&gt;&lt;code style="font-weight: bold;"&gt;SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-156';&lt;/code&gt;</msg>
<msg time="2024-11-22T13:13:14.084310" level="INFO" html="true">&lt;div style="max-width: 100%; overflow-x: auto;"&gt;&lt;table style="width: auto; border-collapse: collapse; border: 2px solid rgb(140 140 140)"&gt;&lt;caption style="text-align: left; font-weight: bold; padding: 5px;"&gt;Query returned 1 rows&lt;/caption&gt;&lt;tr&gt;&lt;th scope="col" style="background-color: #d6ecd4; border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;Row&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;id&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;created_at&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;create_by&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;updated_at&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;updated_by&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;birth_date&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;brownie_points&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;death_date&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;gender&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;name&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;natid&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;salary&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;tax_paid&lt;/th&gt;&lt;/tr&gt;&lt;tr style="background-color: #eee;"&gt;&lt;th scope="row" style="background-color: #d6ecd4;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;0&lt;/th&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;17a9688f-4796-48f2-acc5-5644e541054d&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;2024-11-22 13:13:13.304677&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;SYSTEM&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;2024-11-22 13:13:13.304677&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;SYSTEM&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;1996-01-01 23:59:59&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;None&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;None&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;MALE&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;Cherry Chan&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;natid-156&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;10320.0&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;-10.0&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;</msg>
<msg time="2024-11-22T13:13:14.084768" level="INFO">${json_response} = [{'id': '17a9688f-4796-48f2-acc5-5644e541054d', 'created_at': datetime.datetime(2024, 11, 22, 13, 13, 13, 304677), 'create_by': 'SYSTEM', 'updated_at': datetime.datetime(2024, 11, 22, 13, 13, 13, 3046...</msg>
<var>${json_response}</var>
<arg>${updated_sql_query}</arg>
<arg>return_dict=${True}</arg>
<doc>Runs a query with the ``select_statement`` and returns the result as list of rows.
The type of row values depends on the database module -
usually they are tuples or tuple-like objects.</doc>
<status status="PASS" start="2024-11-22T13:13:14.083125" elapsed="0.001654"/>
</kw>
<status status="PASS" start="2024-11-22T13:13:14.083078" elapsed="0.001733"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:14.082949" elapsed="0.001874"/>
</if>
<kw name="Disconnect From Database" owner="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<status status="PASS" start="2024-11-22T13:13:14.084872" elapsed="0.000075"/>
</kw>
<return>
<value>${json_response}</value>
<status status="PASS" start="2024-11-22T13:13:14.084966" elapsed="0.000012"/>
</return>
<msg time="2024-11-22T13:13:14.085030" level="INFO">${sql_response} = [{'id': '17a9688f-4796-48f2-acc5-5644e541054d', 'created_at': datetime.datetime(2024, 11, 22, 13, 13, 13, 304677), 'create_by': 'SYSTEM', 'updated_at': datetime.datetime(2024, 11, 22, 13, 13, 13, 3046...</msg>
<var>${sql_response}</var>
<arg>select_hero_by_natid</arg>
<arg>${dict}</arg>
<status status="PASS" start="2024-11-22T13:13:14.074837" elapsed="0.010203"/>
</kw>
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T13:13:14.085258" level="INFO">
[{'id': '17a9688f-4796-48f2-acc5-5644e541054d', 'created_at': datetime.datetime(2024, 11, 22, 13, 13, 13, 304677), 'create_by': 'SYSTEM', 'updated_at': datetime.datetime(2024, 11, 22, 13, 13, 13, 304677), 'updated_by': 'SYSTEM', 'birth_date': datetime.datetime(1996, 1, 1, 23, 59, 59), 'brownie_points': None, 'death_date': None, 'gender': 'MALE', 'name': 'Cherry Chan', 'natid': 'natid-156', 'salary': 10320.0, 'tax_paid': -10.0}]</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T13:13:14.085199" elapsed="0.000078"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T13:13:14.085325" elapsed="0.000065"/>
</kw>
<arg>${sql_response}</arg>
<status status="PASS" start="2024-11-22T13:13:14.085097" elapsed="0.000316"/>
</kw>
<if>
<branch type="IF" condition="${sql_response} != []">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-11-22T13:13:14.085651" level="INFO">${sql_response} = {'id': '17a9688f-4796-48f2-acc5-5644e541054d', 'created_at': datetime.datetime(2024, 11, 22, 13, 13, 13, 304677), 'create_by': 'SYSTEM', 'updated_at': datetime.datetime(2024, 11, 22, 13, 13, 13, 30467...</msg>
<var>${sql_response}</var>
<arg>${sql_response}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-11-22T13:13:14.085588" elapsed="0.000073"/>
</kw>
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T13:13:14.085875" level="INFO">
{'id': '17a9688f-4796-48f2-acc5-5644e541054d', 'created_at': datetime.datetime(2024, 11, 22, 13, 13, 13, 304677), 'create_by': 'SYSTEM', 'updated_at': datetime.datetime(2024, 11, 22, 13, 13, 13, 304677), 'updated_by': 'SYSTEM', 'birth_date': datetime.datetime(1996, 1, 1, 23, 59, 59), 'brownie_points': None, 'death_date': None, 'gender': 'MALE', 'name': 'Cherry Chan', 'natid': 'natid-156', 'salary': 10320.0, 'tax_paid': -10.0}</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T13:13:14.085812" elapsed="0.000080"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T13:13:14.086042" elapsed="0.000376"/>
</kw>
<arg>${sql_response}</arg>
<status status="PASS" start="2024-11-22T13:13:14.085713" elapsed="0.000845"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-11-22T13:13:14.087618" level="INFO">${failure_msg} = -10.0</msg>
<var>${failure_msg}</var>
<arg>${sql_response['${negative_col_name}']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-11-22T13:13:14.086621" elapsed="0.001062"/>
</kw>
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T13:13:14.089145" level="INFO">
{'id': '17a9688f-4796-48f2-acc5-5644e541054d', 'created_at': datetime.datetime(2024, 11, 22, 13, 13, 13, 304677), 'create_by': 'SYSTEM', 'updated_at': datetime.datetime(2024, 11, 22, 13, 13, 13, 304677), 'updated_by': 'SYSTEM', 'birth_date': datetime.datetime(1996, 1, 1, 23, 59, 59), 'brownie_points': None, 'death_date': None, 'gender': 'MALE', 'name': 'Cherry Chan', 'natid': 'natid-156', 'salary': 10320.0, 'tax_paid': -10.0}</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T13:13:14.088983" elapsed="0.000215"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T13:13:14.089339" elapsed="0.040031"/>
</kw>
<arg>${sql_response}</arg>
<status status="PASS" start="2024-11-22T13:13:14.087963" elapsed="0.041498"/>
</kw>
<kw name="Fail" owner="BuiltIn">
<msg time="2024-11-22T13:13:14.130220" level="FAIL">Record created with invalid column named "tax_paid": -10.0</msg>
<arg>Record created with invalid column named "${negative_col_name}": ${sql_response['${negative_col_name}']}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="FAIL" start="2024-11-22T13:13:14.129582" elapsed="0.000736">Record created with invalid column named "tax_paid": -10.0</status>
</kw>
<status status="FAIL" start="2024-11-22T13:13:14.085438" elapsed="0.044937">Record created with invalid column named "tax_paid": -10.0</status>
</branch>
<status status="FAIL" start="2024-11-22T13:13:14.085432" elapsed="0.044989">Record created with invalid column named "tax_paid": -10.0</status>
</if>
<status status="FAIL" start="2024-11-22T13:13:14.070486" elapsed="0.059990">Record created with invalid column named "tax_paid": -10.0</status>
</branch>
<status status="FAIL" start="2024-11-22T13:13:14.069518" elapsed="0.060974">Record created with invalid column named "tax_paid": -10.0</status>
</if>
<arg>${negative_driver_test_data_path}</arg>
<arg>Negative</arg>
<arg>natid-156</arg>
<doc>Verify partial uploaded heroes in DB</doc>
<status status="FAIL" start="2024-11-22T13:13:14.069272" elapsed="0.061266">Record created with invalid column named "tax_paid": -10.0</status>
</kw>
<kw name="Common Test Teardown" owner="generic" type="TEARDOWN">
<kw name="Capture Page Screenshot" owner="SeleniumLibrary">
<msg time="2024-11-22T13:13:14.130937" level="INFO">Cannot capture screenshot because no browser is open.</msg>
<arg>${OUTPUT_DIR}/screenshots/${TEST NAME}.png</arg>
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<status status="PASS" start="2024-11-22T13:13:14.130852" elapsed="0.000106"/>
</kw>
<kw name="Close Browser" owner="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" start="2024-11-22T13:13:14.131010" elapsed="0.000041"/>
</kw>
<status status="PASS" start="2024-11-22T13:13:14.130712" elapsed="0.000362"/>
</kw>
<status status="FAIL" start="2024-11-22T13:13:14.068952" elapsed="0.062156">Record created with invalid column named "tax_paid": -10.0</status>
</test>
<test id="s1-t9" name="Test Case 9 - Partial Data Wrong Format - Positive - positive records before negative will still be created" line="47">
<kw name="Verify Partial Uploaded Data In DB" owner="clerk">
<kw name="Read Csv File To List" owner="CSVLibrary">
<msg time="2024-11-22T13:13:14.131817" level="INFO">${csv_list} = [['${natid}', '${flow}', '${negative_col_name}'], ['natid-150', 'Positive', ''], ['natid-151', 'Positive', ''], ['natid-152', 'Negative', 'name'], ['natid-153', 'Negative', 'gender'], ['natid-154', 'N...</msg>
<var>${csv_list}</var>
<arg>${test_data_path}</arg>
<doc>Read CSV file and return its content as a Python list of tuples.</doc>
<status status="PASS" start="2024-11-22T13:13:14.131644" elapsed="0.000184"/>
</kw>
<if>
<branch type="IF" condition="'${flow}' == 'Positive'">
<for flavor="IN">
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Create Dictionary" owner="BuiltIn">
<var>${dict}</var>
<arg>value_natid=${item[0]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.132390" elapsed="0.000011"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<var>${sql_response}</var>
<arg>select_hero_by_natid</arg>
<arg>${dict}</arg>
<status status="NOT RUN" start="2024-11-22T13:13:14.132542" elapsed="0.000015"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${sql_response} == []</arg>
<arg>Fail</arg>
<arg>${natid} not created in DB</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.132617" elapsed="0.000011"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<var>${sql_response}</var>
<arg>${sql_response}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.132679" elapsed="0.000010"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[0]}</arg>
<arg>${sql_response['natid']}</arg>
<arg>natid</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.132741" elapsed="0.000011"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[1]}</arg>
<arg>${sql_response['name']}</arg>
<arg>name</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.132802" elapsed="0.000016"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[2]}</arg>
<arg>${sql_response['gender']}</arg>
<arg>gender</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.132866" elapsed="0.000010"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[3]}</arg>
<arg>${sql_response['birth_date']}</arg>
<arg>birth_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.132948" elapsed="0.000010"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[4]}</arg>
<arg>${sql_response['death_date']}</arg>
<arg>death_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.133024" elapsed="0.000010"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[5]}</arg>
<arg>${sql_response['salary']}</arg>
<arg>salary</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.133100" elapsed="0.000010"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[6]}</arg>
<arg>${sql_response['tax_paid']}</arg>
<arg>tax_paid</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.133175" elapsed="0.000011"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[7]}</arg>
<arg>${sql_response['brownie_points']}</arg>
<arg>brownie_points</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.133250" elapsed="0.000009"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:14.132041" elapsed="0.001234"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:14.132036" elapsed="0.001255"/>
</if>
<var name="${item}">['${natid}', '${flow}', '${negative_col_name}']</var>
<status status="PASS" start="2024-11-22T13:13:14.132019" elapsed="0.001283"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Create Dictionary" owner="BuiltIn">
<var>${dict}</var>
<arg>value_natid=${item[0]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.134717" elapsed="0.000013"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<var>${sql_response}</var>
<arg>select_hero_by_natid</arg>
<arg>${dict}</arg>
<status status="NOT RUN" start="2024-11-22T13:13:14.134813" elapsed="0.000012"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${sql_response} == []</arg>
<arg>Fail</arg>
<arg>${natid} not created in DB</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.134877" elapsed="0.000009"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<var>${sql_response}</var>
<arg>${sql_response}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.134935" elapsed="0.000009"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[0]}</arg>
<arg>${sql_response['natid']}</arg>
<arg>natid</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.134992" elapsed="0.000010"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[1]}</arg>
<arg>${sql_response['name']}</arg>
<arg>name</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.135049" elapsed="0.000011"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[2]}</arg>
<arg>${sql_response['gender']}</arg>
<arg>gender</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.135104" elapsed="0.000009"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[3]}</arg>
<arg>${sql_response['birth_date']}</arg>
<arg>birth_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.135176" elapsed="0.000011"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[4]}</arg>
<arg>${sql_response['death_date']}</arg>
<arg>death_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.135250" elapsed="0.000009"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[5]}</arg>
<arg>${sql_response['salary']}</arg>
<arg>salary</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.135327" elapsed="0.000010"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[6]}</arg>
<arg>${sql_response['tax_paid']}</arg>
<arg>tax_paid</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.135400" elapsed="0.000010"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[7]}</arg>
<arg>${sql_response['brownie_points']}</arg>
<arg>brownie_points</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.135470" elapsed="0.000009"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:14.134389" elapsed="0.001105"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:14.133449" elapsed="0.002060"/>
</if>
<var name="${item}">['natid-150', 'Positive', '']</var>
<status status="PASS" start="2024-11-22T13:13:14.133434" elapsed="0.002084"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Create Dictionary" owner="BuiltIn">
<var>${dict}</var>
<arg>value_natid=${item[0]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.135880" elapsed="0.000010"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<var>${sql_response}</var>
<arg>select_hero_by_natid</arg>
<arg>${dict}</arg>
<status status="NOT RUN" start="2024-11-22T13:13:14.135963" elapsed="0.000011"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${sql_response} == []</arg>
<arg>Fail</arg>
<arg>${natid} not created in DB</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.136021" elapsed="0.000009"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<var>${sql_response}</var>
<arg>${sql_response}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.136073" elapsed="0.000009"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[0]}</arg>
<arg>${sql_response['natid']}</arg>
<arg>natid</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.136127" elapsed="0.000009"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[1]}</arg>
<arg>${sql_response['name']}</arg>
<arg>name</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.136179" elapsed="0.000010"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[2]}</arg>
<arg>${sql_response['gender']}</arg>
<arg>gender</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.136231" elapsed="0.000009"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[3]}</arg>
<arg>${sql_response['birth_date']}</arg>
<arg>birth_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.136299" elapsed="0.000010"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[4]}</arg>
<arg>${sql_response['death_date']}</arg>
<arg>death_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.136369" elapsed="0.000008"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[5]}</arg>
<arg>${sql_response['salary']}</arg>
<arg>salary</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.136439" elapsed="0.000009"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[6]}</arg>
<arg>${sql_response['tax_paid']}</arg>
<arg>tax_paid</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.136506" elapsed="0.000010"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[7]}</arg>
<arg>${sql_response['brownie_points']}</arg>
<arg>brownie_points</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.136576" elapsed="0.000008"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:14.135603" elapsed="0.000996"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:14.135598" elapsed="0.001014"/>
</if>
<var name="${item}">['natid-151', 'Positive', '']</var>
<status status="PASS" start="2024-11-22T13:13:14.135583" elapsed="0.001037"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Create Dictionary" owner="BuiltIn">
<var>${dict}</var>
<arg>value_natid=${item[0]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.136952" elapsed="0.000010"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<var>${sql_response}</var>
<arg>select_hero_by_natid</arg>
<arg>${dict}</arg>
<status status="NOT RUN" start="2024-11-22T13:13:14.137031" elapsed="0.000010"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${sql_response} == []</arg>
<arg>Fail</arg>
<arg>${natid} not created in DB</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.137088" elapsed="0.000009"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<var>${sql_response}</var>
<arg>${sql_response}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.137139" elapsed="0.000009"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[0]}</arg>
<arg>${sql_response['natid']}</arg>
<arg>natid</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.137193" elapsed="0.000009"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[1]}</arg>
<arg>${sql_response['name']}</arg>
<arg>name</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.137305" elapsed="0.000011"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[2]}</arg>
<arg>${sql_response['gender']}</arg>
<arg>gender</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.137360" elapsed="0.000009"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[3]}</arg>
<arg>${sql_response['birth_date']}</arg>
<arg>birth_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.137431" elapsed="0.000010"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[4]}</arg>
<arg>${sql_response['death_date']}</arg>
<arg>death_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.137571" elapsed="0.000011"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[5]}</arg>
<arg>${sql_response['salary']}</arg>
<arg>salary</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.137644" elapsed="0.000010"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[6]}</arg>
<arg>${sql_response['tax_paid']}</arg>
<arg>tax_paid</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.137716" elapsed="0.000009"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[7]}</arg>
<arg>${sql_response['brownie_points']}</arg>
<arg>brownie_points</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.137785" elapsed="0.000010"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:14.136692" elapsed="0.001119"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:14.136687" elapsed="0.001137"/>
</if>
<var name="${item}">['natid-152', 'Negative', 'name']</var>
<status status="PASS" start="2024-11-22T13:13:14.136675" elapsed="0.001157"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Create Dictionary" owner="BuiltIn">
<var>${dict}</var>
<arg>value_natid=${item[0]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.138171" elapsed="0.000009"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<var>${sql_response}</var>
<arg>select_hero_by_natid</arg>
<arg>${dict}</arg>
<status status="NOT RUN" start="2024-11-22T13:13:14.138250" elapsed="0.000010"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${sql_response} == []</arg>
<arg>Fail</arg>
<arg>${natid} not created in DB</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.138307" elapsed="0.000009"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<var>${sql_response}</var>
<arg>${sql_response}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.138358" elapsed="0.000009"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[0]}</arg>
<arg>${sql_response['natid']}</arg>
<arg>natid</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.138412" elapsed="0.000009"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[1]}</arg>
<arg>${sql_response['name']}</arg>
<arg>name</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.138465" elapsed="0.000009"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[2]}</arg>
<arg>${sql_response['gender']}</arg>
<arg>gender</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.138517" elapsed="0.000009"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[3]}</arg>
<arg>${sql_response['birth_date']}</arg>
<arg>birth_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.138586" elapsed="0.000010"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[4]}</arg>
<arg>${sql_response['death_date']}</arg>
<arg>death_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.138657" elapsed="0.000009"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[5]}</arg>
<arg>${sql_response['salary']}</arg>
<arg>salary</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.138727" elapsed="0.000010"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[6]}</arg>
<arg>${sql_response['tax_paid']}</arg>
<arg>tax_paid</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.138796" elapsed="0.000009"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[7]}</arg>
<arg>${sql_response['brownie_points']}</arg>
<arg>brownie_points</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.138865" elapsed="0.000009"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:14.137905" elapsed="0.000983"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:14.137900" elapsed="0.001001"/>
</if>
<var name="${item}">['natid-153', 'Negative', 'gender']</var>
<status status="PASS" start="2024-11-22T13:13:14.137887" elapsed="0.001025"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Create Dictionary" owner="BuiltIn">
<var>${dict}</var>
<arg>value_natid=${item[0]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.139236" elapsed="0.000010"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<var>${sql_response}</var>
<arg>select_hero_by_natid</arg>
<arg>${dict}</arg>
<status status="NOT RUN" start="2024-11-22T13:13:14.139316" elapsed="0.000010"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${sql_response} == []</arg>
<arg>Fail</arg>
<arg>${natid} not created in DB</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.139376" elapsed="0.000009"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<var>${sql_response}</var>
<arg>${sql_response}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.139428" elapsed="0.000009"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[0]}</arg>
<arg>${sql_response['natid']}</arg>
<arg>natid</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.139482" elapsed="0.000010"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[1]}</arg>
<arg>${sql_response['name']}</arg>
<arg>name</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.139536" elapsed="0.000009"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[2]}</arg>
<arg>${sql_response['gender']}</arg>
<arg>gender</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.139589" elapsed="0.000009"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[3]}</arg>
<arg>${sql_response['birth_date']}</arg>
<arg>birth_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.139658" elapsed="0.000010"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[4]}</arg>
<arg>${sql_response['death_date']}</arg>
<arg>death_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.139727" elapsed="0.000009"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[5]}</arg>
<arg>${sql_response['salary']}</arg>
<arg>salary</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.139795" elapsed="0.000009"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[6]}</arg>
<arg>${sql_response['tax_paid']}</arg>
<arg>tax_paid</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.139862" elapsed="0.000009"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[7]}</arg>
<arg>${sql_response['brownie_points']}</arg>
<arg>brownie_points</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.139981" elapsed="0.000009"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:14.138983" elapsed="0.001022"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:14.138979" elapsed="0.001039"/>
</if>
<var name="${item}">['natid-154', 'Negative', 'birth_date']</var>
<status status="PASS" start="2024-11-22T13:13:14.138966" elapsed="0.001060"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Create Dictionary" owner="BuiltIn">
<var>${dict}</var>
<arg>value_natid=${item[0]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.140352" elapsed="0.000010"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<var>${sql_response}</var>
<arg>select_hero_by_natid</arg>
<arg>${dict}</arg>
<status status="NOT RUN" start="2024-11-22T13:13:14.140499" elapsed="0.000010"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${sql_response} == []</arg>
<arg>Fail</arg>
<arg>${natid} not created in DB</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.140557" elapsed="0.000009"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<var>${sql_response}</var>
<arg>${sql_response}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.140610" elapsed="0.000008"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[0]}</arg>
<arg>${sql_response['natid']}</arg>
<arg>natid</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.140662" elapsed="0.000010"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[1]}</arg>
<arg>${sql_response['name']}</arg>
<arg>name</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.140716" elapsed="0.000008"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[2]}</arg>
<arg>${sql_response['gender']}</arg>
<arg>gender</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.140766" elapsed="0.000009"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[3]}</arg>
<arg>${sql_response['birth_date']}</arg>
<arg>birth_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.140837" elapsed="0.000010"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[4]}</arg>
<arg>${sql_response['death_date']}</arg>
<arg>death_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.140908" elapsed="0.000010"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[5]}</arg>
<arg>${sql_response['salary']}</arg>
<arg>salary</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.140979" elapsed="0.000009"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[6]}</arg>
<arg>${sql_response['tax_paid']}</arg>
<arg>tax_paid</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.141048" elapsed="0.000010"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[7]}</arg>
<arg>${sql_response['brownie_points']}</arg>
<arg>brownie_points</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.141116" elapsed="0.000009"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:14.140097" elapsed="0.001043"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:14.140092" elapsed="0.001060"/>
</if>
<var name="${item}">['natid-155', 'Negative', 'salary']</var>
<status status="PASS" start="2024-11-22T13:13:14.140080" elapsed="0.001080"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Create Dictionary" owner="BuiltIn">
<var>${dict}</var>
<arg>value_natid=${item[0]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.141483" elapsed="0.000010"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<var>${sql_response}</var>
<arg>select_hero_by_natid</arg>
<arg>${dict}</arg>
<status status="NOT RUN" start="2024-11-22T13:13:14.141565" elapsed="0.000011"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${sql_response} == []</arg>
<arg>Fail</arg>
<arg>${natid} not created in DB</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.141623" elapsed="0.000009"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<var>${sql_response}</var>
<arg>${sql_response}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.141676" elapsed="0.000008"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[0]}</arg>
<arg>${sql_response['natid']}</arg>
<arg>natid</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.141729" elapsed="0.000008"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[1]}</arg>
<arg>${sql_response['name']}</arg>
<arg>name</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.141779" elapsed="0.000011"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[2]}</arg>
<arg>${sql_response['gender']}</arg>
<arg>gender</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.141833" elapsed="0.000009"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[3]}</arg>
<arg>${sql_response['birth_date']}</arg>
<arg>birth_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.141902" elapsed="0.000010"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[4]}</arg>
<arg>${sql_response['death_date']}</arg>
<arg>death_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.141971" elapsed="0.000010"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[5]}</arg>
<arg>${sql_response['salary']}</arg>
<arg>salary</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.142040" elapsed="0.000011"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[6]}</arg>
<arg>${sql_response['tax_paid']}</arg>
<arg>tax_paid</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.142111" elapsed="0.000010"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[7]}</arg>
<arg>${sql_response['brownie_points']}</arg>
<arg>brownie_points</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.142181" elapsed="0.000009"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:14.141233" elapsed="0.000972"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:14.141229" elapsed="0.000989"/>
</if>
<var name="${item}">['natid-156', 'Negative', 'tax_paid']</var>
<status status="PASS" start="2024-11-22T13:13:14.141216" elapsed="0.001011"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2024-11-22T13:13:14.142840" level="INFO">${dict} = {'value_natid': 'natid-157'}</msg>
<var>${dict}</var>
<arg>value_natid=${item[0]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2024-11-22T13:13:14.142552" elapsed="0.000300"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<kw name="Connect To Database" owner="DatabaseLibrary">
<msg time="2024-11-22T13:13:14.143161" level="INFO">Looking for configuration file: 'resources/db.cfg'</msg>
<msg time="2024-11-22T13:13:14.143230" level="INFO">Configuration file doesn't exist</msg>
<msg time="2024-11-22T13:13:14.143305" level="INFO">Connect to DB using : mysql.connector.connect(database='testdb', user='user', password=***, host='localhost', port=3306)</msg>
<arg>${DB_API}</arg>
<arg>${DB_NAME}</arg>
<arg>${DB_USER}</arg>
<arg>${DB_PASSWORD}</arg>
<arg>${DB_HOST}</arg>
<arg>${DB_PORT}</arg>
<doc>Creates a database connection using the DB API 2.0 ``db_module`` and the parameters provided.
Along with listed commonly used arguments (`db_name`, `db_host` etc.)
you can set any other DB module specific parameters as key/value pairs.</doc>
<status status="PASS" start="2024-11-22T13:13:14.143043" elapsed="0.012887"/>
</kw>
<kw name="Update SQL Queries With Arguments Dictionary" owner="sql-helper">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-11-22T13:13:14.156470" level="INFO" html="true">Getting file '&lt;a href="file:///Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/object-repo/sql-queries/select_hero_by_natid.sql"&gt;/Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/object-repo/sql-queries/select_hero_by_natid.sql&lt;/a&gt;'.</msg>
<msg time="2024-11-22T13:13:14.156555" level="INFO">${sql_query} = SELECT *
FROM testdb.working_class_heroes
WHERE natid='value_natid';</msg>
<var>${sql_query}</var>
<arg>./object-repo/sql-queries/${sql_file_name}.sql</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-11-22T13:13:14.156353" elapsed="0.000212"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2024-11-22T13:13:14.156937" level="INFO">Argument types are:
&lt;class 'robot.utils.dotdict.DotDict'&gt;
&lt;class 'str'&gt;</msg>
<msg time="2024-11-22T13:13:14.156987" level="FAIL">{'value_natid': 'natid-157'} != </msg>
<arg>${args_dict}</arg>
<arg>${EMPTY}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="FAIL" start="2024-11-22T13:13:14.156691" elapsed="0.000329">{'value_natid': 'natid-157'} != </status>
</kw>
<msg time="2024-11-22T13:13:14.157057" level="INFO">${empty_status} = False</msg>
<var>${empty_status}</var>
<arg>Should Be Equal As Strings</arg>
<arg>${args_dict}</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-11-22T13:13:14.156623" elapsed="0.000442"/>
</kw>
<if>
<branch type="IF" condition="'${empty_status}' == '${False}'">
<if>
<branch type="IF" condition="${args_dict}">
<for flavor="IN">
<iter>
<kw name="Convert To String" owner="BuiltIn">
<msg time="2024-11-22T13:13:14.157342" level="INFO">${args_key_str} = value_natid</msg>
<var>${args_key_str}</var>
<arg>${args_key}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="PASS" start="2024-11-22T13:13:14.157283" elapsed="0.000068"/>
</kw>
<kw name="Convert To String" owner="BuiltIn">
<msg time="2024-11-22T13:13:14.157461" level="INFO">${args_value_str} = natid-157</msg>
<var>${args_value_str}</var>
<arg>${args_dict}[${args_key_str}]</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="PASS" start="2024-11-22T13:13:14.157397" elapsed="0.000073"/>
</kw>
<kw name="Replace String" owner="String">
<msg time="2024-11-22T13:13:14.157587" level="INFO">${sql_query} = SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-157';</msg>
<var>${sql_query}</var>
<arg>${sql_query}</arg>
<arg>${args_key_str}</arg>
<arg>${args_value_str}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="PASS" start="2024-11-22T13:13:14.157519" elapsed="0.000077"/>
</kw>
<var name="${args_key}">value_natid</var>
<status status="PASS" start="2024-11-22T13:13:14.157241" elapsed="0.000373"/>
</iter>
<var>${args_key}</var>
<value>@{args_dict}</value>
<status status="PASS" start="2024-11-22T13:13:14.157191" elapsed="0.000439"/>
</for>
<status status="PASS" start="2024-11-22T13:13:14.157162" elapsed="0.000486"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:14.157157" elapsed="0.000504"/>
</if>
<status status="PASS" start="2024-11-22T13:13:14.157101" elapsed="0.000568"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:14.157091" elapsed="0.000588"/>
</if>
<return>
<value>${sql_query}</value>
<status status="PASS" start="2024-11-22T13:13:14.157692" elapsed="0.000016"/>
</return>
<msg time="2024-11-22T13:13:14.157759" level="INFO">${updated_sql_query} = SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-157';</msg>
<var>${updated_sql_query}</var>
<arg>${sql_file_name}</arg>
<arg>${args_dict}</arg>
<status status="PASS" start="2024-11-22T13:13:14.156196" elapsed="0.001574"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-11-22T13:13:14.157981" level="FAIL">'SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-157';' does not contain 'delete'</msg>
<arg>${updated_sql_query}</arg>
<arg>DELETE</arg>
<arg>ignore_case=${True}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-11-22T13:13:14.157885" elapsed="0.000120">'SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-157';' does not contain 'delete'</status>
</kw>
<msg time="2024-11-22T13:13:14.158041" level="INFO">${delete_status} = False</msg>
<var>${delete_status}</var>
<arg>Should Contain</arg>
<arg>${updated_sql_query}</arg>
<arg>DELETE</arg>
<arg>ignore_case=${True}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-11-22T13:13:14.157824" elapsed="0.000225"/>
</kw>
<if>
<branch type="IF" condition="'${delete_status}' == '${True}'">
<kw name="Execute Sql String" owner="DatabaseLibrary">
<var>${json_response}</var>
<arg>${updated_sql_query}</arg>
<doc>Executes the ``sql_string`` as a single SQL command.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.158156" elapsed="0.000010"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:14.158078" elapsed="0.000104"/>
</branch>
<branch type="ELSE">
<kw name="Query" owner="DatabaseLibrary">
<msg time="2024-11-22T13:13:14.159177" level="INFO" html="true">Executing sql:&lt;br&gt;&lt;code style="font-weight: bold;"&gt;SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-157';&lt;/code&gt;</msg>
<msg time="2024-11-22T13:13:14.160561" level="INFO" html="true">&lt;div style="max-width: 100%; overflow-x: auto;"&gt;&lt;table style="width: auto; border-collapse: collapse; border: 2px solid rgb(140 140 140)"&gt;&lt;caption style="text-align: left; font-weight: bold; padding: 5px;"&gt;Query returned 0 rows&lt;/caption&gt;&lt;tr&gt;&lt;th scope="col" style="background-color: #d6ecd4; border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;Row&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;id&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;created_at&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;create_by&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;updated_at&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;updated_by&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;birth_date&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;brownie_points&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;death_date&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;gender&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;name&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;natid&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;salary&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;tax_paid&lt;/th&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;</msg>
<msg time="2024-11-22T13:13:14.161675" level="INFO">${json_response} = []</msg>
<var>${json_response}</var>
<arg>${updated_sql_query}</arg>
<arg>return_dict=${True}</arg>
<doc>Runs a query with the ``select_statement`` and returns the result as list of rows.
The type of row values depends on the database module -
usually they are tuples or tuple-like objects.</doc>
<status status="PASS" start="2024-11-22T13:13:14.158235" elapsed="0.003456"/>
</kw>
<status status="PASS" start="2024-11-22T13:13:14.158194" elapsed="0.003525"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:14.158072" elapsed="0.003663"/>
</if>
<kw name="Disconnect From Database" owner="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<status status="PASS" start="2024-11-22T13:13:14.161797" elapsed="0.000117"/>
</kw>
<return>
<value>${json_response}</value>
<status status="PASS" start="2024-11-22T13:13:14.161938" elapsed="0.000020"/>
</return>
<msg time="2024-11-22T13:13:14.162019" level="INFO">${sql_response} = []</msg>
<var>${sql_response}</var>
<arg>select_hero_by_natid</arg>
<arg>${dict}</arg>
<status status="PASS" start="2024-11-22T13:13:14.142924" elapsed="0.019105"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Fail" owner="BuiltIn">
<msg time="2024-11-22T13:13:14.162300" level="FAIL">natid-157 not created in DB</msg>
<arg>${natid} not created in DB</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="FAIL" start="2024-11-22T13:13:14.162207" elapsed="0.000123">natid-157 not created in DB</status>
</kw>
<arg>${sql_response} == []</arg>
<arg>Fail</arg>
<arg>${natid} not created in DB</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="FAIL" start="2024-11-22T13:13:14.162096" elapsed="0.000262">natid-157 not created in DB</status>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<var>${sql_response}</var>
<arg>${sql_response}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.162416" elapsed="0.000011"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[0]}</arg>
<arg>${sql_response['natid']}</arg>
<arg>natid</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.162491" elapsed="0.000012"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[1]}</arg>
<arg>${sql_response['name']}</arg>
<arg>name</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.162555" elapsed="0.000010"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[2]}</arg>
<arg>${sql_response['gender']}</arg>
<arg>gender</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.162612" elapsed="0.000010"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[3]}</arg>
<arg>${sql_response['birth_date']}</arg>
<arg>birth_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.162696" elapsed="0.000011"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[4]}</arg>
<arg>${sql_response['death_date']}</arg>
<arg>death_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.162775" elapsed="0.000010"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[5]}</arg>
<arg>${sql_response['salary']}</arg>
<arg>salary</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.162878" elapsed="0.000013"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[6]}</arg>
<arg>${sql_response['tax_paid']}</arg>
<arg>tax_paid</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.162958" elapsed="0.000011"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[7]}</arg>
<arg>${sql_response['brownie_points']}</arg>
<arg>brownie_points</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.163063" elapsed="0.000016"/>
</kw>
<status status="FAIL" start="2024-11-22T13:13:14.142300" elapsed="0.020809">natid-157 not created in DB</status>
</branch>
<status status="FAIL" start="2024-11-22T13:13:14.142295" elapsed="0.020832">natid-157 not created in DB</status>
</if>
<var name="${item}">['natid-157', 'Positive', '']</var>
<status status="FAIL" start="2024-11-22T13:13:14.142282" elapsed="0.020868">natid-157 not created in DB</status>
</iter>
<var>${item}</var>
<value>@{csv_list}</value>
<status status="FAIL" start="2024-11-22T13:13:14.131933" elapsed="0.031247">natid-157 not created in DB</status>
</for>
<status status="FAIL" start="2024-11-22T13:13:14.131863" elapsed="0.031345">natid-157 not created in DB</status>
</branch>
<branch type="ELSE">
<for flavor="IN">
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Set Variable" owner="BuiltIn">
<var>${negative_col_name}</var>
<arg>${item[2]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.163341" elapsed="0.000016"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:14.163294" elapsed="0.000080"/>
</branch>
<status status="NOT RUN" start="2024-11-22T13:13:14.163289" elapsed="0.000097"/>
</if>
<var name="${item}"/>
<status status="NOT RUN" start="2024-11-22T13:13:14.163275" elapsed="0.000120"/>
</iter>
<var>${item}</var>
<value>@{csv_list}</value>
<status status="NOT RUN" start="2024-11-22T13:13:14.163242" elapsed="0.000166"/>
</for>
<kw name="Create Dictionary" owner="BuiltIn">
<var>${dict}</var>
<arg>value_natid=${natid}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.163459" elapsed="0.000072"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<var>${sql_response}</var>
<arg>select_hero_by_natid</arg>
<arg>${dict}</arg>
<status status="NOT RUN" start="2024-11-22T13:13:14.163608" elapsed="0.000011"/>
</kw>
<kw name="Log and Log To Console" owner="generic">
<arg>${sql_response}</arg>
<status status="NOT RUN" start="2024-11-22T13:13:14.163669" elapsed="0.000010"/>
</kw>
<if>
<branch type="IF" condition="${sql_response} != []">
<kw name="Set Variable" owner="BuiltIn">
<var>${sql_response}</var>
<arg>${sql_response}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.163860" elapsed="0.000010"/>
</kw>
<kw name="Log and Log To Console" owner="generic">
<arg>${sql_response}</arg>
<status status="NOT RUN" start="2024-11-22T13:13:14.163920" elapsed="0.000012"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<var>${failure_msg}</var>
<arg>${sql_response['${negative_col_name}']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.163978" elapsed="0.000009"/>
</kw>
<kw name="Log and Log To Console" owner="generic">
<arg>${sql_response}</arg>
<status status="NOT RUN" start="2024-11-22T13:13:14.164040" elapsed="0.000012"/>
</kw>
<kw name="Fail" owner="BuiltIn">
<arg>Record created with invalid column named "${negative_col_name}": ${sql_response['${negative_col_name}']}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.164095" elapsed="0.000009"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:14.163811" elapsed="0.000308"/>
</branch>
<status status="NOT RUN" start="2024-11-22T13:13:14.163697" elapsed="0.000436"/>
</if>
<status status="NOT RUN" start="2024-11-22T13:13:14.163222" elapsed="0.000920"/>
</branch>
<status status="FAIL" start="2024-11-22T13:13:14.131853" elapsed="0.032301">natid-157 not created in DB</status>
</if>
<arg>${negative_driver_test_data_path}</arg>
<arg>Positive</arg>
<arg>natid-157</arg>
<doc>Verify partial uploaded heroes in DB</doc>
<status status="FAIL" start="2024-11-22T13:13:14.131506" elapsed="0.032687">natid-157 not created in DB</status>
</kw>
<kw name="Common Test Teardown" owner="generic" type="TEARDOWN">
<kw name="Capture Page Screenshot" owner="SeleniumLibrary">
<msg time="2024-11-22T13:13:14.164509" level="INFO">Cannot capture screenshot because no browser is open.</msg>
<arg>${OUTPUT_DIR}/screenshots/${TEST NAME}.png</arg>
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<status status="PASS" start="2024-11-22T13:13:14.164437" elapsed="0.000089"/>
</kw>
<kw name="Close Browser" owner="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" start="2024-11-22T13:13:14.164574" elapsed="0.000034"/>
</kw>
<status status="PASS" start="2024-11-22T13:13:14.164325" elapsed="0.000304"/>
</kw>
<status status="FAIL" start="2024-11-22T13:13:14.131215" elapsed="0.033446">natid-157 not created in DB</status>
</test>
<test id="s1-t10" name="Test Case 10 - Partial Data Wrong Format - Negative - gender - Wrong Format" line="50">
<kw name="Verify Partial Uploaded Data In DB" owner="clerk">
<kw name="Read Csv File To List" owner="CSVLibrary">
<msg time="2024-11-22T13:13:14.165295" level="INFO">${csv_list} = [['${natid}', '${flow}', '${negative_col_name}'], ['natid-150', 'Positive', ''], ['natid-151', 'Positive', ''], ['natid-152', 'Negative', 'name'], ['natid-153', 'Negative', 'gender'], ['natid-154', 'N...</msg>
<var>${csv_list}</var>
<arg>${test_data_path}</arg>
<doc>Read CSV file and return its content as a Python list of tuples.</doc>
<status status="PASS" start="2024-11-22T13:13:14.165139" elapsed="0.000168"/>
</kw>
<if>
<branch type="IF" condition="'${flow}' == 'Positive'">
<for flavor="IN">
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Create Dictionary" owner="BuiltIn">
<var>${dict}</var>
<arg>value_natid=${item[0]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.165506" elapsed="0.000010"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<var>${sql_response}</var>
<arg>select_hero_by_natid</arg>
<arg>${dict}</arg>
<status status="NOT RUN" start="2024-11-22T13:13:14.165589" elapsed="0.000012"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${sql_response} == []</arg>
<arg>Fail</arg>
<arg>${natid} not created in DB</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.165653" elapsed="0.000009"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<var>${sql_response}</var>
<arg>${sql_response}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.165709" elapsed="0.000009"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[0]}</arg>
<arg>${sql_response['natid']}</arg>
<arg>natid</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.165768" elapsed="0.000010"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[1]}</arg>
<arg>${sql_response['name']}</arg>
<arg>name</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.165824" elapsed="0.000011"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[2]}</arg>
<arg>${sql_response['gender']}</arg>
<arg>gender</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.165891" elapsed="0.000010"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[3]}</arg>
<arg>${sql_response['birth_date']}</arg>
<arg>birth_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.165968" elapsed="0.000010"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[4]}</arg>
<arg>${sql_response['death_date']}</arg>
<arg>death_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.166044" elapsed="0.000010"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[5]}</arg>
<arg>${sql_response['salary']}</arg>
<arg>salary</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.166120" elapsed="0.000010"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[6]}</arg>
<arg>${sql_response['tax_paid']}</arg>
<arg>tax_paid</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.166202" elapsed="0.000011"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[7]}</arg>
<arg>${sql_response['brownie_points']}</arg>
<arg>brownie_points</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.166279" elapsed="0.000009"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:14.165456" elapsed="0.000849"/>
</branch>
<status status="NOT RUN" start="2024-11-22T13:13:14.165452" elapsed="0.000868"/>
</if>
<var name="${item}"/>
<status status="NOT RUN" start="2024-11-22T13:13:14.165437" elapsed="0.000908"/>
</iter>
<var>${item}</var>
<value>@{csv_list}</value>
<status status="NOT RUN" start="2024-11-22T13:13:14.165388" elapsed="0.000996"/>
</for>
<status status="NOT RUN" start="2024-11-22T13:13:14.165338" elapsed="0.001074"/>
</branch>
<branch type="ELSE">
<for flavor="IN">
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Set Variable" owner="BuiltIn">
<var>${negative_col_name}</var>
<arg>${item[2]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.166944" elapsed="0.000012"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:14.166592" elapsed="0.000383"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:14.166585" elapsed="0.000475"/>
</if>
<var name="${item}">['${natid}', '${flow}', '${negative_col_name}']</var>
<status status="PASS" start="2024-11-22T13:13:14.166565" elapsed="0.000505"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Set Variable" owner="BuiltIn">
<var>${negative_col_name}</var>
<arg>${item[2]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.167428" elapsed="0.000011"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:14.167138" elapsed="0.000320"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:14.167132" elapsed="0.000340"/>
</if>
<var name="${item}">['natid-150', 'Positive', '']</var>
<status status="PASS" start="2024-11-22T13:13:14.167118" elapsed="0.000362"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Set Variable" owner="BuiltIn">
<var>${negative_col_name}</var>
<arg>${item[2]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.167819" elapsed="0.000011"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:14.167544" elapsed="0.000304"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:14.167539" elapsed="0.000325"/>
</if>
<var name="${item}">['natid-151', 'Positive', '']</var>
<status status="PASS" start="2024-11-22T13:13:14.167525" elapsed="0.000350"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Set Variable" owner="BuiltIn">
<var>${negative_col_name}</var>
<arg>${item[2]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.168395" elapsed="0.000014"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:14.167942" elapsed="0.000488"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:14.167937" elapsed="0.000509"/>
</if>
<var name="${item}">['natid-152', 'Negative', 'name']</var>
<status status="PASS" start="2024-11-22T13:13:14.167923" elapsed="0.000532"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Set Variable" owner="BuiltIn">
<var>${negative_col_name}</var>
<arg>${item[2]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.168818" elapsed="0.000012"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:14.168526" elapsed="0.000324"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:14.168520" elapsed="0.000344"/>
</if>
<var name="${item}">['natid-153', 'Negative', 'gender']</var>
<status status="PASS" start="2024-11-22T13:13:14.168505" elapsed="0.000367"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Set Variable" owner="BuiltIn">
<var>${negative_col_name}</var>
<arg>${item[2]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.169272" elapsed="0.000012"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:14.168938" elapsed="0.000364"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:14.168933" elapsed="0.000383"/>
</if>
<var name="${item}">['natid-154', 'Negative', 'birth_date']</var>
<status status="PASS" start="2024-11-22T13:13:14.168919" elapsed="0.000406"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Set Variable" owner="BuiltIn">
<var>${negative_col_name}</var>
<arg>${item[2]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.169670" elapsed="0.000011"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:14.169390" elapsed="0.000309"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:14.169385" elapsed="0.000328"/>
</if>
<var name="${item}">['natid-155', 'Negative', 'salary']</var>
<status status="PASS" start="2024-11-22T13:13:14.169371" elapsed="0.000350"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Set Variable" owner="BuiltIn">
<var>${negative_col_name}</var>
<arg>${item[2]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.170062" elapsed="0.000010"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:14.169783" elapsed="0.000309"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:14.169778" elapsed="0.000330"/>
</if>
<var name="${item}">['natid-156', 'Negative', 'tax_paid']</var>
<status status="PASS" start="2024-11-22T13:13:14.169765" elapsed="0.000354"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Set Variable" owner="BuiltIn">
<var>${negative_col_name}</var>
<arg>${item[2]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.170449" elapsed="0.000011"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:14.170181" elapsed="0.000297"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:14.170177" elapsed="0.000315"/>
</if>
<var name="${item}">['natid-157', 'Positive', '']</var>
<status status="PASS" start="2024-11-22T13:13:14.170164" elapsed="0.000336"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-11-22T13:13:14.171115" level="INFO">${negative_col_name} = gender</msg>
<var>${negative_col_name}</var>
<arg>${item[2]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-11-22T13:13:14.170836" elapsed="0.000290"/>
</kw>
<status status="PASS" start="2024-11-22T13:13:14.170560" elapsed="0.000585"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:14.170555" elapsed="0.000603"/>
</if>
<var name="${item}">['natid-158', 'Negative', 'gender']</var>
<status status="PASS" start="2024-11-22T13:13:14.170541" elapsed="0.000626"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Set Variable" owner="BuiltIn">
<var>${negative_col_name}</var>
<arg>${item[2]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.171499" elapsed="0.000011"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:14.171228" elapsed="0.000300"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:14.171223" elapsed="0.000318"/>
</if>
<var name="${item}">['natid-159', 'Positive', '']</var>
<status status="PASS" start="2024-11-22T13:13:14.171210" elapsed="0.000339"/>
</iter>
<var>${item}</var>
<value>@{csv_list}</value>
<status status="PASS" start="2024-11-22T13:13:14.166451" elapsed="0.005113"/>
</for>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2024-11-22T13:13:14.171723" level="INFO">${dict} = {'value_natid': 'natid-158'}</msg>
<var>${dict}</var>
<arg>value_natid=${natid}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2024-11-22T13:13:14.171622" elapsed="0.000111"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<kw name="Connect To Database" owner="DatabaseLibrary">
<msg time="2024-11-22T13:13:14.172066" level="INFO">Looking for configuration file: 'resources/db.cfg'</msg>
<msg time="2024-11-22T13:13:14.172092" level="INFO">Configuration file doesn't exist</msg>
<msg time="2024-11-22T13:13:14.172172" level="INFO">Connect to DB using : mysql.connector.connect(database='testdb', user='user', password=***, host='localhost', port=3306)</msg>
<arg>${DB_API}</arg>
<arg>${DB_NAME}</arg>
<arg>${DB_USER}</arg>
<arg>${DB_PASSWORD}</arg>
<arg>${DB_HOST}</arg>
<arg>${DB_PORT}</arg>
<doc>Creates a database connection using the DB API 2.0 ``db_module`` and the parameters provided.
Along with listed commonly used arguments (`db_name`, `db_host` etc.)
you can set any other DB module specific parameters as key/value pairs.</doc>
<status status="PASS" start="2024-11-22T13:13:14.171941" elapsed="0.011632"/>
</kw>
<kw name="Update SQL Queries With Arguments Dictionary" owner="sql-helper">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-11-22T13:13:14.184194" level="INFO" html="true">Getting file '&lt;a href="file:///Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/object-repo/sql-queries/select_hero_by_natid.sql"&gt;/Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/object-repo/sql-queries/select_hero_by_natid.sql&lt;/a&gt;'.</msg>
<msg time="2024-11-22T13:13:14.184284" level="INFO">${sql_query} = SELECT *
FROM testdb.working_class_heroes
WHERE natid='value_natid';</msg>
<var>${sql_query}</var>
<arg>./object-repo/sql-queries/${sql_file_name}.sql</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-11-22T13:13:14.184064" elapsed="0.000231"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2024-11-22T13:13:14.185248" level="INFO">Argument types are:
&lt;class 'robot.utils.dotdict.DotDict'&gt;
&lt;class 'str'&gt;</msg>
<msg time="2024-11-22T13:13:14.185313" level="FAIL">{'value_natid': 'natid-158'} != </msg>
<arg>${args_dict}</arg>
<arg>${EMPTY}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="FAIL" start="2024-11-22T13:13:14.184549" elapsed="0.000800">{'value_natid': 'natid-158'} != </status>
</kw>
<msg time="2024-11-22T13:13:14.185400" level="INFO">${empty_status} = False</msg>
<var>${empty_status}</var>
<arg>Should Be Equal As Strings</arg>
<arg>${args_dict}</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-11-22T13:13:14.184364" elapsed="0.001045"/>
</kw>
<if>
<branch type="IF" condition="'${empty_status}' == '${False}'">
<if>
<branch type="IF" condition="${args_dict}">
<for flavor="IN">
<iter>
<kw name="Convert To String" owner="BuiltIn">
<msg time="2024-11-22T13:13:14.185831" level="INFO">${args_key_str} = value_natid</msg>
<var>${args_key_str}</var>
<arg>${args_key}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="PASS" start="2024-11-22T13:13:14.185759" elapsed="0.000083"/>
</kw>
<kw name="Convert To String" owner="BuiltIn">
<msg time="2024-11-22T13:13:14.185966" level="INFO">${args_value_str} = natid-158</msg>
<var>${args_value_str}</var>
<arg>${args_dict}[${args_key_str}]</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="PASS" start="2024-11-22T13:13:14.185895" elapsed="0.000081"/>
</kw>
<kw name="Replace String" owner="String">
<msg time="2024-11-22T13:13:14.186103" level="INFO">${sql_query} = SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-158';</msg>
<var>${sql_query}</var>
<arg>${sql_query}</arg>
<arg>${args_key_str}</arg>
<arg>${args_value_str}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="PASS" start="2024-11-22T13:13:14.186028" elapsed="0.000084"/>
</kw>
<var name="${args_key}">value_natid</var>
<status status="PASS" start="2024-11-22T13:13:14.185692" elapsed="0.000441"/>
</iter>
<var>${args_key}</var>
<value>@{args_dict}</value>
<status status="PASS" start="2024-11-22T13:13:14.185629" elapsed="0.000524"/>
</for>
<status status="PASS" start="2024-11-22T13:13:14.185593" elapsed="0.000582"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:14.185587" elapsed="0.000604"/>
</if>
<status status="PASS" start="2024-11-22T13:13:14.185510" elapsed="0.000690"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:14.185495" elapsed="0.000717"/>
</if>
<return>
<value>${sql_query}</value>
<status status="PASS" start="2024-11-22T13:13:14.186228" elapsed="0.000019"/>
</return>
<msg time="2024-11-22T13:13:14.186299" level="INFO">${updated_sql_query} = SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-158';</msg>
<var>${updated_sql_query}</var>
<arg>${sql_file_name}</arg>
<arg>${args_dict}</arg>
<status status="PASS" start="2024-11-22T13:13:14.183869" elapsed="0.002440"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-11-22T13:13:14.186547" level="FAIL">'SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-158';' does not contain 'delete'</msg>
<arg>${updated_sql_query}</arg>
<arg>DELETE</arg>
<arg>ignore_case=${True}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-11-22T13:13:14.186439" elapsed="0.000212">'SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-158';' does not contain 'delete'</status>
</kw>
<msg time="2024-11-22T13:13:14.186828" level="INFO">${delete_status} = False</msg>
<var>${delete_status}</var>
<arg>Should Contain</arg>
<arg>${updated_sql_query}</arg>
<arg>DELETE</arg>
<arg>ignore_case=${True}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-11-22T13:13:14.186370" elapsed="0.000527"/>
</kw>
<if>
<branch type="IF" condition="'${delete_status}' == '${True}'">
<kw name="Execute Sql String" owner="DatabaseLibrary">
<var>${json_response}</var>
<arg>${updated_sql_query}</arg>
<doc>Executes the ``sql_string`` as a single SQL command.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.187196" elapsed="0.000010"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:14.187018" elapsed="0.000206"/>
</branch>
<branch type="ELSE">
<kw name="Query" owner="DatabaseLibrary">
<msg time="2024-11-22T13:13:14.188467" level="INFO" html="true">Executing sql:&lt;br&gt;&lt;code style="font-weight: bold;"&gt;SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-158';&lt;/code&gt;</msg>
<msg time="2024-11-22T13:13:14.191250" level="INFO" html="true">&lt;div style="max-width: 100%; overflow-x: auto;"&gt;&lt;table style="width: auto; border-collapse: collapse; border: 2px solid rgb(140 140 140)"&gt;&lt;caption style="text-align: left; font-weight: bold; padding: 5px;"&gt;Query returned 0 rows&lt;/caption&gt;&lt;tr&gt;&lt;th scope="col" style="background-color: #d6ecd4; border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;Row&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;id&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;created_at&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;create_by&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;updated_at&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;updated_by&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;birth_date&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;brownie_points&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;death_date&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;gender&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;name&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;natid&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;salary&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;tax_paid&lt;/th&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;</msg>
<msg time="2024-11-22T13:13:14.192013" level="INFO">${json_response} = []</msg>
<var>${json_response}</var>
<arg>${updated_sql_query}</arg>
<arg>return_dict=${True}</arg>
<doc>Runs a query with the ``select_statement`` and returns the result as list of rows.
The type of row values depends on the database module -
usually they are tuples or tuple-like objects.</doc>
<status status="PASS" start="2024-11-22T13:13:14.187297" elapsed="0.004729"/>
</kw>
<status status="PASS" start="2024-11-22T13:13:14.187252" elapsed="0.004803"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:14.187006" elapsed="0.005065"/>
</if>
<kw name="Disconnect From Database" owner="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<status status="PASS" start="2024-11-22T13:13:14.192133" elapsed="0.000120"/>
</kw>
<return>
<value>${json_response}</value>
<status status="PASS" start="2024-11-22T13:13:14.192276" elapsed="0.000019"/>
</return>
<msg time="2024-11-22T13:13:14.192353" level="INFO">${sql_response} = []</msg>
<var>${sql_response}</var>
<arg>select_hero_by_natid</arg>
<arg>${dict}</arg>
<status status="PASS" start="2024-11-22T13:13:14.171819" elapsed="0.020543"/>
</kw>
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T13:13:14.192607" level="INFO">
[]</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T13:13:14.192555" elapsed="0.000069"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T13:13:14.192675" elapsed="0.000067"/>
</kw>
<arg>${sql_response}</arg>
<status status="PASS" start="2024-11-22T13:13:14.192431" elapsed="0.000335"/>
</kw>
<if>
<branch type="IF" condition="${sql_response} != []">
<kw name="Set Variable" owner="BuiltIn">
<var>${sql_response}</var>
<arg>${sql_response}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.192882" elapsed="0.000011"/>
</kw>
<kw name="Log and Log To Console" owner="generic">
<arg>${sql_response}</arg>
<status status="NOT RUN" start="2024-11-22T13:13:14.192950" elapsed="0.000011"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<var>${failure_msg}</var>
<arg>${sql_response['${negative_col_name}']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.193006" elapsed="0.000010"/>
</kw>
<kw name="Log and Log To Console" owner="generic">
<arg>${sql_response}</arg>
<status status="NOT RUN" start="2024-11-22T13:13:14.193065" elapsed="0.000009"/>
</kw>
<kw name="Fail" owner="BuiltIn">
<arg>Record created with invalid column named "${negative_col_name}": ${sql_response['${negative_col_name}']}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.193118" elapsed="0.000009"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:14.192795" elapsed="0.000346"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:14.192787" elapsed="0.000368"/>
</if>
<status status="PASS" start="2024-11-22T13:13:14.166425" elapsed="0.026739"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:14.165331" elapsed="0.027844"/>
</if>
<arg>${negative_driver_test_data_path}</arg>
<arg>Negative</arg>
<arg>natid-158</arg>
<doc>Verify partial uploaded heroes in DB</doc>
<status status="PASS" start="2024-11-22T13:13:14.165014" elapsed="0.028180"/>
</kw>
<kw name="Common Test Teardown" owner="generic" type="TEARDOWN">
<kw name="Capture Page Screenshot" owner="SeleniumLibrary">
<msg time="2024-11-22T13:13:14.193483" level="INFO">Cannot capture screenshot because no browser is open.</msg>
<arg>${OUTPUT_DIR}/screenshots/${TEST NAME}.png</arg>
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<status status="PASS" start="2024-11-22T13:13:14.193410" elapsed="0.000091"/>
</kw>
<kw name="Close Browser" owner="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" start="2024-11-22T13:13:14.193551" elapsed="0.000038"/>
</kw>
<status status="PASS" start="2024-11-22T13:13:14.193299" elapsed="0.000312"/>
</kw>
<status status="PASS" start="2024-11-22T13:13:14.164758" elapsed="0.028881"/>
</test>
<test id="s1-t11" name="Test Case 11 - Partial Data Wrong Format - Positive - positive records after negative will still be created" line="53">
<kw name="Verify Partial Uploaded Data In DB" owner="clerk">
<kw name="Read Csv File To List" owner="CSVLibrary">
<msg time="2024-11-22T13:13:14.194283" level="INFO">${csv_list} = [['${natid}', '${flow}', '${negative_col_name}'], ['natid-150', 'Positive', ''], ['natid-151', 'Positive', ''], ['natid-152', 'Negative', 'name'], ['natid-153', 'Negative', 'gender'], ['natid-154', 'N...</msg>
<var>${csv_list}</var>
<arg>${test_data_path}</arg>
<doc>Read CSV file and return its content as a Python list of tuples.</doc>
<status status="PASS" start="2024-11-22T13:13:14.194126" elapsed="0.000169"/>
</kw>
<if>
<branch type="IF" condition="'${flow}' == 'Positive'">
<for flavor="IN">
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Create Dictionary" owner="BuiltIn">
<var>${dict}</var>
<arg>value_natid=${item[0]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.194824" elapsed="0.000011"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<var>${sql_response}</var>
<arg>select_hero_by_natid</arg>
<arg>${dict}</arg>
<status status="NOT RUN" start="2024-11-22T13:13:14.194917" elapsed="0.000012"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${sql_response} == []</arg>
<arg>Fail</arg>
<arg>${natid} not created in DB</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.195040" elapsed="0.000011"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<var>${sql_response}</var>
<arg>${sql_response}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.195099" elapsed="0.000009"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[0]}</arg>
<arg>${sql_response['natid']}</arg>
<arg>natid</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.195158" elapsed="0.000011"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[1]}</arg>
<arg>${sql_response['name']}</arg>
<arg>name</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.195221" elapsed="0.000010"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[2]}</arg>
<arg>${sql_response['gender']}</arg>
<arg>gender</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.195278" elapsed="0.000009"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[3]}</arg>
<arg>${sql_response['birth_date']}</arg>
<arg>birth_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.195359" elapsed="0.000011"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[4]}</arg>
<arg>${sql_response['death_date']}</arg>
<arg>death_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.195439" elapsed="0.000010"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[5]}</arg>
<arg>${sql_response['salary']}</arg>
<arg>salary</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.195517" elapsed="0.000010"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[6]}</arg>
<arg>${sql_response['tax_paid']}</arg>
<arg>tax_paid</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.195593" elapsed="0.000010"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[7]}</arg>
<arg>${sql_response['brownie_points']}</arg>
<arg>brownie_points</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.195667" elapsed="0.000010"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:14.194476" elapsed="0.001218"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:14.194469" elapsed="0.001239"/>
</if>
<var name="${item}">['${natid}', '${flow}', '${negative_col_name}']</var>
<status status="PASS" start="2024-11-22T13:13:14.194453" elapsed="0.001265"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Create Dictionary" owner="BuiltIn">
<var>${dict}</var>
<arg>value_natid=${item[0]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.196287" elapsed="0.000011"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<var>${sql_response}</var>
<arg>select_hero_by_natid</arg>
<arg>${dict}</arg>
<status status="NOT RUN" start="2024-11-22T13:13:14.196379" elapsed="0.000011"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${sql_response} == []</arg>
<arg>Fail</arg>
<arg>${natid} not created in DB</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.196441" elapsed="0.000009"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<var>${sql_response}</var>
<arg>${sql_response}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.196518" elapsed="0.000011"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[0]}</arg>
<arg>${sql_response['natid']}</arg>
<arg>natid</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.196578" elapsed="0.000010"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[1]}</arg>
<arg>${sql_response['name']}</arg>
<arg>name</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.196636" elapsed="0.000011"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[2]}</arg>
<arg>${sql_response['gender']}</arg>
<arg>gender</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.196693" elapsed="0.000009"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[3]}</arg>
<arg>${sql_response['birth_date']}</arg>
<arg>birth_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.196779" elapsed="0.000011"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[4]}</arg>
<arg>${sql_response['death_date']}</arg>
<arg>death_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.196856" elapsed="0.000010"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[5]}</arg>
<arg>${sql_response['salary']}</arg>
<arg>salary</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.196935" elapsed="0.000011"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[6]}</arg>
<arg>${sql_response['tax_paid']}</arg>
<arg>tax_paid</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.197026" elapsed="0.000011"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[7]}</arg>
<arg>${sql_response['brownie_points']}</arg>
<arg>brownie_points</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.197106" elapsed="0.000010"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:14.195916" elapsed="0.001216"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:14.195910" elapsed="0.001236"/>
</if>
<var name="${item}">['natid-150', 'Positive', '']</var>
<status status="PASS" start="2024-11-22T13:13:14.195895" elapsed="0.001261"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Create Dictionary" owner="BuiltIn">
<var>${dict}</var>
<arg>value_natid=${item[0]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.197550" elapsed="0.000010"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<var>${sql_response}</var>
<arg>select_hero_by_natid</arg>
<arg>${dict}</arg>
<status status="NOT RUN" start="2024-11-22T13:13:14.197635" elapsed="0.000011"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${sql_response} == []</arg>
<arg>Fail</arg>
<arg>${natid} not created in DB</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.197697" elapsed="0.000009"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<var>${sql_response}</var>
<arg>${sql_response}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.197752" elapsed="0.000009"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[0]}</arg>
<arg>${sql_response['natid']}</arg>
<arg>natid</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.197807" elapsed="0.000010"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[1]}</arg>
<arg>${sql_response['name']}</arg>
<arg>name</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.197862" elapsed="0.000011"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[2]}</arg>
<arg>${sql_response['gender']}</arg>
<arg>gender</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.197918" elapsed="0.000010"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[3]}</arg>
<arg>${sql_response['birth_date']}</arg>
<arg>birth_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.198048" elapsed="0.000012"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[4]}</arg>
<arg>${sql_response['death_date']}</arg>
<arg>death_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.198124" elapsed="0.000010"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[5]}</arg>
<arg>${sql_response['salary']}</arg>
<arg>salary</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.198199" elapsed="0.000009"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[6]}</arg>
<arg>${sql_response['tax_paid']}</arg>
<arg>tax_paid</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.198273" elapsed="0.000010"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[7]}</arg>
<arg>${sql_response['brownie_points']}</arg>
<arg>brownie_points</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.198346" elapsed="0.000010"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:14.197238" elapsed="0.001134"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:14.197232" elapsed="0.001154"/>
</if>
<var name="${item}">['natid-151', 'Positive', '']</var>
<status status="PASS" start="2024-11-22T13:13:14.197218" elapsed="0.001177"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Create Dictionary" owner="BuiltIn">
<var>${dict}</var>
<arg>value_natid=${item[0]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.198895" elapsed="0.000014"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<var>${sql_response}</var>
<arg>select_hero_by_natid</arg>
<arg>${dict}</arg>
<status status="NOT RUN" start="2024-11-22T13:13:14.199000" elapsed="0.000012"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${sql_response} == []</arg>
<arg>Fail</arg>
<arg>${natid} not created in DB</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.199069" elapsed="0.000010"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<var>${sql_response}</var>
<arg>${sql_response}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.199139" elapsed="0.000010"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[0]}</arg>
<arg>${sql_response['natid']}</arg>
<arg>natid</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.199199" elapsed="0.000011"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[1]}</arg>
<arg>${sql_response['name']}</arg>
<arg>name</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.199258" elapsed="0.000011"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[2]}</arg>
<arg>${sql_response['gender']}</arg>
<arg>gender</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.199318" elapsed="0.000011"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[3]}</arg>
<arg>${sql_response['birth_date']}</arg>
<arg>birth_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.199496" elapsed="0.000012"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[4]}</arg>
<arg>${sql_response['death_date']}</arg>
<arg>death_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.199583" elapsed="0.000011"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[5]}</arg>
<arg>${sql_response['salary']}</arg>
<arg>salary</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.199675" elapsed="0.000010"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[6]}</arg>
<arg>${sql_response['tax_paid']}</arg>
<arg>tax_paid</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.199750" elapsed="0.000010"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[7]}</arg>
<arg>${sql_response['brownie_points']}</arg>
<arg>brownie_points</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.199824" elapsed="0.000010"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:14.198482" elapsed="0.001368"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:14.198477" elapsed="0.001388"/>
</if>
<var name="${item}">['natid-152', 'Negative', 'name']</var>
<status status="PASS" start="2024-11-22T13:13:14.198463" elapsed="0.001412"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Create Dictionary" owner="BuiltIn">
<var>${dict}</var>
<arg>value_natid=${item[0]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.200314" elapsed="0.000013"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<var>${sql_response}</var>
<arg>select_hero_by_natid</arg>
<arg>${dict}</arg>
<status status="NOT RUN" start="2024-11-22T13:13:14.200402" elapsed="0.000039"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${sql_response} == []</arg>
<arg>Fail</arg>
<arg>${natid} not created in DB</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.200578" elapsed="0.000021"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<var>${sql_response}</var>
<arg>${sql_response}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.200783" elapsed="0.000014"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[0]}</arg>
<arg>${sql_response['natid']}</arg>
<arg>natid</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.200847" elapsed="0.000010"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[1]}</arg>
<arg>${sql_response['name']}</arg>
<arg>name</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.200903" elapsed="0.000029"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[2]}</arg>
<arg>${sql_response['gender']}</arg>
<arg>gender</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.201001" elapsed="0.000012"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[3]}</arg>
<arg>${sql_response['birth_date']}</arg>
<arg>birth_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.201086" elapsed="0.000011"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[4]}</arg>
<arg>${sql_response['death_date']}</arg>
<arg>death_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.201166" elapsed="0.000010"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[5]}</arg>
<arg>${sql_response['salary']}</arg>
<arg>salary</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.201242" elapsed="0.000011"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[6]}</arg>
<arg>${sql_response['tax_paid']}</arg>
<arg>tax_paid</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.201338" elapsed="0.000011"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[7]}</arg>
<arg>${sql_response['brownie_points']}</arg>
<arg>brownie_points</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.201418" elapsed="0.000010"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:14.199957" elapsed="0.001488"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:14.199952" elapsed="0.001553"/>
</if>
<var name="${item}">['natid-153', 'Negative', 'gender']</var>
<status status="PASS" start="2024-11-22T13:13:14.199937" elapsed="0.001579"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Create Dictionary" owner="BuiltIn">
<var>${dict}</var>
<arg>value_natid=${item[0]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.201879" elapsed="0.000011"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<var>${sql_response}</var>
<arg>select_hero_by_natid</arg>
<arg>${dict}</arg>
<status status="NOT RUN" start="2024-11-22T13:13:14.201962" elapsed="0.000012"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${sql_response} == []</arg>
<arg>Fail</arg>
<arg>${natid} not created in DB</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.202026" elapsed="0.000010"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<var>${sql_response}</var>
<arg>${sql_response}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.202083" elapsed="0.000009"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[0]}</arg>
<arg>${sql_response['natid']}</arg>
<arg>natid</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.202139" elapsed="0.000010"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[1]}</arg>
<arg>${sql_response['name']}</arg>
<arg>name</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.202195" elapsed="0.000011"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[2]}</arg>
<arg>${sql_response['gender']}</arg>
<arg>gender</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.202254" elapsed="0.000009"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[3]}</arg>
<arg>${sql_response['birth_date']}</arg>
<arg>birth_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.202325" elapsed="0.000010"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[4]}</arg>
<arg>${sql_response['death_date']}</arg>
<arg>death_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.202399" elapsed="0.000009"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[5]}</arg>
<arg>${sql_response['salary']}</arg>
<arg>salary</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.202471" elapsed="0.000010"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[6]}</arg>
<arg>${sql_response['tax_paid']}</arg>
<arg>tax_paid</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.202543" elapsed="0.000010"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[7]}</arg>
<arg>${sql_response['brownie_points']}</arg>
<arg>brownie_points</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.202616" elapsed="0.000010"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:14.201595" elapsed="0.001047"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:14.201590" elapsed="0.001066"/>
</if>
<var name="${item}">['natid-154', 'Negative', 'birth_date']</var>
<status status="PASS" start="2024-11-22T13:13:14.201576" elapsed="0.001088"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Create Dictionary" owner="BuiltIn">
<var>${dict}</var>
<arg>value_natid=${item[0]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.203215" elapsed="0.000014"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<var>${sql_response}</var>
<arg>select_hero_by_natid</arg>
<arg>${dict}</arg>
<status status="NOT RUN" start="2024-11-22T13:13:14.203318" elapsed="0.000010"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${sql_response} == []</arg>
<arg>Fail</arg>
<arg>${natid} not created in DB</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.203383" elapsed="0.000010"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<var>${sql_response}</var>
<arg>${sql_response}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.203442" elapsed="0.000009"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[0]}</arg>
<arg>${sql_response['natid']}</arg>
<arg>natid</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.203498" elapsed="0.000009"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[1]}</arg>
<arg>${sql_response['name']}</arg>
<arg>name</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.203555" elapsed="0.000009"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[2]}</arg>
<arg>${sql_response['gender']}</arg>
<arg>gender</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.203609" elapsed="0.000009"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[3]}</arg>
<arg>${sql_response['birth_date']}</arg>
<arg>birth_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.203681" elapsed="0.000011"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[4]}</arg>
<arg>${sql_response['death_date']}</arg>
<arg>death_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.203762" elapsed="0.000012"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[5]}</arg>
<arg>${sql_response['salary']}</arg>
<arg>salary</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.203838" elapsed="0.000010"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[6]}</arg>
<arg>${sql_response['tax_paid']}</arg>
<arg>tax_paid</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.203911" elapsed="0.000014"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[7]}</arg>
<arg>${sql_response['brownie_points']}</arg>
<arg>brownie_points</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.203999" elapsed="0.000010"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:14.202743" elapsed="0.001282"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:14.202737" elapsed="0.001301"/>
</if>
<var name="${item}">['natid-155', 'Negative', 'salary']</var>
<status status="PASS" start="2024-11-22T13:13:14.202723" elapsed="0.001324"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Create Dictionary" owner="BuiltIn">
<var>${dict}</var>
<arg>value_natid=${item[0]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.204417" elapsed="0.000010"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<var>${sql_response}</var>
<arg>select_hero_by_natid</arg>
<arg>${dict}</arg>
<status status="NOT RUN" start="2024-11-22T13:13:14.204506" elapsed="0.000012"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${sql_response} == []</arg>
<arg>Fail</arg>
<arg>${natid} not created in DB</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.204568" elapsed="0.000009"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<var>${sql_response}</var>
<arg>${sql_response}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.204628" elapsed="0.000010"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[0]}</arg>
<arg>${sql_response['natid']}</arg>
<arg>natid</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.204734" elapsed="0.000013"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[1]}</arg>
<arg>${sql_response['name']}</arg>
<arg>name</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.204798" elapsed="0.000011"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[2]}</arg>
<arg>${sql_response['gender']}</arg>
<arg>gender</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.204853" elapsed="0.000009"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[3]}</arg>
<arg>${sql_response['birth_date']}</arg>
<arg>birth_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.204927" elapsed="0.000013"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[4]}</arg>
<arg>${sql_response['death_date']}</arg>
<arg>death_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.205004" elapsed="0.000015"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[5]}</arg>
<arg>${sql_response['salary']}</arg>
<arg>salary</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.205084" elapsed="0.000010"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[6]}</arg>
<arg>${sql_response['tax_paid']}</arg>
<arg>tax_paid</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.205160" elapsed="0.000012"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[7]}</arg>
<arg>${sql_response['brownie_points']}</arg>
<arg>brownie_points</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.205252" elapsed="0.000010"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:14.204130" elapsed="0.001148"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:14.204124" elapsed="0.001168"/>
</if>
<var name="${item}">['natid-156', 'Negative', 'tax_paid']</var>
<status status="PASS" start="2024-11-22T13:13:14.204110" elapsed="0.001190"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Create Dictionary" owner="BuiltIn">
<var>${dict}</var>
<arg>value_natid=${item[0]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.205644" elapsed="0.000010"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<var>${sql_response}</var>
<arg>select_hero_by_natid</arg>
<arg>${dict}</arg>
<status status="NOT RUN" start="2024-11-22T13:13:14.205725" elapsed="0.000010"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${sql_response} == []</arg>
<arg>Fail</arg>
<arg>${natid} not created in DB</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.205783" elapsed="0.000009"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<var>${sql_response}</var>
<arg>${sql_response}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.205834" elapsed="0.000010"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[0]}</arg>
<arg>${sql_response['natid']}</arg>
<arg>natid</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.205889" elapsed="0.000009"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[1]}</arg>
<arg>${sql_response['name']}</arg>
<arg>name</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.205940" elapsed="0.000010"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[2]}</arg>
<arg>${sql_response['gender']}</arg>
<arg>gender</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.205994" elapsed="0.000009"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[3]}</arg>
<arg>${sql_response['birth_date']}</arg>
<arg>birth_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.206064" elapsed="0.000010"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[4]}</arg>
<arg>${sql_response['death_date']}</arg>
<arg>death_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.206210" elapsed="0.000011"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[5]}</arg>
<arg>${sql_response['salary']}</arg>
<arg>salary</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.206284" elapsed="0.000011"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[6]}</arg>
<arg>${sql_response['tax_paid']}</arg>
<arg>tax_paid</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.206358" elapsed="0.000010"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[7]}</arg>
<arg>${sql_response['brownie_points']}</arg>
<arg>brownie_points</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.206430" elapsed="0.000010"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:14.205383" elapsed="0.001073"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:14.205378" elapsed="0.001092"/>
</if>
<var name="${item}">['natid-157', 'Positive', '']</var>
<status status="PASS" start="2024-11-22T13:13:14.205364" elapsed="0.001115"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Create Dictionary" owner="BuiltIn">
<var>${dict}</var>
<arg>value_natid=${item[0]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.206831" elapsed="0.000010"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<var>${sql_response}</var>
<arg>select_hero_by_natid</arg>
<arg>${dict}</arg>
<status status="NOT RUN" start="2024-11-22T13:13:14.206910" elapsed="0.000015"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${sql_response} == []</arg>
<arg>Fail</arg>
<arg>${natid} not created in DB</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.206978" elapsed="0.000009"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<var>${sql_response}</var>
<arg>${sql_response}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.207039" elapsed="0.000012"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[0]}</arg>
<arg>${sql_response['natid']}</arg>
<arg>natid</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.207105" elapsed="0.000010"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[1]}</arg>
<arg>${sql_response['name']}</arg>
<arg>name</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.207168" elapsed="0.000010"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[2]}</arg>
<arg>${sql_response['gender']}</arg>
<arg>gender</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.207224" elapsed="0.000009"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[3]}</arg>
<arg>${sql_response['birth_date']}</arg>
<arg>birth_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.207302" elapsed="0.000012"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[4]}</arg>
<arg>${sql_response['death_date']}</arg>
<arg>death_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.207394" elapsed="0.000009"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[5]}</arg>
<arg>${sql_response['salary']}</arg>
<arg>salary</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.207485" elapsed="0.000014"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[6]}</arg>
<arg>${sql_response['tax_paid']}</arg>
<arg>tax_paid</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.207617" elapsed="0.000012"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[7]}</arg>
<arg>${sql_response['brownie_points']}</arg>
<arg>brownie_points</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.207697" elapsed="0.000011"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:14.206555" elapsed="0.001169"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:14.206550" elapsed="0.001191"/>
</if>
<var name="${item}">['natid-158', 'Negative', 'gender']</var>
<status status="PASS" start="2024-11-22T13:13:14.206536" elapsed="0.001217"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2024-11-22T13:13:14.208422" level="INFO">${dict} = {'value_natid': 'natid-159'}</msg>
<var>${dict}</var>
<arg>value_natid=${item[0]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2024-11-22T13:13:14.208104" elapsed="0.000331"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<kw name="Connect To Database" owner="DatabaseLibrary">
<msg time="2024-11-22T13:13:14.208798" level="INFO">Looking for configuration file: 'resources/db.cfg'</msg>
<msg time="2024-11-22T13:13:14.208824" level="INFO">Configuration file doesn't exist</msg>
<msg time="2024-11-22T13:13:14.208903" level="INFO">Connect to DB using : mysql.connector.connect(database='testdb', user='user', password=***, host='localhost', port=3306)</msg>
<arg>${DB_API}</arg>
<arg>${DB_NAME}</arg>
<arg>${DB_USER}</arg>
<arg>${DB_PASSWORD}</arg>
<arg>${DB_HOST}</arg>
<arg>${DB_PORT}</arg>
<doc>Creates a database connection using the DB API 2.0 ``db_module`` and the parameters provided.
Along with listed commonly used arguments (`db_name`, `db_host` etc.)
you can set any other DB module specific parameters as key/value pairs.</doc>
<status status="PASS" start="2024-11-22T13:13:14.208666" elapsed="0.011341"/>
</kw>
<kw name="Update SQL Queries With Arguments Dictionary" owner="sql-helper">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-11-22T13:13:14.220597" level="INFO" html="true">Getting file '&lt;a href="file:///Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/object-repo/sql-queries/select_hero_by_natid.sql"&gt;/Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/object-repo/sql-queries/select_hero_by_natid.sql&lt;/a&gt;'.</msg>
<msg time="2024-11-22T13:13:14.220679" level="INFO">${sql_query} = SELECT *
FROM testdb.working_class_heroes
WHERE natid='value_natid';</msg>
<var>${sql_query}</var>
<arg>./object-repo/sql-queries/${sql_file_name}.sql</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-11-22T13:13:14.220454" elapsed="0.000235"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2024-11-22T13:13:14.221149" level="INFO">Argument types are:
&lt;class 'robot.utils.dotdict.DotDict'&gt;
&lt;class 'str'&gt;</msg>
<msg time="2024-11-22T13:13:14.221203" level="FAIL">{'value_natid': 'natid-159'} != </msg>
<arg>${args_dict}</arg>
<arg>${EMPTY}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="FAIL" start="2024-11-22T13:13:14.220826" elapsed="0.000422">{'value_natid': 'natid-159'} != </status>
</kw>
<msg time="2024-11-22T13:13:14.221299" level="INFO">${empty_status} = False</msg>
<var>${empty_status}</var>
<arg>Should Be Equal As Strings</arg>
<arg>${args_dict}</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-11-22T13:13:14.220752" elapsed="0.000557"/>
</kw>
<if>
<branch type="IF" condition="'${empty_status}' == '${False}'">
<if>
<branch type="IF" condition="${args_dict}">
<for flavor="IN">
<iter>
<kw name="Convert To String" owner="BuiltIn">
<msg time="2024-11-22T13:13:14.221786" level="INFO">${args_key_str} = value_natid</msg>
<var>${args_key_str}</var>
<arg>${args_key}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="PASS" start="2024-11-22T13:13:14.221706" elapsed="0.000094"/>
</kw>
<kw name="Convert To String" owner="BuiltIn">
<msg time="2024-11-22T13:13:14.221928" level="INFO">${args_value_str} = natid-159</msg>
<var>${args_value_str}</var>
<arg>${args_dict}[${args_key_str}]</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="PASS" start="2024-11-22T13:13:14.221854" elapsed="0.000083"/>
</kw>
<kw name="Replace String" owner="String">
<msg time="2024-11-22T13:13:14.222064" level="INFO">${sql_query} = SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-159';</msg>
<var>${sql_query}</var>
<arg>${sql_query}</arg>
<arg>${args_key_str}</arg>
<arg>${args_value_str}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="PASS" start="2024-11-22T13:13:14.221988" elapsed="0.000086"/>
</kw>
<var name="${args_key}">value_natid</var>
<status status="PASS" start="2024-11-22T13:13:14.221647" elapsed="0.000457"/>
</iter>
<var>${args_key}</var>
<value>@{args_dict}</value>
<status status="PASS" start="2024-11-22T13:13:14.221580" elapsed="0.000544"/>
</for>
<status status="PASS" start="2024-11-22T13:13:14.221541" elapsed="0.000603"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:14.221412" elapsed="0.000746"/>
</if>
<status status="PASS" start="2024-11-22T13:13:14.221348" elapsed="0.000820"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:14.221337" elapsed="0.000841"/>
</if>
<return>
<value>${sql_query}</value>
<status status="PASS" start="2024-11-22T13:13:14.222193" elapsed="0.000020"/>
</return>
<msg time="2024-11-22T13:13:14.222268" level="INFO">${updated_sql_query} = SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-159';</msg>
<var>${updated_sql_query}</var>
<arg>${sql_file_name}</arg>
<arg>${args_dict}</arg>
<status status="PASS" start="2024-11-22T13:13:14.220274" elapsed="0.002004"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-11-22T13:13:14.222599" level="FAIL">'SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-159';' does not contain 'delete'</msg>
<arg>${updated_sql_query}</arg>
<arg>DELETE</arg>
<arg>ignore_case=${True}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-11-22T13:13:14.222473" elapsed="0.000157">'SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-159';' does not contain 'delete'</status>
</kw>
<msg time="2024-11-22T13:13:14.222674" level="INFO">${delete_status} = False</msg>
<var>${delete_status}</var>
<arg>Should Contain</arg>
<arg>${updated_sql_query}</arg>
<arg>DELETE</arg>
<arg>ignore_case=${True}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-11-22T13:13:14.222336" elapsed="0.000347"/>
</kw>
<if>
<branch type="IF" condition="'${delete_status}' == '${True}'">
<kw name="Execute Sql String" owner="DatabaseLibrary">
<var>${json_response}</var>
<arg>${updated_sql_query}</arg>
<doc>Executes the ``sql_string`` as a single SQL command.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.222810" elapsed="0.000010"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:14.222717" elapsed="0.000120"/>
</branch>
<branch type="ELSE">
<kw name="Query" owner="DatabaseLibrary">
<msg time="2024-11-22T13:13:14.223898" level="INFO" html="true">Executing sql:&lt;br&gt;&lt;code style="font-weight: bold;"&gt;SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-159';&lt;/code&gt;</msg>
<msg time="2024-11-22T13:13:14.225742" level="INFO" html="true">&lt;div style="max-width: 100%; overflow-x: auto;"&gt;&lt;table style="width: auto; border-collapse: collapse; border: 2px solid rgb(140 140 140)"&gt;&lt;caption style="text-align: left; font-weight: bold; padding: 5px;"&gt;Query returned 0 rows&lt;/caption&gt;&lt;tr&gt;&lt;th scope="col" style="background-color: #d6ecd4; border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;Row&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;id&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;created_at&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;create_by&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;updated_at&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;updated_by&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;birth_date&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;brownie_points&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;death_date&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;gender&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;name&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;natid&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;salary&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;tax_paid&lt;/th&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;</msg>
<msg time="2024-11-22T13:13:14.226732" level="INFO">${json_response} = []</msg>
<var>${json_response}</var>
<arg>${updated_sql_query}</arg>
<arg>return_dict=${True}</arg>
<doc>Runs a query with the ``select_statement`` and returns the result as list of rows.
The type of row values depends on the database module -
usually they are tuples or tuple-like objects.</doc>
<status status="PASS" start="2024-11-22T13:13:14.222913" elapsed="0.003832"/>
</kw>
<status status="PASS" start="2024-11-22T13:13:14.222851" elapsed="0.003923"/>
</branch>
<status status="PASS" start="2024-11-22T13:13:14.222709" elapsed="0.004080"/>
</if>
<kw name="Disconnect From Database" owner="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<status status="PASS" start="2024-11-22T13:13:14.226847" elapsed="0.000108"/>
</kw>
<return>
<value>${json_response}</value>
<status status="PASS" start="2024-11-22T13:13:14.226978" elapsed="0.000018"/>
</return>
<msg time="2024-11-22T13:13:14.227052" level="INFO">${sql_response} = []</msg>
<var>${sql_response}</var>
<arg>select_hero_by_natid</arg>
<arg>${dict}</arg>
<status status="PASS" start="2024-11-22T13:13:14.208510" elapsed="0.018551"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Fail" owner="BuiltIn">
<msg time="2024-11-22T13:13:14.227351" level="FAIL">natid-159 not created in DB</msg>
<arg>${natid} not created in DB</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="FAIL" start="2024-11-22T13:13:14.227257" elapsed="0.000120">natid-159 not created in DB</status>
</kw>
<arg>${sql_response} == []</arg>
<arg>Fail</arg>
<arg>${natid} not created in DB</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="FAIL" start="2024-11-22T13:13:14.227123" elapsed="0.000280">natid-159 not created in DB</status>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<var>${sql_response}</var>
<arg>${sql_response}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.227456" elapsed="0.000010"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[0]}</arg>
<arg>${sql_response['natid']}</arg>
<arg>natid</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.227525" elapsed="0.000011"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[1]}</arg>
<arg>${sql_response['name']}</arg>
<arg>name</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.227583" elapsed="0.000011"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[2]}</arg>
<arg>${sql_response['gender']}</arg>
<arg>gender</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.227639" elapsed="0.000010"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[3]}</arg>
<arg>${sql_response['birth_date']}</arg>
<arg>birth_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.227719" elapsed="0.000010"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[4]}</arg>
<arg>${sql_response['death_date']}</arg>
<arg>death_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.227794" elapsed="0.000009"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[5]}</arg>
<arg>${sql_response['salary']}</arg>
<arg>salary</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.227868" elapsed="0.000010"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[6]}</arg>
<arg>${sql_response['tax_paid']}</arg>
<arg>tax_paid</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.227949" elapsed="0.000014"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[7]}</arg>
<arg>${sql_response['brownie_points']}</arg>
<arg>brownie_points</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.228029" elapsed="0.000010"/>
</kw>
<status status="FAIL" start="2024-11-22T13:13:14.207830" elapsed="0.020238">natid-159 not created in DB</status>
</branch>
<status status="FAIL" start="2024-11-22T13:13:14.207825" elapsed="0.020260">natid-159 not created in DB</status>
</if>
<var name="${item}">['natid-159', 'Positive', '']</var>
<status status="FAIL" start="2024-11-22T13:13:14.207812" elapsed="0.020296">natid-159 not created in DB</status>
</iter>
<var>${item}</var>
<value>@{csv_list}</value>
<status status="FAIL" start="2024-11-22T13:13:14.194376" elapsed="0.033761">natid-159 not created in DB</status>
</for>
<status status="FAIL" start="2024-11-22T13:13:14.194327" elapsed="0.033842">natid-159 not created in DB</status>
</branch>
<branch type="ELSE">
<for flavor="IN">
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Set Variable" owner="BuiltIn">
<var>${negative_col_name}</var>
<arg>${item[2]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.228305" elapsed="0.000010"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:14.228259" elapsed="0.000074"/>
</branch>
<status status="NOT RUN" start="2024-11-22T13:13:14.228254" elapsed="0.000095"/>
</if>
<var name="${item}"/>
<status status="NOT RUN" start="2024-11-22T13:13:14.228240" elapsed="0.000118"/>
</iter>
<var>${item}</var>
<value>@{csv_list}</value>
<status status="NOT RUN" start="2024-11-22T13:13:14.228207" elapsed="0.000164"/>
</for>
<kw name="Create Dictionary" owner="BuiltIn">
<var>${dict}</var>
<arg>value_natid=${natid}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.228490" elapsed="0.000010"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<var>${sql_response}</var>
<arg>select_hero_by_natid</arg>
<arg>${dict}</arg>
<status status="NOT RUN" start="2024-11-22T13:13:14.228580" elapsed="0.000011"/>
</kw>
<kw name="Log and Log To Console" owner="generic">
<arg>${sql_response}</arg>
<status status="NOT RUN" start="2024-11-22T13:13:14.228647" elapsed="0.000009"/>
</kw>
<if>
<branch type="IF" condition="${sql_response} != []">
<kw name="Set Variable" owner="BuiltIn">
<var>${sql_response}</var>
<arg>${sql_response}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.228722" elapsed="0.000009"/>
</kw>
<kw name="Log and Log To Console" owner="generic">
<arg>${sql_response}</arg>
<status status="NOT RUN" start="2024-11-22T13:13:14.228778" elapsed="0.000009"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<var>${failure_msg}</var>
<arg>${sql_response['${negative_col_name}']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.228830" elapsed="0.000009"/>
</kw>
<kw name="Log and Log To Console" owner="generic">
<arg>${sql_response}</arg>
<status status="NOT RUN" start="2024-11-22T13:13:14.228885" elapsed="0.000009"/>
</kw>
<kw name="Fail" owner="BuiltIn">
<arg>Record created with invalid column named "${negative_col_name}": ${sql_response['${negative_col_name}']}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" start="2024-11-22T13:13:14.228935" elapsed="0.000008"/>
</kw>
<status status="NOT RUN" start="2024-11-22T13:13:14.228679" elapsed="0.000278"/>
</branch>
<status status="NOT RUN" start="2024-11-22T13:13:14.228673" elapsed="0.000296"/>
</if>
<status status="NOT RUN" start="2024-11-22T13:13:14.228184" elapsed="0.000794"/>
</branch>
<status status="FAIL" start="2024-11-22T13:13:14.194319" elapsed="0.034670">natid-159 not created in DB</status>
</if>
<arg>${negative_driver_test_data_path}</arg>
<arg>Positive</arg>
<arg>natid-159</arg>
<doc>Verify partial uploaded heroes in DB</doc>
<status status="FAIL" start="2024-11-22T13:13:14.194002" elapsed="0.035027">natid-159 not created in DB</status>
</kw>
<kw name="Common Test Teardown" owner="generic" type="TEARDOWN">
<kw name="Capture Page Screenshot" owner="SeleniumLibrary">
<msg time="2024-11-22T13:13:14.229343" level="INFO">Cannot capture screenshot because no browser is open.</msg>
<arg>${OUTPUT_DIR}/screenshots/${TEST NAME}.png</arg>
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<status status="PASS" start="2024-11-22T13:13:14.229268" elapsed="0.000094"/>
</kw>
<kw name="Close Browser" owner="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" start="2024-11-22T13:13:14.229412" elapsed="0.000047"/>
</kw>
<status status="PASS" start="2024-11-22T13:13:14.229153" elapsed="0.000332"/>
</kw>
<status status="FAIL" start="2024-11-22T13:13:14.193730" elapsed="0.035803">natid-159 not created in DB</status>
</test>
<doc>Test Suite for User Stories 2 Clerk Dashboard</doc>
<status status="FAIL" start="2024-11-22T13:13:00.831941" elapsed="13.397933"/>
</suite>
<statistics>
<total>
<stat pass="4" fail="7" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="4" fail="7" skip="0" id="s1" name="US2-Create-Hero-Clerk-Dashboard">US2-Create-Hero-Clerk-Dashboard</stat>
</suite>
</statistics>
<errors>
<msg time="2024-11-22T13:13:00.847708" level="WARN">Error in file '/Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/keywords/generic.robot' on line 38: The '[Return]' setting is deprecated. Use the 'RETURN' statement instead.</msg>
<msg time="2024-11-22T13:13:00.909103" level="WARN">Error in file '/Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/keywords/login.robot' on line 19: The '[Return]' setting is deprecated. Use the 'RETURN' statement instead.</msg>
<msg time="2024-11-22T13:13:00.910692" level="WARN">Error in file '/Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/keywords/sql-helper.robot' on line 26: The '[Return]' setting is deprecated. Use the 'RETURN' statement instead.</msg>
<msg time="2024-11-22T13:13:00.910799" level="WARN">Error in file '/Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/keywords/sql-helper.robot' on line 41: The '[Return]' setting is deprecated. Use the 'RETURN' statement instead.</msg>
</errors>
</robot>
