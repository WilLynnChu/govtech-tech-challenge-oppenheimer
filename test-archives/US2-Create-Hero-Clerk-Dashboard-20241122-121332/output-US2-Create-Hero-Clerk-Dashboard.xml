<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 7.1.1 (Python 3.11.2 on darwin)" generated="2024-11-22T12:13:32.460377" rpa="false" schemaversion="5">
<suite id="s1" name="US2-Create-Hero-Clerk-Dashboard" source="/Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/test-cases/US2-Create-Hero-Clerk-Dashboard.robot">
<kw name="Suite Setup Clean Reports" owner="generic" type="SETUP">
<kw name="Create Directory" owner="OperatingSystem">
<msg time="2024-11-22T12:13:32.549763" level="INFO" html="true">Directory '&lt;a href="file:///Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/reports"&gt;/Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/reports&lt;/a&gt;' already exists.</msg>
<arg>${REPORT_DIR}</arg>
<doc>Creates the specified directory.</doc>
<status status="PASS" start="2024-11-22T12:13:32.549679" elapsed="0.000111"/>
</kw>
<kw name="Create Directory" owner="OperatingSystem">
<msg time="2024-11-22T12:13:32.549983" level="INFO" html="true">Created directory '&lt;a href="file:///Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/reports/screenshots"&gt;/Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/reports/screenshots&lt;/a&gt;'.</msg>
<arg>${SCREENSHOT_DIR}</arg>
<doc>Creates the specified directory.</doc>
<status status="PASS" start="2024-11-22T12:13:32.549865" elapsed="0.000139"/>
</kw>
<kw name="Create Directory" owner="OperatingSystem">
<msg time="2024-11-22T12:13:32.550140" level="INFO" html="true">Created directory '&lt;a href="file:///Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/reports/downloads"&gt;/Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/reports/downloads&lt;/a&gt;'.</msg>
<arg>${DOWNLOAD_DIR}</arg>
<doc>Creates the specified directory.</doc>
<status status="PASS" start="2024-11-22T12:13:32.550056" elapsed="0.000104"/>
</kw>
<kw name="Empty Directory" owner="OperatingSystem">
<msg time="2024-11-22T12:13:32.550273" level="INFO" html="true">Listing contents of directory '&lt;a href="file:///Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/reports/screenshots"&gt;/Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/reports/screenshots&lt;/a&gt;'.</msg>
<msg time="2024-11-22T12:13:32.550307" level="INFO" html="true">Emptied directory '&lt;a href="file:///Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/reports/screenshots"&gt;/Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/reports/screenshots&lt;/a&gt;'.</msg>
<arg>${SCREENSHOT_DIR}</arg>
<doc>Deletes all the content from the given directory.</doc>
<status status="PASS" start="2024-11-22T12:13:32.550212" elapsed="0.000113"/>
</kw>
<kw name="Empty Directory" owner="OperatingSystem">
<msg time="2024-11-22T12:13:32.550420" level="INFO" html="true">Listing contents of directory '&lt;a href="file:///Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/reports/downloads"&gt;/Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/reports/downloads&lt;/a&gt;'.</msg>
<msg time="2024-11-22T12:13:32.550447" level="INFO" html="true">Emptied directory '&lt;a href="file:///Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/reports/downloads"&gt;/Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/reports/downloads&lt;/a&gt;'.</msg>
<arg>${DOWNLOAD_DIR}</arg>
<doc>Deletes all the content from the given directory.</doc>
<status status="PASS" start="2024-11-22T12:13:32.550372" elapsed="0.000091"/>
</kw>
<kw name="Set Screenshot Directory" owner="SeleniumLibrary">
<arg>${SCREENSHOT_DIR}</arg>
<doc>Sets the directory for captured screenshots.</doc>
<status status="PASS" start="2024-11-22T12:13:32.550515" elapsed="0.000086"/>
</kw>
<status status="PASS" start="2024-11-22T12:13:32.549279" elapsed="0.001349"/>
</kw>
<test id="s1-t1" name="Clerk Dashboard Create Heroes Upload CSV File - Positive" line="15">
<kw name="Open Browser And Navigate To Login Page" owner="generic">
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-11-22T12:13:32.551033" level="INFO">${chrome_options} = &lt;selenium.webdriver.chrome.options.Options object at 0x1067448d0&gt;</msg>
<var>${chrome_options}</var>
<arg>sys.modules['selenium.webdriver'].ChromeOptions()</arg>
<arg>sys, selenium.webdriver</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-11-22T12:13:32.550933" elapsed="0.000113"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2024-11-22T12:13:32.551223" level="INFO">${prefs} = {'download.default_directory': '/Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/reports/downloads'}</msg>
<var>${prefs}</var>
<arg>download.default_directory=${DOWNLOAD_DIR}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2024-11-22T12:13:32.551111" elapsed="0.000123"/>
</kw>
<kw name="Call Method" owner="BuiltIn">
<arg>${chrome_options}</arg>
<arg>add_experimental_option</arg>
<arg>prefs</arg>
<arg>${prefs}</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="PASS" start="2024-11-22T12:13:32.551284" elapsed="0.000055"/>
</kw>
<kw name="Create Webdriver" owner="SeleniumLibrary">
<msg time="2024-11-22T12:13:32.551460" level="INFO">Creating an instance of the Chrome WebDriver.</msg>
<arg>${execution_profile_chrome_name}</arg>
<arg>options=${chrome_options}</arg>
<doc>Creates an instance of Selenium WebDriver.</doc>
<status status="PASS" start="2024-11-22T12:13:32.551389" elapsed="3.717846"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Navigating to ${login_page}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T12:13:36.270024" elapsed="0.003058"/>
</kw>
<kw name="Go To" owner="SeleniumLibrary">
<msg time="2024-11-22T12:13:36.273420" level="INFO">Opening url 'http://localhost:9997/login'</msg>
<arg>${login_page}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<status status="PASS" start="2024-11-22T12:13:36.273291" elapsed="0.390721"/>
</kw>
<status status="PASS" start="2024-11-22T12:13:32.550832" elapsed="4.117226"/>
</kw>
<kw name="Setup Clerk Clear DB Data" owner="clerk">
<kw name="Read Csv File To List" owner="CSVLibrary">
<msg time="2024-11-22T12:13:36.671711" level="INFO">${csv_list} = [['natid-100', 'Richard Chu', 'MALE', '1996-01-01T23:59:59', '', '1000.12', '10.00', ''], ['natid-101', 'Arthur', 'MALE', '1996-01-01T23:59:59', '', '1000.00', '10.00', ''], ['natid-102', 'Jayden', 'M...</msg>
<var>${csv_list}</var>
<arg>${test_data_path}</arg>
<doc>Read CSV file and return its content as a Python list of tuples.</doc>
<status status="PASS" start="2024-11-22T12:13:36.670943" elapsed="0.000796"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2024-11-22T12:13:36.672771" level="INFO">${cleanup_dict} = {'value_natid': 'natid-100'}</msg>
<var>${cleanup_dict}</var>
<arg>value_natid=${item[0]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2024-11-22T12:13:36.672064" elapsed="0.000721"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<kw name="Connect To Database" owner="DatabaseLibrary">
<msg time="2024-11-22T12:13:36.673831" level="INFO">Looking for configuration file: 'resources/db.cfg'</msg>
<msg time="2024-11-22T12:13:36.673878" level="INFO">Configuration file doesn't exist</msg>
<msg time="2024-11-22T12:13:36.796190" level="INFO">Connect to DB using : mysql.connector.connect(database='testdb', user='user', password=***, host='localhost', port=3306)</msg>
<msg time="2024-11-22T12:13:36.862634" level="INFO">package: mysql.connector.plugins</msg>
<msg time="2024-11-22T12:13:36.862694" level="INFO">plugin_name: caching_sha2_password</msg>
<msg time="2024-11-22T12:13:36.862727" level="INFO">AUTHENTICATION_PLUGIN_CLASS: MySQLCachingSHA2PasswordAuthPlugin</msg>
<arg>${DB_API}</arg>
<arg>${DB_NAME}</arg>
<arg>${DB_USER}</arg>
<arg>${DB_PASSWORD}</arg>
<arg>${DB_HOST}</arg>
<arg>${DB_PORT}</arg>
<doc>Creates a database connection using the DB API 2.0 ``db_module`` and the parameters provided.
Along with listed commonly used arguments (`db_name`, `db_host` etc.)
you can set any other DB module specific parameters as key/value pairs.</doc>
<status status="PASS" start="2024-11-22T12:13:36.673416" elapsed="0.221880"/>
</kw>
<kw name="Update SQL Queries With Arguments Dictionary" owner="sql-helper">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-11-22T12:13:36.911949" level="INFO" html="true">Getting file '&lt;a href="file:///Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/object-repo/sql-queries/delete_hero_by_natid.sql"&gt;/Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/object-repo/sql-queries/delete_hero_by_natid.sql&lt;/a&gt;'.</msg>
<msg time="2024-11-22T12:13:36.912721" level="INFO">${sql_query} = DELETE FROM testdb.working_class_heroes
WHERE natid = "value_natid"</msg>
<var>${sql_query}</var>
<arg>./object-repo/sql-queries/${sql_file_name}.sql</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-11-22T12:13:36.911756" elapsed="0.000980"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2024-11-22T12:13:36.913259" level="INFO">Argument types are:
&lt;class 'robot.utils.dotdict.DotDict'&gt;
&lt;class 'str'&gt;</msg>
<msg time="2024-11-22T12:13:36.913333" level="FAIL">{'value_natid': 'natid-100'} != </msg>
<arg>${args_dict}</arg>
<arg>${EMPTY}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="FAIL" start="2024-11-22T12:13:36.912935" elapsed="0.000471">{'value_natid': 'natid-100'} != </status>
</kw>
<msg time="2024-11-22T12:13:36.913455" level="INFO">${empty_status} = False</msg>
<var>${empty_status}</var>
<arg>Should Be Equal As Strings</arg>
<arg>${args_dict}</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-11-22T12:13:36.912836" elapsed="0.000629"/>
</kw>
<if>
<branch type="IF" condition="'${empty_status}' == '${False}'">
<if>
<branch type="IF" condition="${args_dict}">
<for flavor="IN">
<iter>
<kw name="Convert To String" owner="BuiltIn">
<msg time="2024-11-22T12:13:36.913865" level="INFO">${args_key_str} = value_natid</msg>
<var>${args_key_str}</var>
<arg>${args_key}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="PASS" start="2024-11-22T12:13:36.913793" elapsed="0.000082"/>
</kw>
<kw name="Convert To String" owner="BuiltIn">
<msg time="2024-11-22T12:13:36.914139" level="INFO">${args_value_str} = natid-100</msg>
<var>${args_value_str}</var>
<arg>${args_dict}[${args_key_str}]</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="PASS" start="2024-11-22T12:13:36.913928" elapsed="0.000221"/>
</kw>
<kw name="Replace String" owner="String">
<msg time="2024-11-22T12:13:36.914283" level="INFO">${sql_query} = DELETE FROM testdb.working_class_heroes
WHERE natid = "natid-100"</msg>
<var>${sql_query}</var>
<arg>${sql_query}</arg>
<arg>${args_key_str}</arg>
<arg>${args_value_str}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="PASS" start="2024-11-22T12:13:36.914204" elapsed="0.000089"/>
</kw>
<var name="${args_key}">value_natid</var>
<status status="PASS" start="2024-11-22T12:13:36.913734" elapsed="0.000580"/>
</iter>
<var>${args_key}</var>
<value>@{args_dict}</value>
<status status="PASS" start="2024-11-22T12:13:36.913638" elapsed="0.000702"/>
</for>
<status status="PASS" start="2024-11-22T12:13:36.913602" elapsed="0.000763"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:36.913596" elapsed="0.000786"/>
</if>
<status status="PASS" start="2024-11-22T12:13:36.913513" elapsed="0.000879"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:36.913498" elapsed="0.000907"/>
</if>
<return>
<value>${sql_query}</value>
<status status="PASS" start="2024-11-22T12:13:36.914422" elapsed="0.000024"/>
</return>
<msg time="2024-11-22T12:13:36.914506" level="INFO">${updated_sql_query} = DELETE FROM testdb.working_class_heroes
WHERE natid = "natid-100"</msg>
<var>${updated_sql_query}</var>
<arg>${sql_file_name}</arg>
<arg>${args_dict}</arg>
<status status="PASS" start="2024-11-22T12:13:36.911395" elapsed="0.003122"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<arg>${updated_sql_query}</arg>
<arg>DELETE</arg>
<arg>ignore_case=${True}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-11-22T12:13:36.914651" elapsed="0.000133"/>
</kw>
<msg time="2024-11-22T12:13:36.914821" level="INFO">${delete_status} = True</msg>
<var>${delete_status}</var>
<arg>Should Contain</arg>
<arg>${updated_sql_query}</arg>
<arg>DELETE</arg>
<arg>ignore_case=${True}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-11-22T12:13:36.914581" elapsed="0.000249"/>
</kw>
<if>
<branch type="IF" condition="'${delete_status}' == '${True}'">
<kw name="Execute Sql String" owner="DatabaseLibrary">
<msg time="2024-11-22T12:13:36.915964" level="INFO" html="true">Executing sql:&lt;br&gt;&lt;code style="font-weight: bold;"&gt;DELETE FROM testdb.working_class_heroes
WHERE natid = "natid-100"&lt;/code&gt;</msg>
<msg time="2024-11-22T12:13:36.925312" level="INFO">${json_response} = None</msg>
<var>${json_response}</var>
<arg>${updated_sql_query}</arg>
<doc>Executes the ``sql_string`` as a single SQL command.</doc>
<status status="PASS" start="2024-11-22T12:13:36.914962" elapsed="0.010377"/>
</kw>
<status status="PASS" start="2024-11-22T12:13:36.914864" elapsed="0.010521"/>
</branch>
<branch type="ELSE">
<kw name="Query" owner="DatabaseLibrary">
<var>${json_response}</var>
<arg>${updated_sql_query}</arg>
<arg>return_dict=${True}</arg>
<doc>Runs a query with the ``select_statement`` and returns the result as list of rows.
The type of row values depends on the database module -
usually they are tuples or tuple-like objects.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:36.925546" elapsed="0.000019"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:36.925416" elapsed="0.000173"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:36.914856" elapsed="0.010749"/>
</if>
<kw name="Disconnect From Database" owner="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<status status="PASS" start="2024-11-22T12:13:36.925673" elapsed="0.000160"/>
</kw>
<return>
<value>${json_response}</value>
<status status="PASS" start="2024-11-22T12:13:36.925877" elapsed="0.000032"/>
</return>
<arg>delete_hero_by_natid</arg>
<arg>${cleanup_dict}</arg>
<status status="PASS" start="2024-11-22T12:13:36.673007" elapsed="0.252973"/>
</kw>
<var name="${item}">['natid-100', 'Richard Chu', 'MALE', '1996-01-01T23:59:59', '', '1000.12', '10.00', '']</var>
<status status="PASS" start="2024-11-22T12:13:36.671926" elapsed="0.254079"/>
</iter>
<iter>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2024-11-22T12:13:36.926694" level="INFO">${cleanup_dict} = {'value_natid': 'natid-101'}</msg>
<var>${cleanup_dict}</var>
<arg>value_natid=${item[0]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2024-11-22T12:13:36.926190" elapsed="0.000521"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<kw name="Connect To Database" owner="DatabaseLibrary">
<msg time="2024-11-22T12:13:36.927182" level="INFO">Looking for configuration file: 'resources/db.cfg'</msg>
<msg time="2024-11-22T12:13:36.927210" level="INFO">Configuration file doesn't exist</msg>
<msg time="2024-11-22T12:13:36.927357" level="INFO">Connect to DB using : mysql.connector.connect(database='testdb', user='user', password=***, host='localhost', port=3306)</msg>
<arg>${DB_API}</arg>
<arg>${DB_NAME}</arg>
<arg>${DB_USER}</arg>
<arg>${DB_PASSWORD}</arg>
<arg>${DB_HOST}</arg>
<arg>${DB_PORT}</arg>
<doc>Creates a database connection using the DB API 2.0 ``db_module`` and the parameters provided.
Along with listed commonly used arguments (`db_name`, `db_host` etc.)
you can set any other DB module specific parameters as key/value pairs.</doc>
<status status="PASS" start="2024-11-22T12:13:36.927016" elapsed="0.009571"/>
</kw>
<kw name="Update SQL Queries With Arguments Dictionary" owner="sql-helper">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-11-22T12:13:36.949956" level="INFO" html="true">Getting file '&lt;a href="file:///Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/object-repo/sql-queries/delete_hero_by_natid.sql"&gt;/Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/object-repo/sql-queries/delete_hero_by_natid.sql&lt;/a&gt;'.</msg>
<msg time="2024-11-22T12:13:36.950072" level="INFO">${sql_query} = DELETE FROM testdb.working_class_heroes
WHERE natid = "value_natid"</msg>
<var>${sql_query}</var>
<arg>./object-repo/sql-queries/${sql_file_name}.sql</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-11-22T12:13:36.949729" elapsed="0.000366"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2024-11-22T12:13:36.950594" level="INFO">Argument types are:
&lt;class 'robot.utils.dotdict.DotDict'&gt;
&lt;class 'str'&gt;</msg>
<msg time="2024-11-22T12:13:36.950837" level="FAIL">{'value_natid': 'natid-101'} != </msg>
<arg>${args_dict}</arg>
<arg>${EMPTY}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="FAIL" start="2024-11-22T12:13:36.950277" elapsed="0.000611">{'value_natid': 'natid-101'} != </status>
</kw>
<msg time="2024-11-22T12:13:36.950943" level="INFO">${empty_status} = False</msg>
<var>${empty_status}</var>
<arg>Should Be Equal As Strings</arg>
<arg>${args_dict}</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-11-22T12:13:36.950186" elapsed="0.000766"/>
</kw>
<if>
<branch type="IF" condition="'${empty_status}' == '${False}'">
<if>
<branch type="IF" condition="${args_dict}">
<for flavor="IN">
<iter>
<kw name="Convert To String" owner="BuiltIn">
<msg time="2024-11-22T12:13:36.951823" level="INFO">${args_key_str} = value_natid</msg>
<var>${args_key_str}</var>
<arg>${args_key}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="PASS" start="2024-11-22T12:13:36.951710" elapsed="0.000127"/>
</kw>
<kw name="Convert To String" owner="BuiltIn">
<msg time="2024-11-22T12:13:36.952002" level="INFO">${args_value_str} = natid-101</msg>
<var>${args_value_str}</var>
<arg>${args_dict}[${args_key_str}]</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="PASS" start="2024-11-22T12:13:36.951915" elapsed="0.000097"/>
</kw>
<kw name="Replace String" owner="String">
<msg time="2024-11-22T12:13:36.952191" level="INFO">${sql_query} = DELETE FROM testdb.working_class_heroes
WHERE natid = "natid-101"</msg>
<var>${sql_query}</var>
<arg>${sql_query}</arg>
<arg>${args_key_str}</arg>
<arg>${args_value_str}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="PASS" start="2024-11-22T12:13:36.952067" elapsed="0.000136"/>
</kw>
<var name="${args_key}">value_natid</var>
<status status="PASS" start="2024-11-22T12:13:36.951539" elapsed="0.000685"/>
</iter>
<var>${args_key}</var>
<value>@{args_dict}</value>
<status status="PASS" start="2024-11-22T12:13:36.951454" elapsed="0.000794"/>
</for>
<status status="PASS" start="2024-11-22T12:13:36.951384" elapsed="0.000888"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:36.951369" elapsed="0.000918"/>
</if>
<status status="PASS" start="2024-11-22T12:13:36.951004" elapsed="0.001295"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:36.950990" elapsed="0.001320"/>
</if>
<return>
<value>${sql_query}</value>
<status status="PASS" start="2024-11-22T12:13:36.952334" elapsed="0.000033"/>
</return>
<msg time="2024-11-22T12:13:36.952440" level="INFO">${updated_sql_query} = DELETE FROM testdb.working_class_heroes
WHERE natid = "natid-101"</msg>
<var>${updated_sql_query}</var>
<arg>${sql_file_name}</arg>
<arg>${args_dict}</arg>
<status status="PASS" start="2024-11-22T12:13:36.949356" elapsed="0.003096"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<arg>${updated_sql_query}</arg>
<arg>DELETE</arg>
<arg>ignore_case=${True}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-11-22T12:13:36.952723" elapsed="0.000203"/>
</kw>
<msg time="2024-11-22T12:13:36.952969" level="INFO">${delete_status} = True</msg>
<var>${delete_status}</var>
<arg>Should Contain</arg>
<arg>${updated_sql_query}</arg>
<arg>DELETE</arg>
<arg>ignore_case=${True}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-11-22T12:13:36.952519" elapsed="0.000460"/>
</kw>
<if>
<branch type="IF" condition="'${delete_status}' == '${True}'">
<kw name="Execute Sql String" owner="DatabaseLibrary">
<msg time="2024-11-22T12:13:36.954616" level="INFO" html="true">Executing sql:&lt;br&gt;&lt;code style="font-weight: bold;"&gt;DELETE FROM testdb.working_class_heroes
WHERE natid = "natid-101"&lt;/code&gt;</msg>
<msg time="2024-11-22T12:13:36.958954" level="INFO">${json_response} = None</msg>
<var>${json_response}</var>
<arg>${updated_sql_query}</arg>
<doc>Executes the ``sql_string`` as a single SQL command.</doc>
<status status="PASS" start="2024-11-22T12:13:36.953132" elapsed="0.005848"/>
</kw>
<status status="PASS" start="2024-11-22T12:13:36.953017" elapsed="0.006005"/>
</branch>
<branch type="ELSE">
<kw name="Query" owner="DatabaseLibrary">
<var>${json_response}</var>
<arg>${updated_sql_query}</arg>
<arg>return_dict=${True}</arg>
<doc>Runs a query with the ``select_statement`` and returns the result as list of rows.
The type of row values depends on the database module -
usually they are tuples or tuple-like objects.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:36.959168" elapsed="0.000017"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:36.959055" elapsed="0.000150"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:36.953007" elapsed="0.006213"/>
</if>
<kw name="Disconnect From Database" owner="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<status status="PASS" start="2024-11-22T12:13:36.959275" elapsed="0.000154"/>
</kw>
<return>
<value>${json_response}</value>
<status status="PASS" start="2024-11-22T12:13:36.959457" elapsed="0.000029"/>
</return>
<arg>delete_hero_by_natid</arg>
<arg>${cleanup_dict}</arg>
<status status="PASS" start="2024-11-22T12:13:36.926854" elapsed="0.032730"/>
</kw>
<var name="${item}">['natid-101', 'Arthur', 'MALE', '1996-01-01T23:59:59', '', '1000.00', '10.00', '']</var>
<status status="PASS" start="2024-11-22T12:13:36.926121" elapsed="0.033580"/>
</iter>
<iter>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2024-11-22T12:13:36.960510" level="INFO">${cleanup_dict} = {'value_natid': 'natid-102'}</msg>
<var>${cleanup_dict}</var>
<arg>value_natid=${item[0]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2024-11-22T12:13:36.960072" elapsed="0.000455"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<kw name="Connect To Database" owner="DatabaseLibrary">
<msg time="2024-11-22T12:13:36.960975" level="INFO">Looking for configuration file: 'resources/db.cfg'</msg>
<msg time="2024-11-22T12:13:36.960997" level="INFO">Configuration file doesn't exist</msg>
<msg time="2024-11-22T12:13:36.961213" level="INFO">Connect to DB using : mysql.connector.connect(database='testdb', user='user', password=***, host='localhost', port=3306)</msg>
<arg>${DB_API}</arg>
<arg>${DB_NAME}</arg>
<arg>${DB_USER}</arg>
<arg>${DB_PASSWORD}</arg>
<arg>${DB_HOST}</arg>
<arg>${DB_PORT}</arg>
<doc>Creates a database connection using the DB API 2.0 ``db_module`` and the parameters provided.
Along with listed commonly used arguments (`db_name`, `db_host` etc.)
you can set any other DB module specific parameters as key/value pairs.</doc>
<status status="PASS" start="2024-11-22T12:13:36.960836" elapsed="0.009197"/>
</kw>
<kw name="Update SQL Queries With Arguments Dictionary" owner="sql-helper">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-11-22T12:13:36.971819" level="INFO" html="true">Getting file '&lt;a href="file:///Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/object-repo/sql-queries/delete_hero_by_natid.sql"&gt;/Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/object-repo/sql-queries/delete_hero_by_natid.sql&lt;/a&gt;'.</msg>
<msg time="2024-11-22T12:13:36.971973" level="INFO">${sql_query} = DELETE FROM testdb.working_class_heroes
WHERE natid = "value_natid"</msg>
<var>${sql_query}</var>
<arg>./object-repo/sql-queries/${sql_file_name}.sql</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-11-22T12:13:36.971658" elapsed="0.000332"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2024-11-22T12:13:36.972459" level="INFO">Argument types are:
&lt;class 'robot.utils.dotdict.DotDict'&gt;
&lt;class 'str'&gt;</msg>
<msg time="2024-11-22T12:13:36.972518" level="FAIL">{'value_natid': 'natid-102'} != </msg>
<arg>${args_dict}</arg>
<arg>${EMPTY}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="FAIL" start="2024-11-22T12:13:36.972161" elapsed="0.000395">{'value_natid': 'natid-102'} != </status>
</kw>
<msg time="2024-11-22T12:13:36.972602" level="INFO">${empty_status} = False</msg>
<var>${empty_status}</var>
<arg>Should Be Equal As Strings</arg>
<arg>${args_dict}</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-11-22T12:13:36.972073" elapsed="0.000538"/>
</kw>
<if>
<branch type="IF" condition="'${empty_status}' == '${False}'">
<if>
<branch type="IF" condition="${args_dict}">
<for flavor="IN">
<iter>
<kw name="Convert To String" owner="BuiltIn">
<msg time="2024-11-22T12:13:36.972956" level="INFO">${args_key_str} = value_natid</msg>
<var>${args_key_str}</var>
<arg>${args_key}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="PASS" start="2024-11-22T12:13:36.972887" elapsed="0.000079"/>
</kw>
<kw name="Convert To String" owner="BuiltIn">
<msg time="2024-11-22T12:13:36.973088" level="INFO">${args_value_str} = natid-102</msg>
<var>${args_value_str}</var>
<arg>${args_dict}[${args_key_str}]</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="PASS" start="2024-11-22T12:13:36.973019" elapsed="0.000078"/>
</kw>
<kw name="Replace String" owner="String">
<msg time="2024-11-22T12:13:36.973226" level="INFO">${sql_query} = DELETE FROM testdb.working_class_heroes
WHERE natid = "natid-102"</msg>
<var>${sql_query}</var>
<arg>${sql_query}</arg>
<arg>${args_key_str}</arg>
<arg>${args_value_str}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="PASS" start="2024-11-22T12:13:36.973152" elapsed="0.000083"/>
</kw>
<var name="${args_key}">value_natid</var>
<status status="PASS" start="2024-11-22T12:13:36.972834" elapsed="0.000421"/>
</iter>
<var>${args_key}</var>
<value>@{args_dict}</value>
<status status="PASS" start="2024-11-22T12:13:36.972773" elapsed="0.000503"/>
</for>
<status status="PASS" start="2024-11-22T12:13:36.972737" elapsed="0.000562"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:36.972730" elapsed="0.000583"/>
</if>
<status status="PASS" start="2024-11-22T12:13:36.972653" elapsed="0.000670"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:36.972642" elapsed="0.000692"/>
</if>
<return>
<value>${sql_query}</value>
<status status="PASS" start="2024-11-22T12:13:36.973348" elapsed="0.000020"/>
</return>
<msg time="2024-11-22T12:13:36.973422" level="INFO">${updated_sql_query} = DELETE FROM testdb.working_class_heroes
WHERE natid = "natid-102"</msg>
<var>${updated_sql_query}</var>
<arg>${sql_file_name}</arg>
<arg>${args_dict}</arg>
<status status="PASS" start="2024-11-22T12:13:36.971429" elapsed="0.002003"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<arg>${updated_sql_query}</arg>
<arg>DELETE</arg>
<arg>ignore_case=${True}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-11-22T12:13:36.973556" elapsed="0.000090"/>
</kw>
<msg time="2024-11-22T12:13:36.973681" level="INFO">${delete_status} = True</msg>
<var>${delete_status}</var>
<arg>Should Contain</arg>
<arg>${updated_sql_query}</arg>
<arg>DELETE</arg>
<arg>ignore_case=${True}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-11-22T12:13:36.973488" elapsed="0.000204"/>
</kw>
<if>
<branch type="IF" condition="'${delete_status}' == '${True}'">
<kw name="Execute Sql String" owner="DatabaseLibrary">
<msg time="2024-11-22T12:13:36.974815" level="INFO" html="true">Executing sql:&lt;br&gt;&lt;code style="font-weight: bold;"&gt;DELETE FROM testdb.working_class_heroes
WHERE natid = "natid-102"&lt;/code&gt;</msg>
<msg time="2024-11-22T12:13:36.976631" level="INFO">${json_response} = None</msg>
<var>${json_response}</var>
<arg>${updated_sql_query}</arg>
<doc>Executes the ``sql_string`` as a single SQL command.</doc>
<status status="PASS" start="2024-11-22T12:13:36.973814" elapsed="0.002831"/>
</kw>
<status status="PASS" start="2024-11-22T12:13:36.973724" elapsed="0.002947"/>
</branch>
<branch type="ELSE">
<kw name="Query" owner="DatabaseLibrary">
<var>${json_response}</var>
<arg>${updated_sql_query}</arg>
<arg>return_dict=${True}</arg>
<doc>Runs a query with the ``select_statement`` and returns the result as list of rows.
The type of row values depends on the database module -
usually they are tuples or tuple-like objects.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:36.976761" elapsed="0.000012"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:36.976691" elapsed="0.000100"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:36.973717" elapsed="0.003086"/>
</if>
<kw name="Disconnect From Database" owner="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<status status="PASS" start="2024-11-22T12:13:36.976846" elapsed="0.000105"/>
</kw>
<return>
<value>${json_response}</value>
<status status="PASS" start="2024-11-22T12:13:36.976973" elapsed="0.000019"/>
</return>
<arg>delete_hero_by_natid</arg>
<arg>${cleanup_dict}</arg>
<status status="PASS" start="2024-11-22T12:13:36.960667" elapsed="0.016378"/>
</kw>
<var name="${item}">['natid-102', 'Jayden', 'MALE', '1996-01-01T23:59:59', '', '10320.00', '10.00', '']</var>
<status status="PASS" start="2024-11-22T12:13:36.959899" elapsed="0.017164"/>
</iter>
<iter>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2024-11-22T12:13:36.977521" level="INFO">${cleanup_dict} = {'value_natid': 'natid-103'}</msg>
<var>${cleanup_dict}</var>
<arg>value_natid=${item[0]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2024-11-22T12:13:36.977167" elapsed="0.000366"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<kw name="Connect To Database" owner="DatabaseLibrary">
<msg time="2024-11-22T12:13:36.977878" level="INFO">Looking for configuration file: 'resources/db.cfg'</msg>
<msg time="2024-11-22T12:13:36.977897" level="INFO">Configuration file doesn't exist</msg>
<msg time="2024-11-22T12:13:36.977975" level="INFO">Connect to DB using : mysql.connector.connect(database='testdb', user='user', password=***, host='localhost', port=3306)</msg>
<arg>${DB_API}</arg>
<arg>${DB_NAME}</arg>
<arg>${DB_USER}</arg>
<arg>${DB_PASSWORD}</arg>
<arg>${DB_HOST}</arg>
<arg>${DB_PORT}</arg>
<doc>Creates a database connection using the DB API 2.0 ``db_module`` and the parameters provided.
Along with listed commonly used arguments (`db_name`, `db_host` etc.)
you can set any other DB module specific parameters as key/value pairs.</doc>
<status status="PASS" start="2024-11-22T12:13:36.977760" elapsed="0.005916"/>
</kw>
<kw name="Update SQL Queries With Arguments Dictionary" owner="sql-helper">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-11-22T12:13:36.990194" level="INFO" html="true">Getting file '&lt;a href="file:///Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/object-repo/sql-queries/delete_hero_by_natid.sql"&gt;/Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/object-repo/sql-queries/delete_hero_by_natid.sql&lt;/a&gt;'.</msg>
<msg time="2024-11-22T12:13:36.990361" level="INFO">${sql_query} = DELETE FROM testdb.working_class_heroes
WHERE natid = "value_natid"</msg>
<var>${sql_query}</var>
<arg>./object-repo/sql-queries/${sql_file_name}.sql</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-11-22T12:13:36.989988" elapsed="0.000436"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2024-11-22T12:13:36.991637" level="INFO">Argument types are:
&lt;class 'robot.utils.dotdict.DotDict'&gt;
&lt;class 'str'&gt;</msg>
<msg time="2024-11-22T12:13:36.991703" level="FAIL">{'value_natid': 'natid-103'} != </msg>
<arg>${args_dict}</arg>
<arg>${EMPTY}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="FAIL" start="2024-11-22T12:13:36.990894" elapsed="0.000855">{'value_natid': 'natid-103'} != </status>
</kw>
<msg time="2024-11-22T12:13:36.991806" level="INFO">${empty_status} = False</msg>
<var>${empty_status}</var>
<arg>Should Be Equal As Strings</arg>
<arg>${args_dict}</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-11-22T12:13:36.990640" elapsed="0.001175"/>
</kw>
<if>
<branch type="IF" condition="'${empty_status}' == '${False}'">
<if>
<branch type="IF" condition="${args_dict}">
<for flavor="IN">
<iter>
<kw name="Convert To String" owner="BuiltIn">
<msg time="2024-11-22T12:13:36.992321" level="INFO">${args_key_str} = value_natid</msg>
<var>${args_key_str}</var>
<arg>${args_key}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="PASS" start="2024-11-22T12:13:36.992243" elapsed="0.000089"/>
</kw>
<kw name="Convert To String" owner="BuiltIn">
<msg time="2024-11-22T12:13:36.992462" level="INFO">${args_value_str} = natid-103</msg>
<var>${args_value_str}</var>
<arg>${args_dict}[${args_key_str}]</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="PASS" start="2024-11-22T12:13:36.992389" elapsed="0.000082"/>
</kw>
<kw name="Replace String" owner="String">
<msg time="2024-11-22T12:13:36.992746" level="INFO">${sql_query} = DELETE FROM testdb.working_class_heroes
WHERE natid = "natid-103"</msg>
<var>${sql_query}</var>
<arg>${sql_query}</arg>
<arg>${args_key_str}</arg>
<arg>${args_value_str}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="PASS" start="2024-11-22T12:13:36.992527" elapsed="0.000232"/>
</kw>
<var name="${args_key}">value_natid</var>
<status status="PASS" start="2024-11-22T12:13:36.992047" elapsed="0.000738"/>
</iter>
<var>${args_key}</var>
<value>@{args_dict}</value>
<status status="PASS" start="2024-11-22T12:13:36.991979" elapsed="0.000830"/>
</for>
<status status="PASS" start="2024-11-22T12:13:36.991945" elapsed="0.000887"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:36.991939" elapsed="0.000908"/>
</if>
<status status="PASS" start="2024-11-22T12:13:36.991862" elapsed="0.000995"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:36.991849" elapsed="0.001019"/>
</if>
<return>
<value>${sql_query}</value>
<status status="PASS" start="2024-11-22T12:13:36.992882" elapsed="0.000021"/>
</return>
<msg time="2024-11-22T12:13:36.992960" level="INFO">${updated_sql_query} = DELETE FROM testdb.working_class_heroes
WHERE natid = "natid-103"</msg>
<var>${updated_sql_query}</var>
<arg>${sql_file_name}</arg>
<arg>${args_dict}</arg>
<status status="PASS" start="2024-11-22T12:13:36.989656" elapsed="0.003314"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<arg>${updated_sql_query}</arg>
<arg>DELETE</arg>
<arg>ignore_case=${True}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-11-22T12:13:36.993116" elapsed="0.000095"/>
</kw>
<msg time="2024-11-22T12:13:36.993269" level="INFO">${delete_status} = True</msg>
<var>${delete_status}</var>
<arg>Should Contain</arg>
<arg>${updated_sql_query}</arg>
<arg>DELETE</arg>
<arg>ignore_case=${True}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-11-22T12:13:36.993037" elapsed="0.000241"/>
</kw>
<if>
<branch type="IF" condition="'${delete_status}' == '${True}'">
<kw name="Execute Sql String" owner="DatabaseLibrary">
<msg time="2024-11-22T12:13:36.994294" level="INFO" html="true">Executing sql:&lt;br&gt;&lt;code style="font-weight: bold;"&gt;DELETE FROM testdb.working_class_heroes
WHERE natid = "natid-103"&lt;/code&gt;</msg>
<msg time="2024-11-22T12:13:36.996625" level="INFO">${json_response} = None</msg>
<var>${json_response}</var>
<arg>${updated_sql_query}</arg>
<doc>Executes the ``sql_string`` as a single SQL command.</doc>
<status status="PASS" start="2024-11-22T12:13:36.993405" elapsed="0.003235"/>
</kw>
<status status="PASS" start="2024-11-22T12:13:36.993311" elapsed="0.003356"/>
</branch>
<branch type="ELSE">
<kw name="Query" owner="DatabaseLibrary">
<var>${json_response}</var>
<arg>${updated_sql_query}</arg>
<arg>return_dict=${True}</arg>
<doc>Runs a query with the ``select_statement`` and returns the result as list of rows.
The type of row values depends on the database module -
usually they are tuples or tuple-like objects.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:36.996753" elapsed="0.000012"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:36.996686" elapsed="0.000099"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:36.993305" elapsed="0.003492"/>
</if>
<kw name="Disconnect From Database" owner="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<status status="PASS" start="2024-11-22T12:13:36.996842" elapsed="0.000112"/>
</kw>
<return>
<value>${json_response}</value>
<status status="PASS" start="2024-11-22T12:13:36.996978" elapsed="0.000021"/>
</return>
<arg>delete_hero_by_natid</arg>
<arg>${cleanup_dict}</arg>
<status status="PASS" start="2024-11-22T12:13:36.977632" elapsed="0.019416"/>
</kw>
<var name="${item}">['natid-103', 'Lily', 'FEMALE', '1996-01-01T23:59:59', '', '1000.50', '10.28', '']</var>
<status status="PASS" start="2024-11-22T12:13:36.977115" elapsed="0.019951"/>
</iter>
<iter>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2024-11-22T12:13:36.997785" level="INFO">${cleanup_dict} = {'value_natid': 'natid-104'}</msg>
<var>${cleanup_dict}</var>
<arg>value_natid=${item[0]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2024-11-22T12:13:36.997382" elapsed="0.000416"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<kw name="Connect To Database" owner="DatabaseLibrary">
<msg time="2024-11-22T12:13:36.998175" level="INFO">Looking for configuration file: 'resources/db.cfg'</msg>
<msg time="2024-11-22T12:13:36.998358" level="INFO">Configuration file doesn't exist</msg>
<msg time="2024-11-22T12:13:36.998603" level="INFO">Connect to DB using : mysql.connector.connect(database='testdb', user='user', password=***, host='localhost', port=3306)</msg>
<arg>${DB_API}</arg>
<arg>${DB_NAME}</arg>
<arg>${DB_USER}</arg>
<arg>${DB_PASSWORD}</arg>
<arg>${DB_HOST}</arg>
<arg>${DB_PORT}</arg>
<doc>Creates a database connection using the DB API 2.0 ``db_module`` and the parameters provided.
Along with listed commonly used arguments (`db_name`, `db_host` etc.)
you can set any other DB module specific parameters as key/value pairs.</doc>
<status status="PASS" start="2024-11-22T12:13:36.998046" elapsed="0.006364"/>
</kw>
<kw name="Update SQL Queries With Arguments Dictionary" owner="sql-helper">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-11-22T12:13:37.012471" level="INFO" html="true">Getting file '&lt;a href="file:///Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/object-repo/sql-queries/delete_hero_by_natid.sql"&gt;/Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/object-repo/sql-queries/delete_hero_by_natid.sql&lt;/a&gt;'.</msg>
<msg time="2024-11-22T12:13:37.012550" level="INFO">${sql_query} = DELETE FROM testdb.working_class_heroes
WHERE natid = "value_natid"</msg>
<var>${sql_query}</var>
<arg>./object-repo/sql-queries/${sql_file_name}.sql</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-11-22T12:13:37.012359" elapsed="0.000202"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2024-11-22T12:13:37.012978" level="INFO">Argument types are:
&lt;class 'robot.utils.dotdict.DotDict'&gt;
&lt;class 'str'&gt;</msg>
<msg time="2024-11-22T12:13:37.013043" level="FAIL">{'value_natid': 'natid-104'} != </msg>
<arg>${args_dict}</arg>
<arg>${EMPTY}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="FAIL" start="2024-11-22T12:13:37.012696" elapsed="0.000389">{'value_natid': 'natid-104'} != </status>
</kw>
<msg time="2024-11-22T12:13:37.013126" level="INFO">${empty_status} = False</msg>
<var>${empty_status}</var>
<arg>Should Be Equal As Strings</arg>
<arg>${args_dict}</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-11-22T12:13:37.012626" elapsed="0.000510"/>
</kw>
<if>
<branch type="IF" condition="'${empty_status}' == '${False}'">
<if>
<branch type="IF" condition="${args_dict}">
<for flavor="IN">
<iter>
<kw name="Convert To String" owner="BuiltIn">
<msg time="2024-11-22T12:13:37.013537" level="INFO">${args_key_str} = value_natid</msg>
<var>${args_key_str}</var>
<arg>${args_key}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="PASS" start="2024-11-22T12:13:37.013472" elapsed="0.000074"/>
</kw>
<kw name="Convert To String" owner="BuiltIn">
<msg time="2024-11-22T12:13:37.013667" level="INFO">${args_value_str} = natid-104</msg>
<var>${args_value_str}</var>
<arg>${args_dict}[${args_key_str}]</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="PASS" start="2024-11-22T12:13:37.013597" elapsed="0.000079"/>
</kw>
<kw name="Replace String" owner="String">
<msg time="2024-11-22T12:13:37.013799" level="INFO">${sql_query} = DELETE FROM testdb.working_class_heroes
WHERE natid = "natid-104"</msg>
<var>${sql_query}</var>
<arg>${sql_query}</arg>
<arg>${args_key_str}</arg>
<arg>${args_value_str}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="PASS" start="2024-11-22T12:13:37.013725" elapsed="0.000083"/>
</kw>
<var name="${args_key}">value_natid</var>
<status status="PASS" start="2024-11-22T12:13:37.013411" elapsed="0.000416"/>
</iter>
<var>${args_key}</var>
<value>@{args_dict}</value>
<status status="PASS" start="2024-11-22T12:13:37.013334" elapsed="0.000513"/>
</for>
<status status="PASS" start="2024-11-22T12:13:37.013292" elapsed="0.000573"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:37.013287" elapsed="0.000590"/>
</if>
<status status="PASS" start="2024-11-22T12:13:37.013189" elapsed="0.000697"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:37.013172" elapsed="0.000724"/>
</if>
<return>
<value>${sql_query}</value>
<status status="PASS" start="2024-11-22T12:13:37.013909" elapsed="0.000018"/>
</return>
<msg time="2024-11-22T12:13:37.013975" level="INFO">${updated_sql_query} = DELETE FROM testdb.working_class_heroes
WHERE natid = "natid-104"</msg>
<var>${updated_sql_query}</var>
<arg>${sql_file_name}</arg>
<arg>${args_dict}</arg>
<status status="PASS" start="2024-11-22T12:13:37.012166" elapsed="0.001818"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<arg>${updated_sql_query}</arg>
<arg>DELETE</arg>
<arg>ignore_case=${True}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-11-22T12:13:37.014098" elapsed="0.000094"/>
</kw>
<msg time="2024-11-22T12:13:37.014225" level="INFO">${delete_status} = True</msg>
<var>${delete_status}</var>
<arg>Should Contain</arg>
<arg>${updated_sql_query}</arg>
<arg>DELETE</arg>
<arg>ignore_case=${True}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-11-22T12:13:37.014039" elapsed="0.000195"/>
</kw>
<if>
<branch type="IF" condition="'${delete_status}' == '${True}'">
<kw name="Execute Sql String" owner="DatabaseLibrary">
<msg time="2024-11-22T12:13:37.014868" level="INFO" html="true">Executing sql:&lt;br&gt;&lt;code style="font-weight: bold;"&gt;DELETE FROM testdb.working_class_heroes
WHERE natid = "natid-104"&lt;/code&gt;</msg>
<msg time="2024-11-22T12:13:37.016185" level="INFO">${json_response} = None</msg>
<var>${json_response}</var>
<arg>${updated_sql_query}</arg>
<doc>Executes the ``sql_string`` as a single SQL command.</doc>
<status status="PASS" start="2024-11-22T12:13:37.014344" elapsed="0.001853"/>
</kw>
<status status="PASS" start="2024-11-22T12:13:37.014264" elapsed="0.001957"/>
</branch>
<branch type="ELSE">
<kw name="Query" owner="DatabaseLibrary">
<var>${json_response}</var>
<arg>${updated_sql_query}</arg>
<arg>return_dict=${True}</arg>
<doc>Runs a query with the ``select_statement`` and returns the result as list of rows.
The type of row values depends on the database module -
usually they are tuples or tuple-like objects.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:37.016300" elapsed="0.000011"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:37.016238" elapsed="0.000091"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:37.014258" elapsed="0.002082"/>
</if>
<kw name="Disconnect From Database" owner="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<status status="PASS" start="2024-11-22T12:13:37.016383" elapsed="0.000097"/>
</kw>
<return>
<value>${json_response}</value>
<status status="PASS" start="2024-11-22T12:13:37.016501" elapsed="0.000017"/>
</return>
<arg>delete_hero_by_natid</arg>
<arg>${cleanup_dict}</arg>
<status status="PASS" start="2024-11-22T12:13:36.997905" elapsed="0.018658"/>
</kw>
<var name="${item}">['natid-104', 'Ben', 'MALE', '1996-01-01T23:59:59', '', '1000.12', '10.00', '']</var>
<status status="PASS" start="2024-11-22T12:13:36.997285" elapsed="0.019297"/>
</iter>
<iter>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2024-11-22T12:13:37.017018" level="INFO">${cleanup_dict} = {'value_natid': 'natid-105'}</msg>
<var>${cleanup_dict}</var>
<arg>value_natid=${item[0]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2024-11-22T12:13:37.016680" elapsed="0.000349"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<kw name="Connect To Database" owner="DatabaseLibrary">
<msg time="2024-11-22T12:13:37.017362" level="INFO">Looking for configuration file: 'resources/db.cfg'</msg>
<msg time="2024-11-22T12:13:37.017380" level="INFO">Configuration file doesn't exist</msg>
<msg time="2024-11-22T12:13:37.017455" level="INFO">Connect to DB using : mysql.connector.connect(database='testdb', user='user', password=***, host='localhost', port=3306)</msg>
<arg>${DB_API}</arg>
<arg>${DB_NAME}</arg>
<arg>${DB_USER}</arg>
<arg>${DB_PASSWORD}</arg>
<arg>${DB_HOST}</arg>
<arg>${DB_PORT}</arg>
<doc>Creates a database connection using the DB API 2.0 ``db_module`` and the parameters provided.
Along with listed commonly used arguments (`db_name`, `db_host` etc.)
you can set any other DB module specific parameters as key/value pairs.</doc>
<status status="PASS" start="2024-11-22T12:13:37.017246" elapsed="0.004887"/>
</kw>
<kw name="Update SQL Queries With Arguments Dictionary" owner="sql-helper">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-11-22T12:13:37.029485" level="INFO" html="true">Getting file '&lt;a href="file:///Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/object-repo/sql-queries/delete_hero_by_natid.sql"&gt;/Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/object-repo/sql-queries/delete_hero_by_natid.sql&lt;/a&gt;'.</msg>
<msg time="2024-11-22T12:13:37.030236" level="INFO">${sql_query} = DELETE FROM testdb.working_class_heroes
WHERE natid = "value_natid"</msg>
<var>${sql_query}</var>
<arg>./object-repo/sql-queries/${sql_file_name}.sql</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-11-22T12:13:37.029380" elapsed="0.000869"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2024-11-22T12:13:37.030647" level="INFO">Argument types are:
&lt;class 'robot.utils.dotdict.DotDict'&gt;
&lt;class 'str'&gt;</msg>
<msg time="2024-11-22T12:13:37.030696" level="FAIL">{'value_natid': 'natid-105'} != </msg>
<arg>${args_dict}</arg>
<arg>${EMPTY}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="FAIL" start="2024-11-22T12:13:37.030386" elapsed="0.000343">{'value_natid': 'natid-105'} != </status>
</kw>
<msg time="2024-11-22T12:13:37.030771" level="INFO">${empty_status} = False</msg>
<var>${empty_status}</var>
<arg>Should Be Equal As Strings</arg>
<arg>${args_dict}</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-11-22T12:13:37.030315" elapsed="0.000465"/>
</kw>
<if>
<branch type="IF" condition="'${empty_status}' == '${False}'">
<if>
<branch type="IF" condition="${args_dict}">
<for flavor="IN">
<iter>
<kw name="Convert To String" owner="BuiltIn">
<msg time="2024-11-22T12:13:37.031085" level="INFO">${args_key_str} = value_natid</msg>
<var>${args_key_str}</var>
<arg>${args_key}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="PASS" start="2024-11-22T12:13:37.031020" elapsed="0.000075"/>
</kw>
<kw name="Convert To String" owner="BuiltIn">
<msg time="2024-11-22T12:13:37.031213" level="INFO">${args_value_str} = natid-105</msg>
<var>${args_value_str}</var>
<arg>${args_dict}[${args_key_str}]</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="PASS" start="2024-11-22T12:13:37.031144" elapsed="0.000078"/>
</kw>
<kw name="Replace String" owner="String">
<msg time="2024-11-22T12:13:37.031414" level="INFO">${sql_query} = DELETE FROM testdb.working_class_heroes
WHERE natid = "natid-105"</msg>
<var>${sql_query}</var>
<arg>${sql_query}</arg>
<arg>${args_key_str}</arg>
<arg>${args_value_str}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="PASS" start="2024-11-22T12:13:37.031337" elapsed="0.000086"/>
</kw>
<var name="${args_key}">value_natid</var>
<status status="PASS" start="2024-11-22T12:13:37.030970" elapsed="0.000473"/>
</iter>
<var>${args_key}</var>
<value>@{args_dict}</value>
<status status="PASS" start="2024-11-22T12:13:37.030916" elapsed="0.000544"/>
</for>
<status status="PASS" start="2024-11-22T12:13:37.030884" elapsed="0.000594"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:37.030878" elapsed="0.000612"/>
</if>
<status status="PASS" start="2024-11-22T12:13:37.030817" elapsed="0.000681"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:37.030808" elapsed="0.000700"/>
</if>
<return>
<value>${sql_query}</value>
<status status="PASS" start="2024-11-22T12:13:37.031520" elapsed="0.000014"/>
</return>
<msg time="2024-11-22T12:13:37.031580" level="INFO">${updated_sql_query} = DELETE FROM testdb.working_class_heroes
WHERE natid = "natid-105"</msg>
<var>${updated_sql_query}</var>
<arg>${sql_file_name}</arg>
<arg>${args_dict}</arg>
<status status="PASS" start="2024-11-22T12:13:37.029208" elapsed="0.002383"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<arg>${updated_sql_query}</arg>
<arg>DELETE</arg>
<arg>ignore_case=${True}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-11-22T12:13:37.031704" elapsed="0.000084"/>
</kw>
<msg time="2024-11-22T12:13:37.031828" level="INFO">${delete_status} = True</msg>
<var>${delete_status}</var>
<arg>Should Contain</arg>
<arg>${updated_sql_query}</arg>
<arg>DELETE</arg>
<arg>ignore_case=${True}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-11-22T12:13:37.031643" elapsed="0.000193"/>
</kw>
<if>
<branch type="IF" condition="'${delete_status}' == '${True}'">
<kw name="Execute Sql String" owner="DatabaseLibrary">
<msg time="2024-11-22T12:13:37.032401" level="INFO" html="true">Executing sql:&lt;br&gt;&lt;code style="font-weight: bold;"&gt;DELETE FROM testdb.working_class_heroes
WHERE natid = "natid-105"&lt;/code&gt;</msg>
<msg time="2024-11-22T12:13:37.034896" level="INFO">${json_response} = None</msg>
<var>${json_response}</var>
<arg>${updated_sql_query}</arg>
<doc>Executes the ``sql_string`` as a single SQL command.</doc>
<status status="PASS" start="2024-11-22T12:13:37.031945" elapsed="0.002966"/>
</kw>
<status status="PASS" start="2024-11-22T12:13:37.031866" elapsed="0.003067"/>
</branch>
<branch type="ELSE">
<kw name="Query" owner="DatabaseLibrary">
<var>${json_response}</var>
<arg>${updated_sql_query}</arg>
<arg>return_dict=${True}</arg>
<doc>Runs a query with the ``select_statement`` and returns the result as list of rows.
The type of row values depends on the database module -
usually they are tuples or tuple-like objects.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:37.035008" elapsed="0.000011"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:37.034950" elapsed="0.000088"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:37.031860" elapsed="0.003190"/>
</if>
<kw name="Disconnect From Database" owner="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<status status="PASS" start="2024-11-22T12:13:37.035093" elapsed="0.000094"/>
</kw>
<return>
<value>${json_response}</value>
<status status="PASS" start="2024-11-22T12:13:37.035207" elapsed="0.000014"/>
</return>
<arg>delete_hero_by_natid</arg>
<arg>${cleanup_dict}</arg>
<status status="PASS" start="2024-11-22T12:13:37.017123" elapsed="0.018142"/>
</kw>
<var name="${item}">['natid-105', 'Dexter', 'MALE', '1996-01-01T23:59:59', '', '1000.00', '10.00', '']</var>
<status status="PASS" start="2024-11-22T12:13:37.016630" elapsed="0.018653"/>
</iter>
<iter>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2024-11-22T12:13:37.035705" level="INFO">${cleanup_dict} = {'value_natid': 'natid-106'}</msg>
<var>${cleanup_dict}</var>
<arg>value_natid=${item[0]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2024-11-22T12:13:37.035379" elapsed="0.000338"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<kw name="Connect To Database" owner="DatabaseLibrary">
<msg time="2024-11-22T12:13:37.036039" level="INFO">Looking for configuration file: 'resources/db.cfg'</msg>
<msg time="2024-11-22T12:13:37.036058" level="INFO">Configuration file doesn't exist</msg>
<msg time="2024-11-22T12:13:37.036132" level="INFO">Connect to DB using : mysql.connector.connect(database='testdb', user='user', password=***, host='localhost', port=3306)</msg>
<arg>${DB_API}</arg>
<arg>${DB_NAME}</arg>
<arg>${DB_USER}</arg>
<arg>${DB_PASSWORD}</arg>
<arg>${DB_HOST}</arg>
<arg>${DB_PORT}</arg>
<doc>Creates a database connection using the DB API 2.0 ``db_module`` and the parameters provided.
Along with listed commonly used arguments (`db_name`, `db_host` etc.)
you can set any other DB module specific parameters as key/value pairs.</doc>
<status status="PASS" start="2024-11-22T12:13:37.035928" elapsed="0.004506"/>
</kw>
<kw name="Update SQL Queries With Arguments Dictionary" owner="sql-helper">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-11-22T12:13:37.047464" level="INFO" html="true">Getting file '&lt;a href="file:///Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/object-repo/sql-queries/delete_hero_by_natid.sql"&gt;/Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/object-repo/sql-queries/delete_hero_by_natid.sql&lt;/a&gt;'.</msg>
<msg time="2024-11-22T12:13:37.047542" level="INFO">${sql_query} = DELETE FROM testdb.working_class_heroes
WHERE natid = "value_natid"</msg>
<var>${sql_query}</var>
<arg>./object-repo/sql-queries/${sql_file_name}.sql</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-11-22T12:13:37.047358" elapsed="0.000194"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2024-11-22T12:13:37.047948" level="INFO">Argument types are:
&lt;class 'robot.utils.dotdict.DotDict'&gt;
&lt;class 'str'&gt;</msg>
<msg time="2024-11-22T12:13:37.048001" level="FAIL">{'value_natid': 'natid-106'} != </msg>
<arg>${args_dict}</arg>
<arg>${EMPTY}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="FAIL" start="2024-11-22T12:13:37.047685" elapsed="0.000353">{'value_natid': 'natid-106'} != </status>
</kw>
<msg time="2024-11-22T12:13:37.048079" level="INFO">${empty_status} = False</msg>
<var>${empty_status}</var>
<arg>Should Be Equal As Strings</arg>
<arg>${args_dict}</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-11-22T12:13:37.047617" elapsed="0.000471"/>
</kw>
<if>
<branch type="IF" condition="'${empty_status}' == '${False}'">
<if>
<branch type="IF" condition="${args_dict}">
<for flavor="IN">
<iter>
<kw name="Convert To String" owner="BuiltIn">
<msg time="2024-11-22T12:13:37.048524" level="INFO">${args_key_str} = value_natid</msg>
<var>${args_key_str}</var>
<arg>${args_key}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="PASS" start="2024-11-22T12:13:37.048340" elapsed="0.000195"/>
</kw>
<kw name="Convert To String" owner="BuiltIn">
<msg time="2024-11-22T12:13:37.048657" level="INFO">${args_value_str} = natid-106</msg>
<var>${args_value_str}</var>
<arg>${args_dict}[${args_key_str}]</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="PASS" start="2024-11-22T12:13:37.048587" elapsed="0.000079"/>
</kw>
<kw name="Replace String" owner="String">
<msg time="2024-11-22T12:13:37.048790" level="INFO">${sql_query} = DELETE FROM testdb.working_class_heroes
WHERE natid = "natid-106"</msg>
<var>${sql_query}</var>
<arg>${sql_query}</arg>
<arg>${args_key_str}</arg>
<arg>${args_value_str}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="PASS" start="2024-11-22T12:13:37.048717" elapsed="0.000083"/>
</kw>
<var name="${args_key}">value_natid</var>
<status status="PASS" start="2024-11-22T12:13:37.048292" elapsed="0.000528"/>
</iter>
<var>${args_key}</var>
<value>@{args_dict}</value>
<status status="PASS" start="2024-11-22T12:13:37.048236" elapsed="0.000604"/>
</for>
<status status="PASS" start="2024-11-22T12:13:37.048201" elapsed="0.000658"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:37.048195" elapsed="0.000677"/>
</if>
<status status="PASS" start="2024-11-22T12:13:37.048128" elapsed="0.000753"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:37.048117" elapsed="0.000775"/>
</if>
<return>
<value>${sql_query}</value>
<status status="PASS" start="2024-11-22T12:13:37.048905" elapsed="0.000016"/>
</return>
<msg time="2024-11-22T12:13:37.048969" level="INFO">${updated_sql_query} = DELETE FROM testdb.working_class_heroes
WHERE natid = "natid-106"</msg>
<var>${updated_sql_query}</var>
<arg>${sql_file_name}</arg>
<arg>${args_dict}</arg>
<status status="PASS" start="2024-11-22T12:13:37.047183" elapsed="0.001795"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<arg>${updated_sql_query}</arg>
<arg>DELETE</arg>
<arg>ignore_case=${True}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-11-22T12:13:37.049098" elapsed="0.000085"/>
</kw>
<msg time="2024-11-22T12:13:37.049217" level="INFO">${delete_status} = True</msg>
<var>${delete_status}</var>
<arg>Should Contain</arg>
<arg>${updated_sql_query}</arg>
<arg>DELETE</arg>
<arg>ignore_case=${True}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-11-22T12:13:37.049034" elapsed="0.000192"/>
</kw>
<if>
<branch type="IF" condition="'${delete_status}' == '${True}'">
<kw name="Execute Sql String" owner="DatabaseLibrary">
<msg time="2024-11-22T12:13:37.049847" level="INFO" html="true">Executing sql:&lt;br&gt;&lt;code style="font-weight: bold;"&gt;DELETE FROM testdb.working_class_heroes
WHERE natid = "natid-106"&lt;/code&gt;</msg>
<msg time="2024-11-22T12:13:37.051781" level="INFO">${json_response} = None</msg>
<var>${json_response}</var>
<arg>${updated_sql_query}</arg>
<doc>Executes the ``sql_string`` as a single SQL command.</doc>
<status status="PASS" start="2024-11-22T12:13:37.049339" elapsed="0.002453"/>
</kw>
<status status="PASS" start="2024-11-22T12:13:37.049256" elapsed="0.002556"/>
</branch>
<branch type="ELSE">
<kw name="Query" owner="DatabaseLibrary">
<var>${json_response}</var>
<arg>${updated_sql_query}</arg>
<arg>return_dict=${True}</arg>
<doc>Runs a query with the ``select_statement`` and returns the result as list of rows.
The type of row values depends on the database module -
usually they are tuples or tuple-like objects.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:37.051885" elapsed="0.000010"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:37.051827" elapsed="0.000086"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:37.049250" elapsed="0.002675"/>
</if>
<kw name="Disconnect From Database" owner="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<status status="PASS" start="2024-11-22T12:13:37.051967" elapsed="0.000091"/>
</kw>
<return>
<value>${json_response}</value>
<status status="PASS" start="2024-11-22T12:13:37.052077" elapsed="0.000015"/>
</return>
<arg>delete_hero_by_natid</arg>
<arg>${cleanup_dict}</arg>
<status status="PASS" start="2024-11-22T12:13:37.035807" elapsed="0.016328"/>
</kw>
<var name="${item}">['natid-106', 'Greg', 'MALE', '1996-01-01T23:59:59', '', '10320.00', '10.00', '']</var>
<status status="PASS" start="2024-11-22T12:13:37.035329" elapsed="0.016823"/>
</iter>
<iter>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2024-11-22T12:13:37.052577" level="INFO">${cleanup_dict} = {'value_natid': 'natid-107'}</msg>
<var>${cleanup_dict}</var>
<arg>value_natid=${item[0]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2024-11-22T12:13:37.052247" elapsed="0.000341"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<kw name="Connect To Database" owner="DatabaseLibrary">
<msg time="2024-11-22T12:13:37.052923" level="INFO">Looking for configuration file: 'resources/db.cfg'</msg>
<msg time="2024-11-22T12:13:37.052943" level="INFO">Configuration file doesn't exist</msg>
<msg time="2024-11-22T12:13:37.053018" level="INFO">Connect to DB using : mysql.connector.connect(database='testdb', user='user', password=***, host='localhost', port=3306)</msg>
<arg>${DB_API}</arg>
<arg>${DB_NAME}</arg>
<arg>${DB_USER}</arg>
<arg>${DB_PASSWORD}</arg>
<arg>${DB_HOST}</arg>
<arg>${DB_PORT}</arg>
<doc>Creates a database connection using the DB API 2.0 ``db_module`` and the parameters provided.
Along with listed commonly used arguments (`db_name`, `db_host` etc.)
you can set any other DB module specific parameters as key/value pairs.</doc>
<status status="PASS" start="2024-11-22T12:13:37.052801" elapsed="0.006075"/>
</kw>
<kw name="Update SQL Queries With Arguments Dictionary" owner="sql-helper">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-11-22T12:13:37.059464" level="INFO" html="true">Getting file '&lt;a href="file:///Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/object-repo/sql-queries/delete_hero_by_natid.sql"&gt;/Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/object-repo/sql-queries/delete_hero_by_natid.sql&lt;/a&gt;'.</msg>
<msg time="2024-11-22T12:13:37.059545" level="INFO">${sql_query} = DELETE FROM testdb.working_class_heroes
WHERE natid = "value_natid"</msg>
<var>${sql_query}</var>
<arg>./object-repo/sql-queries/${sql_file_name}.sql</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-11-22T12:13:37.059339" elapsed="0.000216"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2024-11-22T12:13:37.059958" level="INFO">Argument types are:
&lt;class 'robot.utils.dotdict.DotDict'&gt;
&lt;class 'str'&gt;</msg>
<msg time="2024-11-22T12:13:37.060015" level="FAIL">{'value_natid': 'natid-107'} != </msg>
<arg>${args_dict}</arg>
<arg>${EMPTY}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="FAIL" start="2024-11-22T12:13:37.059693" elapsed="0.000366">{'value_natid': 'natid-107'} != </status>
</kw>
<msg time="2024-11-22T12:13:37.060102" level="INFO">${empty_status} = False</msg>
<var>${empty_status}</var>
<arg>Should Be Equal As Strings</arg>
<arg>${args_dict}</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-11-22T12:13:37.059623" elapsed="0.000488"/>
</kw>
<if>
<branch type="IF" condition="'${empty_status}' == '${False}'">
<if>
<branch type="IF" condition="${args_dict}">
<for flavor="IN">
<iter>
<kw name="Convert To String" owner="BuiltIn">
<msg time="2024-11-22T12:13:37.060442" level="INFO">${args_key_str} = value_natid</msg>
<var>${args_key_str}</var>
<arg>${args_key}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="PASS" start="2024-11-22T12:13:37.060374" elapsed="0.000078"/>
</kw>
<kw name="Convert To String" owner="BuiltIn">
<msg time="2024-11-22T12:13:37.060572" level="INFO">${args_value_str} = natid-107</msg>
<var>${args_value_str}</var>
<arg>${args_dict}[${args_key_str}]</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="PASS" start="2024-11-22T12:13:37.060501" elapsed="0.000080"/>
</kw>
<kw name="Replace String" owner="String">
<msg time="2024-11-22T12:13:37.060706" level="INFO">${sql_query} = DELETE FROM testdb.working_class_heroes
WHERE natid = "natid-107"</msg>
<var>${sql_query}</var>
<arg>${sql_query}</arg>
<arg>${args_key_str}</arg>
<arg>${args_value_str}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="PASS" start="2024-11-22T12:13:37.060632" elapsed="0.000084"/>
</kw>
<var name="${args_key}">value_natid</var>
<status status="PASS" start="2024-11-22T12:13:37.060324" elapsed="0.000411"/>
</iter>
<var>${args_key}</var>
<value>@{args_dict}</value>
<status status="PASS" start="2024-11-22T12:13:37.060268" elapsed="0.000487"/>
</for>
<status status="PASS" start="2024-11-22T12:13:37.060229" elapsed="0.000547"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:37.060223" elapsed="0.000568"/>
</if>
<status status="PASS" start="2024-11-22T12:13:37.060151" elapsed="0.000649"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:37.060141" elapsed="0.000669"/>
</if>
<return>
<value>${sql_query}</value>
<status status="PASS" start="2024-11-22T12:13:37.060824" elapsed="0.000105"/>
</return>
<msg time="2024-11-22T12:13:37.061097" level="INFO">${updated_sql_query} = DELETE FROM testdb.working_class_heroes
WHERE natid = "natid-107"</msg>
<var>${updated_sql_query}</var>
<arg>${sql_file_name}</arg>
<arg>${args_dict}</arg>
<status status="PASS" start="2024-11-22T12:13:37.059148" elapsed="0.001963"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<arg>${updated_sql_query}</arg>
<arg>DELETE</arg>
<arg>ignore_case=${True}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-11-22T12:13:37.061234" elapsed="0.000086"/>
</kw>
<msg time="2024-11-22T12:13:37.061352" level="INFO">${delete_status} = True</msg>
<var>${delete_status}</var>
<arg>Should Contain</arg>
<arg>${updated_sql_query}</arg>
<arg>DELETE</arg>
<arg>ignore_case=${True}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-11-22T12:13:37.061170" elapsed="0.000191"/>
</kw>
<if>
<branch type="IF" condition="'${delete_status}' == '${True}'">
<kw name="Execute Sql String" owner="DatabaseLibrary">
<msg time="2024-11-22T12:13:37.061875" level="INFO" html="true">Executing sql:&lt;br&gt;&lt;code style="font-weight: bold;"&gt;DELETE FROM testdb.working_class_heroes
WHERE natid = "natid-107"&lt;/code&gt;</msg>
<msg time="2024-11-22T12:13:37.064613" level="INFO">${json_response} = None</msg>
<var>${json_response}</var>
<arg>${updated_sql_query}</arg>
<doc>Executes the ``sql_string`` as a single SQL command.</doc>
<status status="PASS" start="2024-11-22T12:13:37.061481" elapsed="0.003144"/>
</kw>
<status status="PASS" start="2024-11-22T12:13:37.061392" elapsed="0.003253"/>
</branch>
<branch type="ELSE">
<kw name="Query" owner="DatabaseLibrary">
<var>${json_response}</var>
<arg>${updated_sql_query}</arg>
<arg>return_dict=${True}</arg>
<doc>Runs a query with the ``select_statement`` and returns the result as list of rows.
The type of row values depends on the database module -
usually they are tuples or tuple-like objects.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:37.064713" elapsed="0.000010"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:37.064660" elapsed="0.000081"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:37.061385" elapsed="0.003368"/>
</if>
<kw name="Disconnect From Database" owner="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<status status="PASS" start="2024-11-22T12:13:37.064797" elapsed="0.000104"/>
</kw>
<return>
<value>${json_response}</value>
<status status="PASS" start="2024-11-22T12:13:37.064920" elapsed="0.000017"/>
</return>
<arg>delete_hero_by_natid</arg>
<arg>${cleanup_dict}</arg>
<status status="PASS" start="2024-11-22T12:13:37.052680" elapsed="0.012301"/>
</kw>
<var name="${item}">['natid-107', 'Mary Molo', 'FEMALE', '1996-01-01T23:59:59', '', '1000.50', '10.28', '']</var>
<status status="PASS" start="2024-11-22T12:13:37.052199" elapsed="0.012802"/>
</iter>
<var>${item}</var>
<value>@{csv_list}</value>
<status status="PASS" start="2024-11-22T12:13:36.671808" elapsed="0.393215"/>
</for>
<arg>${positive_test_data_path}</arg>
<doc>Precondition to clear DB data before running test</doc>
<status status="PASS" start="2024-11-22T12:13:36.670506" elapsed="0.394549"/>
</kw>
<kw name="Login As Clerk" owner="clerk">
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T12:13:37.065447" level="INFO">
Logging In As Clerk</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T12:13:37.065387" elapsed="0.000076"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T12:13:37.065524" elapsed="0.000065"/>
</kw>
<arg>Logging In As Clerk</arg>
<status status="PASS" start="2024-11-22T12:13:37.065287" elapsed="0.000328"/>
</kw>
<kw name="Login With Credential" owner="login">
<kw name="Page Should Contain Element With Scroll And Retry" owner="generic">
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Page Should Contain Element With Scroll" owner="generic">
<kw name="Scroll Element Into View" owner="SeleniumLibrary">
<arg>${xpath}</arg>
<doc>Scrolls the element identified by ``locator`` into view.</doc>
<status status="PASS" start="2024-11-22T12:13:37.067133" elapsed="0.286664"/>
</kw>
<kw name="Page Should Contain Element" owner="SeleniumLibrary">
<msg time="2024-11-22T12:13:37.362741" level="INFO">Current page contains element '//h1[normalize-space()='Working Class Hero System']'.</msg>
<arg>${xpath}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<status status="PASS" start="2024-11-22T12:13:37.354219" elapsed="0.008697"/>
</kw>
<arg>${xpath}</arg>
<status status="PASS" start="2024-11-22T12:13:37.067020" elapsed="0.296042"/>
</kw>
<arg>10x</arg>
<arg>50ms</arg>
<arg>Page Should Contain Element With Scroll</arg>
<arg>${xpath}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-11-22T12:13:37.066618" elapsed="0.296515"/>
</kw>
<arg>${lbl_header_login}</arg>
<status status="PASS" start="2024-11-22T12:13:37.066509" elapsed="0.296704"/>
</kw>
<kw name="Get Login Credential" owner="login">
<kw name="Read Csv File To Associative" owner="CSVLibrary">
<msg time="2024-11-22T12:13:37.364718" level="INFO">${credential_dict_list} = [{'role': 'Clerk', 'username': 'clerk', 'password': 'clerk'}, {'role': 'Book Keeper', 'username': 'bk', 'password': 'bk'}]</msg>
<var>${credential_dict_list}</var>
<arg>./test-data/role-credential.csv</arg>
<doc>Read CSV file and return its content as a Python list of dictionaries.</doc>
<status status="PASS" start="2024-11-22T12:13:37.364023" elapsed="0.000727"/>
</kw>
<for flavor="IN">
<iter>
<if>
<branch type="IF" condition="'${item['role']}' == '${role}'">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-11-22T12:13:37.366729" level="INFO">${username} = clerk</msg>
<var>${username}</var>
<arg>${item['username']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-11-22T12:13:37.366055" elapsed="0.000703"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-11-22T12:13:37.367934" level="INFO">${password} = clerk</msg>
<var>${password}</var>
<arg>${item['password']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-11-22T12:13:37.367041" elapsed="0.000929"/>
</kw>
<status status="PASS" start="2024-11-22T12:13:37.365143" elapsed="0.002899"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:37.365120" elapsed="0.002981"/>
</if>
<var name="${item}">{'role': 'Clerk', 'username': 'clerk', 'password': 'clerk'}</var>
<status status="PASS" start="2024-11-22T12:13:37.365061" elapsed="0.003065"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item['role']}' == '${role}'">
<kw name="Set Variable" owner="BuiltIn">
<var>${username}</var>
<arg>${item['username']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:37.369075" elapsed="0.000031"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<var>${password}</var>
<arg>${item['password']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:37.369234" elapsed="0.000024"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:37.368338" elapsed="0.000962"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:37.368322" elapsed="0.001013"/>
</if>
<var name="${item}">{'role': 'Book Keeper', 'username': 'bk', 'password': 'bk'}</var>
<status status="PASS" start="2024-11-22T12:13:37.368279" elapsed="0.001077"/>
</iter>
<var>${item}</var>
<value>@{credential_dict_list}</value>
<status status="PASS" start="2024-11-22T12:13:37.364830" elapsed="0.004564"/>
</for>
<return>
<value>${username}</value>
<value>${password}</value>
<status status="PASS" start="2024-11-22T12:13:37.369451" elapsed="0.000046"/>
</return>
<msg time="2024-11-22T12:13:37.369667" level="INFO">${username} = clerk</msg>
<msg time="2024-11-22T12:13:37.369708" level="INFO">${password} = clerk</msg>
<var>${username}</var>
<var>${password}</var>
<arg>${role}</arg>
<doc>Get Book Keeper Login Credential From Credential Data Files</doc>
<status status="PASS" start="2024-11-22T12:13:37.363590" elapsed="0.006141"/>
</kw>
<kw name="Input Text With Scroll And Retry" owner="generic">
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Input Text With Scroll" owner="generic">
<kw name="Scroll Element Into View" owner="SeleniumLibrary">
<arg>${xpath}</arg>
<doc>Scrolls the element identified by ``locator`` into view.</doc>
<status status="PASS" start="2024-11-22T12:13:37.370757" elapsed="0.274679"/>
</kw>
<kw name="Input Text" owner="SeleniumLibrary">
<msg time="2024-11-22T12:13:37.646721" level="INFO">Typing text 'clerk' into text field '//input[@id='username-in']'.</msg>
<arg>${xpath}</arg>
<arg>${value}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<status status="PASS" start="2024-11-22T12:13:37.645987" elapsed="0.097223"/>
</kw>
<arg>${xpath}</arg>
<arg>${value}</arg>
<status status="PASS" start="2024-11-22T12:13:37.370457" elapsed="0.372832"/>
</kw>
<arg>10x</arg>
<arg>50ms</arg>
<arg>Input Text With Scroll</arg>
<arg>${xpath}</arg>
<arg>${value}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-11-22T12:13:37.370209" elapsed="0.373112"/>
</kw>
<arg>${input_username_login}</arg>
<arg>${username}</arg>
<status status="PASS" start="2024-11-22T12:13:37.369886" elapsed="0.373468"/>
</kw>
<kw name="Input Text With Scroll And Retry" owner="generic">
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Input Text With Scroll" owner="generic">
<kw name="Scroll Element Into View" owner="SeleniumLibrary">
<arg>${xpath}</arg>
<doc>Scrolls the element identified by ``locator`` into view.</doc>
<status status="PASS" start="2024-11-22T12:13:37.743923" elapsed="0.263157"/>
</kw>
<kw name="Input Text" owner="SeleniumLibrary">
<msg time="2024-11-22T12:13:38.008332" level="INFO">Typing text 'clerk' into text field '//input[@id='password-in']'.</msg>
<arg>${xpath}</arg>
<arg>${value}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<status status="PASS" start="2024-11-22T12:13:38.007662" elapsed="0.058704"/>
</kw>
<arg>${xpath}</arg>
<arg>${value}</arg>
<status status="PASS" start="2024-11-22T12:13:37.743794" elapsed="0.322651"/>
</kw>
<arg>10x</arg>
<arg>50ms</arg>
<arg>Input Text With Scroll</arg>
<arg>${xpath}</arg>
<arg>${value}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-11-22T12:13:37.743666" elapsed="0.322810"/>
</kw>
<arg>${input_password_login}</arg>
<arg>${password}</arg>
<status status="PASS" start="2024-11-22T12:13:37.743465" elapsed="0.323046"/>
</kw>
<kw name="Click Element With Scroll And Retry" owner="generic">
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Click Element With Scroll" owner="generic">
<kw name="Scroll Element Into View" owner="SeleniumLibrary">
<arg>${xpath}</arg>
<doc>Scrolls the element identified by ``locator`` into view.</doc>
<status status="PASS" start="2024-11-22T12:13:38.067286" elapsed="0.282845"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-11-22T12:13:38.351170" level="INFO">Clicking element '//input[@type='submit']'.</msg>
<arg>${xpath}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-11-22T12:13:38.350643" elapsed="0.711073"/>
</kw>
<arg>${xpath}</arg>
<status status="PASS" start="2024-11-22T12:13:38.066980" elapsed="0.994905"/>
</kw>
<arg>10x</arg>
<arg>50ms</arg>
<arg>Click Element With Scroll</arg>
<arg>${xpath}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-11-22T12:13:38.066840" elapsed="0.995083"/>
</kw>
<arg>${btn_submit_login}</arg>
<status status="PASS" start="2024-11-22T12:13:38.066627" elapsed="1.010645"/>
</kw>
<arg>Clerk</arg>
<doc>Login With Credential</doc>
<status status="PASS" start="2024-11-22T12:13:37.065716" elapsed="2.011632"/>
</kw>
<doc>Login As Clerk</doc>
<status status="PASS" start="2024-11-22T12:13:37.065170" elapsed="2.012228"/>
</kw>
<kw name="Upload CSV Files Via Clerk Dashboard" owner="clerk">
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T12:13:39.078721" level="INFO">
Upload CSV files from clerk dashboard to create heroes</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T12:13:39.078632" elapsed="0.000112"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T12:13:39.078800" elapsed="0.000068"/>
</kw>
<arg>Upload CSV files from clerk dashboard to create heroes</arg>
<status status="PASS" start="2024-11-22T12:13:39.078505" elapsed="0.000393"/>
</kw>
<kw name="Page Should Contain Element With Scroll And Retry" owner="generic">
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Page Should Contain Element With Scroll" owner="generic">
<kw name="Scroll Element Into View" owner="SeleniumLibrary">
<arg>${xpath}</arg>
<doc>Scrolls the element identified by ``locator`` into view.</doc>
<status status="PASS" start="2024-11-22T12:13:39.079349" elapsed="0.269599"/>
</kw>
<kw name="Page Should Contain Element" owner="SeleniumLibrary">
<msg time="2024-11-22T12:13:39.357442" level="INFO">Current page contains element '//h1[normalize-space()='Clerk Dashboard']'.</msg>
<arg>${xpath}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<status status="PASS" start="2024-11-22T12:13:39.349598" elapsed="0.007965"/>
</kw>
<arg>${xpath}</arg>
<status status="PASS" start="2024-11-22T12:13:39.079222" elapsed="0.278476"/>
</kw>
<arg>10x</arg>
<arg>50ms</arg>
<arg>Page Should Contain Element With Scroll</arg>
<arg>${xpath}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-11-22T12:13:39.079098" elapsed="0.278664"/>
</kw>
<arg>${lbl_header_clerk}</arg>
<status status="PASS" start="2024-11-22T12:13:39.078961" elapsed="0.278876"/>
</kw>
<kw name="Click Element With Scroll And Retry" owner="generic">
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Click Element With Scroll" owner="generic">
<kw name="Scroll Element Into View" owner="SeleniumLibrary">
<arg>${xpath}</arg>
<doc>Scrolls the element identified by ``locator`` into view.</doc>
<status status="PASS" start="2024-11-22T12:13:39.359079" elapsed="0.272085"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-11-22T12:13:39.632290" level="INFO">Clicking element '//button[@id='dropdownMenuButton2']'.</msg>
<arg>${xpath}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-11-22T12:13:39.631733" elapsed="0.057672"/>
</kw>
<arg>${xpath}</arg>
<status status="PASS" start="2024-11-22T12:13:39.358794" elapsed="0.330724"/>
</kw>
<arg>10x</arg>
<arg>50ms</arg>
<arg>Click Element With Scroll</arg>
<arg>${xpath}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-11-22T12:13:39.358526" elapsed="0.331031"/>
</kw>
<arg>${btn_add_hero_clerk}</arg>
<status status="PASS" start="2024-11-22T12:13:39.358114" elapsed="0.331487"/>
</kw>
<kw name="Click Element With Scroll And Retry" owner="generic">
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Click Element With Scroll" owner="generic">
<kw name="Scroll Element Into View" owner="SeleniumLibrary">
<arg>${xpath}</arg>
<doc>Scrolls the element identified by ``locator`` into view.</doc>
<status status="PASS" start="2024-11-22T12:13:39.690383" elapsed="0.270709"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-11-22T12:13:39.961749" level="INFO">Clicking element '//a[@class='dropdown-item' and text()='Upload a csv file']'.</msg>
<arg>${xpath}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-11-22T12:13:39.961392" elapsed="0.112772"/>
</kw>
<arg>${xpath}</arg>
<status status="PASS" start="2024-11-22T12:13:39.690217" elapsed="0.384019"/>
</kw>
<arg>10x</arg>
<arg>50ms</arg>
<arg>Click Element With Scroll</arg>
<arg>${xpath}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-11-22T12:13:39.690046" elapsed="0.384218"/>
</kw>
<arg>${dropdown_option_upload_csv_clerk}</arg>
<status status="PASS" start="2024-11-22T12:13:39.689760" elapsed="0.384534"/>
</kw>
<kw name="Page Should Contain Element With Scroll And Retry" owner="generic">
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Page Should Contain Element With Scroll" owner="generic">
<kw name="Scroll Element Into View" owner="SeleniumLibrary">
<arg>${xpath}</arg>
<doc>Scrolls the element identified by ``locator`` into view.</doc>
<status status="PASS" start="2024-11-22T12:13:40.075067" elapsed="0.273568"/>
</kw>
<kw name="Page Should Contain Element" owner="SeleniumLibrary">
<msg time="2024-11-22T12:13:40.357352" level="INFO">Current page contains element '//input[@id='upload-csv-file']'.</msg>
<arg>${xpath}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<status status="PASS" start="2024-11-22T12:13:40.349186" elapsed="0.008301"/>
</kw>
<arg>${xpath}</arg>
<status status="PASS" start="2024-11-22T12:13:40.074839" elapsed="0.282795"/>
</kw>
<arg>10x</arg>
<arg>50ms</arg>
<arg>Page Should Contain Element With Scroll</arg>
<arg>${xpath}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-11-22T12:13:40.074606" elapsed="0.283102"/>
</kw>
<arg>${input_upload_csv_file_clerk}</arg>
<status status="PASS" start="2024-11-22T12:13:40.074402" elapsed="0.283389"/>
</kw>
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T12:13:40.358840" level="INFO">
Uploading CSV Files From Path "/Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/test-data/US2-data-positive.csv"</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T12:13:40.358659" elapsed="0.000233"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T12:13:40.359031" elapsed="0.000216"/>
</kw>
<arg>Uploading CSV Files From Path "${test_data_path}"</arg>
<status status="PASS" start="2024-11-22T12:13:40.358100" elapsed="0.001218"/>
</kw>
<kw name="Choose File" owner="SeleniumLibrary">
<msg time="2024-11-22T12:13:40.359836" level="INFO">Sending /Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/test-data/US2-data-positive.csv to browser.</msg>
<arg>${input_upload_csv_file_clerk}</arg>
<arg>${test_data_path}</arg>
<doc>Inputs the ``file_path`` into the file input field ``locator``.</doc>
<status status="PASS" start="2024-11-22T12:13:40.359489" elapsed="0.037524"/>
</kw>
<kw name="Click Element With Scroll And Retry" owner="generic">
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Click Element With Scroll" owner="generic">
<kw name="Scroll Element Into View" owner="SeleniumLibrary">
<arg>${xpath}</arg>
<doc>Scrolls the element identified by ``locator`` into view.</doc>
<status status="PASS" start="2024-11-22T12:13:40.398044" elapsed="0.268438"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-11-22T12:13:40.667667" level="INFO">Clicking element '//button[normalize-space()='Create']'.</msg>
<arg>${xpath}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-11-22T12:13:40.667077" elapsed="0.048204"/>
</kw>
<arg>${xpath}</arg>
<status status="PASS" start="2024-11-22T12:13:40.397886" elapsed="0.317490"/>
</kw>
<arg>10x</arg>
<arg>50ms</arg>
<arg>Click Element With Scroll</arg>
<arg>${xpath}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-11-22T12:13:40.397575" elapsed="0.317931"/>
</kw>
<arg>${btn_create_clerk}</arg>
<status status="PASS" start="2024-11-22T12:13:40.397313" elapsed="0.318233"/>
</kw>
<if>
<branch type="IF" condition="'${flow}' == 'Positive'">
<kw name="Page Should Contain Element With Scroll And Retry" owner="generic">
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Page Should Contain Element With Scroll" owner="generic">
<kw name="Scroll Element Into View" owner="SeleniumLibrary">
<msg time="2024-11-22T12:13:40.846625" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="screenshots/selenium-screenshot-1.png"&gt;&lt;img src="screenshots/selenium-screenshot-1.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg time="2024-11-22T12:13:40.846734" level="FAIL">Element with locator '//div[@class='bg-success pt-2']' not found.</msg>
<arg>${xpath}</arg>
<doc>Scrolls the element identified by ``locator`` into view.</doc>
<status status="FAIL" start="2024-11-22T12:13:40.716386" elapsed="0.133306">Element with locator '//div[@class='bg-success pt-2']' not found.</status>
</kw>
<kw name="Page Should Contain Element" owner="SeleniumLibrary">
<arg>${xpath}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:40.849817" elapsed="0.000017"/>
</kw>
<arg>${xpath}</arg>
<status status="FAIL" start="2024-11-22T12:13:40.716246" elapsed="0.133662">Element with locator '//div[@class='bg-success pt-2']' not found.</status>
</kw>
<kw name="Page Should Contain Element With Scroll" owner="generic">
<kw name="Scroll Element Into View" owner="SeleniumLibrary">
<msg time="2024-11-22T12:13:40.986874" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="screenshots/selenium-screenshot-2.png"&gt;&lt;img src="screenshots/selenium-screenshot-2.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg time="2024-11-22T12:13:40.986955" level="FAIL">Element with locator '//div[@class='bg-success pt-2']' not found.</msg>
<arg>${xpath}</arg>
<doc>Scrolls the element identified by ``locator`` into view.</doc>
<status status="FAIL" start="2024-11-22T12:13:40.900513" elapsed="0.086712">Element with locator '//div[@class='bg-success pt-2']' not found.</status>
</kw>
<kw name="Page Should Contain Element" owner="SeleniumLibrary">
<arg>${xpath}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:40.987342" elapsed="0.000016"/>
</kw>
<arg>${xpath}</arg>
<status status="FAIL" start="2024-11-22T12:13:40.900296" elapsed="0.087115">Element with locator '//div[@class='bg-success pt-2']' not found.</status>
</kw>
<kw name="Page Should Contain Element With Scroll" owner="generic">
<kw name="Scroll Element Into View" owner="SeleniumLibrary">
<msg time="2024-11-22T12:13:41.134152" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="screenshots/selenium-screenshot-3.png"&gt;&lt;img src="screenshots/selenium-screenshot-3.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg time="2024-11-22T12:13:41.134233" level="FAIL">Element with locator '//div[@class='bg-success pt-2']' not found.</msg>
<arg>${xpath}</arg>
<doc>Scrolls the element identified by ``locator`` into view.</doc>
<status status="FAIL" start="2024-11-22T12:13:41.037881" elapsed="0.096589">Element with locator '//div[@class='bg-success pt-2']' not found.</status>
</kw>
<kw name="Page Should Contain Element" owner="SeleniumLibrary">
<arg>${xpath}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:41.134587" elapsed="0.000015"/>
</kw>
<arg>${xpath}</arg>
<status status="FAIL" start="2024-11-22T12:13:41.037651" elapsed="0.096999">Element with locator '//div[@class='bg-success pt-2']' not found.</status>
</kw>
<kw name="Page Should Contain Element With Scroll" owner="generic">
<kw name="Scroll Element Into View" owner="SeleniumLibrary">
<msg time="2024-11-22T12:13:41.288706" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="screenshots/selenium-screenshot-4.png"&gt;&lt;img src="screenshots/selenium-screenshot-4.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg time="2024-11-22T12:13:41.288786" level="FAIL">Element with locator '//div[@class='bg-success pt-2']' not found.</msg>
<arg>${xpath}</arg>
<doc>Scrolls the element identified by ``locator`` into view.</doc>
<status status="FAIL" start="2024-11-22T12:13:41.185865" elapsed="0.103165">Element with locator '//div[@class='bg-success pt-2']' not found.</status>
</kw>
<kw name="Page Should Contain Element" owner="SeleniumLibrary">
<arg>${xpath}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:41.289139" elapsed="0.000014"/>
</kw>
<arg>${xpath}</arg>
<status status="FAIL" start="2024-11-22T12:13:41.185556" elapsed="0.103646">Element with locator '//div[@class='bg-success pt-2']' not found.</status>
</kw>
<kw name="Page Should Contain Element With Scroll" owner="generic">
<kw name="Scroll Element Into View" owner="SeleniumLibrary">
<msg time="2024-11-22T12:13:41.436375" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="screenshots/selenium-screenshot-5.png"&gt;&lt;img src="screenshots/selenium-screenshot-5.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg time="2024-11-22T12:13:41.436458" level="FAIL">Element with locator '//div[@class='bg-success pt-2']' not found.</msg>
<arg>${xpath}</arg>
<doc>Scrolls the element identified by ``locator`` into view.</doc>
<status status="FAIL" start="2024-11-22T12:13:41.339795" elapsed="0.096902">Element with locator '//div[@class='bg-success pt-2']' not found.</status>
</kw>
<kw name="Page Should Contain Element" owner="SeleniumLibrary">
<arg>${xpath}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:41.436804" elapsed="0.000015"/>
</kw>
<arg>${xpath}</arg>
<status status="FAIL" start="2024-11-22T12:13:41.339547" elapsed="0.097322">Element with locator '//div[@class='bg-success pt-2']' not found.</status>
</kw>
<kw name="Page Should Contain Element With Scroll" owner="generic">
<kw name="Scroll Element Into View" owner="SeleniumLibrary">
<msg time="2024-11-22T12:13:41.584042" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="screenshots/selenium-screenshot-6.png"&gt;&lt;img src="screenshots/selenium-screenshot-6.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg time="2024-11-22T12:13:41.584115" level="FAIL">Element with locator '//div[@class='bg-success pt-2']' not found.</msg>
<arg>${xpath}</arg>
<doc>Scrolls the element identified by ``locator`` into view.</doc>
<status status="FAIL" start="2024-11-22T12:13:41.487406" elapsed="0.096939">Element with locator '//div[@class='bg-success pt-2']' not found.</status>
</kw>
<kw name="Page Should Contain Element" owner="SeleniumLibrary">
<arg>${xpath}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:41.584455" elapsed="0.000015"/>
</kw>
<arg>${xpath}</arg>
<status status="FAIL" start="2024-11-22T12:13:41.487175" elapsed="0.097343">Element with locator '//div[@class='bg-success pt-2']' not found.</status>
</kw>
<kw name="Page Should Contain Element With Scroll" owner="generic">
<kw name="Scroll Element Into View" owner="SeleniumLibrary">
<msg time="2024-11-22T12:13:41.721491" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="screenshots/selenium-screenshot-7.png"&gt;&lt;img src="screenshots/selenium-screenshot-7.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg time="2024-11-22T12:13:41.721574" level="FAIL">Element with locator '//div[@class='bg-success pt-2']' not found.</msg>
<arg>${xpath}</arg>
<doc>Scrolls the element identified by ``locator`` into view.</doc>
<status status="FAIL" start="2024-11-22T12:13:41.635210" elapsed="0.086658">Element with locator '//div[@class='bg-success pt-2']' not found.</status>
</kw>
<kw name="Page Should Contain Element" owner="SeleniumLibrary">
<arg>${xpath}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:41.721977" elapsed="0.000015"/>
</kw>
<arg>${xpath}</arg>
<status status="FAIL" start="2024-11-22T12:13:41.635028" elapsed="0.087010">Element with locator '//div[@class='bg-success pt-2']' not found.</status>
</kw>
<kw name="Page Should Contain Element With Scroll" owner="generic">
<kw name="Scroll Element Into View" owner="SeleniumLibrary">
<msg time="2024-11-22T12:13:41.870209" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="screenshots/selenium-screenshot-8.png"&gt;&lt;img src="screenshots/selenium-screenshot-8.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg time="2024-11-22T12:13:41.870281" level="FAIL">Element with locator '//div[@class='bg-success pt-2']' not found.</msg>
<arg>${xpath}</arg>
<doc>Scrolls the element identified by ``locator`` into view.</doc>
<status status="FAIL" start="2024-11-22T12:13:41.772750" elapsed="0.097803">Element with locator '//div[@class='bg-success pt-2']' not found.</status>
</kw>
<kw name="Page Should Contain Element" owner="SeleniumLibrary">
<arg>${xpath}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:41.870666" elapsed="0.000016"/>
</kw>
<arg>${xpath}</arg>
<status status="FAIL" start="2024-11-22T12:13:41.772569" elapsed="0.098183">Element with locator '//div[@class='bg-success pt-2']' not found.</status>
</kw>
<kw name="Page Should Contain Element With Scroll" owner="generic">
<kw name="Scroll Element Into View" owner="SeleniumLibrary">
<msg time="2024-11-22T12:13:42.025041" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="screenshots/selenium-screenshot-9.png"&gt;&lt;img src="screenshots/selenium-screenshot-9.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg time="2024-11-22T12:13:42.025126" level="FAIL">Element with locator '//div[@class='bg-success pt-2']' not found.</msg>
<arg>${xpath}</arg>
<doc>Scrolls the element identified by ``locator`` into view.</doc>
<status status="FAIL" start="2024-11-22T12:13:41.921495" elapsed="0.103881">Element with locator '//div[@class='bg-success pt-2']' not found.</status>
</kw>
<kw name="Page Should Contain Element" owner="SeleniumLibrary">
<arg>${xpath}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:42.025504" elapsed="0.000017"/>
</kw>
<arg>${xpath}</arg>
<status status="FAIL" start="2024-11-22T12:13:41.921290" elapsed="0.104285">Element with locator '//div[@class='bg-success pt-2']' not found.</status>
</kw>
<kw name="Page Should Contain Element With Scroll" owner="generic">
<kw name="Scroll Element Into View" owner="SeleniumLibrary">
<arg>${xpath}</arg>
<doc>Scrolls the element identified by ``locator`` into view.</doc>
<status status="PASS" start="2024-11-22T12:13:42.076166" elapsed="0.273185"/>
</kw>
<kw name="Page Should Contain Element" owner="SeleniumLibrary">
<msg time="2024-11-22T12:13:42.358300" level="INFO">Current page contains element '//div[@class='bg-success pt-2']'.</msg>
<arg>${xpath}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<status status="PASS" start="2024-11-22T12:13:42.349974" elapsed="0.008431"/>
</kw>
<arg>${xpath}</arg>
<status status="PASS" start="2024-11-22T12:13:42.075951" elapsed="0.282582"/>
</kw>
<arg>10x</arg>
<arg>50ms</arg>
<arg>Page Should Contain Element With Scroll</arg>
<arg>${xpath}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-11-22T12:13:40.716116" elapsed="1.642484"/>
</kw>
<arg>${lbl_created_success_clerk}</arg>
<status status="PASS" start="2024-11-22T12:13:40.715899" elapsed="1.642781"/>
</kw>
<status status="PASS" start="2024-11-22T12:13:40.715637" elapsed="1.643100"/>
</branch>
<branch type="ELSE">
<kw name="Page Should Contain Element With Scroll And Retry" owner="generic">
<arg>${lbl_created_unsuccess_warning_clerk}</arg>
<status status="NOT RUN" start="2024-11-22T12:13:42.359171" elapsed="0.000041"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:42.358815" elapsed="0.000434"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:40.715613" elapsed="1.643671"/>
</if>
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T12:13:42.360260" level="INFO">
Uploaded Successfully</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T12:13:42.360030" elapsed="0.000293"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T12:13:42.360485" elapsed="0.000204"/>
</kw>
<arg>Uploaded Successfully</arg>
<status status="PASS" start="2024-11-22T12:13:42.359456" elapsed="0.001313"/>
</kw>
<arg>${positive_test_data_path}</arg>
<arg>Positive</arg>
<doc>Upload CSV files from clerk dashboard to create heroes</doc>
<status status="PASS" start="2024-11-22T12:13:39.078271" elapsed="3.282565"/>
</kw>
<kw name="Verify Uploaded Data In DB" owner="clerk">
<kw name="Read Csv File To List" owner="CSVLibrary">
<msg time="2024-11-22T12:13:42.361968" level="INFO">${csv_list} = [['natid-100', 'Richard Chu', 'MALE', '1996-01-01T23:59:59', '', '1000.12', '10.00', ''], ['natid-101', 'Arthur', 'MALE', '1996-01-01T23:59:59', '', '1000.00', '10.00', ''], ['natid-102', 'Jayden', 'M...</msg>
<var>${csv_list}</var>
<arg>${test_data_path}</arg>
<doc>Read CSV file and return its content as a Python list of tuples.</doc>
<status status="PASS" start="2024-11-22T12:13:42.361473" elapsed="0.000530"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2024-11-22T12:13:42.363410" level="INFO">${dict} = {'value_natid': 'natid-100'}</msg>
<var>${dict}</var>
<arg>value_natid=${item[0]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2024-11-22T12:13:42.362410" elapsed="0.001030"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<kw name="Connect To Database" owner="DatabaseLibrary">
<msg time="2024-11-22T12:13:42.364632" level="INFO">Looking for configuration file: 'resources/db.cfg'</msg>
<msg time="2024-11-22T12:13:42.364686" level="INFO">Configuration file doesn't exist</msg>
<msg time="2024-11-22T12:13:42.364989" level="INFO">Connect to DB using : mysql.connector.connect(database='testdb', user='user', password=***, host='localhost', port=3306)</msg>
<arg>${DB_API}</arg>
<arg>${DB_NAME}</arg>
<arg>${DB_USER}</arg>
<arg>${DB_PASSWORD}</arg>
<arg>${DB_HOST}</arg>
<arg>${DB_PORT}</arg>
<doc>Creates a database connection using the DB API 2.0 ``db_module`` and the parameters provided.
Along with listed commonly used arguments (`db_name`, `db_host` etc.)
you can set any other DB module specific parameters as key/value pairs.</doc>
<status status="PASS" start="2024-11-22T12:13:42.364044" elapsed="0.046021"/>
</kw>
<kw name="Update SQL Queries With Arguments Dictionary" owner="sql-helper">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-11-22T12:13:42.411179" level="INFO" html="true">Getting file '&lt;a href="file:///Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/object-repo/sql-queries/select_hero_by_natid.sql"&gt;/Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/object-repo/sql-queries/select_hero_by_natid.sql&lt;/a&gt;'.</msg>
<msg time="2024-11-22T12:13:42.412968" level="INFO">${sql_query} = SELECT *
FROM testdb.working_class_heroes
WHERE natid='value_natid';</msg>
<var>${sql_query}</var>
<arg>./object-repo/sql-queries/${sql_file_name}.sql</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-11-22T12:13:42.410906" elapsed="0.002088"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2024-11-22T12:13:42.414102" level="INFO">Argument types are:
&lt;class 'robot.utils.dotdict.DotDict'&gt;
&lt;class 'str'&gt;</msg>
<msg time="2024-11-22T12:13:42.414173" level="FAIL">{'value_natid': 'natid-100'} != </msg>
<arg>${args_dict}</arg>
<arg>${EMPTY}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="FAIL" start="2024-11-22T12:13:42.413509" elapsed="0.000706">{'value_natid': 'natid-100'} != </status>
</kw>
<msg time="2024-11-22T12:13:42.414268" level="INFO">${empty_status} = False</msg>
<var>${empty_status}</var>
<arg>Should Be Equal As Strings</arg>
<arg>${args_dict}</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-11-22T12:13:42.413321" elapsed="0.000958"/>
</kw>
<if>
<branch type="IF" condition="'${empty_status}' == '${False}'">
<if>
<branch type="IF" condition="${args_dict}">
<for flavor="IN">
<iter>
<kw name="Convert To String" owner="BuiltIn">
<msg time="2024-11-22T12:13:42.414693" level="INFO">${args_key_str} = value_natid</msg>
<var>${args_key_str}</var>
<arg>${args_key}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="PASS" start="2024-11-22T12:13:42.414609" elapsed="0.000096"/>
</kw>
<kw name="Convert To String" owner="BuiltIn">
<msg time="2024-11-22T12:13:42.414853" level="INFO">${args_value_str} = natid-100</msg>
<var>${args_value_str}</var>
<arg>${args_dict}[${args_key_str}]</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="PASS" start="2024-11-22T12:13:42.414769" elapsed="0.000099"/>
</kw>
<kw name="Replace String" owner="String">
<msg time="2024-11-22T12:13:42.415147" level="INFO">${sql_query} = SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-100';</msg>
<var>${sql_query}</var>
<arg>${sql_query}</arg>
<arg>${args_key_str}</arg>
<arg>${args_value_str}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="PASS" start="2024-11-22T12:13:42.414978" elapsed="0.000191"/>
</kw>
<var name="${args_key}">value_natid</var>
<status status="PASS" start="2024-11-22T12:13:42.414547" elapsed="0.000666"/>
</iter>
<var>${args_key}</var>
<value>@{args_dict}</value>
<status status="PASS" start="2024-11-22T12:13:42.414477" elapsed="0.000779"/>
</for>
<status status="PASS" start="2024-11-22T12:13:42.414435" elapsed="0.000864"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:42.414428" elapsed="0.000900"/>
</if>
<status status="PASS" start="2024-11-22T12:13:42.414334" elapsed="0.001014"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:42.414318" elapsed="0.001054"/>
</if>
<return>
<value>${sql_query}</value>
<status status="PASS" start="2024-11-22T12:13:42.415401" elapsed="0.000040"/>
</return>
<msg time="2024-11-22T12:13:42.415549" level="INFO">${updated_sql_query} = SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-100';</msg>
<var>${updated_sql_query}</var>
<arg>${sql_file_name}</arg>
<arg>${args_dict}</arg>
<status status="PASS" start="2024-11-22T12:13:42.410479" elapsed="0.005092"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-11-22T12:13:42.416087" level="FAIL">'SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-100';' does not contain 'delete'</msg>
<arg>${updated_sql_query}</arg>
<arg>DELETE</arg>
<arg>ignore_case=${True}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-11-22T12:13:42.415836" elapsed="0.000309">'SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-100';' does not contain 'delete'</status>
</kw>
<msg time="2024-11-22T12:13:42.416228" level="INFO">${delete_status} = False</msg>
<var>${delete_status}</var>
<arg>Should Contain</arg>
<arg>${updated_sql_query}</arg>
<arg>DELETE</arg>
<arg>ignore_case=${True}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-11-22T12:13:42.415697" elapsed="0.000550"/>
</kw>
<if>
<branch type="IF" condition="'${delete_status}' == '${True}'">
<kw name="Execute Sql String" owner="DatabaseLibrary">
<var>${json_response}</var>
<arg>${updated_sql_query}</arg>
<doc>Executes the ``sql_string`` as a single SQL command.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:42.416505" elapsed="0.000022"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:42.416315" elapsed="0.000247"/>
</branch>
<branch type="ELSE">
<kw name="Query" owner="DatabaseLibrary">
<msg time="2024-11-22T12:13:42.418374" level="INFO" html="true">Executing sql:&lt;br&gt;&lt;code style="font-weight: bold;"&gt;SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-100';&lt;/code&gt;</msg>
<msg time="2024-11-22T12:13:42.420895" level="INFO" html="true">&lt;div style="max-width: 100%; overflow-x: auto;"&gt;&lt;table style="width: auto; border-collapse: collapse; border: 2px solid rgb(140 140 140)"&gt;&lt;caption style="text-align: left; font-weight: bold; padding: 5px;"&gt;Query returned 1 rows&lt;/caption&gt;&lt;tr&gt;&lt;th scope="col" style="background-color: #d6ecd4; border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;Row&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;id&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;created_at&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;create_by&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;updated_at&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;updated_by&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;birth_date&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;brownie_points&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;death_date&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;gender&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;name&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;natid&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;salary&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;tax_paid&lt;/th&gt;&lt;/tr&gt;&lt;tr style="background-color: #eee;"&gt;&lt;th scope="row" style="background-color: #d6ecd4;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;0&lt;/th&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;23e77512-0161-48df-9ae2-4a36da6a70ad&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;2024-11-22 12:13:41.868759&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;SYSTEM&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;2024-11-22 12:13:41.868759&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;SYSTEM&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;1996-01-01 23:59:59&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;None&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;None&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;MALE&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;Richard Chu&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;natid-100&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;1000.12&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;10.0&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;</msg>
<msg time="2024-11-22T12:13:42.422706" level="INFO">${json_response} = [{'id': '23e77512-0161-48df-9ae2-4a36da6a70ad', 'created_at': datetime.datetime(2024, 11, 22, 12, 13, 41, 868759), 'create_by': 'SYSTEM', 'updated_at': datetime.datetime(2024, 11, 22, 12, 13, 41, 8687...</msg>
<var>${json_response}</var>
<arg>${updated_sql_query}</arg>
<arg>return_dict=${True}</arg>
<doc>Runs a query with the ``select_statement`` and returns the result as list of rows.
The type of row values depends on the database module -
usually they are tuples or tuple-like objects.</doc>
<status status="PASS" start="2024-11-22T12:13:42.416683" elapsed="0.006043"/>
</kw>
<status status="PASS" start="2024-11-22T12:13:42.416590" elapsed="0.006178"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:42.416302" elapsed="0.006490"/>
</if>
<kw name="Disconnect From Database" owner="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<status status="PASS" start="2024-11-22T12:13:42.422884" elapsed="0.000180"/>
</kw>
<return>
<value>${json_response}</value>
<status status="PASS" start="2024-11-22T12:13:42.423101" elapsed="0.000030"/>
</return>
<msg time="2024-11-22T12:13:42.423236" level="INFO">${sql_response} = [{'id': '23e77512-0161-48df-9ae2-4a36da6a70ad', 'created_at': datetime.datetime(2024, 11, 22, 12, 13, 41, 868759), 'create_by': 'SYSTEM', 'updated_at': datetime.datetime(2024, 11, 22, 12, 13, 41, 8687...</msg>
<var>${sql_response}</var>
<arg>select_hero_by_natid</arg>
<arg>${dict}</arg>
<status status="PASS" start="2024-11-22T12:13:42.363707" elapsed="0.059549"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-11-22T12:13:42.423484" level="INFO">${sql_response} = {'id': '23e77512-0161-48df-9ae2-4a36da6a70ad', 'created_at': datetime.datetime(2024, 11, 22, 12, 13, 41, 868759), 'create_by': 'SYSTEM', 'updated_at': datetime.datetime(2024, 11, 22, 12, 13, 41, 86875...</msg>
<var>${sql_response}</var>
<arg>${sql_response}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-11-22T12:13:42.423358" elapsed="0.000145"/>
</kw>
<kw name="Compare String" owner="generic">
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T12:13:42.425571" level="INFO">
Expected natid:
natid-100
Actual natid:
natid-100</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T12:13:42.425449" elapsed="0.000167"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T12:13:42.425746" elapsed="0.000166"/>
</kw>
<arg>Expected ${compare_title}:\n${expected_string}\nActual ${compare_title}:\n${actual_string}</arg>
<status status="PASS" start="2024-11-22T12:13:42.425108" elapsed="0.000871"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${expected_string}</arg>
<arg>${actual_string}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-11-22T12:13:42.426096" elapsed="0.000144"/>
</kw>
<arg>${item[0]}</arg>
<arg>${sql_response['natid']}</arg>
<arg>natid</arg>
<doc>Compare Strings</doc>
<status status="PASS" start="2024-11-22T12:13:42.423617" elapsed="0.002678"/>
</kw>
<kw name="Compare String" owner="generic">
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T12:13:42.427803" level="INFO">
Expected name:
Richard Chu
Actual name:
Richard Chu</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T12:13:42.427723" elapsed="0.000110"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T12:13:42.427920" elapsed="0.000107"/>
</kw>
<arg>Expected ${compare_title}:\n${expected_string}\nActual ${compare_title}:\n${actual_string}</arg>
<status status="PASS" start="2024-11-22T12:13:42.427496" elapsed="0.000582"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${expected_string}</arg>
<arg>${actual_string}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-11-22T12:13:42.428280" elapsed="0.000142"/>
</kw>
<arg>${item[1]}</arg>
<arg>${sql_response['name']}</arg>
<arg>name</arg>
<doc>Compare Strings</doc>
<status status="PASS" start="2024-11-22T12:13:42.426414" elapsed="0.002062"/>
</kw>
<kw name="Compare String" owner="generic">
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T12:13:42.430025" level="INFO">
Expected gender:
MALE
Actual gender:
MALE</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T12:13:42.429933" elapsed="0.000127"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T12:13:42.430165" elapsed="0.000120"/>
</kw>
<arg>Expected ${compare_title}:\n${expected_string}\nActual ${compare_title}:\n${actual_string}</arg>
<status status="PASS" start="2024-11-22T12:13:42.429672" elapsed="0.000662"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${expected_string}</arg>
<arg>${actual_string}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-11-22T12:13:42.430433" elapsed="0.000138"/>
</kw>
<arg>${item[2]}</arg>
<arg>${sql_response['gender']}</arg>
<arg>gender</arg>
<doc>Compare Strings</doc>
<status status="PASS" start="2024-11-22T12:13:42.428591" elapsed="0.002034"/>
</kw>
<kw name="Compare Date" owner="generic">
<if>
<branch type="IF" condition="'${expected_date}' == '${EMPTY}'">
<kw name="Log and Log To Console" owner="generic">
<arg>Expected ${compare_title}:\n${None}\nActual ${compare_title}:\n${actual_date}</arg>
<status status="NOT RUN" start="2024-11-22T12:13:42.432383" elapsed="0.000024"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${None}</arg>
<arg>${actual_date}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:42.432509" elapsed="0.000020"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:42.431845" elapsed="0.000719"/>
</branch>
<branch type="ELSE">
<kw name="Convert Date" owner="DateTime">
<msg time="2024-11-22T12:13:42.435818" level="INFO">${expected_date} = 1996-01-01 23:59:59.000000</msg>
<var>${expected_date}</var>
<arg>${expected_date}</arg>
<arg>result_format=%Y-%m-%d %H:%M:%S.%f</arg>
<doc>Converts between supported `date formats`.</doc>
<status status="PASS" start="2024-11-22T12:13:42.432695" elapsed="0.003155"/>
</kw>
<kw name="Convert Date" owner="DateTime">
<msg time="2024-11-22T12:13:42.436139" level="INFO">${actual_date} = 1996-01-01 23:59:59.000000</msg>
<var>${actual_date}</var>
<arg>${actual_date}</arg>
<arg>result_format=%Y-%m-%d %H:%M:%S.%f</arg>
<doc>Converts between supported `date formats`.</doc>
<status status="PASS" start="2024-11-22T12:13:42.435981" elapsed="0.000181"/>
</kw>
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T12:13:42.436771" level="INFO">
Expected birth_date:
1996-01-01 23:59:59.000000
Actual birth_date:
1996-01-01 23:59:59.000000</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T12:13:42.436677" elapsed="0.000126"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T12:13:42.436898" elapsed="0.000103"/>
</kw>
<arg>Expected ${compare_title}:\n${expected_date}\nActual ${compare_title}:\n${actual_date}</arg>
<status status="PASS" start="2024-11-22T12:13:42.436273" elapsed="0.000772"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${expected_date}</arg>
<arg>${actual_date}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-11-22T12:13:42.437138" elapsed="0.000130"/>
</kw>
<status status="PASS" start="2024-11-22T12:13:42.432593" elapsed="0.004708"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:42.431829" elapsed="0.005498"/>
</if>
<arg>${item[3]}</arg>
<arg>${sql_response['birth_date']}</arg>
<arg>birth_date</arg>
<doc>Format date and compare</doc>
<status status="PASS" start="2024-11-22T12:13:42.430802" elapsed="0.006557"/>
</kw>
<kw name="Compare Date" owner="generic">
<if>
<branch type="IF" condition="'${expected_date}' == '${EMPTY}'">
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T12:13:42.439305" level="INFO">
Expected death_date:
None
Actual death_date:
None</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T12:13:42.439223" elapsed="0.000114"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T12:13:42.439426" elapsed="0.000101"/>
</kw>
<arg>Expected ${compare_title}:\n${None}\nActual ${compare_title}:\n${actual_date}</arg>
<status status="PASS" start="2024-11-22T12:13:42.438986" elapsed="0.000583"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${None}</arg>
<arg>${actual_date}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-11-22T12:13:42.439657" elapsed="0.000118"/>
</kw>
<status status="PASS" start="2024-11-22T12:13:42.438502" elapsed="0.001305"/>
</branch>
<branch type="ELSE">
<kw name="Convert Date" owner="DateTime">
<var>${expected_date}</var>
<arg>${expected_date}</arg>
<arg>result_format=%Y-%m-%d %H:%M:%S.%f</arg>
<doc>Converts between supported `date formats`.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:42.439916" elapsed="0.000017"/>
</kw>
<kw name="Convert Date" owner="DateTime">
<var>${actual_date}</var>
<arg>${actual_date}</arg>
<arg>result_format=%Y-%m-%d %H:%M:%S.%f</arg>
<doc>Converts between supported `date formats`.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:42.440018" elapsed="0.000015"/>
</kw>
<kw name="Log and Log To Console" owner="generic">
<arg>Expected ${compare_title}:\n${expected_date}\nActual ${compare_title}:\n${actual_date}</arg>
<status status="NOT RUN" start="2024-11-22T12:13:42.440124" elapsed="0.000020"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${expected_date}</arg>
<arg>${actual_date}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:42.440231" elapsed="0.000016"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:42.439832" elapsed="0.000444"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:42.438489" elapsed="0.001809"/>
</if>
<arg>${item[4]}</arg>
<arg>${sql_response['death_date']}</arg>
<arg>death_date</arg>
<doc>Format date and compare</doc>
<status status="PASS" start="2024-11-22T12:13:42.437509" elapsed="0.002822"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<if>
<branch type="IF" condition="'${expected_int}' == '${EMPTY}'">
<kw name="Log and Log To Console" owner="generic">
<arg>Expected ${compare_title}:\n${None}\nActual ${compare_title}:\n${actual_int}</arg>
<status status="NOT RUN" start="2024-11-22T12:13:42.441858" elapsed="0.000020"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${None}</arg>
<arg>${actual_int}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:42.441966" elapsed="0.000017"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:42.441388" elapsed="0.000624"/>
</branch>
<branch type="ELSE">
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T12:13:42.442431" level="INFO">
Expected salary:
1000.12
Actual salary:
1000.12</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T12:13:42.442351" elapsed="0.000199"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T12:13:42.442643" elapsed="0.000100"/>
</kw>
<arg>Expected ${compare_title}:\n${expected_int}\nActual ${compare_title}:\n${actual_int}</arg>
<status status="PASS" start="2024-11-22T12:13:42.442118" elapsed="0.000667"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-11-22T12:13:42.443025" level="INFO">${expected_int} = 1000.12</msg>
<var>${expected_int}</var>
<arg>'{:.2f}'.format(float(${expected_int}))</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-11-22T12:13:42.442875" elapsed="0.000169"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-11-22T12:13:42.443259" level="INFO">${actual_int} = 1000.12</msg>
<var>${actual_int}</var>
<arg>'{:.2f}'.format(float(${actual_int}))</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-11-22T12:13:42.443138" elapsed="0.000138"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${expected_int}</arg>
<arg>${actual_int}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-11-22T12:13:42.443366" elapsed="0.000117"/>
</kw>
<status status="PASS" start="2024-11-22T12:13:42.442036" elapsed="0.001480"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:42.441376" elapsed="0.002164"/>
</if>
<arg>${item[5]}</arg>
<arg>${sql_response['salary']}</arg>
<arg>salary</arg>
<doc>Normalize the numbers and compare</doc>
<status status="PASS" start="2024-11-22T12:13:42.440483" elapsed="0.003089"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<if>
<branch type="IF" condition="'${expected_int}' == '${EMPTY}'">
<kw name="Log and Log To Console" owner="generic">
<arg>Expected ${compare_title}:\n${None}\nActual ${compare_title}:\n${actual_int}</arg>
<status status="NOT RUN" start="2024-11-22T12:13:42.444886" elapsed="0.000018"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${None}</arg>
<arg>${actual_int}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:42.444978" elapsed="0.000015"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:42.444497" elapsed="0.000522"/>
</branch>
<branch type="ELSE">
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T12:13:42.445379" level="INFO">
Expected tax_paid:
10.00
Actual tax_paid:
10.0</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T12:13:42.445310" elapsed="0.000096"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T12:13:42.445481" elapsed="0.000087"/>
</kw>
<arg>Expected ${compare_title}:\n${expected_int}\nActual ${compare_title}:\n${actual_int}</arg>
<status status="PASS" start="2024-11-22T12:13:42.445112" elapsed="0.000491"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-11-22T12:13:42.445807" level="INFO">${expected_int} = 10.00</msg>
<var>${expected_int}</var>
<arg>'{:.2f}'.format(float(${expected_int}))</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-11-22T12:13:42.445677" elapsed="0.000145"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-11-22T12:13:42.446000" level="INFO">${actual_int} = 10.00</msg>
<var>${actual_int}</var>
<arg>'{:.2f}'.format(float(${actual_int}))</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-11-22T12:13:42.445899" elapsed="0.000114"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${expected_int}</arg>
<arg>${actual_int}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-11-22T12:13:42.446089" elapsed="0.000101"/>
</kw>
<status status="PASS" start="2024-11-22T12:13:42.445040" elapsed="0.001177"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:42.444487" elapsed="0.001750"/>
</if>
<arg>${item[6]}</arg>
<arg>${sql_response['tax_paid']}</arg>
<arg>tax_paid</arg>
<doc>Normalize the numbers and compare</doc>
<status status="PASS" start="2024-11-22T12:13:42.443704" elapsed="0.002560"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<if>
<branch type="IF" condition="'${expected_int}' == '${EMPTY}'">
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T12:13:42.447929" level="INFO">
Expected brownie_points:
None
Actual brownie_points:
None</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T12:13:42.447729" elapsed="0.000228"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T12:13:42.448038" elapsed="0.000089"/>
</kw>
<arg>Expected ${compare_title}:\n${None}\nActual ${compare_title}:\n${actual_int}</arg>
<status status="PASS" start="2024-11-22T12:13:42.447533" elapsed="0.000633"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${None}</arg>
<arg>${actual_int}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-11-22T12:13:42.448238" elapsed="0.000102"/>
</kw>
<status status="PASS" start="2024-11-22T12:13:42.447147" elapsed="0.001221"/>
</branch>
<branch type="ELSE">
<kw name="Log and Log To Console" owner="generic">
<arg>Expected ${compare_title}:\n${expected_int}\nActual ${compare_title}:\n${actual_int}</arg>
<status status="NOT RUN" start="2024-11-22T12:13:42.448467" elapsed="0.000016"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<var>${expected_int}</var>
<arg>'{:.2f}'.format(float(${expected_int}))</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:42.448557" elapsed="0.000013"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<var>${actual_int}</var>
<arg>'{:.2f}'.format(float(${actual_int}))</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:42.448640" elapsed="0.000013"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${expected_int}</arg>
<arg>${actual_int}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:42.448733" elapsed="0.000013"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:42.448390" elapsed="0.000378"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:42.447137" elapsed="0.001649"/>
</if>
<arg>${item[7]}</arg>
<arg>${sql_response['brownie_points']}</arg>
<arg>brownie_points</arg>
<doc>Normalize the numbers and compare</doc>
<status status="PASS" start="2024-11-22T12:13:42.446387" elapsed="0.002426"/>
</kw>
<var name="${item}">['natid-100', 'Richard Chu', 'MALE', '1996-01-01T23:59:59', '', '1000.12', '10.00', '']</var>
<status status="PASS" start="2024-11-22T12:13:42.362266" elapsed="0.086575"/>
</iter>
<iter>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2024-11-22T12:13:42.449458" level="INFO">${dict} = {'value_natid': 'natid-101'}</msg>
<var>${dict}</var>
<arg>value_natid=${item[0]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2024-11-22T12:13:42.449009" elapsed="0.000466"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<kw name="Connect To Database" owner="DatabaseLibrary">
<msg time="2024-11-22T12:13:42.449956" level="INFO">Looking for configuration file: 'resources/db.cfg'</msg>
<msg time="2024-11-22T12:13:42.449983" level="INFO">Configuration file doesn't exist</msg>
<msg time="2024-11-22T12:13:42.450103" level="INFO">Connect to DB using : mysql.connector.connect(database='testdb', user='user', password=***, host='localhost', port=3306)</msg>
<arg>${DB_API}</arg>
<arg>${DB_NAME}</arg>
<arg>${DB_USER}</arg>
<arg>${DB_PASSWORD}</arg>
<arg>${DB_HOST}</arg>
<arg>${DB_PORT}</arg>
<doc>Creates a database connection using the DB API 2.0 ``db_module`` and the parameters provided.
Along with listed commonly used arguments (`db_name`, `db_host` etc.)
you can set any other DB module specific parameters as key/value pairs.</doc>
<status status="PASS" start="2024-11-22T12:13:42.449783" elapsed="0.020004"/>
</kw>
<kw name="Update SQL Queries With Arguments Dictionary" owner="sql-helper">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-11-22T12:13:42.470337" level="INFO" html="true">Getting file '&lt;a href="file:///Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/object-repo/sql-queries/select_hero_by_natid.sql"&gt;/Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/object-repo/sql-queries/select_hero_by_natid.sql&lt;/a&gt;'.</msg>
<msg time="2024-11-22T12:13:42.470456" level="INFO">${sql_query} = SELECT *
FROM testdb.working_class_heroes
WHERE natid='value_natid';</msg>
<var>${sql_query}</var>
<arg>./object-repo/sql-queries/${sql_file_name}.sql</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-11-22T12:13:42.470185" elapsed="0.000287"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2024-11-22T12:13:42.471048" level="INFO">Argument types are:
&lt;class 'robot.utils.dotdict.DotDict'&gt;
&lt;class 'str'&gt;</msg>
<msg time="2024-11-22T12:13:42.471112" level="FAIL">{'value_natid': 'natid-101'} != </msg>
<arg>${args_dict}</arg>
<arg>${EMPTY}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="FAIL" start="2024-11-22T12:13:42.470665" elapsed="0.000489">{'value_natid': 'natid-101'} != </status>
</kw>
<msg time="2024-11-22T12:13:42.471218" level="INFO">${empty_status} = False</msg>
<var>${empty_status}</var>
<arg>Should Be Equal As Strings</arg>
<arg>${args_dict}</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-11-22T12:13:42.470562" elapsed="0.000670"/>
</kw>
<if>
<branch type="IF" condition="'${empty_status}' == '${False}'">
<if>
<branch type="IF" condition="${args_dict}">
<for flavor="IN">
<iter>
<kw name="Convert To String" owner="BuiltIn">
<msg time="2024-11-22T12:13:42.471672" level="INFO">${args_key_str} = value_natid</msg>
<var>${args_key_str}</var>
<arg>${args_key}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="PASS" start="2024-11-22T12:13:42.471575" elapsed="0.000112"/>
</kw>
<kw name="Convert To String" owner="BuiltIn">
<msg time="2024-11-22T12:13:42.471870" level="INFO">${args_value_str} = natid-101</msg>
<var>${args_value_str}</var>
<arg>${args_dict}[${args_key_str}]</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="PASS" start="2024-11-22T12:13:42.471765" elapsed="0.000118"/>
</kw>
<kw name="Replace String" owner="String">
<msg time="2024-11-22T12:13:42.472076" level="INFO">${sql_query} = SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-101';</msg>
<var>${sql_query}</var>
<arg>${sql_query}</arg>
<arg>${args_key_str}</arg>
<arg>${args_value_str}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="PASS" start="2024-11-22T12:13:42.471960" elapsed="0.000132"/>
</kw>
<var name="${args_key}">value_natid</var>
<status status="PASS" start="2024-11-22T12:13:42.471502" elapsed="0.000621"/>
</iter>
<var>${args_key}</var>
<value>@{args_dict}</value>
<status status="PASS" start="2024-11-22T12:13:42.471425" elapsed="0.000725"/>
</for>
<status status="PASS" start="2024-11-22T12:13:42.471381" elapsed="0.000798"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:42.471372" elapsed="0.000827"/>
</if>
<status status="PASS" start="2024-11-22T12:13:42.471287" elapsed="0.000926"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:42.471276" elapsed="0.000955"/>
</if>
<return>
<value>${sql_query}</value>
<status status="PASS" start="2024-11-22T12:13:42.472250" elapsed="0.000023"/>
</return>
<msg time="2024-11-22T12:13:42.472349" level="INFO">${updated_sql_query} = SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-101';</msg>
<var>${updated_sql_query}</var>
<arg>${sql_file_name}</arg>
<arg>${args_dict}</arg>
<status status="PASS" start="2024-11-22T12:13:42.469980" elapsed="0.002386"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-11-22T12:13:42.472706" level="FAIL">'SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-101';' does not contain 'delete'</msg>
<arg>${updated_sql_query}</arg>
<arg>DELETE</arg>
<arg>ignore_case=${True}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-11-22T12:13:42.472555" elapsed="0.000190">'SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-101';' does not contain 'delete'</status>
</kw>
<msg time="2024-11-22T12:13:42.472804" level="INFO">${delete_status} = False</msg>
<var>${delete_status}</var>
<arg>Should Contain</arg>
<arg>${updated_sql_query}</arg>
<arg>DELETE</arg>
<arg>ignore_case=${True}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-11-22T12:13:42.472456" elapsed="0.000363"/>
</kw>
<if>
<branch type="IF" condition="'${delete_status}' == '${True}'">
<kw name="Execute Sql String" owner="DatabaseLibrary">
<var>${json_response}</var>
<arg>${updated_sql_query}</arg>
<doc>Executes the ``sql_string`` as a single SQL command.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:42.472989" elapsed="0.000016"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:42.472868" elapsed="0.000163"/>
</branch>
<branch type="ELSE">
<kw name="Query" owner="DatabaseLibrary">
<msg time="2024-11-22T12:13:42.473895" level="INFO" html="true">Executing sql:&lt;br&gt;&lt;code style="font-weight: bold;"&gt;SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-101';&lt;/code&gt;</msg>
<msg time="2024-11-22T12:13:42.476666" level="INFO" html="true">&lt;div style="max-width: 100%; overflow-x: auto;"&gt;&lt;table style="width: auto; border-collapse: collapse; border: 2px solid rgb(140 140 140)"&gt;&lt;caption style="text-align: left; font-weight: bold; padding: 5px;"&gt;Query returned 1 rows&lt;/caption&gt;&lt;tr&gt;&lt;th scope="col" style="background-color: #d6ecd4; border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;Row&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;id&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;created_at&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;create_by&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;updated_at&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;updated_by&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;birth_date&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;brownie_points&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;death_date&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;gender&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;name&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;natid&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;salary&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;tax_paid&lt;/th&gt;&lt;/tr&gt;&lt;tr style="background-color: #eee;"&gt;&lt;th scope="row" style="background-color: #d6ecd4;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;0&lt;/th&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;7c65ed92-134b-4d12-920e-0c3189df653c&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;2024-11-22 12:13:41.905759&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;SYSTEM&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;2024-11-22 12:13:41.905759&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;SYSTEM&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;1996-01-01 23:59:59&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;None&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;None&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;MALE&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;Arthur&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;natid-101&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;1000.0&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;10.0&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;</msg>
<msg time="2024-11-22T12:13:42.478332" level="INFO">${json_response} = [{'id': '7c65ed92-134b-4d12-920e-0c3189df653c', 'created_at': datetime.datetime(2024, 11, 22, 12, 13, 41, 905759), 'create_by': 'SYSTEM', 'updated_at': datetime.datetime(2024, 11, 22, 12, 13, 41, 9057...</msg>
<var>${json_response}</var>
<arg>${updated_sql_query}</arg>
<arg>return_dict=${True}</arg>
<doc>Runs a query with the ``select_statement`` and returns the result as list of rows.
The type of row values depends on the database module -
usually they are tuples or tuple-like objects.</doc>
<status status="PASS" start="2024-11-22T12:13:42.473118" elapsed="0.005233"/>
</kw>
<status status="PASS" start="2024-11-22T12:13:42.473051" elapsed="0.005335"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:42.472859" elapsed="0.005548"/>
</if>
<kw name="Disconnect From Database" owner="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<status status="PASS" start="2024-11-22T12:13:42.478483" elapsed="0.000130"/>
</kw>
<return>
<value>${json_response}</value>
<status status="PASS" start="2024-11-22T12:13:42.478645" elapsed="0.000021"/>
</return>
<msg time="2024-11-22T12:13:42.478752" level="INFO">${sql_response} = [{'id': '7c65ed92-134b-4d12-920e-0c3189df653c', 'created_at': datetime.datetime(2024, 11, 22, 12, 13, 41, 905759), 'create_by': 'SYSTEM', 'updated_at': datetime.datetime(2024, 11, 22, 12, 13, 41, 9057...</msg>
<var>${sql_response}</var>
<arg>select_hero_by_natid</arg>
<arg>${dict}</arg>
<status status="PASS" start="2024-11-22T12:13:42.449608" elapsed="0.029161"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-11-22T12:13:42.478958" level="INFO">${sql_response} = {'id': '7c65ed92-134b-4d12-920e-0c3189df653c', 'created_at': datetime.datetime(2024, 11, 22, 12, 13, 41, 905759), 'create_by': 'SYSTEM', 'updated_at': datetime.datetime(2024, 11, 22, 12, 13, 41, 90575...</msg>
<var>${sql_response}</var>
<arg>${sql_response}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-11-22T12:13:42.478855" elapsed="0.000120"/>
</kw>
<kw name="Compare String" owner="generic">
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T12:13:42.480200" level="INFO">
Expected natid:
natid-101
Actual natid:
natid-101</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T12:13:42.480128" elapsed="0.000097"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T12:13:42.480303" elapsed="0.000090"/>
</kw>
<arg>Expected ${compare_title}:\n${expected_string}\nActual ${compare_title}:\n${actual_string}</arg>
<status status="PASS" start="2024-11-22T12:13:42.479922" elapsed="0.000509"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${expected_string}</arg>
<arg>${actual_string}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-11-22T12:13:42.480507" elapsed="0.000108"/>
</kw>
<arg>${item[0]}</arg>
<arg>${sql_response['natid']}</arg>
<arg>natid</arg>
<doc>Compare Strings</doc>
<status status="PASS" start="2024-11-22T12:13:42.479068" elapsed="0.001588"/>
</kw>
<kw name="Compare String" owner="generic">
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T12:13:42.482049" level="INFO">
Expected name:
Arthur
Actual name:
Arthur</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T12:13:42.481977" elapsed="0.000098"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T12:13:42.482154" elapsed="0.000086"/>
</kw>
<arg>Expected ${compare_title}:\n${expected_string}\nActual ${compare_title}:\n${actual_string}</arg>
<status status="PASS" start="2024-11-22T12:13:42.481776" elapsed="0.000502"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${expected_string}</arg>
<arg>${actual_string}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-11-22T12:13:42.482439" elapsed="0.000105"/>
</kw>
<arg>${item[1]}</arg>
<arg>${sql_response['name']}</arg>
<arg>name</arg>
<doc>Compare Strings</doc>
<status status="PASS" start="2024-11-22T12:13:42.480744" elapsed="0.001842"/>
</kw>
<kw name="Compare String" owner="generic">
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T12:13:42.483752" level="INFO">
Expected gender:
MALE
Actual gender:
MALE</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T12:13:42.483682" elapsed="0.000096"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T12:13:42.483854" elapsed="0.000083"/>
</kw>
<arg>Expected ${compare_title}:\n${expected_string}\nActual ${compare_title}:\n${actual_string}</arg>
<status status="PASS" start="2024-11-22T12:13:42.483489" elapsed="0.000486"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${expected_string}</arg>
<arg>${actual_string}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-11-22T12:13:42.484051" elapsed="0.000104"/>
</kw>
<arg>${item[2]}</arg>
<arg>${sql_response['gender']}</arg>
<arg>gender</arg>
<doc>Compare Strings</doc>
<status status="PASS" start="2024-11-22T12:13:42.482677" elapsed="0.001517"/>
</kw>
<kw name="Compare Date" owner="generic">
<if>
<branch type="IF" condition="'${expected_date}' == '${EMPTY}'">
<kw name="Log and Log To Console" owner="generic">
<arg>Expected ${compare_title}:\n${None}\nActual ${compare_title}:\n${actual_date}</arg>
<status status="NOT RUN" start="2024-11-22T12:13:42.485530" elapsed="0.000018"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${None}</arg>
<arg>${actual_date}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:42.485650" elapsed="0.000014"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:42.485091" elapsed="0.000598"/>
</branch>
<branch type="ELSE">
<kw name="Convert Date" owner="DateTime">
<msg time="2024-11-22T12:13:42.485949" level="INFO">${expected_date} = 1996-01-01 23:59:59.000000</msg>
<var>${expected_date}</var>
<arg>${expected_date}</arg>
<arg>result_format=%Y-%m-%d %H:%M:%S.%f</arg>
<doc>Converts between supported `date formats`.</doc>
<status status="PASS" start="2024-11-22T12:13:42.485782" elapsed="0.000184"/>
</kw>
<kw name="Convert Date" owner="DateTime">
<msg time="2024-11-22T12:13:42.486158" level="INFO">${actual_date} = 1996-01-01 23:59:59.000000</msg>
<var>${actual_date}</var>
<arg>${actual_date}</arg>
<arg>result_format=%Y-%m-%d %H:%M:%S.%f</arg>
<doc>Converts between supported `date formats`.</doc>
<status status="PASS" start="2024-11-22T12:13:42.486047" elapsed="0.000126"/>
</kw>
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T12:13:42.486533" level="INFO">
Expected birth_date:
1996-01-01 23:59:59.000000
Actual birth_date:
1996-01-01 23:59:59.000000</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T12:13:42.486463" elapsed="0.000096"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T12:13:42.486634" elapsed="0.000083"/>
</kw>
<arg>Expected ${compare_title}:\n${expected_date}\nActual ${compare_title}:\n${actual_date}</arg>
<status status="PASS" start="2024-11-22T12:13:42.486264" elapsed="0.000491"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${expected_date}</arg>
<arg>${actual_date}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-11-22T12:13:42.486828" elapsed="0.000100"/>
</kw>
<status status="PASS" start="2024-11-22T12:13:42.485711" elapsed="0.001243"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:42.485080" elapsed="0.001892"/>
</if>
<arg>${item[3]}</arg>
<arg>${sql_response['birth_date']}</arg>
<arg>birth_date</arg>
<doc>Format date and compare</doc>
<status status="PASS" start="2024-11-22T12:13:42.484326" elapsed="0.002670"/>
</kw>
<kw name="Compare Date" owner="generic">
<if>
<branch type="IF" condition="'${expected_date}' == '${EMPTY}'">
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T12:13:42.488367" level="INFO">
Expected death_date:
None
Actual death_date:
None</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T12:13:42.488303" elapsed="0.000087"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T12:13:42.488457" elapsed="0.000069"/>
</kw>
<arg>Expected ${compare_title}:\n${None}\nActual ${compare_title}:\n${actual_date}</arg>
<status status="PASS" start="2024-11-22T12:13:42.488128" elapsed="0.000431"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${None}</arg>
<arg>${actual_date}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-11-22T12:13:42.488627" elapsed="0.000093"/>
</kw>
<status status="PASS" start="2024-11-22T12:13:42.487787" elapsed="0.000958"/>
</branch>
<branch type="ELSE">
<kw name="Convert Date" owner="DateTime">
<var>${expected_date}</var>
<arg>${expected_date}</arg>
<arg>result_format=%Y-%m-%d %H:%M:%S.%f</arg>
<doc>Converts between supported `date formats`.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:42.488828" elapsed="0.000013"/>
</kw>
<kw name="Convert Date" owner="DateTime">
<var>${actual_date}</var>
<arg>${actual_date}</arg>
<arg>result_format=%Y-%m-%d %H:%M:%S.%f</arg>
<doc>Converts between supported `date formats`.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:42.488910" elapsed="0.000012"/>
</kw>
<kw name="Log and Log To Console" owner="generic">
<arg>Expected ${compare_title}:\n${expected_date}\nActual ${compare_title}:\n${actual_date}</arg>
<status status="NOT RUN" start="2024-11-22T12:13:42.488997" elapsed="0.000014"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${expected_date}</arg>
<arg>${actual_date}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:42.489073" elapsed="0.000012"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:42.488764" elapsed="0.000342"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:42.487778" elapsed="0.001344"/>
</if>
<arg>${item[4]}</arg>
<arg>${sql_response['death_date']}</arg>
<arg>death_date</arg>
<doc>Format date and compare</doc>
<status status="PASS" start="2024-11-22T12:13:42.487108" elapsed="0.002039"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<if>
<branch type="IF" condition="'${expected_int}' == '${EMPTY}'">
<kw name="Log and Log To Console" owner="generic">
<arg>Expected ${compare_title}:\n${None}\nActual ${compare_title}:\n${actual_int}</arg>
<status status="NOT RUN" start="2024-11-22T12:13:42.490275" elapsed="0.000016"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${None}</arg>
<arg>${actual_int}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:42.490356" elapsed="0.000013"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:42.489935" elapsed="0.000455"/>
</branch>
<branch type="ELSE">
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T12:13:42.490810" level="INFO">
Expected salary:
1000.00
Actual salary:
1000.0</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T12:13:42.490745" elapsed="0.000158"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T12:13:42.490972" elapsed="0.000079"/>
</kw>
<arg>Expected ${compare_title}:\n${expected_int}\nActual ${compare_title}:\n${actual_int}</arg>
<status status="PASS" start="2024-11-22T12:13:42.490470" elapsed="0.000613"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-11-22T12:13:42.491256" level="INFO">${expected_int} = 1000.00</msg>
<var>${expected_int}</var>
<arg>'{:.2f}'.format(float(${expected_int}))</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-11-22T12:13:42.491149" elapsed="0.000122"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-11-22T12:13:42.491437" level="INFO">${actual_int} = 1000.00</msg>
<var>${actual_int}</var>
<arg>'{:.2f}'.format(float(${actual_int}))</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-11-22T12:13:42.491343" elapsed="0.000106"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${expected_int}</arg>
<arg>${actual_int}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-11-22T12:13:42.491518" elapsed="0.000091"/>
</kw>
<status status="PASS" start="2024-11-22T12:13:42.490409" elapsed="0.001225"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:42.489926" elapsed="0.001726"/>
</if>
<arg>${item[5]}</arg>
<arg>${sql_response['salary']}</arg>
<arg>salary</arg>
<doc>Normalize the numbers and compare</doc>
<status status="PASS" start="2024-11-22T12:13:42.489265" elapsed="0.002410"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<if>
<branch type="IF" condition="'${expected_int}' == '${EMPTY}'">
<kw name="Log and Log To Console" owner="generic">
<arg>Expected ${compare_title}:\n${None}\nActual ${compare_title}:\n${actual_int}</arg>
<status status="NOT RUN" start="2024-11-22T12:13:42.492817" elapsed="0.000015"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${None}</arg>
<arg>${actual_int}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:42.492895" elapsed="0.000013"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:42.492468" elapsed="0.000462"/>
</branch>
<branch type="ELSE">
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T12:13:42.493226" level="INFO">
Expected tax_paid:
10.00
Actual tax_paid:
10.0</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T12:13:42.493169" elapsed="0.000079"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T12:13:42.493310" elapsed="0.000073"/>
</kw>
<arg>Expected ${compare_title}:\n${expected_int}\nActual ${compare_title}:\n${actual_int}</arg>
<status status="PASS" start="2024-11-22T12:13:42.493008" elapsed="0.000404"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-11-22T12:13:42.493585" level="INFO">${expected_int} = 10.00</msg>
<var>${expected_int}</var>
<arg>'{:.2f}'.format(float(${expected_int}))</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-11-22T12:13:42.493490" elapsed="0.000107"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-11-22T12:13:42.493774" level="INFO">${actual_int} = 10.00</msg>
<var>${actual_int}</var>
<arg>'{:.2f}'.format(float(${actual_int}))</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-11-22T12:13:42.493690" elapsed="0.000096"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${expected_int}</arg>
<arg>${actual_int}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-11-22T12:13:42.493869" elapsed="0.000081"/>
</kw>
<status status="PASS" start="2024-11-22T12:13:42.492947" elapsed="0.001025"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:42.492459" elapsed="0.001529"/>
</if>
<arg>${item[6]}</arg>
<arg>${sql_response['tax_paid']}</arg>
<arg>tax_paid</arg>
<doc>Normalize the numbers and compare</doc>
<status status="PASS" start="2024-11-22T12:13:42.491781" elapsed="0.002227"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<if>
<branch type="IF" condition="'${expected_int}' == '${EMPTY}'">
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T12:13:42.495262" level="INFO">
Expected brownie_points:
None
Actual brownie_points:
None</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T12:13:42.495203" elapsed="0.000080"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T12:13:42.495343" elapsed="0.000065"/>
</kw>
<arg>Expected ${compare_title}:\n${None}\nActual ${compare_title}:\n${actual_int}</arg>
<status status="PASS" start="2024-11-22T12:13:42.495043" elapsed="0.000395"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${None}</arg>
<arg>${actual_int}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-11-22T12:13:42.495498" elapsed="0.000083"/>
</kw>
<status status="PASS" start="2024-11-22T12:13:42.494721" elapsed="0.000883"/>
</branch>
<branch type="ELSE">
<kw name="Log and Log To Console" owner="generic">
<arg>Expected ${compare_title}:\n${expected_int}\nActual ${compare_title}:\n${actual_int}</arg>
<status status="NOT RUN" start="2024-11-22T12:13:42.495683" elapsed="0.000013"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<var>${expected_int}</var>
<arg>'{:.2f}'.format(float(${expected_int}))</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:42.495756" elapsed="0.000011"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<var>${actual_int}</var>
<arg>'{:.2f}'.format(float(${actual_int}))</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:42.495827" elapsed="0.000011"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${expected_int}</arg>
<arg>${actual_int}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:42.495909" elapsed="0.000011"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:42.495621" elapsed="0.000318"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:42.494713" elapsed="0.001242"/>
</if>
<arg>${item[7]}</arg>
<arg>${sql_response['brownie_points']}</arg>
<arg>brownie_points</arg>
<doc>Normalize the numbers and compare</doc>
<status status="PASS" start="2024-11-22T12:13:42.494106" elapsed="0.001871"/>
</kw>
<var name="${item}">['natid-101', 'Arthur', 'MALE', '1996-01-01T23:59:59', '', '1000.00', '10.00', '']</var>
<status status="PASS" start="2024-11-22T12:13:42.448934" elapsed="0.047066"/>
</iter>
<iter>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2024-11-22T12:13:42.496515" level="INFO">${dict} = {'value_natid': 'natid-102'}</msg>
<var>${dict}</var>
<arg>value_natid=${item[0]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2024-11-22T12:13:42.496143" elapsed="0.000386"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<kw name="Connect To Database" owner="DatabaseLibrary">
<msg time="2024-11-22T12:13:42.496927" level="INFO">Looking for configuration file: 'resources/db.cfg'</msg>
<msg time="2024-11-22T12:13:42.496954" level="INFO">Configuration file doesn't exist</msg>
<msg time="2024-11-22T12:13:42.497050" level="INFO">Connect to DB using : mysql.connector.connect(database='testdb', user='user', password=***, host='localhost', port=3306)</msg>
<arg>${DB_API}</arg>
<arg>${DB_NAME}</arg>
<arg>${DB_USER}</arg>
<arg>${DB_PASSWORD}</arg>
<arg>${DB_HOST}</arg>
<arg>${DB_PORT}</arg>
<doc>Creates a database connection using the DB API 2.0 ``db_module`` and the parameters provided.
Along with listed commonly used arguments (`db_name`, `db_host` etc.)
you can set any other DB module specific parameters as key/value pairs.</doc>
<status status="PASS" start="2024-11-22T12:13:42.496783" elapsed="0.016826"/>
</kw>
<kw name="Update SQL Queries With Arguments Dictionary" owner="sql-helper">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-11-22T12:13:42.514148" level="INFO" html="true">Getting file '&lt;a href="file:///Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/object-repo/sql-queries/select_hero_by_natid.sql"&gt;/Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/object-repo/sql-queries/select_hero_by_natid.sql&lt;/a&gt;'.</msg>
<msg time="2024-11-22T12:13:42.514246" level="INFO">${sql_query} = SELECT *
FROM testdb.working_class_heroes
WHERE natid='value_natid';</msg>
<var>${sql_query}</var>
<arg>./object-repo/sql-queries/${sql_file_name}.sql</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-11-22T12:13:42.513999" elapsed="0.000262"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2024-11-22T12:13:42.514810" level="INFO">Argument types are:
&lt;class 'robot.utils.dotdict.DotDict'&gt;
&lt;class 'str'&gt;</msg>
<msg time="2024-11-22T12:13:42.514872" level="FAIL">{'value_natid': 'natid-102'} != </msg>
<arg>${args_dict}</arg>
<arg>${EMPTY}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="FAIL" start="2024-11-22T12:13:42.514444" elapsed="0.000468">{'value_natid': 'natid-102'} != </status>
</kw>
<msg time="2024-11-22T12:13:42.515096" level="INFO">${empty_status} = False</msg>
<var>${empty_status}</var>
<arg>Should Be Equal As Strings</arg>
<arg>${args_dict}</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-11-22T12:13:42.514347" elapsed="0.000763"/>
</kw>
<if>
<branch type="IF" condition="'${empty_status}' == '${False}'">
<if>
<branch type="IF" condition="${args_dict}">
<for flavor="IN">
<iter>
<kw name="Convert To String" owner="BuiltIn">
<msg time="2024-11-22T12:13:42.515534" level="INFO">${args_key_str} = value_natid</msg>
<var>${args_key_str}</var>
<arg>${args_key}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="PASS" start="2024-11-22T12:13:42.515433" elapsed="0.000115"/>
</kw>
<kw name="Convert To String" owner="BuiltIn">
<msg time="2024-11-22T12:13:42.515722" level="INFO">${args_value_str} = natid-102</msg>
<var>${args_value_str}</var>
<arg>${args_dict}[${args_key_str}]</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="PASS" start="2024-11-22T12:13:42.515622" elapsed="0.000113"/>
</kw>
<kw name="Replace String" owner="String">
<msg time="2024-11-22T12:13:42.515914" level="INFO">${sql_query} = SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-102';</msg>
<var>${sql_query}</var>
<arg>${sql_query}</arg>
<arg>${args_key_str}</arg>
<arg>${args_value_str}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="PASS" start="2024-11-22T12:13:42.515808" elapsed="0.000120"/>
</kw>
<var name="${args_key}">value_natid</var>
<status status="PASS" start="2024-11-22T12:13:42.515365" elapsed="0.000591"/>
</iter>
<var>${args_key}</var>
<value>@{args_dict}</value>
<status status="PASS" start="2024-11-22T12:13:42.515295" elapsed="0.000685"/>
</for>
<status status="PASS" start="2024-11-22T12:13:42.515252" elapsed="0.000753"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:42.515245" elapsed="0.000778"/>
</if>
<status status="PASS" start="2024-11-22T12:13:42.515162" elapsed="0.000873"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:42.515151" elapsed="0.000900"/>
</if>
<return>
<value>${sql_query}</value>
<status status="PASS" start="2024-11-22T12:13:42.516068" elapsed="0.000021"/>
</return>
<msg time="2024-11-22T12:13:42.516155" level="INFO">${updated_sql_query} = SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-102';</msg>
<var>${updated_sql_query}</var>
<arg>${sql_file_name}</arg>
<arg>${args_dict}</arg>
<status status="PASS" start="2024-11-22T12:13:42.513801" elapsed="0.002369"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-11-22T12:13:42.516467" level="FAIL">'SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-102';' does not contain 'delete'</msg>
<arg>${updated_sql_query}</arg>
<arg>DELETE</arg>
<arg>ignore_case=${True}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-11-22T12:13:42.516337" elapsed="0.000165">'SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-102';' does not contain 'delete'</status>
</kw>
<msg time="2024-11-22T12:13:42.516556" level="INFO">${delete_status} = False</msg>
<var>${delete_status}</var>
<arg>Should Contain</arg>
<arg>${updated_sql_query}</arg>
<arg>DELETE</arg>
<arg>ignore_case=${True}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-11-22T12:13:42.516248" elapsed="0.000320"/>
</kw>
<if>
<branch type="IF" condition="'${delete_status}' == '${True}'">
<kw name="Execute Sql String" owner="DatabaseLibrary">
<var>${json_response}</var>
<arg>${updated_sql_query}</arg>
<doc>Executes the ``sql_string`` as a single SQL command.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:42.516724" elapsed="0.000013"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:42.516612" elapsed="0.000149"/>
</branch>
<branch type="ELSE">
<kw name="Query" owner="DatabaseLibrary">
<msg time="2024-11-22T12:13:42.517470" level="INFO" html="true">Executing sql:&lt;br&gt;&lt;code style="font-weight: bold;"&gt;SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-102';&lt;/code&gt;</msg>
<msg time="2024-11-22T12:13:42.518572" level="INFO" html="true">&lt;div style="max-width: 100%; overflow-x: auto;"&gt;&lt;table style="width: auto; border-collapse: collapse; border: 2px solid rgb(140 140 140)"&gt;&lt;caption style="text-align: left; font-weight: bold; padding: 5px;"&gt;Query returned 1 rows&lt;/caption&gt;&lt;tr&gt;&lt;th scope="col" style="background-color: #d6ecd4; border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;Row&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;id&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;created_at&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;create_by&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;updated_at&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;updated_by&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;birth_date&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;brownie_points&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;death_date&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;gender&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;name&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;natid&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;salary&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;tax_paid&lt;/th&gt;&lt;/tr&gt;&lt;tr style="background-color: #eee;"&gt;&lt;th scope="row" style="background-color: #d6ecd4;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;0&lt;/th&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;eadecfe3-6e9b-4858-ad50-af47ca9015c6&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;2024-11-22 12:13:41.924933&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;SYSTEM&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;2024-11-22 12:13:41.924933&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;SYSTEM&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;1996-01-01 23:59:59&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;None&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;None&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;MALE&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;Jayden&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;natid-102&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;10320.0&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;10.0&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;</msg>
<msg time="2024-11-22T12:13:42.519233" level="INFO">${json_response} = [{'id': 'eadecfe3-6e9b-4858-ad50-af47ca9015c6', 'created_at': datetime.datetime(2024, 11, 22, 12, 13, 41, 924933), 'create_by': 'SYSTEM', 'updated_at': datetime.datetime(2024, 11, 22, 12, 13, 41, 9249...</msg>
<var>${json_response}</var>
<arg>${updated_sql_query}</arg>
<arg>return_dict=${True}</arg>
<doc>Runs a query with the ``select_statement`` and returns the result as list of rows.
The type of row values depends on the database module -
usually they are tuples or tuple-like objects.</doc>
<status status="PASS" start="2024-11-22T12:13:42.516840" elapsed="0.002410"/>
</kw>
<status status="PASS" start="2024-11-22T12:13:42.516779" elapsed="0.002508"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:42.516604" elapsed="0.002701"/>
</if>
<kw name="Disconnect From Database" owner="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<status status="PASS" start="2024-11-22T12:13:42.519369" elapsed="0.000137"/>
</kw>
<return>
<value>${json_response}</value>
<status status="PASS" start="2024-11-22T12:13:42.519535" elapsed="0.000025"/>
</return>
<msg time="2024-11-22T12:13:42.519636" level="INFO">${sql_response} = [{'id': 'eadecfe3-6e9b-4858-ad50-af47ca9015c6', 'created_at': datetime.datetime(2024, 11, 22, 12, 13, 41, 924933), 'create_by': 'SYSTEM', 'updated_at': datetime.datetime(2024, 11, 22, 12, 13, 41, 9249...</msg>
<var>${sql_response}</var>
<arg>select_hero_by_natid</arg>
<arg>${dict}</arg>
<status status="PASS" start="2024-11-22T12:13:42.496638" elapsed="0.023012"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-11-22T12:13:42.519801" level="INFO">${sql_response} = {'id': 'eadecfe3-6e9b-4858-ad50-af47ca9015c6', 'created_at': datetime.datetime(2024, 11, 22, 12, 13, 41, 924933), 'create_by': 'SYSTEM', 'updated_at': datetime.datetime(2024, 11, 22, 12, 13, 41, 92493...</msg>
<var>${sql_response}</var>
<arg>${sql_response}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-11-22T12:13:42.519719" elapsed="0.000097"/>
</kw>
<kw name="Compare String" owner="generic">
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T12:13:42.520796" level="INFO">
Expected natid:
natid-102
Actual natid:
natid-102</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T12:13:42.520737" elapsed="0.000081"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T12:13:42.520882" elapsed="0.000074"/>
</kw>
<arg>Expected ${compare_title}:\n${expected_string}\nActual ${compare_title}:\n${actual_string}</arg>
<status status="PASS" start="2024-11-22T12:13:42.520575" elapsed="0.000411"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${expected_string}</arg>
<arg>${actual_string}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-11-22T12:13:42.521046" elapsed="0.000086"/>
</kw>
<arg>${item[0]}</arg>
<arg>${sql_response['natid']}</arg>
<arg>natid</arg>
<doc>Compare Strings</doc>
<status status="PASS" start="2024-11-22T12:13:42.519891" elapsed="0.001274"/>
</kw>
<kw name="Compare String" owner="generic">
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T12:13:42.522093" level="INFO">
Expected name:
Jayden
Actual name:
Jayden</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T12:13:42.522035" elapsed="0.000079"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T12:13:42.522175" elapsed="0.000069"/>
</kw>
<arg>Expected ${compare_title}:\n${expected_string}\nActual ${compare_title}:\n${actual_string}</arg>
<status status="PASS" start="2024-11-22T12:13:42.521879" elapsed="0.000396"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${expected_string}</arg>
<arg>${actual_string}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-11-22T12:13:42.522418" elapsed="0.000084"/>
</kw>
<arg>${item[1]}</arg>
<arg>${sql_response['name']}</arg>
<arg>name</arg>
<doc>Compare Strings</doc>
<status status="PASS" start="2024-11-22T12:13:42.521236" elapsed="0.001299"/>
</kw>
<kw name="Compare String" owner="generic">
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T12:13:42.523487" level="INFO">
Expected gender:
MALE
Actual gender:
MALE</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T12:13:42.523430" elapsed="0.000078"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T12:13:42.523569" elapsed="0.000068"/>
</kw>
<arg>Expected ${compare_title}:\n${expected_string}\nActual ${compare_title}:\n${actual_string}</arg>
<status status="PASS" start="2024-11-22T12:13:42.523271" elapsed="0.000398"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${expected_string}</arg>
<arg>${actual_string}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-11-22T12:13:42.523741" elapsed="0.000085"/>
</kw>
<arg>${item[2]}</arg>
<arg>${sql_response['gender']}</arg>
<arg>gender</arg>
<doc>Compare Strings</doc>
<status status="PASS" start="2024-11-22T12:13:42.522606" elapsed="0.001253"/>
</kw>
<kw name="Compare Date" owner="generic">
<if>
<branch type="IF" condition="'${expected_date}' == '${EMPTY}'">
<kw name="Log and Log To Console" owner="generic">
<arg>Expected ${compare_title}:\n${None}\nActual ${compare_title}:\n${actual_date}</arg>
<status status="NOT RUN" start="2024-11-22T12:13:42.525048" elapsed="0.000016"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${None}</arg>
<arg>${actual_date}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:42.525130" elapsed="0.000013"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:42.524717" elapsed="0.000447"/>
</branch>
<branch type="ELSE">
<kw name="Convert Date" owner="DateTime">
<msg time="2024-11-22T12:13:42.525380" level="INFO">${expected_date} = 1996-01-01 23:59:59.000000</msg>
<var>${expected_date}</var>
<arg>${expected_date}</arg>
<arg>result_format=%Y-%m-%d %H:%M:%S.%f</arg>
<doc>Converts between supported `date formats`.</doc>
<status status="PASS" start="2024-11-22T12:13:42.525239" elapsed="0.000155"/>
</kw>
<kw name="Convert Date" owner="DateTime">
<msg time="2024-11-22T12:13:42.525548" level="INFO">${actual_date} = 1996-01-01 23:59:59.000000</msg>
<var>${actual_date}</var>
<arg>${actual_date}</arg>
<arg>result_format=%Y-%m-%d %H:%M:%S.%f</arg>
<doc>Converts between supported `date formats`.</doc>
<status status="PASS" start="2024-11-22T12:13:42.525457" elapsed="0.000102"/>
</kw>
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T12:13:42.525993" level="INFO">
Expected birth_date:
1996-01-01 23:59:59.000000
Actual birth_date:
1996-01-01 23:59:59.000000</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T12:13:42.525934" elapsed="0.000080"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T12:13:42.526074" elapsed="0.000067"/>
</kw>
<arg>Expected ${compare_title}:\n${expected_date}\nActual ${compare_title}:\n${actual_date}</arg>
<status status="PASS" start="2024-11-22T12:13:42.525754" elapsed="0.000416"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${expected_date}</arg>
<arg>${actual_date}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-11-22T12:13:42.526229" elapsed="0.000084"/>
</kw>
<status status="PASS" start="2024-11-22T12:13:42.525182" elapsed="0.001152"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:42.524706" elapsed="0.001644"/>
</if>
<arg>${item[3]}</arg>
<arg>${sql_response['birth_date']}</arg>
<arg>birth_date</arg>
<doc>Format date and compare</doc>
<status status="PASS" start="2024-11-22T12:13:42.524009" elapsed="0.002361"/>
</kw>
<kw name="Compare Date" owner="generic">
<if>
<branch type="IF" condition="'${expected_date}' == '${EMPTY}'">
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T12:13:42.527637" level="INFO">
Expected death_date:
None
Actual death_date:
None</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T12:13:42.527582" elapsed="0.000076"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T12:13:42.527719" elapsed="0.000068"/>
</kw>
<arg>Expected ${compare_title}:\n${None}\nActual ${compare_title}:\n${actual_date}</arg>
<status status="PASS" start="2024-11-22T12:13:42.527421" elapsed="0.000394"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${None}</arg>
<arg>${actual_date}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-11-22T12:13:42.527872" elapsed="0.000079"/>
</kw>
<status status="PASS" start="2024-11-22T12:13:42.527113" elapsed="0.000859"/>
</branch>
<branch type="ELSE">
<kw name="Convert Date" owner="DateTime">
<var>${expected_date}</var>
<arg>${expected_date}</arg>
<arg>result_format=%Y-%m-%d %H:%M:%S.%f</arg>
<doc>Converts between supported `date formats`.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:42.528043" elapsed="0.000012"/>
</kw>
<kw name="Convert Date" owner="DateTime">
<var>${actual_date}</var>
<arg>${actual_date}</arg>
<arg>result_format=%Y-%m-%d %H:%M:%S.%f</arg>
<doc>Converts between supported `date formats`.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:42.528111" elapsed="0.000010"/>
</kw>
<kw name="Log and Log To Console" owner="generic">
<arg>Expected ${compare_title}:\n${expected_date}\nActual ${compare_title}:\n${actual_date}</arg>
<status status="NOT RUN" start="2024-11-22T12:13:42.528180" elapsed="0.000012"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${expected_date}</arg>
<arg>${actual_date}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:42.528247" elapsed="0.000010"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:42.527989" elapsed="0.000285"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:42.527105" elapsed="0.001184"/>
</if>
<arg>${item[4]}</arg>
<arg>${sql_response['death_date']}</arg>
<arg>death_date</arg>
<doc>Format date and compare</doc>
<status status="PASS" start="2024-11-22T12:13:42.526467" elapsed="0.001844"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<if>
<branch type="IF" condition="'${expected_int}' == '${EMPTY}'">
<kw name="Log and Log To Console" owner="generic">
<arg>Expected ${compare_title}:\n${None}\nActual ${compare_title}:\n${actual_int}</arg>
<status status="NOT RUN" start="2024-11-22T12:13:42.529288" elapsed="0.000014"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${None}</arg>
<arg>${actual_int}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:42.529358" elapsed="0.000011"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:42.528989" elapsed="0.000399"/>
</branch>
<branch type="ELSE">
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T12:13:42.529664" level="INFO">
Expected salary:
10320.00
Actual salary:
10320.0</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T12:13:42.529611" elapsed="0.000137"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T12:13:42.529809" elapsed="0.000068"/>
</kw>
<arg>Expected ${compare_title}:\n${expected_int}\nActual ${compare_title}:\n${actual_int}</arg>
<status status="PASS" start="2024-11-22T12:13:42.529459" elapsed="0.000446"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-11-22T12:13:42.530053" level="INFO">${expected_int} = 10320.00</msg>
<var>${expected_int}</var>
<arg>'{:.2f}'.format(float(${expected_int}))</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-11-22T12:13:42.529963" elapsed="0.000102"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-11-22T12:13:42.530206" level="INFO">${actual_int} = 10320.00</msg>
<var>${actual_int}</var>
<arg>'{:.2f}'.format(float(${actual_int}))</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-11-22T12:13:42.530126" elapsed="0.000091"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${expected_int}</arg>
<arg>${actual_int}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-11-22T12:13:42.530277" elapsed="0.000078"/>
</kw>
<status status="PASS" start="2024-11-22T12:13:42.529404" elapsed="0.000973"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:42.528981" elapsed="0.001411"/>
</if>
<arg>${item[5]}</arg>
<arg>${sql_response['salary']}</arg>
<arg>salary</arg>
<doc>Normalize the numbers and compare</doc>
<status status="PASS" start="2024-11-22T12:13:42.528404" elapsed="0.002009"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<if>
<branch type="IF" condition="'${expected_int}' == '${EMPTY}'">
<kw name="Log and Log To Console" owner="generic">
<arg>Expected ${compare_title}:\n${None}\nActual ${compare_title}:\n${actual_int}</arg>
<status status="NOT RUN" start="2024-11-22T12:13:42.531400" elapsed="0.000014"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${None}</arg>
<arg>${actual_int}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:42.531471" elapsed="0.000011"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:42.531098" elapsed="0.000404"/>
</branch>
<branch type="ELSE">
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T12:13:42.531779" level="INFO">
Expected tax_paid:
10.00
Actual tax_paid:
10.0</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T12:13:42.531726" elapsed="0.000074"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T12:13:42.531857" elapsed="0.000067"/>
</kw>
<arg>Expected ${compare_title}:\n${expected_int}\nActual ${compare_title}:\n${actual_int}</arg>
<status status="PASS" start="2024-11-22T12:13:42.531573" elapsed="0.000379"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-11-22T12:13:42.532092" level="INFO">${expected_int} = 10.00</msg>
<var>${expected_int}</var>
<arg>'{:.2f}'.format(float(${expected_int}))</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-11-22T12:13:42.532008" elapsed="0.000096"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-11-22T12:13:42.532238" level="INFO">${actual_int} = 10.00</msg>
<var>${actual_int}</var>
<arg>'{:.2f}'.format(float(${actual_int}))</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-11-22T12:13:42.532164" elapsed="0.000084"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${expected_int}</arg>
<arg>${actual_int}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-11-22T12:13:42.532303" elapsed="0.000072"/>
</kw>
<status status="PASS" start="2024-11-22T12:13:42.531518" elapsed="0.000877"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:42.531090" elapsed="0.001320"/>
</if>
<arg>${item[6]}</arg>
<arg>${sql_response['tax_paid']}</arg>
<arg>tax_paid</arg>
<doc>Normalize the numbers and compare</doc>
<status status="PASS" start="2024-11-22T12:13:42.530507" elapsed="0.001922"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<if>
<branch type="IF" condition="'${expected_int}' == '${EMPTY}'">
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T12:13:42.534145" level="INFO">
Expected brownie_points:
None
Actual brownie_points:
None</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T12:13:42.534087" elapsed="0.000079"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T12:13:42.534223" elapsed="0.000065"/>
</kw>
<arg>Expected ${compare_title}:\n${None}\nActual ${compare_title}:\n${actual_int}</arg>
<status status="PASS" start="2024-11-22T12:13:42.533339" elapsed="0.000976"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${None}</arg>
<arg>${actual_int}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-11-22T12:13:42.534369" elapsed="0.000073"/>
</kw>
<status status="PASS" start="2024-11-22T12:13:42.533061" elapsed="0.001402"/>
</branch>
<branch type="ELSE">
<kw name="Log and Log To Console" owner="generic">
<arg>Expected ${compare_title}:\n${expected_int}\nActual ${compare_title}:\n${actual_int}</arg>
<status status="NOT RUN" start="2024-11-22T12:13:42.534536" elapsed="0.000013"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<var>${expected_int}</var>
<arg>'{:.2f}'.format(float(${expected_int}))</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:42.534602" elapsed="0.000010"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<var>${actual_int}</var>
<arg>'{:.2f}'.format(float(${actual_int}))</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:42.534662" elapsed="0.000010"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${expected_int}</arg>
<arg>${actual_int}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:42.534721" elapsed="0.000010"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:42.534480" elapsed="0.000269"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:42.533054" elapsed="0.001708"/>
</if>
<arg>${item[7]}</arg>
<arg>${sql_response['brownie_points']}</arg>
<arg>brownie_points</arg>
<doc>Normalize the numbers and compare</doc>
<status status="PASS" start="2024-11-22T12:13:42.532517" elapsed="0.002265"/>
</kw>
<var name="${item}">['natid-102', 'Jayden', 'MALE', '1996-01-01T23:59:59', '', '10320.00', '10.00', '']</var>
<status status="PASS" start="2024-11-22T12:13:42.496079" elapsed="0.038722"/>
</iter>
<iter>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2024-11-22T12:13:42.535242" level="INFO">${dict} = {'value_natid': 'natid-103'}</msg>
<var>${dict}</var>
<arg>value_natid=${item[0]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2024-11-22T12:13:42.534916" elapsed="0.000338"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<kw name="Connect To Database" owner="DatabaseLibrary">
<msg time="2024-11-22T12:13:42.535598" level="INFO">Looking for configuration file: 'resources/db.cfg'</msg>
<msg time="2024-11-22T12:13:42.535619" level="INFO">Configuration file doesn't exist</msg>
<msg time="2024-11-22T12:13:42.535703" level="INFO">Connect to DB using : mysql.connector.connect(database='testdb', user='user', password=***, host='localhost', port=3306)</msg>
<arg>${DB_API}</arg>
<arg>${DB_NAME}</arg>
<arg>${DB_USER}</arg>
<arg>${DB_PASSWORD}</arg>
<arg>${DB_HOST}</arg>
<arg>${DB_PORT}</arg>
<doc>Creates a database connection using the DB API 2.0 ``db_module`` and the parameters provided.
Along with listed commonly used arguments (`db_name`, `db_host` etc.)
you can set any other DB module specific parameters as key/value pairs.</doc>
<status status="PASS" start="2024-11-22T12:13:42.535475" elapsed="0.016540"/>
</kw>
<kw name="Update SQL Queries With Arguments Dictionary" owner="sql-helper">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-11-22T12:13:42.552409" level="INFO" html="true">Getting file '&lt;a href="file:///Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/object-repo/sql-queries/select_hero_by_natid.sql"&gt;/Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/object-repo/sql-queries/select_hero_by_natid.sql&lt;/a&gt;'.</msg>
<msg time="2024-11-22T12:13:42.552488" level="INFO">${sql_query} = SELECT *
FROM testdb.working_class_heroes
WHERE natid='value_natid';</msg>
<var>${sql_query}</var>
<arg>./object-repo/sql-queries/${sql_file_name}.sql</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-11-22T12:13:42.552305" elapsed="0.000195"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2024-11-22T12:13:42.552941" level="INFO">Argument types are:
&lt;class 'robot.utils.dotdict.DotDict'&gt;
&lt;class 'str'&gt;</msg>
<msg time="2024-11-22T12:13:42.552992" level="FAIL">{'value_natid': 'natid-103'} != </msg>
<arg>${args_dict}</arg>
<arg>${EMPTY}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="FAIL" start="2024-11-22T12:13:42.552645" elapsed="0.000379">{'value_natid': 'natid-103'} != </status>
</kw>
<msg time="2024-11-22T12:13:42.553072" level="INFO">${empty_status} = False</msg>
<var>${empty_status}</var>
<arg>Should Be Equal As Strings</arg>
<arg>${args_dict}</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-11-22T12:13:42.552567" elapsed="0.000515"/>
</kw>
<if>
<branch type="IF" condition="'${empty_status}' == '${False}'">
<if>
<branch type="IF" condition="${args_dict}">
<for flavor="IN">
<iter>
<kw name="Convert To String" owner="BuiltIn">
<msg time="2024-11-22T12:13:42.553411" level="INFO">${args_key_str} = value_natid</msg>
<var>${args_key_str}</var>
<arg>${args_key}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="PASS" start="2024-11-22T12:13:42.553338" elapsed="0.000084"/>
</kw>
<kw name="Convert To String" owner="BuiltIn">
<msg time="2024-11-22T12:13:42.553561" level="INFO">${args_value_str} = natid-103</msg>
<var>${args_value_str}</var>
<arg>${args_dict}[${args_key_str}]</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="PASS" start="2024-11-22T12:13:42.553481" elapsed="0.000091"/>
</kw>
<kw name="Replace String" owner="String">
<msg time="2024-11-22T12:13:42.553717" level="INFO">${sql_query} = SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-103';</msg>
<var>${sql_query}</var>
<arg>${sql_query}</arg>
<arg>${args_key_str}</arg>
<arg>${args_value_str}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="PASS" start="2024-11-22T12:13:42.553632" elapsed="0.000097"/>
</kw>
<var name="${args_key}">value_natid</var>
<status status="PASS" start="2024-11-22T12:13:42.553284" elapsed="0.000468"/>
</iter>
<var>${args_key}</var>
<value>@{args_dict}</value>
<status status="PASS" start="2024-11-22T12:13:42.553226" elapsed="0.000547"/>
</for>
<status status="PASS" start="2024-11-22T12:13:42.553190" elapsed="0.000604"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:42.553184" elapsed="0.000624"/>
</if>
<status status="PASS" start="2024-11-22T12:13:42.553122" elapsed="0.000696"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:42.553113" elapsed="0.000718"/>
</if>
<return>
<value>${sql_query}</value>
<status status="PASS" start="2024-11-22T12:13:42.553845" elapsed="0.000017"/>
</return>
<msg time="2024-11-22T12:13:42.553916" level="INFO">${updated_sql_query} = SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-103';</msg>
<var>${updated_sql_query}</var>
<arg>${sql_file_name}</arg>
<arg>${args_dict}</arg>
<status status="PASS" start="2024-11-22T12:13:42.552154" elapsed="0.001774"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-11-22T12:13:42.554179" level="FAIL">'SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-103';' does not contain 'delete'</msg>
<arg>${updated_sql_query}</arg>
<arg>DELETE</arg>
<arg>ignore_case=${True}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-11-22T12:13:42.554069" elapsed="0.000139">'SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-103';' does not contain 'delete'</status>
</kw>
<msg time="2024-11-22T12:13:42.554253" level="INFO">${delete_status} = False</msg>
<var>${delete_status}</var>
<arg>Should Contain</arg>
<arg>${updated_sql_query}</arg>
<arg>DELETE</arg>
<arg>ignore_case=${True}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-11-22T12:13:42.553993" elapsed="0.000270"/>
</kw>
<if>
<branch type="IF" condition="'${delete_status}' == '${True}'">
<kw name="Execute Sql String" owner="DatabaseLibrary">
<var>${json_response}</var>
<arg>${updated_sql_query}</arg>
<doc>Executes the ``sql_string`` as a single SQL command.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:42.554393" elapsed="0.000011"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:42.554301" elapsed="0.000122"/>
</branch>
<branch type="ELSE">
<kw name="Query" owner="DatabaseLibrary">
<msg time="2024-11-22T12:13:42.556451" level="INFO" html="true">Executing sql:&lt;br&gt;&lt;code style="font-weight: bold;"&gt;SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-103';&lt;/code&gt;</msg>
<msg time="2024-11-22T12:13:42.557824" level="INFO" html="true">&lt;div style="max-width: 100%; overflow-x: auto;"&gt;&lt;table style="width: auto; border-collapse: collapse; border: 2px solid rgb(140 140 140)"&gt;&lt;caption style="text-align: left; font-weight: bold; padding: 5px;"&gt;Query returned 1 rows&lt;/caption&gt;&lt;tr&gt;&lt;th scope="col" style="background-color: #d6ecd4; border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;Row&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;id&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;created_at&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;create_by&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;updated_at&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;updated_by&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;birth_date&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;brownie_points&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;death_date&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;gender&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;name&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;natid&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;salary&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;tax_paid&lt;/th&gt;&lt;/tr&gt;&lt;tr style="background-color: #eee;"&gt;&lt;th scope="row" style="background-color: #d6ecd4;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;0&lt;/th&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;eed3b6de-37c1-4ec7-9d7b-51d7f652adb3&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;2024-11-22 12:13:41.934291&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;SYSTEM&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;2024-11-22 12:13:41.934291&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;SYSTEM&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;1996-01-01 23:59:59&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;None&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;None&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;FEMALE&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;Lily&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;natid-103&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;1000.5&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;10.28&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;</msg>
<msg time="2024-11-22T12:13:42.558802" level="INFO">${json_response} = [{'id': 'eed3b6de-37c1-4ec7-9d7b-51d7f652adb3', 'created_at': datetime.datetime(2024, 11, 22, 12, 13, 41, 934291), 'create_by': 'SYSTEM', 'updated_at': datetime.datetime(2024, 11, 22, 12, 13, 41, 9342...</msg>
<var>${json_response}</var>
<arg>${updated_sql_query}</arg>
<arg>return_dict=${True}</arg>
<doc>Runs a query with the ``select_statement`` and returns the result as list of rows.
The type of row values depends on the database module -
usually they are tuples or tuple-like objects.</doc>
<status status="PASS" start="2024-11-22T12:13:42.554490" elapsed="0.004326"/>
</kw>
<status status="PASS" start="2024-11-22T12:13:42.554439" elapsed="0.004402"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:42.554294" elapsed="0.004561"/>
</if>
<kw name="Disconnect From Database" owner="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<status status="PASS" start="2024-11-22T12:13:42.558908" elapsed="0.000082"/>
</kw>
<return>
<value>${json_response}</value>
<status status="PASS" start="2024-11-22T12:13:42.559012" elapsed="0.000015"/>
</return>
<msg time="2024-11-22T12:13:42.559090" level="INFO">${sql_response} = [{'id': 'eed3b6de-37c1-4ec7-9d7b-51d7f652adb3', 'created_at': datetime.datetime(2024, 11, 22, 12, 13, 41, 934291), 'create_by': 'SYSTEM', 'updated_at': datetime.datetime(2024, 11, 22, 12, 13, 41, 9342...</msg>
<var>${sql_response}</var>
<arg>select_hero_by_natid</arg>
<arg>${dict}</arg>
<status status="PASS" start="2024-11-22T12:13:42.535349" elapsed="0.023754"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-11-22T12:13:42.559243" level="INFO">${sql_response} = {'id': 'eed3b6de-37c1-4ec7-9d7b-51d7f652adb3', 'created_at': datetime.datetime(2024, 11, 22, 12, 13, 41, 934291), 'create_by': 'SYSTEM', 'updated_at': datetime.datetime(2024, 11, 22, 12, 13, 41, 93429...</msg>
<var>${sql_response}</var>
<arg>${sql_response}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-11-22T12:13:42.559167" elapsed="0.000089"/>
</kw>
<kw name="Compare String" owner="generic">
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T12:13:42.560200" level="INFO">
Expected natid:
natid-103
Actual natid:
natid-103</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T12:13:42.560142" elapsed="0.000079"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T12:13:42.560282" elapsed="0.000068"/>
</kw>
<arg>Expected ${compare_title}:\n${expected_string}\nActual ${compare_title}:\n${actual_string}</arg>
<status status="PASS" start="2024-11-22T12:13:42.559987" elapsed="0.000391"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${expected_string}</arg>
<arg>${actual_string}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-11-22T12:13:42.560435" elapsed="0.000081"/>
</kw>
<arg>${item[0]}</arg>
<arg>${sql_response['natid']}</arg>
<arg>natid</arg>
<doc>Compare Strings</doc>
<status status="PASS" start="2024-11-22T12:13:42.559325" elapsed="0.001222"/>
</kw>
<kw name="Compare String" owner="generic">
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T12:13:42.561552" level="INFO">
Expected name:
Lily
Actual name:
Lily</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T12:13:42.561500" elapsed="0.000072"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T12:13:42.561632" elapsed="0.000065"/>
</kw>
<arg>Expected ${compare_title}:\n${expected_string}\nActual ${compare_title}:\n${actual_string}</arg>
<status status="PASS" start="2024-11-22T12:13:42.561348" elapsed="0.000377"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${expected_string}</arg>
<arg>${actual_string}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-11-22T12:13:42.561837" elapsed="0.000079"/>
</kw>
<arg>${item[1]}</arg>
<arg>${sql_response['name']}</arg>
<arg>name</arg>
<doc>Compare Strings</doc>
<status status="PASS" start="2024-11-22T12:13:42.560615" elapsed="0.001332"/>
</kw>
<kw name="Compare String" owner="generic">
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T12:13:42.562844" level="INFO">
Expected gender:
FEMALE
Actual gender:
FEMALE</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T12:13:42.562793" elapsed="0.000071"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T12:13:42.562922" elapsed="0.000065"/>
</kw>
<arg>Expected ${compare_title}:\n${expected_string}\nActual ${compare_title}:\n${actual_string}</arg>
<status status="PASS" start="2024-11-22T12:13:42.562643" elapsed="0.000373"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${expected_string}</arg>
<arg>${actual_string}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-11-22T12:13:42.563068" elapsed="0.000074"/>
</kw>
<arg>${item[2]}</arg>
<arg>${sql_response['gender']}</arg>
<arg>gender</arg>
<doc>Compare Strings</doc>
<status status="PASS" start="2024-11-22T12:13:42.562012" elapsed="0.001158"/>
</kw>
<kw name="Compare Date" owner="generic">
<if>
<branch type="IF" condition="'${expected_date}' == '${EMPTY}'">
<kw name="Log and Log To Console" owner="generic">
<arg>Expected ${compare_title}:\n${None}\nActual ${compare_title}:\n${actual_date}</arg>
<status status="NOT RUN" start="2024-11-22T12:13:42.564096" elapsed="0.000012"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${None}</arg>
<arg>${actual_date}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:42.564162" elapsed="0.000011"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:42.563814" elapsed="0.000377"/>
</branch>
<branch type="ELSE">
<kw name="Convert Date" owner="DateTime">
<msg time="2024-11-22T12:13:42.564369" level="INFO">${expected_date} = 1996-01-01 23:59:59.000000</msg>
<var>${expected_date}</var>
<arg>${expected_date}</arg>
<arg>result_format=%Y-%m-%d %H:%M:%S.%f</arg>
<doc>Converts between supported `date formats`.</doc>
<status status="PASS" start="2024-11-22T12:13:42.564257" elapsed="0.000124"/>
</kw>
<kw name="Convert Date" owner="DateTime">
<msg time="2024-11-22T12:13:42.564519" level="INFO">${actual_date} = 1996-01-01 23:59:59.000000</msg>
<var>${actual_date}</var>
<arg>${actual_date}</arg>
<arg>result_format=%Y-%m-%d %H:%M:%S.%f</arg>
<doc>Converts between supported `date formats`.</doc>
<status status="PASS" start="2024-11-22T12:13:42.564439" elapsed="0.000090"/>
</kw>
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T12:13:42.564781" level="INFO">
Expected birth_date:
1996-01-01 23:59:59.000000
Actual birth_date:
1996-01-01 23:59:59.000000</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T12:13:42.564731" elapsed="0.000068"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T12:13:42.564852" elapsed="0.000057"/>
</kw>
<arg>Expected ${compare_title}:\n${expected_date}\nActual ${compare_title}:\n${actual_date}</arg>
<status status="PASS" start="2024-11-22T12:13:42.564589" elapsed="0.000345"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${expected_date}</arg>
<arg>${actual_date}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-11-22T12:13:42.564987" elapsed="0.000073"/>
</kw>
<status status="PASS" start="2024-11-22T12:13:42.564206" elapsed="0.000882"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:42.563806" elapsed="0.001297"/>
</if>
<arg>${item[3]}</arg>
<arg>${sql_response['birth_date']}</arg>
<arg>birth_date</arg>
<doc>Format date and compare</doc>
<status status="PASS" start="2024-11-22T12:13:42.563259" elapsed="0.001863"/>
</kw>
<kw name="Compare Date" owner="generic">
<if>
<branch type="IF" condition="'${expected_date}' == '${EMPTY}'">
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T12:13:42.566254" level="INFO">
Expected death_date:
None
Actual death_date:
None</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T12:13:42.566204" elapsed="0.000068"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T12:13:42.566327" elapsed="0.000061"/>
</kw>
<arg>Expected ${compare_title}:\n${None}\nActual ${compare_title}:\n${actual_date}</arg>
<status status="PASS" start="2024-11-22T12:13:42.566063" elapsed="0.000352"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${None}</arg>
<arg>${actual_date}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-11-22T12:13:42.566469" elapsed="0.000073"/>
</kw>
<status status="PASS" start="2024-11-22T12:13:42.565777" elapsed="0.000786"/>
</branch>
<branch type="ELSE">
<kw name="Convert Date" owner="DateTime">
<var>${expected_date}</var>
<arg>${expected_date}</arg>
<arg>result_format=%Y-%m-%d %H:%M:%S.%f</arg>
<doc>Converts between supported `date formats`.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:42.566630" elapsed="0.000012"/>
</kw>
<kw name="Convert Date" owner="DateTime">
<var>${actual_date}</var>
<arg>${actual_date}</arg>
<arg>result_format=%Y-%m-%d %H:%M:%S.%f</arg>
<doc>Converts between supported `date formats`.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:42.566695" elapsed="0.000010"/>
</kw>
<kw name="Log and Log To Console" owner="generic">
<arg>Expected ${compare_title}:\n${expected_date}\nActual ${compare_title}:\n${actual_date}</arg>
<status status="NOT RUN" start="2024-11-22T12:13:42.566762" elapsed="0.000012"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${expected_date}</arg>
<arg>${actual_date}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:42.566826" elapsed="0.000010"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:42.566579" elapsed="0.000273"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:42.565770" elapsed="0.001096"/>
</if>
<arg>${item[4]}</arg>
<arg>${sql_response['death_date']}</arg>
<arg>death_date</arg>
<doc>Format date and compare</doc>
<status status="PASS" start="2024-11-22T12:13:42.565214" elapsed="0.001672"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<if>
<branch type="IF" condition="'${expected_int}' == '${EMPTY}'">
<kw name="Log and Log To Console" owner="generic">
<arg>Expected ${compare_title}:\n${None}\nActual ${compare_title}:\n${actual_int}</arg>
<status status="NOT RUN" start="2024-11-22T12:13:42.567802" elapsed="0.000012"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${None}</arg>
<arg>${actual_int}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:42.567868" elapsed="0.000011"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:42.567520" elapsed="0.000377"/>
</branch>
<branch type="ELSE">
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T12:13:42.568160" level="INFO">
Expected salary:
1000.50
Actual salary:
1000.5</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T12:13:42.568111" elapsed="0.000138"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T12:13:42.568305" elapsed="0.000155"/>
</kw>
<arg>Expected ${compare_title}:\n${expected_int}\nActual ${compare_title}:\n${actual_int}</arg>
<status status="PASS" start="2024-11-22T12:13:42.567964" elapsed="0.000524"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-11-22T12:13:42.568633" level="INFO">${expected_int} = 1000.50</msg>
<var>${expected_int}</var>
<arg>'{:.2f}'.format(float(${expected_int}))</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-11-22T12:13:42.568544" elapsed="0.000100"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-11-22T12:13:42.568782" level="INFO">${actual_int} = 1000.50</msg>
<var>${actual_int}</var>
<arg>'{:.2f}'.format(float(${actual_int}))</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-11-22T12:13:42.568702" elapsed="0.000091"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${expected_int}</arg>
<arg>${actual_int}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-11-22T12:13:42.568850" elapsed="0.000068"/>
</kw>
<status status="PASS" start="2024-11-22T12:13:42.567912" elapsed="0.001026"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:42.567513" elapsed="0.001439"/>
</if>
<arg>${item[5]}</arg>
<arg>${sql_response['salary']}</arg>
<arg>salary</arg>
<doc>Normalize the numbers and compare</doc>
<status status="PASS" start="2024-11-22T12:13:42.566972" elapsed="0.002006"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<if>
<branch type="IF" condition="'${expected_int}' == '${EMPTY}'">
<kw name="Log and Log To Console" owner="generic">
<arg>Expected ${compare_title}:\n${None}\nActual ${compare_title}:\n${actual_int}</arg>
<status status="NOT RUN" start="2024-11-22T12:13:42.569878" elapsed="0.000012"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${None}</arg>
<arg>${actual_int}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:42.569940" elapsed="0.000010"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:42.569605" elapsed="0.000361"/>
</branch>
<branch type="ELSE">
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T12:13:42.570210" level="INFO">
Expected tax_paid:
10.28
Actual tax_paid:
10.28</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T12:13:42.570164" elapsed="0.000065"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T12:13:42.570281" elapsed="0.000058"/>
</kw>
<arg>Expected ${compare_title}:\n${expected_int}\nActual ${compare_title}:\n${actual_int}</arg>
<status status="PASS" start="2024-11-22T12:13:42.570029" elapsed="0.000334"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-11-22T12:13:42.570492" level="INFO">${expected_int} = 10.28</msg>
<var>${expected_int}</var>
<arg>'{:.2f}'.format(float(${expected_int}))</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-11-22T12:13:42.570414" elapsed="0.000088"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-11-22T12:13:42.570624" level="INFO">${actual_int} = 10.28</msg>
<var>${actual_int}</var>
<arg>'{:.2f}'.format(float(${actual_int}))</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-11-22T12:13:42.570554" elapsed="0.000079"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${expected_int}</arg>
<arg>${actual_int}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-11-22T12:13:42.570685" elapsed="0.000070"/>
</kw>
<status status="PASS" start="2024-11-22T12:13:42.569981" elapsed="0.000793"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:42.569598" elapsed="0.001189"/>
</if>
<arg>${item[6]}</arg>
<arg>${sql_response['tax_paid']}</arg>
<arg>tax_paid</arg>
<doc>Normalize the numbers and compare</doc>
<status status="PASS" start="2024-11-22T12:13:42.569061" elapsed="0.001744"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<if>
<branch type="IF" condition="'${expected_int}' == '${EMPTY}'">
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T12:13:42.571849" level="INFO">
Expected brownie_points:
None
Actual brownie_points:
None</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T12:13:42.571802" elapsed="0.000065"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T12:13:42.571917" elapsed="0.000058"/>
</kw>
<arg>Expected ${compare_title}:\n${None}\nActual ${compare_title}:\n${actual_int}</arg>
<status status="PASS" start="2024-11-22T12:13:42.571669" elapsed="0.000331"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${None}</arg>
<arg>${actual_int}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-11-22T12:13:42.572050" elapsed="0.000077"/>
</kw>
<status status="PASS" start="2024-11-22T12:13:42.571395" elapsed="0.000751"/>
</branch>
<branch type="ELSE">
<kw name="Log and Log To Console" owner="generic">
<arg>Expected ${compare_title}:\n${expected_int}\nActual ${compare_title}:\n${actual_int}</arg>
<status status="NOT RUN" start="2024-11-22T12:13:42.572211" elapsed="0.000012"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<var>${expected_int}</var>
<arg>'{:.2f}'.format(float(${expected_int}))</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:42.572273" elapsed="0.000010"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<var>${actual_int}</var>
<arg>'{:.2f}'.format(float(${actual_int}))</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:42.572336" elapsed="0.000009"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${expected_int}</arg>
<arg>${actual_int}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:42.572393" elapsed="0.000008"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:42.572160" elapsed="0.000257"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:42.571388" elapsed="0.001043"/>
</if>
<arg>${item[7]}</arg>
<arg>${sql_response['brownie_points']}</arg>
<arg>brownie_points</arg>
<doc>Normalize the numbers and compare</doc>
<status status="PASS" start="2024-11-22T12:13:42.570886" elapsed="0.001563"/>
</kw>
<var name="${item}">['natid-103', 'Lily', 'FEMALE', '1996-01-01T23:59:59', '', '1000.50', '10.28', '']</var>
<status status="PASS" start="2024-11-22T12:13:42.534864" elapsed="0.037603"/>
</iter>
<iter>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2024-11-22T12:13:42.572882" level="INFO">${dict} = {'value_natid': 'natid-104'}</msg>
<var>${dict}</var>
<arg>value_natid=${item[0]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2024-11-22T12:13:42.572579" elapsed="0.000315"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<kw name="Connect To Database" owner="DatabaseLibrary">
<msg time="2024-11-22T12:13:42.573222" level="INFO">Looking for configuration file: 'resources/db.cfg'</msg>
<msg time="2024-11-22T12:13:42.573245" level="INFO">Configuration file doesn't exist</msg>
<msg time="2024-11-22T12:13:42.573325" level="INFO">Connect to DB using : mysql.connector.connect(database='testdb', user='user', password=***, host='localhost', port=3306)</msg>
<arg>${DB_API}</arg>
<arg>${DB_NAME}</arg>
<arg>${DB_USER}</arg>
<arg>${DB_PASSWORD}</arg>
<arg>${DB_HOST}</arg>
<arg>${DB_PORT}</arg>
<doc>Creates a database connection using the DB API 2.0 ``db_module`` and the parameters provided.
Along with listed commonly used arguments (`db_name`, `db_host` etc.)
you can set any other DB module specific parameters as key/value pairs.</doc>
<status status="PASS" start="2024-11-22T12:13:42.573102" elapsed="0.011455"/>
</kw>
<kw name="Update SQL Queries With Arguments Dictionary" owner="sql-helper">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-11-22T12:13:42.584929" level="INFO" html="true">Getting file '&lt;a href="file:///Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/object-repo/sql-queries/select_hero_by_natid.sql"&gt;/Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/object-repo/sql-queries/select_hero_by_natid.sql&lt;/a&gt;'.</msg>
<msg time="2024-11-22T12:13:42.585002" level="INFO">${sql_query} = SELECT *
FROM testdb.working_class_heroes
WHERE natid='value_natid';</msg>
<var>${sql_query}</var>
<arg>./object-repo/sql-queries/${sql_file_name}.sql</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-11-22T12:13:42.584829" elapsed="0.000184"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2024-11-22T12:13:42.585420" level="INFO">Argument types are:
&lt;class 'robot.utils.dotdict.DotDict'&gt;
&lt;class 'str'&gt;</msg>
<msg time="2024-11-22T12:13:42.585469" level="FAIL">{'value_natid': 'natid-104'} != </msg>
<arg>${args_dict}</arg>
<arg>${EMPTY}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="FAIL" start="2024-11-22T12:13:42.585149" elapsed="0.000352">{'value_natid': 'natid-104'} != </status>
</kw>
<msg time="2024-11-22T12:13:42.585545" level="INFO">${empty_status} = False</msg>
<var>${empty_status}</var>
<arg>Should Be Equal As Strings</arg>
<arg>${args_dict}</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-11-22T12:13:42.585076" elapsed="0.000478"/>
</kw>
<if>
<branch type="IF" condition="'${empty_status}' == '${False}'">
<if>
<branch type="IF" condition="${args_dict}">
<for flavor="IN">
<iter>
<kw name="Convert To String" owner="BuiltIn">
<msg time="2024-11-22T12:13:42.585958" level="INFO">${args_key_str} = value_natid</msg>
<var>${args_key_str}</var>
<arg>${args_key}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="PASS" start="2024-11-22T12:13:42.585890" elapsed="0.000078"/>
</kw>
<kw name="Convert To String" owner="BuiltIn">
<msg time="2024-11-22T12:13:42.586100" level="INFO">${args_value_str} = natid-104</msg>
<var>${args_value_str}</var>
<arg>${args_dict}[${args_key_str}]</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="PASS" start="2024-11-22T12:13:42.586023" elapsed="0.000087"/>
</kw>
<kw name="Replace String" owner="String">
<msg time="2024-11-22T12:13:42.586245" level="INFO">${sql_query} = SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-104';</msg>
<var>${sql_query}</var>
<arg>${sql_query}</arg>
<arg>${args_key_str}</arg>
<arg>${args_value_str}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="PASS" start="2024-11-22T12:13:42.586165" elapsed="0.000090"/>
</kw>
<var name="${args_key}">value_natid</var>
<status status="PASS" start="2024-11-22T12:13:42.585841" elapsed="0.000436"/>
</iter>
<var>${args_key}</var>
<value>@{args_dict}</value>
<status status="PASS" start="2024-11-22T12:13:42.585785" elapsed="0.000510"/>
</for>
<status status="PASS" start="2024-11-22T12:13:42.585748" elapsed="0.000566"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:42.585645" elapsed="0.000682"/>
</if>
<status status="PASS" start="2024-11-22T12:13:42.585590" elapsed="0.000747"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:42.585582" elapsed="0.000767"/>
</if>
<return>
<value>${sql_query}</value>
<status status="PASS" start="2024-11-22T12:13:42.586362" elapsed="0.000016"/>
</return>
<msg time="2024-11-22T12:13:42.586429" level="INFO">${updated_sql_query} = SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-104';</msg>
<var>${updated_sql_query}</var>
<arg>${sql_file_name}</arg>
<arg>${args_dict}</arg>
<status status="PASS" start="2024-11-22T12:13:42.584688" elapsed="0.001752"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-11-22T12:13:42.586667" level="FAIL">'SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-104';' does not contain 'delete'</msg>
<arg>${updated_sql_query}</arg>
<arg>DELETE</arg>
<arg>ignore_case=${True}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-11-22T12:13:42.586567" elapsed="0.000126">'SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-104';' does not contain 'delete'</status>
</kw>
<msg time="2024-11-22T12:13:42.586734" level="INFO">${delete_status} = False</msg>
<var>${delete_status}</var>
<arg>Should Contain</arg>
<arg>${updated_sql_query}</arg>
<arg>DELETE</arg>
<arg>ignore_case=${True}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-11-22T12:13:42.586500" elapsed="0.000243"/>
</kw>
<if>
<branch type="IF" condition="'${delete_status}' == '${True}'">
<kw name="Execute Sql String" owner="DatabaseLibrary">
<var>${json_response}</var>
<arg>${updated_sql_query}</arg>
<doc>Executes the ``sql_string`` as a single SQL command.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:42.586860" elapsed="0.000011"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:42.586777" elapsed="0.000112"/>
</branch>
<branch type="ELSE">
<kw name="Query" owner="DatabaseLibrary">
<msg time="2024-11-22T12:13:42.587344" level="INFO" html="true">Executing sql:&lt;br&gt;&lt;code style="font-weight: bold;"&gt;SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-104';&lt;/code&gt;</msg>
<msg time="2024-11-22T12:13:42.590799" level="INFO" html="true">&lt;div style="max-width: 100%; overflow-x: auto;"&gt;&lt;table style="width: auto; border-collapse: collapse; border: 2px solid rgb(140 140 140)"&gt;&lt;caption style="text-align: left; font-weight: bold; padding: 5px;"&gt;Query returned 1 rows&lt;/caption&gt;&lt;tr&gt;&lt;th scope="col" style="background-color: #d6ecd4; border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;Row&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;id&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;created_at&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;create_by&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;updated_at&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;updated_by&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;birth_date&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;brownie_points&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;death_date&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;gender&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;name&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;natid&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;salary&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;tax_paid&lt;/th&gt;&lt;/tr&gt;&lt;tr style="background-color: #eee;"&gt;&lt;th scope="row" style="background-color: #d6ecd4;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;0&lt;/th&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;f636bf87-021b-4741-a764-3eff609389af&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;2024-11-22 12:13:41.952003&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;SYSTEM&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;2024-11-22 12:13:41.952003&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;SYSTEM&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;1996-01-01 23:59:59&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;None&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;None&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;MALE&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;Ben&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;natid-104&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;1000.12&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;10.0&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;</msg>
<msg time="2024-11-22T12:13:42.591270" level="INFO">${json_response} = [{'id': 'f636bf87-021b-4741-a764-3eff609389af', 'created_at': datetime.datetime(2024, 11, 22, 12, 13, 41, 952003), 'create_by': 'SYSTEM', 'updated_at': datetime.datetime(2024, 11, 22, 12, 13, 41, 9520...</msg>
<var>${json_response}</var>
<arg>${updated_sql_query}</arg>
<arg>return_dict=${True}</arg>
<doc>Runs a query with the ``select_statement`` and returns the result as list of rows.
The type of row values depends on the database module -
usually they are tuples or tuple-like objects.</doc>
<status status="PASS" start="2024-11-22T12:13:42.586949" elapsed="0.004338"/>
</kw>
<status status="PASS" start="2024-11-22T12:13:42.586902" elapsed="0.004412"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:42.586771" elapsed="0.004560"/>
</if>
<kw name="Disconnect From Database" owner="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<status status="PASS" start="2024-11-22T12:13:42.591388" elapsed="0.000092"/>
</kw>
<return>
<value>${json_response}</value>
<status status="PASS" start="2024-11-22T12:13:42.591504" elapsed="0.000017"/>
</return>
<msg time="2024-11-22T12:13:42.591586" level="INFO">${sql_response} = [{'id': 'f636bf87-021b-4741-a764-3eff609389af', 'created_at': datetime.datetime(2024, 11, 22, 12, 13, 41, 952003), 'create_by': 'SYSTEM', 'updated_at': datetime.datetime(2024, 11, 22, 12, 13, 41, 9520...</msg>
<var>${sql_response}</var>
<arg>select_hero_by_natid</arg>
<arg>${dict}</arg>
<status status="PASS" start="2024-11-22T12:13:42.572983" elapsed="0.018616"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-11-22T12:13:42.591744" level="INFO">${sql_response} = {'id': 'f636bf87-021b-4741-a764-3eff609389af', 'created_at': datetime.datetime(2024, 11, 22, 12, 13, 41, 952003), 'create_by': 'SYSTEM', 'updated_at': datetime.datetime(2024, 11, 22, 12, 13, 41, 95200...</msg>
<var>${sql_response}</var>
<arg>${sql_response}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-11-22T12:13:42.591665" elapsed="0.000092"/>
</kw>
<kw name="Compare String" owner="generic">
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T12:13:42.592635" level="INFO">
Expected natid:
natid-104
Actual natid:
natid-104</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T12:13:42.592583" elapsed="0.000070"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T12:13:42.592704" elapsed="0.000062"/>
</kw>
<arg>Expected ${compare_title}:\n${expected_string}\nActual ${compare_title}:\n${actual_string}</arg>
<status status="PASS" start="2024-11-22T12:13:42.592447" elapsed="0.000343"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${expected_string}</arg>
<arg>${actual_string}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-11-22T12:13:42.592840" elapsed="0.000069"/>
</kw>
<arg>${item[0]}</arg>
<arg>${sql_response['natid']}</arg>
<arg>natid</arg>
<doc>Compare Strings</doc>
<status status="PASS" start="2024-11-22T12:13:42.591825" elapsed="0.001109"/>
</kw>
<kw name="Compare String" owner="generic">
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T12:13:42.593716" level="INFO">
Expected name:
Ben
Actual name:
Ben</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T12:13:42.593670" elapsed="0.000063"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T12:13:42.593784" elapsed="0.000056"/>
</kw>
<arg>Expected ${compare_title}:\n${expected_string}\nActual ${compare_title}:\n${actual_string}</arg>
<status status="PASS" start="2024-11-22T12:13:42.593524" elapsed="0.000340"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${expected_string}</arg>
<arg>${actual_string}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-11-22T12:13:42.593966" elapsed="0.000068"/>
</kw>
<arg>${item[1]}</arg>
<arg>${sql_response['name']}</arg>
<arg>name</arg>
<doc>Compare Strings</doc>
<status status="PASS" start="2024-11-22T12:13:42.592991" elapsed="0.001069"/>
</kw>
<kw name="Compare String" owner="generic">
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T12:13:42.594838" level="INFO">
Expected gender:
MALE
Actual gender:
MALE</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T12:13:42.594791" elapsed="0.000064"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T12:13:42.594906" elapsed="0.000052"/>
</kw>
<arg>Expected ${compare_title}:\n${expected_string}\nActual ${compare_title}:\n${actual_string}</arg>
<status status="PASS" start="2024-11-22T12:13:42.594659" elapsed="0.000324"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${expected_string}</arg>
<arg>${actual_string}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-11-22T12:13:42.595033" elapsed="0.000067"/>
</kw>
<arg>${item[2]}</arg>
<arg>${sql_response['gender']}</arg>
<arg>gender</arg>
<doc>Compare Strings</doc>
<status status="PASS" start="2024-11-22T12:13:42.594117" elapsed="0.001010"/>
</kw>
<kw name="Compare Date" owner="generic">
<if>
<branch type="IF" condition="'${expected_date}' == '${EMPTY}'">
<kw name="Log and Log To Console" owner="generic">
<arg>Expected ${compare_title}:\n${None}\nActual ${compare_title}:\n${actual_date}</arg>
<status status="NOT RUN" start="2024-11-22T12:13:42.595974" elapsed="0.000013"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${None}</arg>
<arg>${actual_date}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:42.596038" elapsed="0.000010"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:42.595716" elapsed="0.000348"/>
</branch>
<branch type="ELSE">
<kw name="Convert Date" owner="DateTime">
<msg time="2024-11-22T12:13:42.596232" level="INFO">${expected_date} = 1996-01-01 23:59:59.000000</msg>
<var>${expected_date}</var>
<arg>${expected_date}</arg>
<arg>result_format=%Y-%m-%d %H:%M:%S.%f</arg>
<doc>Converts between supported `date formats`.</doc>
<status status="PASS" start="2024-11-22T12:13:42.596124" elapsed="0.000119"/>
</kw>
<kw name="Convert Date" owner="DateTime">
<msg time="2024-11-22T12:13:42.596370" level="INFO">${actual_date} = 1996-01-01 23:59:59.000000</msg>
<var>${actual_date}</var>
<arg>${actual_date}</arg>
<arg>result_format=%Y-%m-%d %H:%M:%S.%f</arg>
<doc>Converts between supported `date formats`.</doc>
<status status="PASS" start="2024-11-22T12:13:42.596296" elapsed="0.000084"/>
</kw>
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T12:13:42.596712" level="INFO">
Expected birth_date:
1996-01-01 23:59:59.000000
Actual birth_date:
1996-01-01 23:59:59.000000</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T12:13:42.596663" elapsed="0.000067"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T12:13:42.596780" elapsed="0.000058"/>
</kw>
<arg>Expected ${compare_title}:\n${expected_date}\nActual ${compare_title}:\n${actual_date}</arg>
<status status="PASS" start="2024-11-22T12:13:42.596436" elapsed="0.000426"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${expected_date}</arg>
<arg>${actual_date}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-11-22T12:13:42.596910" elapsed="0.000068"/>
</kw>
<status status="PASS" start="2024-11-22T12:13:42.596079" elapsed="0.000917"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:42.595708" elapsed="0.001302"/>
</if>
<arg>${item[3]}</arg>
<arg>${sql_response['birth_date']}</arg>
<arg>birth_date</arg>
<doc>Format date and compare</doc>
<status status="PASS" start="2024-11-22T12:13:42.595210" elapsed="0.001818"/>
</kw>
<kw name="Compare Date" owner="generic">
<if>
<branch type="IF" condition="'${expected_date}' == '${EMPTY}'">
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T12:13:42.598055" level="INFO">
Expected death_date:
None
Actual death_date:
None</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T12:13:42.598010" elapsed="0.000062"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T12:13:42.598121" elapsed="0.000056"/>
</kw>
<arg>Expected ${compare_title}:\n${None}\nActual ${compare_title}:\n${actual_date}</arg>
<status status="PASS" start="2024-11-22T12:13:42.597880" elapsed="0.000322"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${None}</arg>
<arg>${actual_date}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-11-22T12:13:42.598251" elapsed="0.000063"/>
</kw>
<status status="PASS" start="2024-11-22T12:13:42.597621" elapsed="0.000711"/>
</branch>
<branch type="ELSE">
<kw name="Convert Date" owner="DateTime">
<var>${expected_date}</var>
<arg>${expected_date}</arg>
<arg>result_format=%Y-%m-%d %H:%M:%S.%f</arg>
<doc>Converts between supported `date formats`.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:42.598393" elapsed="0.000009"/>
</kw>
<kw name="Convert Date" owner="DateTime">
<var>${actual_date}</var>
<arg>${actual_date}</arg>
<arg>result_format=%Y-%m-%d %H:%M:%S.%f</arg>
<doc>Converts between supported `date formats`.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:42.598450" elapsed="0.000009"/>
</kw>
<kw name="Log and Log To Console" owner="generic">
<arg>Expected ${compare_title}:\n${expected_date}\nActual ${compare_title}:\n${actual_date}</arg>
<status status="NOT RUN" start="2024-11-22T12:13:42.598510" elapsed="0.000010"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${expected_date}</arg>
<arg>${actual_date}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:42.598564" elapsed="0.000009"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:42.598346" elapsed="0.000242"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:42.597614" elapsed="0.000986"/>
</if>
<arg>${item[4]}</arg>
<arg>${sql_response['death_date']}</arg>
<arg>death_date</arg>
<doc>Format date and compare</doc>
<status status="PASS" start="2024-11-22T12:13:42.597107" elapsed="0.001511"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<if>
<branch type="IF" condition="'${expected_int}' == '${EMPTY}'">
<kw name="Log and Log To Console" owner="generic">
<arg>Expected ${compare_title}:\n${None}\nActual ${compare_title}:\n${actual_int}</arg>
<status status="NOT RUN" start="2024-11-22T12:13:42.599439" elapsed="0.000011"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${None}</arg>
<arg>${actual_int}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:42.599496" elapsed="0.000009"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:42.599194" elapsed="0.000326"/>
</branch>
<branch type="ELSE">
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T12:13:42.599743" level="INFO">
Expected salary:
1000.12
Actual salary:
1000.12</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T12:13:42.599699" elapsed="0.000109"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T12:13:42.599857" elapsed="0.000053"/>
</kw>
<arg>Expected ${compare_title}:\n${expected_int}\nActual ${compare_title}:\n${actual_int}</arg>
<status status="PASS" start="2024-11-22T12:13:42.599576" elapsed="0.000358"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-11-22T12:13:42.600058" level="INFO">${expected_int} = 1000.12</msg>
<var>${expected_int}</var>
<arg>'{:.2f}'.format(float(${expected_int}))</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-11-22T12:13:42.599983" elapsed="0.000085"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-11-22T12:13:42.600187" level="INFO">${actual_int} = 1000.12</msg>
<var>${actual_int}</var>
<arg>'{:.2f}'.format(float(${actual_int}))</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-11-22T12:13:42.600117" elapsed="0.000079"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${expected_int}</arg>
<arg>${actual_int}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-11-22T12:13:42.600244" elapsed="0.000064"/>
</kw>
<status status="PASS" start="2024-11-22T12:13:42.599533" elapsed="0.000793"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:42.599188" elapsed="0.001150"/>
</if>
<arg>${item[5]}</arg>
<arg>${sql_response['salary']}</arg>
<arg>salary</arg>
<doc>Normalize the numbers and compare</doc>
<status status="PASS" start="2024-11-22T12:13:42.598694" elapsed="0.001661"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<if>
<branch type="IF" condition="'${expected_int}' == '${EMPTY}'">
<kw name="Log and Log To Console" owner="generic">
<arg>Expected ${compare_title}:\n${None}\nActual ${compare_title}:\n${actual_int}</arg>
<status status="NOT RUN" start="2024-11-22T12:13:42.601165" elapsed="0.000011"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${None}</arg>
<arg>${actual_int}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:42.601226" elapsed="0.000009"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:42.600920" elapsed="0.000331"/>
</branch>
<branch type="ELSE">
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T12:13:42.601479" level="INFO">
Expected tax_paid:
10.00
Actual tax_paid:
10.0</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T12:13:42.601436" elapsed="0.000060"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T12:13:42.601545" elapsed="0.000053"/>
</kw>
<arg>Expected ${compare_title}:\n${expected_int}\nActual ${compare_title}:\n${actual_int}</arg>
<status status="PASS" start="2024-11-22T12:13:42.601311" elapsed="0.000310"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-11-22T12:13:42.601738" level="INFO">${expected_int} = 10.00</msg>
<var>${expected_int}</var>
<arg>'{:.2f}'.format(float(${expected_int}))</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-11-22T12:13:42.601667" elapsed="0.000081"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-11-22T12:13:42.601860" level="INFO">${actual_int} = 10.00</msg>
<var>${actual_int}</var>
<arg>'{:.2f}'.format(float(${actual_int}))</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-11-22T12:13:42.601796" elapsed="0.000073"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${expected_int}</arg>
<arg>${actual_int}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-11-22T12:13:42.601917" elapsed="0.000064"/>
</kw>
<status status="PASS" start="2024-11-22T12:13:42.601264" elapsed="0.000734"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:42.600913" elapsed="0.001098"/>
</if>
<arg>${item[6]}</arg>
<arg>${sql_response['tax_paid']}</arg>
<arg>tax_paid</arg>
<doc>Normalize the numbers and compare</doc>
<status status="PASS" start="2024-11-22T12:13:42.600433" elapsed="0.001594"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<if>
<branch type="IF" condition="'${expected_int}' == '${EMPTY}'">
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T12:13:42.602983" level="INFO">
Expected brownie_points:
None
Actual brownie_points:
None</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T12:13:42.602938" elapsed="0.000137"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T12:13:42.603125" elapsed="0.000054"/>
</kw>
<arg>Expected ${compare_title}:\n${None}\nActual ${compare_title}:\n${actual_int}</arg>
<status status="PASS" start="2024-11-22T12:13:42.602815" elapsed="0.000388"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${None}</arg>
<arg>${actual_int}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-11-22T12:13:42.603250" elapsed="0.000065"/>
</kw>
<status status="PASS" start="2024-11-22T12:13:42.602575" elapsed="0.000758"/>
</branch>
<branch type="ELSE">
<kw name="Log and Log To Console" owner="generic">
<arg>Expected ${compare_title}:\n${expected_int}\nActual ${compare_title}:\n${actual_int}</arg>
<status status="NOT RUN" start="2024-11-22T12:13:42.603394" elapsed="0.000011"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<var>${expected_int}</var>
<arg>'{:.2f}'.format(float(${expected_int}))</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:42.603451" elapsed="0.000009"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<var>${actual_int}</var>
<arg>'{:.2f}'.format(float(${actual_int}))</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:42.603504" elapsed="0.000008"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${expected_int}</arg>
<arg>${actual_int}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:42.603557" elapsed="0.000009"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:42.603347" elapsed="0.000234"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:42.602568" elapsed="0.001025"/>
</if>
<arg>${item[7]}</arg>
<arg>${sql_response['brownie_points']}</arg>
<arg>brownie_points</arg>
<doc>Normalize the numbers and compare</doc>
<status status="PASS" start="2024-11-22T12:13:42.602105" elapsed="0.001505"/>
</kw>
<var name="${item}">['natid-104', 'Ben', 'MALE', '1996-01-01T23:59:59', '', '1000.12', '10.00', '']</var>
<status status="PASS" start="2024-11-22T12:13:42.572528" elapsed="0.031099"/>
</iter>
<iter>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2024-11-22T12:13:42.604009" level="INFO">${dict} = {'value_natid': 'natid-105'}</msg>
<var>${dict}</var>
<arg>value_natid=${item[0]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2024-11-22T12:13:42.603726" elapsed="0.000294"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<kw name="Connect To Database" owner="DatabaseLibrary">
<msg time="2024-11-22T12:13:42.604311" level="INFO">Looking for configuration file: 'resources/db.cfg'</msg>
<msg time="2024-11-22T12:13:42.604327" level="INFO">Configuration file doesn't exist</msg>
<msg time="2024-11-22T12:13:42.604398" level="INFO">Connect to DB using : mysql.connector.connect(database='testdb', user='user', password=***, host='localhost', port=3306)</msg>
<arg>${DB_API}</arg>
<arg>${DB_NAME}</arg>
<arg>${DB_USER}</arg>
<arg>${DB_PASSWORD}</arg>
<arg>${DB_HOST}</arg>
<arg>${DB_PORT}</arg>
<doc>Creates a database connection using the DB API 2.0 ``db_module`` and the parameters provided.
Along with listed commonly used arguments (`db_name`, `db_host` etc.)
you can set any other DB module specific parameters as key/value pairs.</doc>
<status status="PASS" start="2024-11-22T12:13:42.604207" elapsed="0.014106"/>
</kw>
<kw name="Update SQL Queries With Arguments Dictionary" owner="sql-helper">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-11-22T12:13:42.618631" level="INFO" html="true">Getting file '&lt;a href="file:///Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/object-repo/sql-queries/select_hero_by_natid.sql"&gt;/Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/object-repo/sql-queries/select_hero_by_natid.sql&lt;/a&gt;'.</msg>
<msg time="2024-11-22T12:13:42.618708" level="INFO">${sql_query} = SELECT *
FROM testdb.working_class_heroes
WHERE natid='value_natid';</msg>
<var>${sql_query}</var>
<arg>./object-repo/sql-queries/${sql_file_name}.sql</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-11-22T12:13:42.618543" elapsed="0.000175"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2024-11-22T12:13:42.619106" level="INFO">Argument types are:
&lt;class 'robot.utils.dotdict.DotDict'&gt;
&lt;class 'str'&gt;</msg>
<msg time="2024-11-22T12:13:42.619159" level="FAIL">{'value_natid': 'natid-105'} != </msg>
<arg>${args_dict}</arg>
<arg>${EMPTY}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="FAIL" start="2024-11-22T12:13:42.618837" elapsed="0.000353">{'value_natid': 'natid-105'} != </status>
</kw>
<msg time="2024-11-22T12:13:42.619234" level="INFO">${empty_status} = False</msg>
<var>${empty_status}</var>
<arg>Should Be Equal As Strings</arg>
<arg>${args_dict}</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-11-22T12:13:42.618772" elapsed="0.000471"/>
</kw>
<if>
<branch type="IF" condition="'${empty_status}' == '${False}'">
<if>
<branch type="IF" condition="${args_dict}">
<for flavor="IN">
<iter>
<kw name="Convert To String" owner="BuiltIn">
<msg time="2024-11-22T12:13:42.619551" level="INFO">${args_key_str} = value_natid</msg>
<var>${args_key_str}</var>
<arg>${args_key}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="PASS" start="2024-11-22T12:13:42.619485" elapsed="0.000076"/>
</kw>
<kw name="Convert To String" owner="BuiltIn">
<msg time="2024-11-22T12:13:42.619681" level="INFO">${args_value_str} = natid-105</msg>
<var>${args_value_str}</var>
<arg>${args_dict}[${args_key_str}]</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="PASS" start="2024-11-22T12:13:42.619614" elapsed="0.000076"/>
</kw>
<kw name="Replace String" owner="String">
<msg time="2024-11-22T12:13:42.619810" level="INFO">${sql_query} = SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-105';</msg>
<var>${sql_query}</var>
<arg>${sql_query}</arg>
<arg>${args_key_str}</arg>
<arg>${args_value_str}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="PASS" start="2024-11-22T12:13:42.619740" elapsed="0.000080"/>
</kw>
<var name="${args_key}">value_natid</var>
<status status="PASS" start="2024-11-22T12:13:42.619433" elapsed="0.000406"/>
</iter>
<var>${args_key}</var>
<value>@{args_dict}</value>
<status status="PASS" start="2024-11-22T12:13:42.619377" elapsed="0.000479"/>
</for>
<status status="PASS" start="2024-11-22T12:13:42.619342" elapsed="0.000532"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:42.619337" elapsed="0.000550"/>
</if>
<status status="PASS" start="2024-11-22T12:13:42.619279" elapsed="0.000617"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:42.619270" elapsed="0.000636"/>
</if>
<return>
<value>${sql_query}</value>
<status status="PASS" start="2024-11-22T12:13:42.619918" elapsed="0.000014"/>
</return>
<msg time="2024-11-22T12:13:42.619979" level="INFO">${updated_sql_query} = SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-105';</msg>
<var>${updated_sql_query}</var>
<arg>${sql_file_name}</arg>
<arg>${args_dict}</arg>
<status status="PASS" start="2024-11-22T12:13:42.618426" elapsed="0.001562"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-11-22T12:13:42.620202" level="FAIL">'SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-105';' does not contain 'delete'</msg>
<arg>${updated_sql_query}</arg>
<arg>DELETE</arg>
<arg>ignore_case=${True}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-11-22T12:13:42.620111" elapsed="0.000114">'SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-105';' does not contain 'delete'</status>
</kw>
<msg time="2024-11-22T12:13:42.620263" level="INFO">${delete_status} = False</msg>
<var>${delete_status}</var>
<arg>Should Contain</arg>
<arg>${updated_sql_query}</arg>
<arg>DELETE</arg>
<arg>ignore_case=${True}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-11-22T12:13:42.620042" elapsed="0.000229"/>
</kw>
<if>
<branch type="IF" condition="'${delete_status}' == '${True}'">
<kw name="Execute Sql String" owner="DatabaseLibrary">
<var>${json_response}</var>
<arg>${updated_sql_query}</arg>
<doc>Executes the ``sql_string`` as a single SQL command.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:42.620379" elapsed="0.000010"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:42.620302" elapsed="0.000103"/>
</branch>
<branch type="ELSE">
<kw name="Query" owner="DatabaseLibrary">
<msg time="2024-11-22T12:13:42.620860" level="INFO" html="true">Executing sql:&lt;br&gt;&lt;code style="font-weight: bold;"&gt;SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-105';&lt;/code&gt;</msg>
<msg time="2024-11-22T12:13:42.621530" level="INFO" html="true">&lt;div style="max-width: 100%; overflow-x: auto;"&gt;&lt;table style="width: auto; border-collapse: collapse; border: 2px solid rgb(140 140 140)"&gt;&lt;caption style="text-align: left; font-weight: bold; padding: 5px;"&gt;Query returned 1 rows&lt;/caption&gt;&lt;tr&gt;&lt;th scope="col" style="background-color: #d6ecd4; border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;Row&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;id&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;created_at&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;create_by&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;updated_at&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;updated_by&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;birth_date&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;brownie_points&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;death_date&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;gender&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;name&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;natid&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;salary&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;tax_paid&lt;/th&gt;&lt;/tr&gt;&lt;tr style="background-color: #eee;"&gt;&lt;th scope="row" style="background-color: #d6ecd4;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;0&lt;/th&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;8d5721a6-941a-4703-9046-ca1918954640&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;2024-11-22 12:13:41.970823&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;SYSTEM&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;2024-11-22 12:13:41.970823&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;SYSTEM&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;1996-01-01 23:59:59&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;None&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;None&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;MALE&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;Dexter&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;natid-105&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;1000.0&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;10.0&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;</msg>
<msg time="2024-11-22T12:13:42.621982" level="INFO">${json_response} = [{'id': '8d5721a6-941a-4703-9046-ca1918954640', 'created_at': datetime.datetime(2024, 11, 22, 12, 13, 41, 970823), 'create_by': 'SYSTEM', 'updated_at': datetime.datetime(2024, 11, 22, 12, 13, 41, 9708...</msg>
<var>${json_response}</var>
<arg>${updated_sql_query}</arg>
<arg>return_dict=${True}</arg>
<doc>Runs a query with the ``select_statement`` and returns the result as list of rows.
The type of row values depends on the database module -
usually they are tuples or tuple-like objects.</doc>
<status status="PASS" start="2024-11-22T12:13:42.620458" elapsed="0.001536"/>
</kw>
<status status="PASS" start="2024-11-22T12:13:42.620417" elapsed="0.001608"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:42.620296" elapsed="0.001743"/>
</if>
<kw name="Disconnect From Database" owner="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<status status="PASS" start="2024-11-22T12:13:42.622089" elapsed="0.000077"/>
</kw>
<return>
<value>${json_response}</value>
<status status="PASS" start="2024-11-22T12:13:42.622188" elapsed="0.000015"/>
</return>
<msg time="2024-11-22T12:13:42.622259" level="INFO">${sql_response} = [{'id': '8d5721a6-941a-4703-9046-ca1918954640', 'created_at': datetime.datetime(2024, 11, 22, 12, 13, 41, 970823), 'create_by': 'SYSTEM', 'updated_at': datetime.datetime(2024, 11, 22, 12, 13, 41, 9708...</msg>
<var>${sql_response}</var>
<arg>select_hero_by_natid</arg>
<arg>${dict}</arg>
<status status="PASS" start="2024-11-22T12:13:42.604100" elapsed="0.018170"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-11-22T12:13:42.622392" level="INFO">${sql_response} = {'id': '8d5721a6-941a-4703-9046-ca1918954640', 'created_at': datetime.datetime(2024, 11, 22, 12, 13, 41, 970823), 'create_by': 'SYSTEM', 'updated_at': datetime.datetime(2024, 11, 22, 12, 13, 41, 97082...</msg>
<var>${sql_response}</var>
<arg>${sql_response}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-11-22T12:13:42.622325" elapsed="0.000077"/>
</kw>
<kw name="Compare String" owner="generic">
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T12:13:42.623173" level="INFO">
Expected natid:
natid-105
Actual natid:
natid-105</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T12:13:42.623130" elapsed="0.000060"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T12:13:42.623239" elapsed="0.000056"/>
</kw>
<arg>Expected ${compare_title}:\n${expected_string}\nActual ${compare_title}:\n${actual_string}</arg>
<status status="PASS" start="2024-11-22T12:13:42.623002" elapsed="0.000316"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${expected_string}</arg>
<arg>${actual_string}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-11-22T12:13:42.623364" elapsed="0.000065"/>
</kw>
<arg>${item[0]}</arg>
<arg>${sql_response['natid']}</arg>
<arg>natid</arg>
<doc>Compare Strings</doc>
<status status="PASS" start="2024-11-22T12:13:42.622463" elapsed="0.000990"/>
</kw>
<kw name="Compare String" owner="generic">
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T12:13:42.624280" level="INFO">
Expected name:
Dexter
Actual name:
Dexter</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T12:13:42.624236" elapsed="0.000061"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T12:13:42.624344" elapsed="0.000049"/>
</kw>
<arg>Expected ${compare_title}:\n${expected_string}\nActual ${compare_title}:\n${actual_string}</arg>
<status status="PASS" start="2024-11-22T12:13:42.624115" elapsed="0.000302"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${expected_string}</arg>
<arg>${actual_string}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-11-22T12:13:42.624504" elapsed="0.000064"/>
</kw>
<arg>${item[1]}</arg>
<arg>${sql_response['name']}</arg>
<arg>name</arg>
<doc>Compare Strings</doc>
<status status="PASS" start="2024-11-22T12:13:42.623508" elapsed="0.001086"/>
</kw>
<kw name="Compare String" owner="generic">
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T12:13:42.625315" level="INFO">
Expected gender:
MALE
Actual gender:
MALE</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T12:13:42.625272" elapsed="0.000059"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T12:13:42.625377" elapsed="0.000050"/>
</kw>
<arg>Expected ${compare_title}:\n${expected_string}\nActual ${compare_title}:\n${actual_string}</arg>
<status status="PASS" start="2024-11-22T12:13:42.625153" elapsed="0.000297"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${expected_string}</arg>
<arg>${actual_string}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-11-22T12:13:42.625496" elapsed="0.000061"/>
</kw>
<arg>${item[2]}</arg>
<arg>${sql_response['gender']}</arg>
<arg>gender</arg>
<doc>Compare Strings</doc>
<status status="PASS" start="2024-11-22T12:13:42.624648" elapsed="0.000933"/>
</kw>
<kw name="Compare Date" owner="generic">
<if>
<branch type="IF" condition="'${expected_date}' == '${EMPTY}'">
<kw name="Log and Log To Console" owner="generic">
<arg>Expected ${compare_title}:\n${None}\nActual ${compare_title}:\n${actual_date}</arg>
<status status="NOT RUN" start="2024-11-22T12:13:42.626357" elapsed="0.000011"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${None}</arg>
<arg>${actual_date}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:42.626411" elapsed="0.000010"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:42.626106" elapsed="0.000331"/>
</branch>
<branch type="ELSE">
<kw name="Convert Date" owner="DateTime">
<msg time="2024-11-22T12:13:42.626593" level="INFO">${expected_date} = 1996-01-01 23:59:59.000000</msg>
<var>${expected_date}</var>
<arg>${expected_date}</arg>
<arg>result_format=%Y-%m-%d %H:%M:%S.%f</arg>
<doc>Converts between supported `date formats`.</doc>
<status status="PASS" start="2024-11-22T12:13:42.626493" elapsed="0.000110"/>
</kw>
<kw name="Convert Date" owner="DateTime">
<msg time="2024-11-22T12:13:42.626715" level="INFO">${actual_date} = 1996-01-01 23:59:59.000000</msg>
<var>${actual_date}</var>
<arg>${actual_date}</arg>
<arg>result_format=%Y-%m-%d %H:%M:%S.%f</arg>
<doc>Converts between supported `date formats`.</doc>
<status status="PASS" start="2024-11-22T12:13:42.626651" elapsed="0.000072"/>
</kw>
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T12:13:42.626929" level="INFO">
Expected birth_date:
1996-01-01 23:59:59.000000
Actual birth_date:
1996-01-01 23:59:59.000000</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T12:13:42.626888" elapsed="0.000056"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T12:13:42.626988" elapsed="0.000045"/>
</kw>
<arg>Expected ${compare_title}:\n${expected_date}\nActual ${compare_title}:\n${actual_date}</arg>
<status status="PASS" start="2024-11-22T12:13:42.626771" elapsed="0.000283"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${expected_date}</arg>
<arg>${actual_date}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-11-22T12:13:42.627097" elapsed="0.000060"/>
</kw>
<status status="PASS" start="2024-11-22T12:13:42.626450" elapsed="0.000723"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:42.626099" elapsed="0.001086"/>
</if>
<arg>${item[3]}</arg>
<arg>${sql_response['birth_date']}</arg>
<arg>birth_date</arg>
<doc>Format date and compare</doc>
<status status="PASS" start="2024-11-22T12:13:42.625657" elapsed="0.001543"/>
</kw>
<kw name="Compare Date" owner="generic">
<if>
<branch type="IF" condition="'${expected_date}' == '${EMPTY}'">
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T12:13:42.628165" level="INFO">
Expected death_date:
None
Actual death_date:
None</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T12:13:42.628124" elapsed="0.000056"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T12:13:42.628224" elapsed="0.000052"/>
</kw>
<arg>Expected ${compare_title}:\n${None}\nActual ${compare_title}:\n${actual_date}</arg>
<status status="PASS" start="2024-11-22T12:13:42.627977" elapsed="0.000322"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${None}</arg>
<arg>${actual_date}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-11-22T12:13:42.628343" elapsed="0.000059"/>
</kw>
<status status="PASS" start="2024-11-22T12:13:42.627750" elapsed="0.000669"/>
</branch>
<branch type="ELSE">
<kw name="Convert Date" owner="DateTime">
<var>${expected_date}</var>
<arg>${expected_date}</arg>
<arg>result_format=%Y-%m-%d %H:%M:%S.%f</arg>
<doc>Converts between supported `date formats`.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:42.628473" elapsed="0.000010"/>
</kw>
<kw name="Convert Date" owner="DateTime">
<var>${actual_date}</var>
<arg>${actual_date}</arg>
<arg>result_format=%Y-%m-%d %H:%M:%S.%f</arg>
<doc>Converts between supported `date formats`.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:42.628527" elapsed="0.000008"/>
</kw>
<kw name="Log and Log To Console" owner="generic">
<arg>Expected ${compare_title}:\n${expected_date}\nActual ${compare_title}:\n${actual_date}</arg>
<status status="NOT RUN" start="2024-11-22T12:13:42.628580" elapsed="0.000009"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${expected_date}</arg>
<arg>${actual_date}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:42.628628" elapsed="0.000009"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:42.628431" elapsed="0.000220"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:42.627744" elapsed="0.000918"/>
</if>
<arg>${item[4]}</arg>
<arg>${sql_response['death_date']}</arg>
<arg>death_date</arg>
<doc>Format date and compare</doc>
<status status="PASS" start="2024-11-22T12:13:42.627273" elapsed="0.001405"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<if>
<branch type="IF" condition="'${expected_int}' == '${EMPTY}'">
<kw name="Log and Log To Console" owner="generic">
<arg>Expected ${compare_title}:\n${None}\nActual ${compare_title}:\n${actual_int}</arg>
<status status="NOT RUN" start="2024-11-22T12:13:42.629424" elapsed="0.000010"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${None}</arg>
<arg>${actual_int}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:42.629478" elapsed="0.000008"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:42.629199" elapsed="0.000302"/>
</branch>
<branch type="ELSE">
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T12:13:42.629782" level="INFO">
Expected salary:
1000.00
Actual salary:
1000.0</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T12:13:42.629741" elapsed="0.000096"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T12:13:42.629884" elapsed="0.000047"/>
</kw>
<arg>Expected ${compare_title}:\n${expected_int}\nActual ${compare_title}:\n${actual_int}</arg>
<status status="PASS" start="2024-11-22T12:13:42.629556" elapsed="0.000396"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-11-22T12:13:42.630066" level="INFO">${expected_int} = 1000.00</msg>
<var>${expected_int}</var>
<arg>'{:.2f}'.format(float(${expected_int}))</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-11-22T12:13:42.629997" elapsed="0.000078"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-11-22T12:13:42.630180" level="INFO">${actual_int} = 1000.00</msg>
<var>${actual_int}</var>
<arg>'{:.2f}'.format(float(${actual_int}))</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-11-22T12:13:42.630119" elapsed="0.000070"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${expected_int}</arg>
<arg>${actual_int}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-11-22T12:13:42.630236" elapsed="0.000057"/>
</kw>
<status status="PASS" start="2024-11-22T12:13:42.629513" elapsed="0.000797"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:42.629193" elapsed="0.001129"/>
</if>
<arg>${item[5]}</arg>
<arg>${sql_response['salary']}</arg>
<arg>salary</arg>
<doc>Normalize the numbers and compare</doc>
<status status="PASS" start="2024-11-22T12:13:42.628746" elapsed="0.001591"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<if>
<branch type="IF" condition="'${expected_int}' == '${EMPTY}'">
<kw name="Log and Log To Console" owner="generic">
<arg>Expected ${compare_title}:\n${None}\nActual ${compare_title}:\n${actual_int}</arg>
<status status="NOT RUN" start="2024-11-22T12:13:42.631083" elapsed="0.000011"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${None}</arg>
<arg>${actual_int}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:42.631136" elapsed="0.000009"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:42.630857" elapsed="0.000302"/>
</branch>
<branch type="ELSE">
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T12:13:42.631375" level="INFO">
Expected tax_paid:
10.00
Actual tax_paid:
10.0</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T12:13:42.631337" elapsed="0.000053"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T12:13:42.631433" elapsed="0.000047"/>
</kw>
<arg>Expected ${compare_title}:\n${expected_int}\nActual ${compare_title}:\n${actual_int}</arg>
<status status="PASS" start="2024-11-22T12:13:42.631221" elapsed="0.000279"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-11-22T12:13:42.631605" level="INFO">${expected_int} = 10.00</msg>
<var>${expected_int}</var>
<arg>'{:.2f}'.format(float(${expected_int}))</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-11-22T12:13:42.631542" elapsed="0.000072"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-11-22T12:13:42.631717" level="INFO">${actual_int} = 10.00</msg>
<var>${actual_int}</var>
<arg>'{:.2f}'.format(float(${actual_int}))</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-11-22T12:13:42.631658" elapsed="0.000067"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${expected_int}</arg>
<arg>${actual_int}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-11-22T12:13:42.631769" elapsed="0.000059"/>
</kw>
<status status="PASS" start="2024-11-22T12:13:42.631171" elapsed="0.000672"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:42.630851" elapsed="0.001003"/>
</if>
<arg>${item[6]}</arg>
<arg>${sql_response['tax_paid']}</arg>
<arg>tax_paid</arg>
<doc>Normalize the numbers and compare</doc>
<status status="PASS" start="2024-11-22T12:13:42.630407" elapsed="0.001462"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<if>
<branch type="IF" condition="'${expected_int}' == '${EMPTY}'">
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T12:13:42.632754" level="INFO">
Expected brownie_points:
None
Actual brownie_points:
None</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T12:13:42.632713" elapsed="0.000057"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T12:13:42.632813" elapsed="0.000046"/>
</kw>
<arg>Expected ${compare_title}:\n${None}\nActual ${compare_title}:\n${actual_int}</arg>
<status status="PASS" start="2024-11-22T12:13:42.632600" elapsed="0.000281"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${None}</arg>
<arg>${actual_int}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-11-22T12:13:42.632929" elapsed="0.000063"/>
</kw>
<status status="PASS" start="2024-11-22T12:13:42.632376" elapsed="0.000632"/>
</branch>
<branch type="ELSE">
<kw name="Log and Log To Console" owner="generic">
<arg>Expected ${compare_title}:\n${expected_int}\nActual ${compare_title}:\n${actual_int}</arg>
<status status="NOT RUN" start="2024-11-22T12:13:42.633065" elapsed="0.000009"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<var>${expected_int}</var>
<arg>'{:.2f}'.format(float(${expected_int}))</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:42.633117" elapsed="0.000009"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<var>${actual_int}</var>
<arg>'{:.2f}'.format(float(${actual_int}))</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:42.633168" elapsed="0.000008"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${expected_int}</arg>
<arg>${actual_int}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:42.633218" elapsed="0.000008"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:42.633020" elapsed="0.000218"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:42.632370" elapsed="0.000879"/>
</if>
<arg>${item[7]}</arg>
<arg>${sql_response['brownie_points']}</arg>
<arg>brownie_points</arg>
<doc>Normalize the numbers and compare</doc>
<status status="PASS" start="2024-11-22T12:13:42.631945" elapsed="0.001320"/>
</kw>
<var name="${item}">['natid-105', 'Dexter', 'MALE', '1996-01-01T23:59:59', '', '1000.00', '10.00', '']</var>
<status status="PASS" start="2024-11-22T12:13:42.603681" elapsed="0.029599"/>
</iter>
<iter>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2024-11-22T12:13:42.633626" level="INFO">${dict} = {'value_natid': 'natid-106'}</msg>
<var>${dict}</var>
<arg>value_natid=${item[0]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2024-11-22T12:13:42.633375" elapsed="0.000261"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<kw name="Connect To Database" owner="DatabaseLibrary">
<msg time="2024-11-22T12:13:42.633910" level="INFO">Looking for configuration file: 'resources/db.cfg'</msg>
<msg time="2024-11-22T12:13:42.633925" level="INFO">Configuration file doesn't exist</msg>
<msg time="2024-11-22T12:13:42.633991" level="INFO">Connect to DB using : mysql.connector.connect(database='testdb', user='user', password=***, host='localhost', port=3306)</msg>
<arg>${DB_API}</arg>
<arg>${DB_NAME}</arg>
<arg>${DB_USER}</arg>
<arg>${DB_PASSWORD}</arg>
<arg>${DB_HOST}</arg>
<arg>${DB_PORT}</arg>
<doc>Creates a database connection using the DB API 2.0 ``db_module`` and the parameters provided.
Along with listed commonly used arguments (`db_name`, `db_host` etc.)
you can set any other DB module specific parameters as key/value pairs.</doc>
<status status="PASS" start="2024-11-22T12:13:42.633812" elapsed="0.015153"/>
</kw>
<kw name="Update SQL Queries With Arguments Dictionary" owner="sql-helper">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-11-22T12:13:42.649368" level="INFO" html="true">Getting file '&lt;a href="file:///Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/object-repo/sql-queries/select_hero_by_natid.sql"&gt;/Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/object-repo/sql-queries/select_hero_by_natid.sql&lt;/a&gt;'.</msg>
<msg time="2024-11-22T12:13:42.649439" level="INFO">${sql_query} = SELECT *
FROM testdb.working_class_heroes
WHERE natid='value_natid';</msg>
<var>${sql_query}</var>
<arg>./object-repo/sql-queries/${sql_file_name}.sql</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-11-22T12:13:42.649254" elapsed="0.000195"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2024-11-22T12:13:42.649860" level="INFO">Argument types are:
&lt;class 'robot.utils.dotdict.DotDict'&gt;
&lt;class 'str'&gt;</msg>
<msg time="2024-11-22T12:13:42.649912" level="FAIL">{'value_natid': 'natid-106'} != </msg>
<arg>${args_dict}</arg>
<arg>${EMPTY}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="FAIL" start="2024-11-22T12:13:42.649577" elapsed="0.000363">{'value_natid': 'natid-106'} != </status>
</kw>
<msg time="2024-11-22T12:13:42.650102" level="INFO">${empty_status} = False</msg>
<var>${empty_status}</var>
<arg>Should Be Equal As Strings</arg>
<arg>${args_dict}</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-11-22T12:13:42.649510" elapsed="0.000601"/>
</kw>
<if>
<branch type="IF" condition="'${empty_status}' == '${False}'">
<if>
<branch type="IF" condition="${args_dict}">
<for flavor="IN">
<iter>
<kw name="Convert To String" owner="BuiltIn">
<msg time="2024-11-22T12:13:42.650433" level="INFO">${args_key_str} = value_natid</msg>
<var>${args_key_str}</var>
<arg>${args_key}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="PASS" start="2024-11-22T12:13:42.650367" elapsed="0.000078"/>
</kw>
<kw name="Convert To String" owner="BuiltIn">
<msg time="2024-11-22T12:13:42.650580" level="INFO">${args_value_str} = natid-106</msg>
<var>${args_value_str}</var>
<arg>${args_dict}[${args_key_str}]</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="PASS" start="2024-11-22T12:13:42.650505" elapsed="0.000086"/>
</kw>
<kw name="Replace String" owner="String">
<msg time="2024-11-22T12:13:42.650725" level="INFO">${sql_query} = SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-106';</msg>
<var>${sql_query}</var>
<arg>${sql_query}</arg>
<arg>${args_key_str}</arg>
<arg>${args_value_str}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="PASS" start="2024-11-22T12:13:42.650645" elapsed="0.000090"/>
</kw>
<var name="${args_key}">value_natid</var>
<status status="PASS" start="2024-11-22T12:13:42.650314" elapsed="0.000446"/>
</iter>
<var>${args_key}</var>
<value>@{args_dict}</value>
<status status="PASS" start="2024-11-22T12:13:42.650254" elapsed="0.000528"/>
</for>
<status status="PASS" start="2024-11-22T12:13:42.650220" elapsed="0.000582"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:42.650214" elapsed="0.000600"/>
</if>
<status status="PASS" start="2024-11-22T12:13:42.650149" elapsed="0.000673"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:42.650138" elapsed="0.000695"/>
</if>
<return>
<value>${sql_query}</value>
<status status="PASS" start="2024-11-22T12:13:42.650849" elapsed="0.000016"/>
</return>
<msg time="2024-11-22T12:13:42.650919" level="INFO">${updated_sql_query} = SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-106';</msg>
<var>${updated_sql_query}</var>
<arg>${sql_file_name}</arg>
<arg>${args_dict}</arg>
<status status="PASS" start="2024-11-22T12:13:42.649109" elapsed="0.001822"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-11-22T12:13:42.651183" level="FAIL">'SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-106';' does not contain 'delete'</msg>
<arg>${updated_sql_query}</arg>
<arg>DELETE</arg>
<arg>ignore_case=${True}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-11-22T12:13:42.651078" elapsed="0.000127">'SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-106';' does not contain 'delete'</status>
</kw>
<msg time="2024-11-22T12:13:42.651246" level="INFO">${delete_status} = False</msg>
<var>${delete_status}</var>
<arg>Should Contain</arg>
<arg>${updated_sql_query}</arg>
<arg>DELETE</arg>
<arg>ignore_case=${True}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-11-22T12:13:42.651001" elapsed="0.000253"/>
</kw>
<if>
<branch type="IF" condition="'${delete_status}' == '${True}'">
<kw name="Execute Sql String" owner="DatabaseLibrary">
<var>${json_response}</var>
<arg>${updated_sql_query}</arg>
<doc>Executes the ``sql_string`` as a single SQL command.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:42.651364" elapsed="0.000009"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:42.651289" elapsed="0.000100"/>
</branch>
<branch type="ELSE">
<kw name="Query" owner="DatabaseLibrary">
<msg time="2024-11-22T12:13:42.651870" level="INFO" html="true">Executing sql:&lt;br&gt;&lt;code style="font-weight: bold;"&gt;SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-106';&lt;/code&gt;</msg>
<msg time="2024-11-22T12:13:42.654613" level="INFO" html="true">&lt;div style="max-width: 100%; overflow-x: auto;"&gt;&lt;table style="width: auto; border-collapse: collapse; border: 2px solid rgb(140 140 140)"&gt;&lt;caption style="text-align: left; font-weight: bold; padding: 5px;"&gt;Query returned 1 rows&lt;/caption&gt;&lt;tr&gt;&lt;th scope="col" style="background-color: #d6ecd4; border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;Row&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;id&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;created_at&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;create_by&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;updated_at&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;updated_by&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;birth_date&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;brownie_points&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;death_date&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;gender&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;name&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;natid&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;salary&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;tax_paid&lt;/th&gt;&lt;/tr&gt;&lt;tr style="background-color: #eee;"&gt;&lt;th scope="row" style="background-color: #d6ecd4;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;0&lt;/th&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;ee9938f6-9ce3-4007-a2f0-38eeee5d2a13&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;2024-11-22 12:13:41.977926&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;SYSTEM&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;2024-11-22 12:13:41.977926&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;SYSTEM&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;1996-01-01 23:59:59&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;None&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;None&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;MALE&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;Greg&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;natid-106&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;10320.0&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;10.0&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;</msg>
<msg time="2024-11-22T12:13:42.655113" level="INFO">${json_response} = [{'id': 'ee9938f6-9ce3-4007-a2f0-38eeee5d2a13', 'created_at': datetime.datetime(2024, 11, 22, 12, 13, 41, 977926), 'create_by': 'SYSTEM', 'updated_at': datetime.datetime(2024, 11, 22, 12, 13, 41, 9779...</msg>
<var>${json_response}</var>
<arg>${updated_sql_query}</arg>
<arg>return_dict=${True}</arg>
<doc>Runs a query with the ``select_statement`` and returns the result as list of rows.
The type of row values depends on the database module -
usually they are tuples or tuple-like objects.</doc>
<status status="PASS" start="2024-11-22T12:13:42.651448" elapsed="0.003680"/>
</kw>
<status status="PASS" start="2024-11-22T12:13:42.651404" elapsed="0.003751"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:42.651281" elapsed="0.003889"/>
</if>
<kw name="Disconnect From Database" owner="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<status status="PASS" start="2024-11-22T12:13:42.655230" elapsed="0.000132"/>
</kw>
<return>
<value>${json_response}</value>
<status status="PASS" start="2024-11-22T12:13:42.655386" elapsed="0.000021"/>
</return>
<msg time="2024-11-22T12:13:42.655477" level="INFO">${sql_response} = [{'id': 'ee9938f6-9ce3-4007-a2f0-38eeee5d2a13', 'created_at': datetime.datetime(2024, 11, 22, 12, 13, 41, 977926), 'create_by': 'SYSTEM', 'updated_at': datetime.datetime(2024, 11, 22, 12, 13, 41, 9779...</msg>
<var>${sql_response}</var>
<arg>select_hero_by_natid</arg>
<arg>${dict}</arg>
<status status="PASS" start="2024-11-22T12:13:42.633712" elapsed="0.021776"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-11-22T12:13:42.655613" level="INFO">${sql_response} = {'id': 'ee9938f6-9ce3-4007-a2f0-38eeee5d2a13', 'created_at': datetime.datetime(2024, 11, 22, 12, 13, 41, 977926), 'create_by': 'SYSTEM', 'updated_at': datetime.datetime(2024, 11, 22, 12, 13, 41, 97792...</msg>
<var>${sql_response}</var>
<arg>${sql_response}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-11-22T12:13:42.655548" elapsed="0.000076"/>
</kw>
<kw name="Compare String" owner="generic">
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T12:13:42.656464" level="INFO">
Expected natid:
natid-106
Actual natid:
natid-106</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T12:13:42.656420" elapsed="0.000061"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T12:13:42.656528" elapsed="0.000059"/>
</kw>
<arg>Expected ${compare_title}:\n${expected_string}\nActual ${compare_title}:\n${actual_string}</arg>
<status status="PASS" start="2024-11-22T12:13:42.656286" elapsed="0.000326"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${expected_string}</arg>
<arg>${actual_string}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-11-22T12:13:42.656657" elapsed="0.000061"/>
</kw>
<arg>${item[0]}</arg>
<arg>${sql_response['natid']}</arg>
<arg>natid</arg>
<doc>Compare Strings</doc>
<status status="PASS" start="2024-11-22T12:13:42.655690" elapsed="0.001051"/>
</kw>
<kw name="Compare String" owner="generic">
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T12:13:42.657586" level="INFO">
Expected name:
Greg
Actual name:
Greg</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T12:13:42.657537" elapsed="0.000069"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T12:13:42.657661" elapsed="0.000061"/>
</kw>
<arg>Expected ${compare_title}:\n${expected_string}\nActual ${compare_title}:\n${actual_string}</arg>
<status status="PASS" start="2024-11-22T12:13:42.657392" elapsed="0.000351"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${expected_string}</arg>
<arg>${actual_string}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-11-22T12:13:42.657849" elapsed="0.000084"/>
</kw>
<arg>${item[1]}</arg>
<arg>${sql_response['name']}</arg>
<arg>name</arg>
<doc>Compare Strings</doc>
<status status="PASS" start="2024-11-22T12:13:42.656811" elapsed="0.001154"/>
</kw>
<kw name="Compare String" owner="generic">
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T12:13:42.658861" level="INFO">
Expected gender:
MALE
Actual gender:
MALE</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T12:13:42.658807" elapsed="0.000075"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T12:13:42.658936" elapsed="0.000054"/>
</kw>
<arg>Expected ${compare_title}:\n${expected_string}\nActual ${compare_title}:\n${actual_string}</arg>
<status status="PASS" start="2024-11-22T12:13:42.658670" elapsed="0.000348"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${expected_string}</arg>
<arg>${actual_string}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-11-22T12:13:42.659073" elapsed="0.000077"/>
</kw>
<arg>${item[2]}</arg>
<arg>${sql_response['gender']}</arg>
<arg>gender</arg>
<doc>Compare Strings</doc>
<status status="PASS" start="2024-11-22T12:13:42.658036" elapsed="0.001143"/>
</kw>
<kw name="Compare Date" owner="generic">
<if>
<branch type="IF" condition="'${expected_date}' == '${EMPTY}'">
<kw name="Log and Log To Console" owner="generic">
<arg>Expected ${compare_title}:\n${None}\nActual ${compare_title}:\n${actual_date}</arg>
<status status="NOT RUN" start="2024-11-22T12:13:42.660083" elapsed="0.000014"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${None}</arg>
<arg>${actual_date}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:42.660153" elapsed="0.000011"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:42.659800" elapsed="0.000382"/>
</branch>
<branch type="ELSE">
<kw name="Convert Date" owner="DateTime">
<msg time="2024-11-22T12:13:42.660359" level="INFO">${expected_date} = 1996-01-01 23:59:59.000000</msg>
<var>${expected_date}</var>
<arg>${expected_date}</arg>
<arg>result_format=%Y-%m-%d %H:%M:%S.%f</arg>
<doc>Converts between supported `date formats`.</doc>
<status status="PASS" start="2024-11-22T12:13:42.660248" elapsed="0.000121"/>
</kw>
<kw name="Convert Date" owner="DateTime">
<msg time="2024-11-22T12:13:42.660495" level="INFO">${actual_date} = 1996-01-01 23:59:59.000000</msg>
<var>${actual_date}</var>
<arg>${actual_date}</arg>
<arg>result_format=%Y-%m-%d %H:%M:%S.%f</arg>
<doc>Converts between supported `date formats`.</doc>
<status status="PASS" start="2024-11-22T12:13:42.660422" elapsed="0.000081"/>
</kw>
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T12:13:42.660791" level="INFO">
Expected birth_date:
1996-01-01 23:59:59.000000
Actual birth_date:
1996-01-01 23:59:59.000000</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T12:13:42.660752" elapsed="0.000054"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T12:13:42.660849" elapsed="0.000050"/>
</kw>
<arg>Expected ${compare_title}:\n${expected_date}\nActual ${compare_title}:\n${actual_date}</arg>
<status status="PASS" start="2024-11-22T12:13:42.660549" elapsed="0.000375"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${expected_date}</arg>
<arg>${actual_date}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-11-22T12:13:42.660968" elapsed="0.000057"/>
</kw>
<status status="PASS" start="2024-11-22T12:13:42.660198" elapsed="0.000843"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:42.659791" elapsed="0.001262"/>
</if>
<arg>${item[3]}</arg>
<arg>${sql_response['birth_date']}</arg>
<arg>birth_date</arg>
<doc>Format date and compare</doc>
<status status="PASS" start="2024-11-22T12:13:42.659275" elapsed="0.001793"/>
</kw>
<kw name="Compare Date" owner="generic">
<if>
<branch type="IF" condition="'${expected_date}' == '${EMPTY}'">
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T12:13:42.661996" level="INFO">
Expected death_date:
None
Actual death_date:
None</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T12:13:42.661954" elapsed="0.000058"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T12:13:42.662057" elapsed="0.000047"/>
</kw>
<arg>Expected ${compare_title}:\n${None}\nActual ${compare_title}:\n${actual_date}</arg>
<status status="PASS" start="2024-11-22T12:13:42.661838" elapsed="0.000289"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${None}</arg>
<arg>${actual_date}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-11-22T12:13:42.662171" elapsed="0.000061"/>
</kw>
<status status="PASS" start="2024-11-22T12:13:42.661606" elapsed="0.000643"/>
</branch>
<branch type="ELSE">
<kw name="Convert Date" owner="DateTime">
<var>${expected_date}</var>
<arg>${expected_date}</arg>
<arg>result_format=%Y-%m-%d %H:%M:%S.%f</arg>
<doc>Converts between supported `date formats`.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:42.662306" elapsed="0.000010"/>
</kw>
<kw name="Convert Date" owner="DateTime">
<var>${actual_date}</var>
<arg>${actual_date}</arg>
<arg>result_format=%Y-%m-%d %H:%M:%S.%f</arg>
<doc>Converts between supported `date formats`.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:42.662360" elapsed="0.000008"/>
</kw>
<kw name="Log and Log To Console" owner="generic">
<arg>Expected ${compare_title}:\n${expected_date}\nActual ${compare_title}:\n${actual_date}</arg>
<status status="NOT RUN" start="2024-11-22T12:13:42.662414" elapsed="0.000009"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${expected_date}</arg>
<arg>${actual_date}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:42.662464" elapsed="0.000009"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:42.662263" elapsed="0.000224"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:42.661600" elapsed="0.000898"/>
</if>
<arg>${item[4]}</arg>
<arg>${sql_response['death_date']}</arg>
<arg>death_date</arg>
<doc>Format date and compare</doc>
<status status="PASS" start="2024-11-22T12:13:42.661136" elapsed="0.001378"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<if>
<branch type="IF" condition="'${expected_int}' == '${EMPTY}'">
<kw name="Log and Log To Console" owner="generic">
<arg>Expected ${compare_title}:\n${None}\nActual ${compare_title}:\n${actual_int}</arg>
<status status="NOT RUN" start="2024-11-22T12:13:42.663291" elapsed="0.000011"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${None}</arg>
<arg>${actual_int}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:42.663346" elapsed="0.000009"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:42.663062" elapsed="0.000307"/>
</branch>
<branch type="ELSE">
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T12:13:42.663581" level="INFO">
Expected salary:
10320.00
Actual salary:
10320.0</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T12:13:42.663539" elapsed="0.000107"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T12:13:42.663692" elapsed="0.000049"/>
</kw>
<arg>Expected ${compare_title}:\n${expected_int}\nActual ${compare_title}:\n${actual_int}</arg>
<status status="PASS" start="2024-11-22T12:13:42.663422" elapsed="0.000342"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-11-22T12:13:42.663882" level="INFO">${expected_int} = 10320.00</msg>
<var>${expected_int}</var>
<arg>'{:.2f}'.format(float(${expected_int}))</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-11-22T12:13:42.663810" elapsed="0.000081"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-11-22T12:13:42.664001" level="INFO">${actual_int} = 10320.00</msg>
<var>${actual_int}</var>
<arg>'{:.2f}'.format(float(${actual_int}))</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-11-22T12:13:42.663938" elapsed="0.000072"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${expected_int}</arg>
<arg>${actual_int}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-11-22T12:13:42.664055" elapsed="0.000067"/>
</kw>
<status status="PASS" start="2024-11-22T12:13:42.663381" elapsed="0.000758"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:42.663056" elapsed="0.001095"/>
</if>
<arg>${item[5]}</arg>
<arg>${sql_response['salary']}</arg>
<arg>salary</arg>
<doc>Normalize the numbers and compare</doc>
<status status="PASS" start="2024-11-22T12:13:42.662585" elapsed="0.001582"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<if>
<branch type="IF" condition="'${expected_int}' == '${EMPTY}'">
<kw name="Log and Log To Console" owner="generic">
<arg>Expected ${compare_title}:\n${None}\nActual ${compare_title}:\n${actual_int}</arg>
<status status="NOT RUN" start="2024-11-22T12:13:42.664928" elapsed="0.000011"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${None}</arg>
<arg>${actual_int}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:42.664985" elapsed="0.000009"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:42.664699" elapsed="0.000310"/>
</branch>
<branch type="ELSE">
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T12:13:42.665227" level="INFO">
Expected tax_paid:
10.00
Actual tax_paid:
10.0</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T12:13:42.665186" elapsed="0.000057"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T12:13:42.665289" elapsed="0.000050"/>
</kw>
<arg>Expected ${compare_title}:\n${expected_int}\nActual ${compare_title}:\n${actual_int}</arg>
<status status="PASS" start="2024-11-22T12:13:42.665065" elapsed="0.000295"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-11-22T12:13:42.665471" level="INFO">${expected_int} = 10.00</msg>
<var>${expected_int}</var>
<arg>'{:.2f}'.format(float(${expected_int}))</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-11-22T12:13:42.665403" elapsed="0.000077"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-11-22T12:13:42.665587" level="INFO">${actual_int} = 10.00</msg>
<var>${actual_int}</var>
<arg>'{:.2f}'.format(float(${actual_int}))</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-11-22T12:13:42.665526" elapsed="0.000070"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${expected_int}</arg>
<arg>${actual_int}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-11-22T12:13:42.665641" elapsed="0.000060"/>
</kw>
<status status="PASS" start="2024-11-22T12:13:42.665021" elapsed="0.000696"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:42.664693" elapsed="0.001036"/>
</if>
<arg>${item[6]}</arg>
<arg>${sql_response['tax_paid']}</arg>
<arg>tax_paid</arg>
<doc>Normalize the numbers and compare</doc>
<status status="PASS" start="2024-11-22T12:13:42.664239" elapsed="0.001505"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<if>
<branch type="IF" condition="'${expected_int}' == '${EMPTY}'">
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T12:13:42.666752" level="INFO">
Expected brownie_points:
None
Actual brownie_points:
None</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T12:13:42.666711" elapsed="0.000057"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T12:13:42.666815" elapsed="0.000051"/>
</kw>
<arg>Expected ${compare_title}:\n${None}\nActual ${compare_title}:\n${actual_int}</arg>
<status status="PASS" start="2024-11-22T12:13:42.666510" elapsed="0.000378"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${None}</arg>
<arg>${actual_int}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-11-22T12:13:42.666933" elapsed="0.000061"/>
</kw>
<status status="PASS" start="2024-11-22T12:13:42.666272" elapsed="0.000739"/>
</branch>
<branch type="ELSE">
<kw name="Log and Log To Console" owner="generic">
<arg>Expected ${compare_title}:\n${expected_int}\nActual ${compare_title}:\n${actual_int}</arg>
<status status="NOT RUN" start="2024-11-22T12:13:42.667070" elapsed="0.000010"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<var>${expected_int}</var>
<arg>'{:.2f}'.format(float(${expected_int}))</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:42.667123" elapsed="0.000008"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<var>${actual_int}</var>
<arg>'{:.2f}'.format(float(${actual_int}))</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:42.667173" elapsed="0.000008"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${expected_int}</arg>
<arg>${actual_int}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:42.667224" elapsed="0.000008"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:42.667025" elapsed="0.000220"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:42.666266" elapsed="0.000991"/>
</if>
<arg>${item[7]}</arg>
<arg>${sql_response['brownie_points']}</arg>
<arg>brownie_points</arg>
<doc>Normalize the numbers and compare</doc>
<status status="PASS" start="2024-11-22T12:13:42.665817" elapsed="0.001456"/>
</kw>
<var name="${item}">['natid-106', 'Greg', 'MALE', '1996-01-01T23:59:59', '', '10320.00', '10.00', '']</var>
<status status="PASS" start="2024-11-22T12:13:42.633332" elapsed="0.033958"/>
</iter>
<iter>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2024-11-22T12:13:42.667662" level="INFO">${dict} = {'value_natid': 'natid-107'}</msg>
<var>${dict}</var>
<arg>value_natid=${item[0]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2024-11-22T12:13:42.667395" elapsed="0.000278"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<kw name="Connect To Database" owner="DatabaseLibrary">
<msg time="2024-11-22T12:13:42.667968" level="INFO">Looking for configuration file: 'resources/db.cfg'</msg>
<msg time="2024-11-22T12:13:42.667987" level="INFO">Configuration file doesn't exist</msg>
<msg time="2024-11-22T12:13:42.668060" level="INFO">Connect to DB using : mysql.connector.connect(database='testdb', user='user', password=***, host='localhost', port=3306)</msg>
<arg>${DB_API}</arg>
<arg>${DB_NAME}</arg>
<arg>${DB_USER}</arg>
<arg>${DB_PASSWORD}</arg>
<arg>${DB_HOST}</arg>
<arg>${DB_PORT}</arg>
<doc>Creates a database connection using the DB API 2.0 ``db_module`` and the parameters provided.
Along with listed commonly used arguments (`db_name`, `db_host` etc.)
you can set any other DB module specific parameters as key/value pairs.</doc>
<status status="PASS" start="2024-11-22T12:13:42.667858" elapsed="0.010824"/>
</kw>
<kw name="Update SQL Queries With Arguments Dictionary" owner="sql-helper">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-11-22T12:13:42.679073" level="INFO" html="true">Getting file '&lt;a href="file:///Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/object-repo/sql-queries/select_hero_by_natid.sql"&gt;/Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/object-repo/sql-queries/select_hero_by_natid.sql&lt;/a&gt;'.</msg>
<msg time="2024-11-22T12:13:42.679151" level="INFO">${sql_query} = SELECT *
FROM testdb.working_class_heroes
WHERE natid='value_natid';</msg>
<var>${sql_query}</var>
<arg>./object-repo/sql-queries/${sql_file_name}.sql</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-11-22T12:13:42.678958" elapsed="0.000202"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2024-11-22T12:13:42.679511" level="INFO">Argument types are:
&lt;class 'robot.utils.dotdict.DotDict'&gt;
&lt;class 'str'&gt;</msg>
<msg time="2024-11-22T12:13:42.679556" level="FAIL">{'value_natid': 'natid-107'} != </msg>
<arg>${args_dict}</arg>
<arg>${EMPTY}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="FAIL" start="2024-11-22T12:13:42.679280" elapsed="0.000305">{'value_natid': 'natid-107'} != </status>
</kw>
<msg time="2024-11-22T12:13:42.679623" level="INFO">${empty_status} = False</msg>
<var>${empty_status}</var>
<arg>Should Be Equal As Strings</arg>
<arg>${args_dict}</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-11-22T12:13:42.679216" elapsed="0.000415"/>
</kw>
<if>
<branch type="IF" condition="'${empty_status}' == '${False}'">
<if>
<branch type="IF" condition="${args_dict}">
<for flavor="IN">
<iter>
<kw name="Convert To String" owner="BuiltIn">
<msg time="2024-11-22T12:13:42.679895" level="INFO">${args_key_str} = value_natid</msg>
<var>${args_key_str}</var>
<arg>${args_key}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="PASS" start="2024-11-22T12:13:42.679838" elapsed="0.000066"/>
</kw>
<kw name="Convert To String" owner="BuiltIn">
<msg time="2024-11-22T12:13:42.680013" level="INFO">${args_value_str} = natid-107</msg>
<var>${args_value_str}</var>
<arg>${args_dict}[${args_key_str}]</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="PASS" start="2024-11-22T12:13:42.679950" elapsed="0.000072"/>
</kw>
<kw name="Replace String" owner="String">
<msg time="2024-11-22T12:13:42.680136" level="INFO">${sql_query} = SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-107';</msg>
<var>${sql_query}</var>
<arg>${sql_query}</arg>
<arg>${args_key_str}</arg>
<arg>${args_value_str}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="PASS" start="2024-11-22T12:13:42.680067" elapsed="0.000078"/>
</kw>
<var name="${args_key}">value_natid</var>
<status status="PASS" start="2024-11-22T12:13:42.679795" elapsed="0.000367"/>
</iter>
<var>${args_key}</var>
<value>@{args_dict}</value>
<status status="PASS" start="2024-11-22T12:13:42.679747" elapsed="0.000430"/>
</for>
<status status="PASS" start="2024-11-22T12:13:42.679719" elapsed="0.000473"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:42.679715" elapsed="0.000488"/>
</if>
<status status="PASS" start="2024-11-22T12:13:42.679663" elapsed="0.000548"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:42.679655" elapsed="0.000566"/>
</if>
<return>
<value>${sql_query}</value>
<status status="PASS" start="2024-11-22T12:13:42.680232" elapsed="0.000015"/>
</return>
<msg time="2024-11-22T12:13:42.680288" level="INFO">${updated_sql_query} = SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-107';</msg>
<var>${updated_sql_query}</var>
<arg>${sql_file_name}</arg>
<arg>${args_dict}</arg>
<status status="PASS" start="2024-11-22T12:13:42.678813" elapsed="0.001483"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-11-22T12:13:42.680486" level="FAIL">'SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-107';' does not contain 'delete'</msg>
<arg>${updated_sql_query}</arg>
<arg>DELETE</arg>
<arg>ignore_case=${True}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-11-22T12:13:42.680400" elapsed="0.000108">'SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-107';' does not contain 'delete'</status>
</kw>
<msg time="2024-11-22T12:13:42.680541" level="INFO">${delete_status} = False</msg>
<var>${delete_status}</var>
<arg>Should Contain</arg>
<arg>${updated_sql_query}</arg>
<arg>DELETE</arg>
<arg>ignore_case=${True}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-11-22T12:13:42.680345" elapsed="0.000204"/>
</kw>
<if>
<branch type="IF" condition="'${delete_status}' == '${True}'">
<kw name="Execute Sql String" owner="DatabaseLibrary">
<var>${json_response}</var>
<arg>${updated_sql_query}</arg>
<doc>Executes the ``sql_string`` as a single SQL command.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:42.680655" elapsed="0.000009"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:42.680581" elapsed="0.000098"/>
</branch>
<branch type="ELSE">
<kw name="Query" owner="DatabaseLibrary">
<msg time="2024-11-22T12:13:42.682593" level="INFO" html="true">Executing sql:&lt;br&gt;&lt;code style="font-weight: bold;"&gt;SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-107';&lt;/code&gt;</msg>
<msg time="2024-11-22T12:13:42.686099" level="INFO" html="true">&lt;div style="max-width: 100%; overflow-x: auto;"&gt;&lt;table style="width: auto; border-collapse: collapse; border: 2px solid rgb(140 140 140)"&gt;&lt;caption style="text-align: left; font-weight: bold; padding: 5px;"&gt;Query returned 1 rows&lt;/caption&gt;&lt;tr&gt;&lt;th scope="col" style="background-color: #d6ecd4; border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;Row&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;id&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;created_at&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;create_by&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;updated_at&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;updated_by&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;birth_date&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;brownie_points&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;death_date&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;gender&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;name&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;natid&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;salary&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;tax_paid&lt;/th&gt;&lt;/tr&gt;&lt;tr style="background-color: #eee;"&gt;&lt;th scope="row" style="background-color: #d6ecd4;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;0&lt;/th&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;e0a64a39-21a9-409c-91dd-7b94044f714a&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;2024-11-22 12:13:41.987850&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;SYSTEM&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;2024-11-22 12:13:41.987850&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;SYSTEM&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;1996-01-01 23:59:59&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;None&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;None&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;FEMALE&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;Mary Molo&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;natid-107&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;1000.5&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;10.28&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;</msg>
<msg time="2024-11-22T12:13:42.687177" level="INFO">${json_response} = [{'id': 'e0a64a39-21a9-409c-91dd-7b94044f714a', 'created_at': datetime.datetime(2024, 11, 22, 12, 13, 41, 987850), 'create_by': 'SYSTEM', 'updated_at': datetime.datetime(2024, 11, 22, 12, 13, 41, 9878...</msg>
<var>${json_response}</var>
<arg>${updated_sql_query}</arg>
<arg>return_dict=${True}</arg>
<doc>Runs a query with the ``select_statement`` and returns the result as list of rows.
The type of row values depends on the database module -
usually they are tuples or tuple-like objects.</doc>
<status status="PASS" start="2024-11-22T12:13:42.680729" elapsed="0.006460"/>
</kw>
<status status="PASS" start="2024-11-22T12:13:42.680690" elapsed="0.006529"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:42.680574" elapsed="0.006660"/>
</if>
<kw name="Disconnect From Database" owner="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<status status="PASS" start="2024-11-22T12:13:42.687299" elapsed="0.000110"/>
</kw>
<return>
<value>${json_response}</value>
<status status="PASS" start="2024-11-22T12:13:42.687431" elapsed="0.000020"/>
</return>
<msg time="2024-11-22T12:13:42.687528" level="INFO">${sql_response} = [{'id': 'e0a64a39-21a9-409c-91dd-7b94044f714a', 'created_at': datetime.datetime(2024, 11, 22, 12, 13, 41, 987850), 'create_by': 'SYSTEM', 'updated_at': datetime.datetime(2024, 11, 22, 12, 13, 41, 9878...</msg>
<var>${sql_response}</var>
<arg>select_hero_by_natid</arg>
<arg>${dict}</arg>
<status status="PASS" start="2024-11-22T12:13:42.667753" elapsed="0.019787"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-11-22T12:13:42.687675" level="INFO">${sql_response} = {'id': 'e0a64a39-21a9-409c-91dd-7b94044f714a', 'created_at': datetime.datetime(2024, 11, 22, 12, 13, 41, 987850), 'create_by': 'SYSTEM', 'updated_at': datetime.datetime(2024, 11, 22, 12, 13, 41, 98785...</msg>
<var>${sql_response}</var>
<arg>${sql_response}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-11-22T12:13:42.687607" elapsed="0.000078"/>
</kw>
<kw name="Compare String" owner="generic">
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T12:13:42.688542" level="INFO">
Expected natid:
natid-107
Actual natid:
natid-107</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T12:13:42.688474" elapsed="0.000085"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T12:13:42.688608" elapsed="0.000061"/>
</kw>
<arg>Expected ${compare_title}:\n${expected_string}\nActual ${compare_title}:\n${actual_string}</arg>
<status status="PASS" start="2024-11-22T12:13:42.688332" elapsed="0.000380"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${expected_string}</arg>
<arg>${actual_string}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-11-22T12:13:42.688773" elapsed="0.000082"/>
</kw>
<arg>${item[0]}</arg>
<arg>${sql_response['natid']}</arg>
<arg>natid</arg>
<doc>Compare Strings</doc>
<status status="PASS" start="2024-11-22T12:13:42.687756" elapsed="0.001126"/>
</kw>
<kw name="Compare String" owner="generic">
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T12:13:42.689908" level="INFO">
Expected name:
Mary Molo
Actual name:
Mary Molo</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T12:13:42.689858" elapsed="0.000069"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T12:13:42.689978" elapsed="0.000059"/>
</kw>
<arg>Expected ${compare_title}:\n${expected_string}\nActual ${compare_title}:\n${actual_string}</arg>
<status status="PASS" start="2024-11-22T12:13:42.689670" elapsed="0.000391"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${expected_string}</arg>
<arg>${actual_string}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-11-22T12:13:42.690173" elapsed="0.000081"/>
</kw>
<arg>${item[1]}</arg>
<arg>${sql_response['name']}</arg>
<arg>name</arg>
<doc>Compare Strings</doc>
<status status="PASS" start="2024-11-22T12:13:42.688941" elapsed="0.001340"/>
</kw>
<kw name="Compare String" owner="generic">
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T12:13:42.691026" level="INFO">
Expected gender:
FEMALE
Actual gender:
FEMALE</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T12:13:42.690984" elapsed="0.000058"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T12:13:42.691087" elapsed="0.000056"/>
</kw>
<arg>Expected ${compare_title}:\n${expected_string}\nActual ${compare_title}:\n${actual_string}</arg>
<status status="PASS" start="2024-11-22T12:13:42.690868" elapsed="0.000301"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${expected_string}</arg>
<arg>${actual_string}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-11-22T12:13:42.691213" elapsed="0.000062"/>
</kw>
<arg>${item[2]}</arg>
<arg>${sql_response['gender']}</arg>
<arg>gender</arg>
<doc>Compare Strings</doc>
<status status="PASS" start="2024-11-22T12:13:42.690339" elapsed="0.000961"/>
</kw>
<kw name="Compare Date" owner="generic">
<if>
<branch type="IF" condition="'${expected_date}' == '${EMPTY}'">
<kw name="Log and Log To Console" owner="generic">
<arg>Expected ${compare_title}:\n${None}\nActual ${compare_title}:\n${actual_date}</arg>
<status status="NOT RUN" start="2024-11-22T12:13:42.692123" elapsed="0.000011"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${None}</arg>
<arg>${actual_date}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:42.692181" elapsed="0.000009"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:42.691876" elapsed="0.000329"/>
</branch>
<branch type="ELSE">
<kw name="Convert Date" owner="DateTime">
<msg time="2024-11-22T12:13:42.692386" level="INFO">${expected_date} = 1996-01-01 23:59:59.000000</msg>
<var>${expected_date}</var>
<arg>${expected_date}</arg>
<arg>result_format=%Y-%m-%d %H:%M:%S.%f</arg>
<doc>Converts between supported `date formats`.</doc>
<status status="PASS" start="2024-11-22T12:13:42.692269" elapsed="0.000128"/>
</kw>
<kw name="Convert Date" owner="DateTime">
<msg time="2024-11-22T12:13:42.692514" level="INFO">${actual_date} = 1996-01-01 23:59:59.000000</msg>
<var>${actual_date}</var>
<arg>${actual_date}</arg>
<arg>result_format=%Y-%m-%d %H:%M:%S.%f</arg>
<doc>Converts between supported `date formats`.</doc>
<status status="PASS" start="2024-11-22T12:13:42.692446" elapsed="0.000077"/>
</kw>
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T12:13:42.692744" level="INFO">
Expected birth_date:
1996-01-01 23:59:59.000000
Actual birth_date:
1996-01-01 23:59:59.000000</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T12:13:42.692700" elapsed="0.000061"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T12:13:42.692807" elapsed="0.000051"/>
</kw>
<arg>Expected ${compare_title}:\n${expected_date}\nActual ${compare_title}:\n${actual_date}</arg>
<status status="PASS" start="2024-11-22T12:13:42.692575" elapsed="0.000305"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${expected_date}</arg>
<arg>${actual_date}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-11-22T12:13:42.692927" elapsed="0.000063"/>
</kw>
<status status="PASS" start="2024-11-22T12:13:42.692219" elapsed="0.000788"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:42.691868" elapsed="0.001151"/>
</if>
<arg>${item[3]}</arg>
<arg>${sql_response['birth_date']}</arg>
<arg>birth_date</arg>
<doc>Format date and compare</doc>
<status status="PASS" start="2024-11-22T12:13:42.691383" elapsed="0.001653"/>
</kw>
<kw name="Compare Date" owner="generic">
<if>
<branch type="IF" condition="'${expected_date}' == '${EMPTY}'">
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T12:13:42.693997" level="INFO">
Expected death_date:
None
Actual death_date:
None</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T12:13:42.693952" elapsed="0.000062"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T12:13:42.694062" elapsed="0.000055"/>
</kw>
<arg>Expected ${compare_title}:\n${None}\nActual ${compare_title}:\n${actual_date}</arg>
<status status="PASS" start="2024-11-22T12:13:42.693828" elapsed="0.000323"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${None}</arg>
<arg>${actual_date}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-11-22T12:13:42.694203" elapsed="0.000068"/>
</kw>
<status status="PASS" start="2024-11-22T12:13:42.693593" elapsed="0.000720"/>
</branch>
<branch type="ELSE">
<kw name="Convert Date" owner="DateTime">
<var>${expected_date}</var>
<arg>${expected_date}</arg>
<arg>result_format=%Y-%m-%d %H:%M:%S.%f</arg>
<doc>Converts between supported `date formats`.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:42.694384" elapsed="0.000010"/>
</kw>
<kw name="Convert Date" owner="DateTime">
<var>${actual_date}</var>
<arg>${actual_date}</arg>
<arg>result_format=%Y-%m-%d %H:%M:%S.%f</arg>
<doc>Converts between supported `date formats`.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:42.694452" elapsed="0.000011"/>
</kw>
<kw name="Log and Log To Console" owner="generic">
<arg>Expected ${compare_title}:\n${expected_date}\nActual ${compare_title}:\n${actual_date}</arg>
<status status="NOT RUN" start="2024-11-22T12:13:42.694513" elapsed="0.000011"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${expected_date}</arg>
<arg>${actual_date}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:42.694568" elapsed="0.000009"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:42.694328" elapsed="0.000264"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:42.693586" elapsed="0.001018"/>
</if>
<arg>${item[4]}</arg>
<arg>${sql_response['death_date']}</arg>
<arg>death_date</arg>
<doc>Format date and compare</doc>
<status status="PASS" start="2024-11-22T12:13:42.693115" elapsed="0.001507"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<if>
<branch type="IF" condition="'${expected_int}' == '${EMPTY}'">
<kw name="Log and Log To Console" owner="generic">
<arg>Expected ${compare_title}:\n${None}\nActual ${compare_title}:\n${actual_int}</arg>
<status status="NOT RUN" start="2024-11-22T12:13:42.695561" elapsed="0.000013"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${None}</arg>
<arg>${actual_int}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:42.695648" elapsed="0.000011"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:42.695292" elapsed="0.000385"/>
</branch>
<branch type="ELSE">
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T12:13:42.696602" level="INFO">
Expected salary:
1000.50
Actual salary:
1000.5</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T12:13:42.696551" elapsed="0.000126"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T12:13:42.696727" elapsed="0.000058"/>
</kw>
<arg>Expected ${compare_title}:\n${expected_int}\nActual ${compare_title}:\n${actual_int}</arg>
<status status="PASS" start="2024-11-22T12:13:42.695739" elapsed="0.001070"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-11-22T12:13:42.696937" level="INFO">${expected_int} = 1000.50</msg>
<var>${expected_int}</var>
<arg>'{:.2f}'.format(float(${expected_int}))</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-11-22T12:13:42.696857" elapsed="0.000090"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-11-22T12:13:42.697062" level="INFO">${actual_int} = 1000.50</msg>
<var>${actual_int}</var>
<arg>'{:.2f}'.format(float(${actual_int}))</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-11-22T12:13:42.696995" elapsed="0.000076"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${expected_int}</arg>
<arg>${actual_int}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-11-22T12:13:42.697120" elapsed="0.000064"/>
</kw>
<status status="PASS" start="2024-11-22T12:13:42.695691" elapsed="0.001510"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:42.695285" elapsed="0.001930"/>
</if>
<arg>${item[5]}</arg>
<arg>${sql_response['salary']}</arg>
<arg>salary</arg>
<doc>Normalize the numbers and compare</doc>
<status status="PASS" start="2024-11-22T12:13:42.694697" elapsed="0.002533"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<if>
<branch type="IF" condition="'${expected_int}' == '${EMPTY}'">
<kw name="Log and Log To Console" owner="generic">
<arg>Expected ${compare_title}:\n${None}\nActual ${compare_title}:\n${actual_int}</arg>
<status status="NOT RUN" start="2024-11-22T12:13:42.698048" elapsed="0.000012"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${None}</arg>
<arg>${actual_int}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:42.698106" elapsed="0.000009"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:42.697809" elapsed="0.000321"/>
</branch>
<branch type="ELSE">
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T12:13:42.698357" level="INFO">
Expected tax_paid:
10.28
Actual tax_paid:
10.28</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T12:13:42.698312" elapsed="0.000061"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T12:13:42.698420" elapsed="0.000051"/>
</kw>
<arg>Expected ${compare_title}:\n${expected_int}\nActual ${compare_title}:\n${actual_int}</arg>
<status status="PASS" start="2024-11-22T12:13:42.698186" elapsed="0.000309"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-11-22T12:13:42.698611" level="INFO">${expected_int} = 10.28</msg>
<var>${expected_int}</var>
<arg>'{:.2f}'.format(float(${expected_int}))</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-11-22T12:13:42.698542" elapsed="0.000079"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-11-22T12:13:42.698732" level="INFO">${actual_int} = 10.28</msg>
<var>${actual_int}</var>
<arg>'{:.2f}'.format(float(${actual_int}))</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-11-22T12:13:42.698669" elapsed="0.000071"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${expected_int}</arg>
<arg>${actual_int}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-11-22T12:13:42.698788" elapsed="0.000061"/>
</kw>
<status status="PASS" start="2024-11-22T12:13:42.698143" elapsed="0.000723"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:42.697802" elapsed="0.001076"/>
</if>
<arg>${item[6]}</arg>
<arg>${sql_response['tax_paid']}</arg>
<arg>tax_paid</arg>
<doc>Normalize the numbers and compare</doc>
<status status="PASS" start="2024-11-22T12:13:42.697317" elapsed="0.001577"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<if>
<branch type="IF" condition="'${expected_int}' == '${EMPTY}'">
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T12:13:42.699816" level="INFO">
Expected brownie_points:
None
Actual brownie_points:
None</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T12:13:42.699775" elapsed="0.000057"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T12:13:42.699877" elapsed="0.000050"/>
</kw>
<arg>Expected ${compare_title}:\n${None}\nActual ${compare_title}:\n${actual_int}</arg>
<status status="PASS" start="2024-11-22T12:13:42.699656" elapsed="0.000292"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${None}</arg>
<arg>${actual_int}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-11-22T12:13:42.699991" elapsed="0.000059"/>
</kw>
<status status="PASS" start="2024-11-22T12:13:42.699418" elapsed="0.000649"/>
</branch>
<branch type="ELSE">
<kw name="Log and Log To Console" owner="generic">
<arg>Expected ${compare_title}:\n${expected_int}\nActual ${compare_title}:\n${actual_int}</arg>
<status status="NOT RUN" start="2024-11-22T12:13:42.700124" elapsed="0.000009"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<var>${expected_int}</var>
<arg>'{:.2f}'.format(float(${expected_int}))</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:42.700178" elapsed="0.000008"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<var>${actual_int}</var>
<arg>'{:.2f}'.format(float(${actual_int}))</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:42.700227" elapsed="0.000008"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${expected_int}</arg>
<arg>${actual_int}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:42.700276" elapsed="0.000008"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:42.700080" elapsed="0.000219"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:42.699412" elapsed="0.000898"/>
</if>
<arg>${item[7]}</arg>
<arg>${sql_response['brownie_points']}</arg>
<arg>brownie_points</arg>
<doc>Normalize the numbers and compare</doc>
<status status="PASS" start="2024-11-22T12:13:42.698967" elapsed="0.001359"/>
</kw>
<var name="${item}">['natid-107', 'Mary Molo', 'FEMALE', '1996-01-01T23:59:59', '', '1000.50', '10.28', '']</var>
<status status="PASS" start="2024-11-22T12:13:42.667349" elapsed="0.032993"/>
</iter>
<var>${item}</var>
<value>@{csv_list}</value>
<status status="PASS" start="2024-11-22T12:13:42.362080" elapsed="0.338284"/>
</for>
<arg>${positive_test_data_path}</arg>
<doc>Verify uploaded heroes in DB</doc>
<status status="PASS" start="2024-11-22T12:13:42.361159" elapsed="0.339233"/>
</kw>
<kw name="Common Test Teardown" owner="generic" type="TEARDOWN">
<kw name="Capture Page Screenshot" owner="SeleniumLibrary">
<msg time="2024-11-22T12:13:42.800352" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="screenshots/Clerk%20Dashboard%20Create%20Heroes%20Upload%20CSV%20File%20-%20Positive.png"&gt;&lt;img src="screenshots/Clerk%20Dashboard%20Create%20Heroes%20Upload%20CSV%20File%20-%20Positive.png" width="800px"&gt;&lt;/a&gt;</msg>
<arg>${OUTPUT_DIR}/screenshots/${TEST NAME}.png</arg>
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<status status="PASS" start="2024-11-22T12:13:42.700616" elapsed="0.099838"/>
</kw>
<kw name="Close Browser" owner="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" start="2024-11-22T12:13:42.800563" elapsed="0.125089"/>
</kw>
<status status="PASS" start="2024-11-22T12:13:42.700516" elapsed="0.225200"/>
</kw>
<status status="PASS" start="2024-11-22T12:13:32.550657" elapsed="10.375117"/>
</test>
<test id="s1-t2" name="Clerk Dashboard Create Heroes Upload CSV File - Negative - Partial Data Wrong Format" line="22">
<kw name="Open Browser And Navigate To Login Page" owner="generic">
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-11-22T12:13:42.926421" level="INFO">${chrome_options} = &lt;selenium.webdriver.chrome.options.Options object at 0x107455190&gt;</msg>
<var>${chrome_options}</var>
<arg>sys.modules['selenium.webdriver'].ChromeOptions()</arg>
<arg>sys, selenium.webdriver</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-11-22T12:13:42.926281" elapsed="0.000152"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2024-11-22T12:13:42.926574" level="INFO">${prefs} = {'download.default_directory': '/Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/reports/downloads'}</msg>
<var>${prefs}</var>
<arg>download.default_directory=${DOWNLOAD_DIR}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2024-11-22T12:13:42.926490" elapsed="0.000094"/>
</kw>
<kw name="Call Method" owner="BuiltIn">
<arg>${chrome_options}</arg>
<arg>add_experimental_option</arg>
<arg>prefs</arg>
<arg>${prefs}</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="PASS" start="2024-11-22T12:13:42.926634" elapsed="0.000053"/>
</kw>
<kw name="Create Webdriver" owner="SeleniumLibrary">
<msg time="2024-11-22T12:13:42.926820" level="INFO">Creating an instance of the Chrome WebDriver.</msg>
<arg>${execution_profile_chrome_name}</arg>
<arg>options=${chrome_options}</arg>
<doc>Creates an instance of Selenium WebDriver.</doc>
<status status="PASS" start="2024-11-22T12:13:42.926742" elapsed="1.782300"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>Navigating to ${login_page}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T12:13:44.717450" elapsed="0.000526"/>
</kw>
<kw name="Go To" owner="SeleniumLibrary">
<msg time="2024-11-22T12:13:44.718211" level="INFO">Opening url 'http://localhost:9997/login'</msg>
<arg>${login_page}</arg>
<doc>Navigates the current browser window to the provided ``url``.</doc>
<status status="PASS" start="2024-11-22T12:13:44.718111" elapsed="0.286243"/>
</kw>
<status status="PASS" start="2024-11-22T12:13:42.926148" elapsed="2.078336"/>
</kw>
<kw name="Setup Clerk Clear DB Data" owner="clerk">
<kw name="Read Csv File To List" owner="CSVLibrary">
<msg time="2024-11-22T12:13:45.005838" level="INFO">${csv_list} = [['natid-150', 'William Chu', 'MALE', '1996-01-01T23:59:59', '', '1000.12', '10.00', ''], ['natid-151', 'Christopher', 'MALE', '1996-01-01T23:59:59', '', '1000.00', '10.00', ''], ['natid-152', 'Hanks1...</msg>
<var>${csv_list}</var>
<arg>${test_data_path}</arg>
<doc>Read CSV file and return its content as a Python list of tuples.</doc>
<status status="PASS" start="2024-11-22T12:13:45.005008" elapsed="0.000849"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2024-11-22T12:13:45.006580" level="INFO">${cleanup_dict} = {'value_natid': 'natid-150'}</msg>
<var>${cleanup_dict}</var>
<arg>value_natid=${item[0]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2024-11-22T12:13:45.006084" elapsed="0.000512"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<kw name="Connect To Database" owner="DatabaseLibrary">
<msg time="2024-11-22T12:13:45.007132" level="INFO">Looking for configuration file: 'resources/db.cfg'</msg>
<msg time="2024-11-22T12:13:45.007154" level="INFO">Configuration file doesn't exist</msg>
<msg time="2024-11-22T12:13:45.007261" level="INFO">Connect to DB using : mysql.connector.connect(database='testdb', user='user', password=***, host='localhost', port=3306)</msg>
<arg>${DB_API}</arg>
<arg>${DB_NAME}</arg>
<arg>${DB_USER}</arg>
<arg>${DB_PASSWORD}</arg>
<arg>${DB_HOST}</arg>
<arg>${DB_PORT}</arg>
<doc>Creates a database connection using the DB API 2.0 ``db_module`` and the parameters provided.
Along with listed commonly used arguments (`db_name`, `db_host` etc.)
you can set any other DB module specific parameters as key/value pairs.</doc>
<status status="PASS" start="2024-11-22T12:13:45.006864" elapsed="0.058906"/>
</kw>
<kw name="Update SQL Queries With Arguments Dictionary" owner="sql-helper">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-11-22T12:13:45.066390" level="INFO" html="true">Getting file '&lt;a href="file:///Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/object-repo/sql-queries/delete_hero_by_natid.sql"&gt;/Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/object-repo/sql-queries/delete_hero_by_natid.sql&lt;/a&gt;'.</msg>
<msg time="2024-11-22T12:13:45.066493" level="INFO">${sql_query} = DELETE FROM testdb.working_class_heroes
WHERE natid = "value_natid"</msg>
<var>${sql_query}</var>
<arg>./object-repo/sql-queries/${sql_file_name}.sql</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-11-22T12:13:45.066229" elapsed="0.000275"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2024-11-22T12:13:45.066948" level="INFO">Argument types are:
&lt;class 'robot.utils.dotdict.DotDict'&gt;
&lt;class 'str'&gt;</msg>
<msg time="2024-11-22T12:13:45.067036" level="FAIL">{'value_natid': 'natid-150'} != </msg>
<arg>${args_dict}</arg>
<arg>${EMPTY}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="FAIL" start="2024-11-22T12:13:45.066659" elapsed="0.000465">{'value_natid': 'natid-150'} != </status>
</kw>
<msg time="2024-11-22T12:13:45.067247" level="INFO">${empty_status} = False</msg>
<var>${empty_status}</var>
<arg>Should Be Equal As Strings</arg>
<arg>${args_dict}</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-11-22T12:13:45.066573" elapsed="0.000685"/>
</kw>
<if>
<branch type="IF" condition="'${empty_status}' == '${False}'">
<if>
<branch type="IF" condition="${args_dict}">
<for flavor="IN">
<iter>
<kw name="Convert To String" owner="BuiltIn">
<msg time="2024-11-22T12:13:45.067664" level="INFO">${args_key_str} = value_natid</msg>
<var>${args_key_str}</var>
<arg>${args_key}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="PASS" start="2024-11-22T12:13:45.067587" elapsed="0.000088"/>
</kw>
<kw name="Convert To String" owner="BuiltIn">
<msg time="2024-11-22T12:13:45.067805" level="INFO">${args_value_str} = natid-150</msg>
<var>${args_value_str}</var>
<arg>${args_dict}[${args_key_str}]</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="PASS" start="2024-11-22T12:13:45.067730" elapsed="0.000084"/>
</kw>
<kw name="Replace String" owner="String">
<msg time="2024-11-22T12:13:45.067947" level="INFO">${sql_query} = DELETE FROM testdb.working_class_heroes
WHERE natid = "natid-150"</msg>
<var>${sql_query}</var>
<arg>${sql_query}</arg>
<arg>${args_key_str}</arg>
<arg>${args_value_str}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="PASS" start="2024-11-22T12:13:45.067869" elapsed="0.000088"/>
</kw>
<var name="${args_key}">value_natid</var>
<status status="PASS" start="2024-11-22T12:13:45.067529" elapsed="0.020790"/>
</iter>
<var>${args_key}</var>
<value>@{args_dict}</value>
<status status="PASS" start="2024-11-22T12:13:45.067461" elapsed="0.020924"/>
</for>
<status status="PASS" start="2024-11-22T12:13:45.067429" elapsed="0.020987"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:45.067422" elapsed="0.021017"/>
</if>
<status status="PASS" start="2024-11-22T12:13:45.067324" elapsed="0.021130"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:45.067308" elapsed="0.021160"/>
</if>
<return>
<value>${sql_query}</value>
<status status="PASS" start="2024-11-22T12:13:45.088503" elapsed="0.000039"/>
</return>
<msg time="2024-11-22T12:13:45.088644" level="INFO">${updated_sql_query} = DELETE FROM testdb.working_class_heroes
WHERE natid = "natid-150"</msg>
<var>${updated_sql_query}</var>
<arg>${sql_file_name}</arg>
<arg>${args_dict}</arg>
<status status="PASS" start="2024-11-22T12:13:45.066012" elapsed="0.022669"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<arg>${updated_sql_query}</arg>
<arg>DELETE</arg>
<arg>ignore_case=${True}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-11-22T12:13:45.088955" elapsed="0.000135"/>
</kw>
<msg time="2024-11-22T12:13:45.089142" level="INFO">${delete_status} = True</msg>
<var>${delete_status}</var>
<arg>Should Contain</arg>
<arg>${updated_sql_query}</arg>
<arg>DELETE</arg>
<arg>ignore_case=${True}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-11-22T12:13:45.088844" elapsed="0.000307"/>
</kw>
<if>
<branch type="IF" condition="'${delete_status}' == '${True}'">
<kw name="Execute Sql String" owner="DatabaseLibrary">
<msg time="2024-11-22T12:13:45.090272" level="INFO" html="true">Executing sql:&lt;br&gt;&lt;code style="font-weight: bold;"&gt;DELETE FROM testdb.working_class_heroes
WHERE natid = "natid-150"&lt;/code&gt;</msg>
<msg time="2024-11-22T12:13:45.096236" level="INFO">${json_response} = None</msg>
<var>${json_response}</var>
<arg>${updated_sql_query}</arg>
<doc>Executes the ``sql_string`` as a single SQL command.</doc>
<status status="PASS" start="2024-11-22T12:13:45.089343" elapsed="0.006910"/>
</kw>
<status status="PASS" start="2024-11-22T12:13:45.089195" elapsed="0.007087"/>
</branch>
<branch type="ELSE">
<kw name="Query" owner="DatabaseLibrary">
<var>${json_response}</var>
<arg>${updated_sql_query}</arg>
<arg>return_dict=${True}</arg>
<doc>Runs a query with the ``select_statement`` and returns the result as list of rows.
The type of row values depends on the database module -
usually they are tuples or tuple-like objects.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:45.096370" elapsed="0.000012"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:45.096301" elapsed="0.000099"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:45.089184" elapsed="0.007228"/>
</if>
<kw name="Disconnect From Database" owner="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<status status="PASS" start="2024-11-22T12:13:45.096460" elapsed="0.000117"/>
</kw>
<return>
<value>${json_response}</value>
<status status="PASS" start="2024-11-22T12:13:45.096599" elapsed="0.000020"/>
</return>
<arg>delete_hero_by_natid</arg>
<arg>${cleanup_dict}</arg>
<status status="PASS" start="2024-11-22T12:13:45.006718" elapsed="0.089951"/>
</kw>
<var name="${item}">['natid-150', 'William Chu', 'MALE', '1996-01-01T23:59:59', '', '1000.12', '10.00', '']</var>
<status status="PASS" start="2024-11-22T12:13:45.006002" elapsed="0.090687"/>
</iter>
<iter>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2024-11-22T12:13:45.097192" level="INFO">${cleanup_dict} = {'value_natid': 'natid-151'}</msg>
<var>${cleanup_dict}</var>
<arg>value_natid=${item[0]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2024-11-22T12:13:45.096809" elapsed="0.000396"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<kw name="Connect To Database" owner="DatabaseLibrary">
<msg time="2024-11-22T12:13:45.098385" level="INFO">Looking for configuration file: 'resources/db.cfg'</msg>
<msg time="2024-11-22T12:13:45.098409" level="INFO">Configuration file doesn't exist</msg>
<msg time="2024-11-22T12:13:45.098487" level="INFO">Connect to DB using : mysql.connector.connect(database='testdb', user='user', password=***, host='localhost', port=3306)</msg>
<arg>${DB_API}</arg>
<arg>${DB_NAME}</arg>
<arg>${DB_USER}</arg>
<arg>${DB_PASSWORD}</arg>
<arg>${DB_HOST}</arg>
<arg>${DB_PORT}</arg>
<doc>Creates a database connection using the DB API 2.0 ``db_module`` and the parameters provided.
Along with listed commonly used arguments (`db_name`, `db_host` etc.)
you can set any other DB module specific parameters as key/value pairs.</doc>
<status status="PASS" start="2024-11-22T12:13:45.098252" elapsed="0.021034"/>
</kw>
<kw name="Update SQL Queries With Arguments Dictionary" owner="sql-helper">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-11-22T12:13:45.119979" level="INFO" html="true">Getting file '&lt;a href="file:///Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/object-repo/sql-queries/delete_hero_by_natid.sql"&gt;/Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/object-repo/sql-queries/delete_hero_by_natid.sql&lt;/a&gt;'.</msg>
<msg time="2024-11-22T12:13:45.120060" level="INFO">${sql_query} = DELETE FROM testdb.working_class_heroes
WHERE natid = "value_natid"</msg>
<var>${sql_query}</var>
<arg>./object-repo/sql-queries/${sql_file_name}.sql</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-11-22T12:13:45.119856" elapsed="0.000215"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2024-11-22T12:13:45.120491" level="INFO">Argument types are:
&lt;class 'robot.utils.dotdict.DotDict'&gt;
&lt;class 'str'&gt;</msg>
<msg time="2024-11-22T12:13:45.120557" level="FAIL">{'value_natid': 'natid-151'} != </msg>
<arg>${args_dict}</arg>
<arg>${EMPTY}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="FAIL" start="2024-11-22T12:13:45.120206" elapsed="0.000391">{'value_natid': 'natid-151'} != </status>
</kw>
<msg time="2024-11-22T12:13:45.120659" level="INFO">${empty_status} = False</msg>
<var>${empty_status}</var>
<arg>Should Be Equal As Strings</arg>
<arg>${args_dict}</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-11-22T12:13:45.120136" elapsed="0.000532"/>
</kw>
<if>
<branch type="IF" condition="'${empty_status}' == '${False}'">
<if>
<branch type="IF" condition="${args_dict}">
<for flavor="IN">
<iter>
<kw name="Convert To String" owner="BuiltIn">
<msg time="2024-11-22T12:13:45.121002" level="INFO">${args_key_str} = value_natid</msg>
<var>${args_key_str}</var>
<arg>${args_key}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="PASS" start="2024-11-22T12:13:45.120937" elapsed="0.000074"/>
</kw>
<kw name="Convert To String" owner="BuiltIn">
<msg time="2024-11-22T12:13:45.121127" level="INFO">${args_value_str} = natid-151</msg>
<var>${args_value_str}</var>
<arg>${args_dict}[${args_key_str}]</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="PASS" start="2024-11-22T12:13:45.121060" elapsed="0.000076"/>
</kw>
<kw name="Replace String" owner="String">
<msg time="2024-11-22T12:13:45.121258" level="INFO">${sql_query} = DELETE FROM testdb.working_class_heroes
WHERE natid = "natid-151"</msg>
<var>${sql_query}</var>
<arg>${sql_query}</arg>
<arg>${args_key_str}</arg>
<arg>${args_value_str}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="PASS" start="2024-11-22T12:13:45.121188" elapsed="0.000079"/>
</kw>
<var name="${args_key}">value_natid</var>
<status status="PASS" start="2024-11-22T12:13:45.120884" elapsed="0.009053"/>
</iter>
<var>${args_key}</var>
<value>@{args_dict}</value>
<status status="PASS" start="2024-11-22T12:13:45.120827" elapsed="0.009169"/>
</for>
<status status="PASS" start="2024-11-22T12:13:45.120794" elapsed="0.009230"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:45.120789" elapsed="0.009252"/>
</if>
<status status="PASS" start="2024-11-22T12:13:45.120713" elapsed="0.009341"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:45.120701" elapsed="0.009365"/>
</if>
<return>
<value>${sql_query}</value>
<status status="PASS" start="2024-11-22T12:13:45.130084" elapsed="0.000023"/>
</return>
<msg time="2024-11-22T12:13:45.130181" level="INFO">${updated_sql_query} = DELETE FROM testdb.working_class_heroes
WHERE natid = "natid-151"</msg>
<var>${updated_sql_query}</var>
<arg>${sql_file_name}</arg>
<arg>${args_dict}</arg>
<status status="PASS" start="2024-11-22T12:13:45.119646" elapsed="0.010547"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<arg>${updated_sql_query}</arg>
<arg>DELETE</arg>
<arg>ignore_case=${True}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-11-22T12:13:45.130743" elapsed="0.000248"/>
</kw>
<msg time="2024-11-22T12:13:45.131090" level="INFO">${delete_status} = True</msg>
<var>${delete_status}</var>
<arg>Should Contain</arg>
<arg>${updated_sql_query}</arg>
<arg>DELETE</arg>
<arg>ignore_case=${True}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-11-22T12:13:45.130361" elapsed="0.000795"/>
</kw>
<if>
<branch type="IF" condition="'${delete_status}' == '${True}'">
<kw name="Execute Sql String" owner="DatabaseLibrary">
<msg time="2024-11-22T12:13:45.133271" level="INFO" html="true">Executing sql:&lt;br&gt;&lt;code style="font-weight: bold;"&gt;DELETE FROM testdb.working_class_heroes
WHERE natid = "natid-151"&lt;/code&gt;</msg>
<msg time="2024-11-22T12:13:45.143655" level="INFO">${json_response} = None</msg>
<var>${json_response}</var>
<arg>${updated_sql_query}</arg>
<doc>Executes the ``sql_string`` as a single SQL command.</doc>
<status status="PASS" start="2024-11-22T12:13:45.131495" elapsed="0.012187"/>
</kw>
<status status="PASS" start="2024-11-22T12:13:45.131241" elapsed="0.012488"/>
</branch>
<branch type="ELSE">
<kw name="Query" owner="DatabaseLibrary">
<var>${json_response}</var>
<arg>${updated_sql_query}</arg>
<arg>return_dict=${True}</arg>
<doc>Runs a query with the ``select_statement`` and returns the result as list of rows.
The type of row values depends on the database module -
usually they are tuples or tuple-like objects.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:45.143884" elapsed="0.000017"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:45.143757" elapsed="0.000166"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:45.131229" elapsed="0.012708"/>
</if>
<kw name="Disconnect From Database" owner="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<status status="PASS" start="2024-11-22T12:13:45.143992" elapsed="0.000168"/>
</kw>
<return>
<value>${json_response}</value>
<status status="PASS" start="2024-11-22T12:13:45.144187" elapsed="0.000031"/>
</return>
<arg>delete_hero_by_natid</arg>
<arg>${cleanup_dict}</arg>
<status status="PASS" start="2024-11-22T12:13:45.097316" elapsed="0.046970"/>
</kw>
<var name="${item}">['natid-151', 'Christopher', 'MALE', '1996-01-01T23:59:59', '', '1000.00', '10.00', '']</var>
<status status="PASS" start="2024-11-22T12:13:45.096752" elapsed="0.047559"/>
</iter>
<iter>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2024-11-22T12:13:45.148128" level="INFO">${cleanup_dict} = {'value_natid': 'natid-152'}</msg>
<var>${cleanup_dict}</var>
<arg>value_natid=${item[0]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2024-11-22T12:13:45.144454" elapsed="0.003697"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<kw name="Connect To Database" owner="DatabaseLibrary">
<msg time="2024-11-22T12:13:45.148927" level="INFO">Looking for configuration file: 'resources/db.cfg'</msg>
<msg time="2024-11-22T12:13:45.148953" level="INFO">Configuration file doesn't exist</msg>
<msg time="2024-11-22T12:13:45.149036" level="INFO">Connect to DB using : mysql.connector.connect(database='testdb', user='user', password=***, host='localhost', port=3306)</msg>
<arg>${DB_API}</arg>
<arg>${DB_NAME}</arg>
<arg>${DB_USER}</arg>
<arg>${DB_PASSWORD}</arg>
<arg>${DB_HOST}</arg>
<arg>${DB_PORT}</arg>
<doc>Creates a database connection using the DB API 2.0 ``db_module`` and the parameters provided.
Along with listed commonly used arguments (`db_name`, `db_host` etc.)
you can set any other DB module specific parameters as key/value pairs.</doc>
<status status="PASS" start="2024-11-22T12:13:45.148493" elapsed="0.033369"/>
</kw>
<kw name="Update SQL Queries With Arguments Dictionary" owner="sql-helper">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-11-22T12:13:45.183418" level="INFO" html="true">Getting file '&lt;a href="file:///Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/object-repo/sql-queries/delete_hero_by_natid.sql"&gt;/Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/object-repo/sql-queries/delete_hero_by_natid.sql&lt;/a&gt;'.</msg>
<msg time="2024-11-22T12:13:45.183734" level="INFO">${sql_query} = DELETE FROM testdb.working_class_heroes
WHERE natid = "value_natid"</msg>
<var>${sql_query}</var>
<arg>./object-repo/sql-queries/${sql_file_name}.sql</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-11-22T12:13:45.183025" elapsed="0.000752"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2024-11-22T12:13:45.184677" level="INFO">Argument types are:
&lt;class 'robot.utils.dotdict.DotDict'&gt;
&lt;class 'str'&gt;</msg>
<msg time="2024-11-22T12:13:45.184750" level="FAIL">{'value_natid': 'natid-152'} != </msg>
<arg>${args_dict}</arg>
<arg>${EMPTY}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="FAIL" start="2024-11-22T12:13:45.184285" elapsed="0.000501">{'value_natid': 'natid-152'} != </status>
</kw>
<msg time="2024-11-22T12:13:45.184839" level="INFO">${empty_status} = False</msg>
<var>${empty_status}</var>
<arg>Should Be Equal As Strings</arg>
<arg>${args_dict}</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-11-22T12:13:45.184070" elapsed="0.000779"/>
</kw>
<if>
<branch type="IF" condition="'${empty_status}' == '${False}'">
<if>
<branch type="IF" condition="${args_dict}">
<for flavor="IN">
<iter>
<kw name="Convert To String" owner="BuiltIn">
<msg time="2024-11-22T12:13:45.185222" level="INFO">${args_key_str} = value_natid</msg>
<var>${args_key_str}</var>
<arg>${args_key}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="PASS" start="2024-11-22T12:13:45.185145" elapsed="0.000087"/>
</kw>
<kw name="Convert To String" owner="BuiltIn">
<msg time="2024-11-22T12:13:45.185362" level="INFO">${args_value_str} = natid-152</msg>
<var>${args_value_str}</var>
<arg>${args_dict}[${args_key_str}]</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="PASS" start="2024-11-22T12:13:45.185286" elapsed="0.000086"/>
</kw>
<kw name="Replace String" owner="String">
<msg time="2024-11-22T12:13:45.185654" level="INFO">${sql_query} = DELETE FROM testdb.working_class_heroes
WHERE natid = "natid-152"</msg>
<var>${sql_query}</var>
<arg>${sql_query}</arg>
<arg>${args_key_str}</arg>
<arg>${args_value_str}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="PASS" start="2024-11-22T12:13:45.185425" elapsed="0.000240"/>
</kw>
<var name="${args_key}">value_natid</var>
<status status="PASS" start="2024-11-22T12:13:45.185080" elapsed="0.006556"/>
</iter>
<var>${args_key}</var>
<value>@{args_dict}</value>
<status status="PASS" start="2024-11-22T12:13:45.185012" elapsed="0.006855"/>
</for>
<status status="PASS" start="2024-11-22T12:13:45.184978" elapsed="0.006965"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:45.184972" elapsed="0.007008"/>
</if>
<status status="PASS" start="2024-11-22T12:13:45.184893" elapsed="0.007114"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:45.184881" elapsed="0.007138"/>
</if>
<return>
<value>${sql_query}</value>
<status status="PASS" start="2024-11-22T12:13:45.192038" elapsed="0.000025"/>
</return>
<msg time="2024-11-22T12:13:45.192143" level="INFO">${updated_sql_query} = DELETE FROM testdb.working_class_heroes
WHERE natid = "natid-152"</msg>
<var>${updated_sql_query}</var>
<arg>${sql_file_name}</arg>
<arg>${args_dict}</arg>
<status status="PASS" start="2024-11-22T12:13:45.182427" elapsed="0.009728"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<arg>${updated_sql_query}</arg>
<arg>DELETE</arg>
<arg>ignore_case=${True}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-11-22T12:13:45.192357" elapsed="0.000106"/>
</kw>
<msg time="2024-11-22T12:13:45.192505" level="INFO">${delete_status} = True</msg>
<var>${delete_status}</var>
<arg>Should Contain</arg>
<arg>${updated_sql_query}</arg>
<arg>DELETE</arg>
<arg>ignore_case=${True}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-11-22T12:13:45.192265" elapsed="0.000251"/>
</kw>
<if>
<branch type="IF" condition="'${delete_status}' == '${True}'">
<kw name="Execute Sql String" owner="DatabaseLibrary">
<msg time="2024-11-22T12:13:45.193438" level="INFO" html="true">Executing sql:&lt;br&gt;&lt;code style="font-weight: bold;"&gt;DELETE FROM testdb.working_class_heroes
WHERE natid = "natid-152"&lt;/code&gt;</msg>
<msg time="2024-11-22T12:13:45.194794" level="INFO">${json_response} = None</msg>
<var>${json_response}</var>
<arg>${updated_sql_query}</arg>
<doc>Executes the ``sql_string`` as a single SQL command.</doc>
<status status="PASS" start="2024-11-22T12:13:45.192664" elapsed="0.002142"/>
</kw>
<status status="PASS" start="2024-11-22T12:13:45.192559" elapsed="0.002270"/>
</branch>
<branch type="ELSE">
<kw name="Query" owner="DatabaseLibrary">
<var>${json_response}</var>
<arg>${updated_sql_query}</arg>
<arg>return_dict=${True}</arg>
<doc>Runs a query with the ``select_statement`` and returns the result as list of rows.
The type of row values depends on the database module -
usually they are tuples or tuple-like objects.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:45.194907" elapsed="0.000012"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:45.194846" elapsed="0.000093"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:45.192550" elapsed="0.002401"/>
</if>
<kw name="Disconnect From Database" owner="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<status status="PASS" start="2024-11-22T12:13:45.194994" elapsed="0.000109"/>
</kw>
<return>
<value>${json_response}</value>
<status status="PASS" start="2024-11-22T12:13:45.195124" elapsed="0.000017"/>
</return>
<arg>delete_hero_by_natid</arg>
<arg>${cleanup_dict}</arg>
<status status="PASS" start="2024-11-22T12:13:45.148314" elapsed="0.046875"/>
</kw>
<var name="${item}">['natid-152', 'Hanks123@!', 'MALE', '1996-01-01T23:59:59', '', '10320.00', '10.00', '']</var>
<status status="PASS" start="2024-11-22T12:13:45.144381" elapsed="0.050826"/>
</iter>
<iter>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2024-11-22T12:13:45.196075" level="INFO">${cleanup_dict} = {'value_natid': 'natid-153'}</msg>
<var>${cleanup_dict}</var>
<arg>value_natid=${item[0]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2024-11-22T12:13:45.195314" elapsed="0.000930"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<kw name="Connect To Database" owner="DatabaseLibrary">
<msg time="2024-11-22T12:13:45.196619" level="INFO">Looking for configuration file: 'resources/db.cfg'</msg>
<msg time="2024-11-22T12:13:45.196641" level="INFO">Configuration file doesn't exist</msg>
<msg time="2024-11-22T12:13:45.196719" level="INFO">Connect to DB using : mysql.connector.connect(database='testdb', user='user', password=***, host='localhost', port=3306)</msg>
<arg>${DB_API}</arg>
<arg>${DB_NAME}</arg>
<arg>${DB_USER}</arg>
<arg>${DB_PASSWORD}</arg>
<arg>${DB_HOST}</arg>
<arg>${DB_PORT}</arg>
<doc>Creates a database connection using the DB API 2.0 ``db_module`` and the parameters provided.
Along with listed commonly used arguments (`db_name`, `db_host` etc.)
you can set any other DB module specific parameters as key/value pairs.</doc>
<status status="PASS" start="2024-11-22T12:13:45.196497" elapsed="0.013442"/>
</kw>
<kw name="Update SQL Queries With Arguments Dictionary" owner="sql-helper">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-11-22T12:13:45.211063" level="INFO" html="true">Getting file '&lt;a href="file:///Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/object-repo/sql-queries/delete_hero_by_natid.sql"&gt;/Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/object-repo/sql-queries/delete_hero_by_natid.sql&lt;/a&gt;'.</msg>
<msg time="2024-11-22T12:13:45.211170" level="INFO">${sql_query} = DELETE FROM testdb.working_class_heroes
WHERE natid = "value_natid"</msg>
<var>${sql_query}</var>
<arg>./object-repo/sql-queries/${sql_file_name}.sql</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-11-22T12:13:45.210920" elapsed="0.000261"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2024-11-22T12:13:45.211730" level="INFO">Argument types are:
&lt;class 'robot.utils.dotdict.DotDict'&gt;
&lt;class 'str'&gt;</msg>
<msg time="2024-11-22T12:13:45.211806" level="FAIL">{'value_natid': 'natid-153'} != </msg>
<arg>${args_dict}</arg>
<arg>${EMPTY}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="FAIL" start="2024-11-22T12:13:45.211333" elapsed="0.000518">{'value_natid': 'natid-153'} != </status>
</kw>
<msg time="2024-11-22T12:13:45.211930" level="INFO">${empty_status} = False</msg>
<var>${empty_status}</var>
<arg>Should Be Equal As Strings</arg>
<arg>${args_dict}</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-11-22T12:13:45.211255" elapsed="0.000697"/>
</kw>
<if>
<branch type="IF" condition="'${empty_status}' == '${False}'">
<if>
<branch type="IF" condition="${args_dict}">
<for flavor="IN">
<iter>
<kw name="Convert To String" owner="BuiltIn">
<msg time="2024-11-22T12:13:45.212352" level="INFO">${args_key_str} = value_natid</msg>
<var>${args_key_str}</var>
<arg>${args_key}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="PASS" start="2024-11-22T12:13:45.212281" elapsed="0.000081"/>
</kw>
<kw name="Convert To String" owner="BuiltIn">
<msg time="2024-11-22T12:13:45.212486" level="INFO">${args_value_str} = natid-153</msg>
<var>${args_value_str}</var>
<arg>${args_dict}[${args_key_str}]</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="PASS" start="2024-11-22T12:13:45.212419" elapsed="0.000076"/>
</kw>
<kw name="Replace String" owner="String">
<msg time="2024-11-22T12:13:45.212608" level="INFO">${sql_query} = DELETE FROM testdb.working_class_heroes
WHERE natid = "natid-153"</msg>
<var>${sql_query}</var>
<arg>${sql_query}</arg>
<arg>${args_key_str}</arg>
<arg>${args_value_str}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="PASS" start="2024-11-22T12:13:45.212541" elapsed="0.000076"/>
</kw>
<var name="${args_key}">value_natid</var>
<status status="PASS" start="2024-11-22T12:13:45.212226" elapsed="0.007179"/>
</iter>
<var>${args_key}</var>
<value>@{args_dict}</value>
<status status="PASS" start="2024-11-22T12:13:45.212160" elapsed="0.007271"/>
</for>
<status status="PASS" start="2024-11-22T12:13:45.212128" elapsed="0.007326"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:45.212123" elapsed="0.007348"/>
</if>
<status status="PASS" start="2024-11-22T12:13:45.212004" elapsed="0.007479"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:45.211991" elapsed="0.007503"/>
</if>
<return>
<value>${sql_query}</value>
<status status="PASS" start="2024-11-22T12:13:45.219510" elapsed="0.000021"/>
</return>
<msg time="2024-11-22T12:13:45.219590" level="INFO">${updated_sql_query} = DELETE FROM testdb.working_class_heroes
WHERE natid = "natid-153"</msg>
<var>${updated_sql_query}</var>
<arg>${sql_file_name}</arg>
<arg>${args_dict}</arg>
<status status="PASS" start="2024-11-22T12:13:45.210653" elapsed="0.008946"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<arg>${updated_sql_query}</arg>
<arg>DELETE</arg>
<arg>ignore_case=${True}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-11-22T12:13:45.219712" elapsed="0.000114"/>
</kw>
<msg time="2024-11-22T12:13:45.219874" level="INFO">${delete_status} = True</msg>
<var>${delete_status}</var>
<arg>Should Contain</arg>
<arg>${updated_sql_query}</arg>
<arg>DELETE</arg>
<arg>ignore_case=${True}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-11-22T12:13:45.219653" elapsed="0.000233"/>
</kw>
<if>
<branch type="IF" condition="'${delete_status}' == '${True}'">
<kw name="Execute Sql String" owner="DatabaseLibrary">
<msg time="2024-11-22T12:13:45.220695" level="INFO" html="true">Executing sql:&lt;br&gt;&lt;code style="font-weight: bold;"&gt;DELETE FROM testdb.working_class_heroes
WHERE natid = "natid-153"&lt;/code&gt;</msg>
<msg time="2024-11-22T12:13:45.221895" level="INFO">${json_response} = None</msg>
<var>${json_response}</var>
<arg>${updated_sql_query}</arg>
<doc>Executes the ``sql_string`` as a single SQL command.</doc>
<status status="PASS" start="2024-11-22T12:13:45.220050" elapsed="0.001856"/>
</kw>
<status status="PASS" start="2024-11-22T12:13:45.219946" elapsed="0.001981"/>
</branch>
<branch type="ELSE">
<kw name="Query" owner="DatabaseLibrary">
<var>${json_response}</var>
<arg>${updated_sql_query}</arg>
<arg>return_dict=${True}</arg>
<doc>Runs a query with the ``select_statement`` and returns the result as list of rows.
The type of row values depends on the database module -
usually they are tuples or tuple-like objects.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:45.221997" elapsed="0.000011"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:45.221943" elapsed="0.000093"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:45.219937" elapsed="0.002111"/>
</if>
<kw name="Disconnect From Database" owner="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<status status="PASS" start="2024-11-22T12:13:45.222092" elapsed="0.000112"/>
</kw>
<return>
<value>${json_response}</value>
<status status="PASS" start="2024-11-22T12:13:45.222226" elapsed="0.000016"/>
</return>
<arg>delete_hero_by_natid</arg>
<arg>${cleanup_dict}</arg>
<status status="PASS" start="2024-11-22T12:13:45.196358" elapsed="0.025927"/>
</kw>
<var name="${item}">['natid-153', 'Angelina Jolie', '', '1996-01-01T23:59:59', '', '1000.50', '10.28', '']</var>
<status status="PASS" start="2024-11-22T12:13:45.195260" elapsed="0.027052"/>
</iter>
<iter>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2024-11-22T12:13:45.222732" level="INFO">${cleanup_dict} = {'value_natid': 'natid-154'}</msg>
<var>${cleanup_dict}</var>
<arg>value_natid=${item[0]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2024-11-22T12:13:45.222408" elapsed="0.000335"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<kw name="Connect To Database" owner="DatabaseLibrary">
<msg time="2024-11-22T12:13:45.223073" level="INFO">Looking for configuration file: 'resources/db.cfg'</msg>
<msg time="2024-11-22T12:13:45.223091" level="INFO">Configuration file doesn't exist</msg>
<msg time="2024-11-22T12:13:45.223164" level="INFO">Connect to DB using : mysql.connector.connect(database='testdb', user='user', password=***, host='localhost', port=3306)</msg>
<arg>${DB_API}</arg>
<arg>${DB_NAME}</arg>
<arg>${DB_USER}</arg>
<arg>${DB_PASSWORD}</arg>
<arg>${DB_HOST}</arg>
<arg>${DB_PORT}</arg>
<doc>Creates a database connection using the DB API 2.0 ``db_module`` and the parameters provided.
Along with listed commonly used arguments (`db_name`, `db_host` etc.)
you can set any other DB module specific parameters as key/value pairs.</doc>
<status status="PASS" start="2024-11-22T12:13:45.222959" elapsed="0.020728"/>
</kw>
<kw name="Update SQL Queries With Arguments Dictionary" owner="sql-helper">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-11-22T12:13:45.244509" level="INFO" html="true">Getting file '&lt;a href="file:///Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/object-repo/sql-queries/delete_hero_by_natid.sql"&gt;/Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/object-repo/sql-queries/delete_hero_by_natid.sql&lt;/a&gt;'.</msg>
<msg time="2024-11-22T12:13:45.244667" level="INFO">${sql_query} = DELETE FROM testdb.working_class_heroes
WHERE natid = "value_natid"</msg>
<var>${sql_query}</var>
<arg>./object-repo/sql-queries/${sql_file_name}.sql</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-11-22T12:13:45.244368" elapsed="0.000316"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2024-11-22T12:13:45.245168" level="INFO">Argument types are:
&lt;class 'robot.utils.dotdict.DotDict'&gt;
&lt;class 'str'&gt;</msg>
<msg time="2024-11-22T12:13:45.245236" level="FAIL">{'value_natid': 'natid-154'} != </msg>
<arg>${args_dict}</arg>
<arg>${EMPTY}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="FAIL" start="2024-11-22T12:13:45.244857" elapsed="0.000416">{'value_natid': 'natid-154'} != </status>
</kw>
<msg time="2024-11-22T12:13:45.245326" level="INFO">${empty_status} = False</msg>
<var>${empty_status}</var>
<arg>Should Be Equal As Strings</arg>
<arg>${args_dict}</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-11-22T12:13:45.244766" elapsed="0.000569"/>
</kw>
<if>
<branch type="IF" condition="'${empty_status}' == '${False}'">
<if>
<branch type="IF" condition="${args_dict}">
<for flavor="IN">
<iter>
<kw name="Convert To String" owner="BuiltIn">
<msg time="2024-11-22T12:13:45.245726" level="INFO">${args_key_str} = value_natid</msg>
<var>${args_key_str}</var>
<arg>${args_key}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="PASS" start="2024-11-22T12:13:45.245653" elapsed="0.000085"/>
</kw>
<kw name="Convert To String" owner="BuiltIn">
<msg time="2024-11-22T12:13:45.245866" level="INFO">${args_value_str} = natid-154</msg>
<var>${args_value_str}</var>
<arg>${args_dict}[${args_key_str}]</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="PASS" start="2024-11-22T12:13:45.245793" elapsed="0.000084"/>
</kw>
<kw name="Replace String" owner="String">
<msg time="2024-11-22T12:13:45.246039" level="INFO">${sql_query} = DELETE FROM testdb.working_class_heroes
WHERE natid = "natid-154"</msg>
<var>${sql_query}</var>
<arg>${sql_query}</arg>
<arg>${args_key_str}</arg>
<arg>${args_value_str}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="PASS" start="2024-11-22T12:13:45.245931" elapsed="0.000122"/>
</kw>
<var name="${args_key}">value_natid</var>
<status status="PASS" start="2024-11-22T12:13:45.245598" elapsed="0.016104"/>
</iter>
<var>${args_key}</var>
<value>@{args_dict}</value>
<status status="PASS" start="2024-11-22T12:13:45.245537" elapsed="0.016465"/>
</for>
<status status="PASS" start="2024-11-22T12:13:45.245502" elapsed="0.016548"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:45.245495" elapsed="0.016578"/>
</if>
<status status="PASS" start="2024-11-22T12:13:45.245380" elapsed="0.016722"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:45.245367" elapsed="0.016758"/>
</if>
<return>
<value>${sql_query}</value>
<status status="PASS" start="2024-11-22T12:13:45.262155" elapsed="0.000035"/>
</return>
<msg time="2024-11-22T12:13:45.262297" level="INFO">${updated_sql_query} = DELETE FROM testdb.working_class_heroes
WHERE natid = "natid-154"</msg>
<var>${updated_sql_query}</var>
<arg>${sql_file_name}</arg>
<arg>${args_dict}</arg>
<status status="PASS" start="2024-11-22T12:13:45.244143" elapsed="0.018168"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<arg>${updated_sql_query}</arg>
<arg>DELETE</arg>
<arg>ignore_case=${True}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-11-22T12:13:45.262542" elapsed="0.000141"/>
</kw>
<msg time="2024-11-22T12:13:45.262724" level="INFO">${delete_status} = True</msg>
<var>${delete_status}</var>
<arg>Should Contain</arg>
<arg>${updated_sql_query}</arg>
<arg>DELETE</arg>
<arg>ignore_case=${True}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-11-22T12:13:45.262431" elapsed="0.000303"/>
</kw>
<if>
<branch type="IF" condition="'${delete_status}' == '${True}'">
<kw name="Execute Sql String" owner="DatabaseLibrary">
<msg time="2024-11-22T12:13:45.263718" level="INFO" html="true">Executing sql:&lt;br&gt;&lt;code style="font-weight: bold;"&gt;DELETE FROM testdb.working_class_heroes
WHERE natid = "natid-154"&lt;/code&gt;</msg>
<msg time="2024-11-22T12:13:45.265143" level="INFO">${json_response} = None</msg>
<var>${json_response}</var>
<arg>${updated_sql_query}</arg>
<doc>Executes the ``sql_string`` as a single SQL command.</doc>
<status status="PASS" start="2024-11-22T12:13:45.262916" elapsed="0.002241"/>
</kw>
<status status="PASS" start="2024-11-22T12:13:45.262808" elapsed="0.002375"/>
</branch>
<branch type="ELSE">
<kw name="Query" owner="DatabaseLibrary">
<var>${json_response}</var>
<arg>${updated_sql_query}</arg>
<arg>return_dict=${True}</arg>
<doc>Runs a query with the ``select_statement`` and returns the result as list of rows.
The type of row values depends on the database module -
usually they are tuples or tuple-like objects.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:45.265267" elapsed="0.000011"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:45.265200" elapsed="0.000097"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:45.262795" elapsed="0.002514"/>
</if>
<kw name="Disconnect From Database" owner="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<status status="PASS" start="2024-11-22T12:13:45.265354" elapsed="0.000101"/>
</kw>
<return>
<value>${json_response}</value>
<status status="PASS" start="2024-11-22T12:13:45.265476" elapsed="0.000020"/>
</return>
<arg>delete_hero_by_natid</arg>
<arg>${cleanup_dict}</arg>
<status status="PASS" start="2024-11-22T12:13:45.222837" elapsed="0.042706"/>
</kw>
<var name="${item}">['natid-154', 'Lawrence Chu', 'MALE', '4000-01-01T23:59:59', '', '1000.12', '10.00', '']</var>
<status status="PASS" start="2024-11-22T12:13:45.222358" elapsed="0.043204"/>
</iter>
<iter>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2024-11-22T12:13:45.266019" level="INFO">${cleanup_dict} = {'value_natid': 'natid-155'}</msg>
<var>${cleanup_dict}</var>
<arg>value_natid=${item[0]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2024-11-22T12:13:45.265671" elapsed="0.000359"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<kw name="Connect To Database" owner="DatabaseLibrary">
<msg time="2024-11-22T12:13:45.266373" level="INFO">Looking for configuration file: 'resources/db.cfg'</msg>
<msg time="2024-11-22T12:13:45.266393" level="INFO">Configuration file doesn't exist</msg>
<msg time="2024-11-22T12:13:45.266472" level="INFO">Connect to DB using : mysql.connector.connect(database='testdb', user='user', password=***, host='localhost', port=3306)</msg>
<arg>${DB_API}</arg>
<arg>${DB_NAME}</arg>
<arg>${DB_USER}</arg>
<arg>${DB_PASSWORD}</arg>
<arg>${DB_HOST}</arg>
<arg>${DB_PORT}</arg>
<doc>Creates a database connection using the DB API 2.0 ``db_module`` and the parameters provided.
Along with listed commonly used arguments (`db_name`, `db_host` etc.)
you can set any other DB module specific parameters as key/value pairs.</doc>
<status status="PASS" start="2024-11-22T12:13:45.266258" elapsed="0.006926"/>
</kw>
<kw name="Update SQL Queries With Arguments Dictionary" owner="sql-helper">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-11-22T12:13:45.273571" level="INFO" html="true">Getting file '&lt;a href="file:///Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/object-repo/sql-queries/delete_hero_by_natid.sql"&gt;/Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/object-repo/sql-queries/delete_hero_by_natid.sql&lt;/a&gt;'.</msg>
<msg time="2024-11-22T12:13:45.273653" level="INFO">${sql_query} = DELETE FROM testdb.working_class_heroes
WHERE natid = "value_natid"</msg>
<var>${sql_query}</var>
<arg>./object-repo/sql-queries/${sql_file_name}.sql</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-11-22T12:13:45.273460" elapsed="0.000204"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2024-11-22T12:13:45.274027" level="INFO">Argument types are:
&lt;class 'robot.utils.dotdict.DotDict'&gt;
&lt;class 'str'&gt;</msg>
<msg time="2024-11-22T12:13:45.274072" level="FAIL">{'value_natid': 'natid-155'} != </msg>
<arg>${args_dict}</arg>
<arg>${EMPTY}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="FAIL" start="2024-11-22T12:13:45.273787" elapsed="0.000316">{'value_natid': 'natid-155'} != </status>
</kw>
<msg time="2024-11-22T12:13:45.274142" level="INFO">${empty_status} = False</msg>
<var>${empty_status}</var>
<arg>Should Be Equal As Strings</arg>
<arg>${args_dict}</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-11-22T12:13:45.273722" elapsed="0.000428"/>
</kw>
<if>
<branch type="IF" condition="'${empty_status}' == '${False}'">
<if>
<branch type="IF" condition="${args_dict}">
<for flavor="IN">
<iter>
<kw name="Convert To String" owner="BuiltIn">
<msg time="2024-11-22T12:13:45.274420" level="INFO">${args_key_str} = value_natid</msg>
<var>${args_key_str}</var>
<arg>${args_key}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="PASS" start="2024-11-22T12:13:45.274361" elapsed="0.000068"/>
</kw>
<kw name="Convert To String" owner="BuiltIn">
<msg time="2024-11-22T12:13:45.274539" level="INFO">${args_value_str} = natid-155</msg>
<var>${args_value_str}</var>
<arg>${args_dict}[${args_key_str}]</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="PASS" start="2024-11-22T12:13:45.274475" elapsed="0.000073"/>
</kw>
<kw name="Replace String" owner="String">
<msg time="2024-11-22T12:13:45.274816" level="INFO">${sql_query} = DELETE FROM testdb.working_class_heroes
WHERE natid = "natid-155"</msg>
<var>${sql_query}</var>
<arg>${sql_query}</arg>
<arg>${args_key_str}</arg>
<arg>${args_value_str}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="PASS" start="2024-11-22T12:13:45.274593" elapsed="0.000250"/>
</kw>
<var name="${args_key}">value_natid</var>
<status status="PASS" start="2024-11-22T12:13:45.274318" elapsed="0.007098"/>
</iter>
<var>${args_key}</var>
<value>@{args_dict}</value>
<status status="PASS" start="2024-11-22T12:13:45.274272" elapsed="0.007170"/>
</for>
<status status="PASS" start="2024-11-22T12:13:45.274244" elapsed="0.007218"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:45.274240" elapsed="0.007235"/>
</if>
<status status="PASS" start="2024-11-22T12:13:45.274182" elapsed="0.007302"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:45.274174" elapsed="0.007320"/>
</if>
<return>
<value>${sql_query}</value>
<status status="PASS" start="2024-11-22T12:13:45.281507" elapsed="0.000015"/>
</return>
<msg time="2024-11-22T12:13:45.281571" level="INFO">${updated_sql_query} = DELETE FROM testdb.working_class_heroes
WHERE natid = "natid-155"</msg>
<var>${updated_sql_query}</var>
<arg>${sql_file_name}</arg>
<arg>${args_dict}</arg>
<status status="PASS" start="2024-11-22T12:13:45.273322" elapsed="0.008259"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<arg>${updated_sql_query}</arg>
<arg>DELETE</arg>
<arg>ignore_case=${True}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-11-22T12:13:45.281709" elapsed="0.000080"/>
</kw>
<msg time="2024-11-22T12:13:45.281822" level="INFO">${delete_status} = True</msg>
<var>${delete_status}</var>
<arg>Should Contain</arg>
<arg>${updated_sql_query}</arg>
<arg>DELETE</arg>
<arg>ignore_case=${True}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-11-22T12:13:45.281638" elapsed="0.000193"/>
</kw>
<if>
<branch type="IF" condition="'${delete_status}' == '${True}'">
<kw name="Execute Sql String" owner="DatabaseLibrary">
<msg time="2024-11-22T12:13:45.282599" level="INFO" html="true">Executing sql:&lt;br&gt;&lt;code style="font-weight: bold;"&gt;DELETE FROM testdb.working_class_heroes
WHERE natid = "natid-155"&lt;/code&gt;</msg>
<msg time="2024-11-22T12:13:45.285615" level="INFO">${json_response} = None</msg>
<var>${json_response}</var>
<arg>${updated_sql_query}</arg>
<doc>Executes the ``sql_string`` as a single SQL command.</doc>
<status status="PASS" start="2024-11-22T12:13:45.281941" elapsed="0.003686"/>
</kw>
<status status="PASS" start="2024-11-22T12:13:45.281862" elapsed="0.003789"/>
</branch>
<branch type="ELSE">
<kw name="Query" owner="DatabaseLibrary">
<var>${json_response}</var>
<arg>${updated_sql_query}</arg>
<arg>return_dict=${True}</arg>
<doc>Runs a query with the ``select_statement`` and returns the result as list of rows.
The type of row values depends on the database module -
usually they are tuples or tuple-like objects.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:45.285729" elapsed="0.000012"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:45.285668" elapsed="0.000093"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:45.281855" elapsed="0.003918"/>
</if>
<kw name="Disconnect From Database" owner="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<status status="PASS" start="2024-11-22T12:13:45.285816" elapsed="0.000088"/>
</kw>
<return>
<value>${json_response}</value>
<status status="PASS" start="2024-11-22T12:13:45.285924" elapsed="0.000015"/>
</return>
<arg>delete_hero_by_natid</arg>
<arg>${cleanup_dict}</arg>
<status status="PASS" start="2024-11-22T12:13:45.266131" elapsed="0.019852"/>
</kw>
<var name="${item}">['natid-155', 'Karen', 'MALE', '1996-01-01T23:59:59', '', '-1000.00', '10.00', '']</var>
<status status="PASS" start="2024-11-22T12:13:45.265617" elapsed="0.020384"/>
</iter>
<iter>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2024-11-22T12:13:45.286422" level="INFO">${cleanup_dict} = {'value_natid': 'natid-156'}</msg>
<var>${cleanup_dict}</var>
<arg>value_natid=${item[0]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2024-11-22T12:13:45.286095" elapsed="0.000338"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<kw name="Connect To Database" owner="DatabaseLibrary">
<msg time="2024-11-22T12:13:45.286758" level="INFO">Looking for configuration file: 'resources/db.cfg'</msg>
<msg time="2024-11-22T12:13:45.286776" level="INFO">Configuration file doesn't exist</msg>
<msg time="2024-11-22T12:13:45.286849" level="INFO">Connect to DB using : mysql.connector.connect(database='testdb', user='user', password=***, host='localhost', port=3306)</msg>
<arg>${DB_API}</arg>
<arg>${DB_NAME}</arg>
<arg>${DB_USER}</arg>
<arg>${DB_PASSWORD}</arg>
<arg>${DB_HOST}</arg>
<arg>${DB_PORT}</arg>
<doc>Creates a database connection using the DB API 2.0 ``db_module`` and the parameters provided.
Along with listed commonly used arguments (`db_name`, `db_host` etc.)
you can set any other DB module specific parameters as key/value pairs.</doc>
<status status="PASS" start="2024-11-22T12:13:45.286646" elapsed="0.012889"/>
</kw>
<kw name="Update SQL Queries With Arguments Dictionary" owner="sql-helper">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-11-22T12:13:45.299979" level="INFO" html="true">Getting file '&lt;a href="file:///Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/object-repo/sql-queries/delete_hero_by_natid.sql"&gt;/Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/object-repo/sql-queries/delete_hero_by_natid.sql&lt;/a&gt;'.</msg>
<msg time="2024-11-22T12:13:45.300055" level="INFO">${sql_query} = DELETE FROM testdb.working_class_heroes
WHERE natid = "value_natid"</msg>
<var>${sql_query}</var>
<arg>./object-repo/sql-queries/${sql_file_name}.sql</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-11-22T12:13:45.299859" elapsed="0.000206"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2024-11-22T12:13:45.300449" level="INFO">Argument types are:
&lt;class 'robot.utils.dotdict.DotDict'&gt;
&lt;class 'str'&gt;</msg>
<msg time="2024-11-22T12:13:45.300496" level="FAIL">{'value_natid': 'natid-156'} != </msg>
<arg>${args_dict}</arg>
<arg>${EMPTY}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="FAIL" start="2024-11-22T12:13:45.300195" elapsed="0.000332">{'value_natid': 'natid-156'} != </status>
</kw>
<msg time="2024-11-22T12:13:45.300566" level="INFO">${empty_status} = False</msg>
<var>${empty_status}</var>
<arg>Should Be Equal As Strings</arg>
<arg>${args_dict}</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-11-22T12:13:45.300128" elapsed="0.000447"/>
</kw>
<if>
<branch type="IF" condition="'${empty_status}' == '${False}'">
<if>
<branch type="IF" condition="${args_dict}">
<for flavor="IN">
<iter>
<kw name="Convert To String" owner="BuiltIn">
<msg time="2024-11-22T12:13:45.300868" level="INFO">${args_key_str} = value_natid</msg>
<var>${args_key_str}</var>
<arg>${args_key}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="PASS" start="2024-11-22T12:13:45.300800" elapsed="0.000078"/>
</kw>
<kw name="Convert To String" owner="BuiltIn">
<msg time="2024-11-22T12:13:45.300994" level="INFO">${args_value_str} = natid-156</msg>
<var>${args_value_str}</var>
<arg>${args_dict}[${args_key_str}]</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="PASS" start="2024-11-22T12:13:45.300926" elapsed="0.000077"/>
</kw>
<kw name="Replace String" owner="String">
<msg time="2024-11-22T12:13:45.301122" level="INFO">${sql_query} = DELETE FROM testdb.working_class_heroes
WHERE natid = "natid-156"</msg>
<var>${sql_query}</var>
<arg>${sql_query}</arg>
<arg>${args_key_str}</arg>
<arg>${args_value_str}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="PASS" start="2024-11-22T12:13:45.301050" elapsed="0.000082"/>
</kw>
<var name="${args_key}">value_natid</var>
<status status="PASS" start="2024-11-22T12:13:45.300755" elapsed="0.001845"/>
</iter>
<var>${args_key}</var>
<value>@{args_dict}</value>
<status status="PASS" start="2024-11-22T12:13:45.300706" elapsed="0.001920"/>
</for>
<status status="PASS" start="2024-11-22T12:13:45.300676" elapsed="0.001971"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:45.300671" elapsed="0.001990"/>
</if>
<status status="PASS" start="2024-11-22T12:13:45.300610" elapsed="0.002061"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:45.300601" elapsed="0.002081"/>
</if>
<return>
<value>${sql_query}</value>
<status status="PASS" start="2024-11-22T12:13:45.302696" elapsed="0.000016"/>
</return>
<msg time="2024-11-22T12:13:45.302768" level="INFO">${updated_sql_query} = DELETE FROM testdb.working_class_heroes
WHERE natid = "natid-156"</msg>
<var>${updated_sql_query}</var>
<arg>${sql_file_name}</arg>
<arg>${args_dict}</arg>
<status status="PASS" start="2024-11-22T12:13:45.299700" elapsed="0.003100"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<arg>${updated_sql_query}</arg>
<arg>DELETE</arg>
<arg>ignore_case=${True}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-11-22T12:13:45.302933" elapsed="0.000089"/>
</kw>
<msg time="2024-11-22T12:13:45.303058" level="INFO">${delete_status} = True</msg>
<var>${delete_status}</var>
<arg>Should Contain</arg>
<arg>${updated_sql_query}</arg>
<arg>DELETE</arg>
<arg>ignore_case=${True}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-11-22T12:13:45.302862" elapsed="0.000206"/>
</kw>
<if>
<branch type="IF" condition="'${delete_status}' == '${True}'">
<kw name="Execute Sql String" owner="DatabaseLibrary">
<msg time="2024-11-22T12:13:45.303691" level="INFO" html="true">Executing sql:&lt;br&gt;&lt;code style="font-weight: bold;"&gt;DELETE FROM testdb.working_class_heroes
WHERE natid = "natid-156"&lt;/code&gt;</msg>
<msg time="2024-11-22T12:13:45.306933" level="INFO">${json_response} = None</msg>
<var>${json_response}</var>
<arg>${updated_sql_query}</arg>
<doc>Executes the ``sql_string`` as a single SQL command.</doc>
<status status="PASS" start="2024-11-22T12:13:45.303205" elapsed="0.003760"/>
</kw>
<status status="PASS" start="2024-11-22T12:13:45.303115" elapsed="0.003900"/>
</branch>
<branch type="ELSE">
<kw name="Query" owner="DatabaseLibrary">
<var>${json_response}</var>
<arg>${updated_sql_query}</arg>
<arg>return_dict=${True}</arg>
<doc>Runs a query with the ``select_statement`` and returns the result as list of rows.
The type of row values depends on the database module -
usually they are tuples or tuple-like objects.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:45.307103" elapsed="0.000011"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:45.307034" elapsed="0.000102"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:45.303108" elapsed="0.004040"/>
</if>
<kw name="Disconnect From Database" owner="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<status status="PASS" start="2024-11-22T12:13:45.307201" elapsed="0.000099"/>
</kw>
<return>
<value>${json_response}</value>
<status status="PASS" start="2024-11-22T12:13:45.307322" elapsed="0.000017"/>
</return>
<arg>delete_hero_by_natid</arg>
<arg>${cleanup_dict}</arg>
<status status="PASS" start="2024-11-22T12:13:45.286523" elapsed="0.020890"/>
</kw>
<var name="${item}">['natid-156', 'Cherry Chan', 'MALE', '1996-01-01T23:59:59', '', '10320.00', '-10.00', '']</var>
<status status="PASS" start="2024-11-22T12:13:45.286045" elapsed="0.021387"/>
</iter>
<iter>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2024-11-22T12:13:45.307857" level="INFO">${cleanup_dict} = {'value_natid': 'natid-157'}</msg>
<var>${cleanup_dict}</var>
<arg>value_natid=${item[0]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2024-11-22T12:13:45.307530" elapsed="0.000338"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<kw name="Connect To Database" owner="DatabaseLibrary">
<msg time="2024-11-22T12:13:45.308230" level="INFO">Looking for configuration file: 'resources/db.cfg'</msg>
<msg time="2024-11-22T12:13:45.308250" level="INFO">Configuration file doesn't exist</msg>
<msg time="2024-11-22T12:13:45.308326" level="INFO">Connect to DB using : mysql.connector.connect(database='testdb', user='user', password=***, host='localhost', port=3306)</msg>
<arg>${DB_API}</arg>
<arg>${DB_NAME}</arg>
<arg>${DB_USER}</arg>
<arg>${DB_PASSWORD}</arg>
<arg>${DB_HOST}</arg>
<arg>${DB_PORT}</arg>
<doc>Creates a database connection using the DB API 2.0 ``db_module`` and the parameters provided.
Along with listed commonly used arguments (`db_name`, `db_host` etc.)
you can set any other DB module specific parameters as key/value pairs.</doc>
<status status="PASS" start="2024-11-22T12:13:45.308084" elapsed="0.012603"/>
</kw>
<kw name="Update SQL Queries With Arguments Dictionary" owner="sql-helper">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-11-22T12:13:45.321189" level="INFO" html="true">Getting file '&lt;a href="file:///Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/object-repo/sql-queries/delete_hero_by_natid.sql"&gt;/Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/object-repo/sql-queries/delete_hero_by_natid.sql&lt;/a&gt;'.</msg>
<msg time="2024-11-22T12:13:45.321261" level="INFO">${sql_query} = DELETE FROM testdb.working_class_heroes
WHERE natid = "value_natid"</msg>
<var>${sql_query}</var>
<arg>./object-repo/sql-queries/${sql_file_name}.sql</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-11-22T12:13:45.321090" elapsed="0.000181"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2024-11-22T12:13:45.321666" level="INFO">Argument types are:
&lt;class 'robot.utils.dotdict.DotDict'&gt;
&lt;class 'str'&gt;</msg>
<msg time="2024-11-22T12:13:45.321711" level="FAIL">{'value_natid': 'natid-157'} != </msg>
<arg>${args_dict}</arg>
<arg>${EMPTY}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="FAIL" start="2024-11-22T12:13:45.321398" elapsed="0.000343">{'value_natid': 'natid-157'} != </status>
</kw>
<msg time="2024-11-22T12:13:45.321782" level="INFO">${empty_status} = False</msg>
<var>${empty_status}</var>
<arg>Should Be Equal As Strings</arg>
<arg>${args_dict}</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-11-22T12:13:45.321330" elapsed="0.000461"/>
</kw>
<if>
<branch type="IF" condition="'${empty_status}' == '${False}'">
<if>
<branch type="IF" condition="${args_dict}">
<for flavor="IN">
<iter>
<kw name="Convert To String" owner="BuiltIn">
<msg time="2024-11-22T12:13:45.322088" level="INFO">${args_key_str} = value_natid</msg>
<var>${args_key_str}</var>
<arg>${args_key}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="PASS" start="2024-11-22T12:13:45.322024" elapsed="0.000074"/>
</kw>
<kw name="Convert To String" owner="BuiltIn">
<msg time="2024-11-22T12:13:45.322221" level="INFO">${args_value_str} = natid-157</msg>
<var>${args_value_str}</var>
<arg>${args_dict}[${args_key_str}]</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="PASS" start="2024-11-22T12:13:45.322149" elapsed="0.000081"/>
</kw>
<kw name="Replace String" owner="String">
<msg time="2024-11-22T12:13:45.322357" level="INFO">${sql_query} = DELETE FROM testdb.working_class_heroes
WHERE natid = "natid-157"</msg>
<var>${sql_query}</var>
<arg>${sql_query}</arg>
<arg>${args_key_str}</arg>
<arg>${args_value_str}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="PASS" start="2024-11-22T12:13:45.322281" elapsed="0.000087"/>
</kw>
<var name="${args_key}">value_natid</var>
<status status="PASS" start="2024-11-22T12:13:45.321977" elapsed="0.002547"/>
</iter>
<var>${args_key}</var>
<value>@{args_dict}</value>
<status status="PASS" start="2024-11-22T12:13:45.321921" elapsed="0.002630"/>
</for>
<status status="PASS" start="2024-11-22T12:13:45.321890" elapsed="0.002682"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:45.321885" elapsed="0.002701"/>
</if>
<status status="PASS" start="2024-11-22T12:13:45.321826" elapsed="0.002770"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:45.321818" elapsed="0.002790"/>
</if>
<return>
<value>${sql_query}</value>
<status status="PASS" start="2024-11-22T12:13:45.324622" elapsed="0.000016"/>
</return>
<msg time="2024-11-22T12:13:45.324722" level="INFO">${updated_sql_query} = DELETE FROM testdb.working_class_heroes
WHERE natid = "natid-157"</msg>
<var>${updated_sql_query}</var>
<arg>${sql_file_name}</arg>
<arg>${args_dict}</arg>
<status status="PASS" start="2024-11-22T12:13:45.320952" elapsed="0.003787"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<arg>${updated_sql_query}</arg>
<arg>DELETE</arg>
<arg>ignore_case=${True}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-11-22T12:13:45.324898" elapsed="0.000090"/>
</kw>
<msg time="2024-11-22T12:13:45.325027" level="INFO">${delete_status} = True</msg>
<var>${delete_status}</var>
<arg>Should Contain</arg>
<arg>${updated_sql_query}</arg>
<arg>DELETE</arg>
<arg>ignore_case=${True}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-11-22T12:13:45.324821" elapsed="0.000216"/>
</kw>
<if>
<branch type="IF" condition="'${delete_status}' == '${True}'">
<kw name="Execute Sql String" owner="DatabaseLibrary">
<msg time="2024-11-22T12:13:45.325499" level="INFO" html="true">Executing sql:&lt;br&gt;&lt;code style="font-weight: bold;"&gt;DELETE FROM testdb.working_class_heroes
WHERE natid = "natid-157"&lt;/code&gt;</msg>
<msg time="2024-11-22T12:13:45.329615" level="INFO">${json_response} = None</msg>
<var>${json_response}</var>
<arg>${updated_sql_query}</arg>
<doc>Executes the ``sql_string`` as a single SQL command.</doc>
<status status="PASS" start="2024-11-22T12:13:45.325161" elapsed="0.004471"/>
</kw>
<status status="PASS" start="2024-11-22T12:13:45.325071" elapsed="0.004587"/>
</branch>
<branch type="ELSE">
<kw name="Query" owner="DatabaseLibrary">
<var>${json_response}</var>
<arg>${updated_sql_query}</arg>
<arg>return_dict=${True}</arg>
<doc>Runs a query with the ``select_statement`` and returns the result as list of rows.
The type of row values depends on the database module -
usually they are tuples or tuple-like objects.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:45.329738" elapsed="0.000012"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:45.329677" elapsed="0.000094"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:45.325064" elapsed="0.004720"/>
</if>
<kw name="Disconnect From Database" owner="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<status status="PASS" start="2024-11-22T12:13:45.329832" elapsed="0.000095"/>
</kw>
<return>
<value>${json_response}</value>
<status status="PASS" start="2024-11-22T12:13:45.329950" elapsed="0.000016"/>
</return>
<arg>delete_hero_by_natid</arg>
<arg>${cleanup_dict}</arg>
<status status="PASS" start="2024-11-22T12:13:45.307959" elapsed="0.022054"/>
</kw>
<var name="${item}">['natid-157', 'Apple Xu', 'FEMALE', '1996-01-01T23:59:59', '', '1000.50', '10.28', '']</var>
<status status="PASS" start="2024-11-22T12:13:45.307479" elapsed="0.022553"/>
</iter>
<iter>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2024-11-22T12:13:45.330549" level="INFO">${cleanup_dict} = {'value_natid': 'natid-158'}</msg>
<var>${cleanup_dict}</var>
<arg>value_natid=${item[0]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2024-11-22T12:13:45.330178" elapsed="0.000385"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<kw name="Connect To Database" owner="DatabaseLibrary">
<msg time="2024-11-22T12:13:45.330932" level="INFO">Looking for configuration file: 'resources/db.cfg'</msg>
<msg time="2024-11-22T12:13:45.330953" level="INFO">Configuration file doesn't exist</msg>
<msg time="2024-11-22T12:13:45.331040" level="INFO">Connect to DB using : mysql.connector.connect(database='testdb', user='user', password=***, host='localhost', port=3306)</msg>
<arg>${DB_API}</arg>
<arg>${DB_NAME}</arg>
<arg>${DB_USER}</arg>
<arg>${DB_PASSWORD}</arg>
<arg>${DB_HOST}</arg>
<arg>${DB_PORT}</arg>
<doc>Creates a database connection using the DB API 2.0 ``db_module`` and the parameters provided.
Along with listed commonly used arguments (`db_name`, `db_host` etc.)
you can set any other DB module specific parameters as key/value pairs.</doc>
<status status="PASS" start="2024-11-22T12:13:45.330806" elapsed="0.005854"/>
</kw>
<kw name="Update SQL Queries With Arguments Dictionary" owner="sql-helper">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-11-22T12:13:45.337056" level="INFO" html="true">Getting file '&lt;a href="file:///Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/object-repo/sql-queries/delete_hero_by_natid.sql"&gt;/Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/object-repo/sql-queries/delete_hero_by_natid.sql&lt;/a&gt;'.</msg>
<msg time="2024-11-22T12:13:45.337136" level="INFO">${sql_query} = DELETE FROM testdb.working_class_heroes
WHERE natid = "value_natid"</msg>
<var>${sql_query}</var>
<arg>./object-repo/sql-queries/${sql_file_name}.sql</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-11-22T12:13:45.336934" elapsed="0.000212"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2024-11-22T12:13:45.337518" level="INFO">Argument types are:
&lt;class 'robot.utils.dotdict.DotDict'&gt;
&lt;class 'str'&gt;</msg>
<msg time="2024-11-22T12:13:45.337564" level="FAIL">{'value_natid': 'natid-158'} != </msg>
<arg>${args_dict}</arg>
<arg>${EMPTY}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="FAIL" start="2024-11-22T12:13:45.337270" elapsed="0.000324">{'value_natid': 'natid-158'} != </status>
</kw>
<msg time="2024-11-22T12:13:45.337634" level="INFO">${empty_status} = False</msg>
<var>${empty_status}</var>
<arg>Should Be Equal As Strings</arg>
<arg>${args_dict}</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-11-22T12:13:45.337203" elapsed="0.000439"/>
</kw>
<if>
<branch type="IF" condition="'${empty_status}' == '${False}'">
<if>
<branch type="IF" condition="${args_dict}">
<for flavor="IN">
<iter>
<kw name="Convert To String" owner="BuiltIn">
<msg time="2024-11-22T12:13:45.337928" level="INFO">${args_key_str} = value_natid</msg>
<var>${args_key_str}</var>
<arg>${args_key}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="PASS" start="2024-11-22T12:13:45.337866" elapsed="0.000072"/>
</kw>
<kw name="Convert To String" owner="BuiltIn">
<msg time="2024-11-22T12:13:45.338053" level="INFO">${args_value_str} = natid-158</msg>
<var>${args_value_str}</var>
<arg>${args_dict}[${args_key_str}]</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="PASS" start="2024-11-22T12:13:45.337985" elapsed="0.000077"/>
</kw>
<kw name="Replace String" owner="String">
<msg time="2024-11-22T12:13:45.338296" level="INFO">${sql_query} = DELETE FROM testdb.working_class_heroes
WHERE natid = "natid-158"</msg>
<var>${sql_query}</var>
<arg>${sql_query}</arg>
<arg>${args_key_str}</arg>
<arg>${args_value_str}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="PASS" start="2024-11-22T12:13:45.338110" elapsed="0.000197"/>
</kw>
<var name="${args_key}">value_natid</var>
<status status="PASS" start="2024-11-22T12:13:45.337820" elapsed="0.007694"/>
</iter>
<var>${args_key}</var>
<value>@{args_dict}</value>
<status status="PASS" start="2024-11-22T12:13:45.337772" elapsed="0.007770"/>
</for>
<status status="PASS" start="2024-11-22T12:13:45.337742" elapsed="0.007825"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:45.337737" elapsed="0.007846"/>
</if>
<status status="PASS" start="2024-11-22T12:13:45.337677" elapsed="0.007918"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:45.337668" elapsed="0.007939"/>
</if>
<return>
<value>${sql_query}</value>
<status status="PASS" start="2024-11-22T12:13:45.345633" elapsed="0.000019"/>
</return>
<msg time="2024-11-22T12:13:45.345716" level="INFO">${updated_sql_query} = DELETE FROM testdb.working_class_heroes
WHERE natid = "natid-158"</msg>
<var>${updated_sql_query}</var>
<arg>${sql_file_name}</arg>
<arg>${args_dict}</arg>
<status status="PASS" start="2024-11-22T12:13:45.336799" elapsed="0.008931"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<arg>${updated_sql_query}</arg>
<arg>DELETE</arg>
<arg>ignore_case=${True}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-11-22T12:13:45.345884" elapsed="0.000099"/>
</kw>
<msg time="2024-11-22T12:13:45.346024" level="INFO">${delete_status} = True</msg>
<var>${delete_status}</var>
<arg>Should Contain</arg>
<arg>${updated_sql_query}</arg>
<arg>DELETE</arg>
<arg>ignore_case=${True}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-11-22T12:13:45.345803" elapsed="0.000232"/>
</kw>
<if>
<branch type="IF" condition="'${delete_status}' == '${True}'">
<kw name="Execute Sql String" owner="DatabaseLibrary">
<msg time="2024-11-22T12:13:45.346625" level="INFO" html="true">Executing sql:&lt;br&gt;&lt;code style="font-weight: bold;"&gt;DELETE FROM testdb.working_class_heroes
WHERE natid = "natid-158"&lt;/code&gt;</msg>
<msg time="2024-11-22T12:13:45.348771" level="INFO">${json_response} = None</msg>
<var>${json_response}</var>
<arg>${updated_sql_query}</arg>
<doc>Executes the ``sql_string`` as a single SQL command.</doc>
<status status="PASS" start="2024-11-22T12:13:45.346176" elapsed="0.002609"/>
</kw>
<status status="PASS" start="2024-11-22T12:13:45.346074" elapsed="0.002734"/>
</branch>
<branch type="ELSE">
<kw name="Query" owner="DatabaseLibrary">
<var>${json_response}</var>
<arg>${updated_sql_query}</arg>
<arg>return_dict=${True}</arg>
<doc>Runs a query with the ``select_statement`` and returns the result as list of rows.
The type of row values depends on the database module -
usually they are tuples or tuple-like objects.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:45.348884" elapsed="0.000011"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:45.348825" elapsed="0.000091"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:45.346066" elapsed="0.002863"/>
</if>
<kw name="Disconnect From Database" owner="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<status status="PASS" start="2024-11-22T12:13:45.348975" elapsed="0.000090"/>
</kw>
<return>
<value>${json_response}</value>
<status status="PASS" start="2024-11-22T12:13:45.349085" elapsed="0.000016"/>
</return>
<arg>delete_hero_by_natid</arg>
<arg>${cleanup_dict}</arg>
<status status="PASS" start="2024-11-22T12:13:45.330670" elapsed="0.018476"/>
</kw>
<var name="${item}">['natid-158', 'Orange Xu', 'F', '1996-01-01T23:59:59', '', '1000.50', '10.28', '']</var>
<status status="PASS" start="2024-11-22T12:13:45.330109" elapsed="0.019057"/>
</iter>
<iter>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2024-11-22T12:13:45.349623" level="INFO">${cleanup_dict} = {'value_natid': 'natid-159'}</msg>
<var>${cleanup_dict}</var>
<arg>value_natid=${item[0]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2024-11-22T12:13:45.349268" elapsed="0.000368"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<kw name="Connect To Database" owner="DatabaseLibrary">
<msg time="2024-11-22T12:13:45.349994" level="INFO">Looking for configuration file: 'resources/db.cfg'</msg>
<msg time="2024-11-22T12:13:45.350014" level="INFO">Configuration file doesn't exist</msg>
<msg time="2024-11-22T12:13:45.350098" level="INFO">Connect to DB using : mysql.connector.connect(database='testdb', user='user', password=***, host='localhost', port=3306)</msg>
<arg>${DB_API}</arg>
<arg>${DB_NAME}</arg>
<arg>${DB_USER}</arg>
<arg>${DB_PASSWORD}</arg>
<arg>${DB_HOST}</arg>
<arg>${DB_PORT}</arg>
<doc>Creates a database connection using the DB API 2.0 ``db_module`` and the parameters provided.
Along with listed commonly used arguments (`db_name`, `db_host` etc.)
you can set any other DB module specific parameters as key/value pairs.</doc>
<status status="PASS" start="2024-11-22T12:13:45.349867" elapsed="0.007980"/>
</kw>
<kw name="Update SQL Queries With Arguments Dictionary" owner="sql-helper">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-11-22T12:13:45.358212" level="INFO" html="true">Getting file '&lt;a href="file:///Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/object-repo/sql-queries/delete_hero_by_natid.sql"&gt;/Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/object-repo/sql-queries/delete_hero_by_natid.sql&lt;/a&gt;'.</msg>
<msg time="2024-11-22T12:13:45.358286" level="INFO">${sql_query} = DELETE FROM testdb.working_class_heroes
WHERE natid = "value_natid"</msg>
<var>${sql_query}</var>
<arg>./object-repo/sql-queries/${sql_file_name}.sql</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-11-22T12:13:45.358114" elapsed="0.000183"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2024-11-22T12:13:45.358717" level="INFO">Argument types are:
&lt;class 'robot.utils.dotdict.DotDict'&gt;
&lt;class 'str'&gt;</msg>
<msg time="2024-11-22T12:13:45.358763" level="FAIL">{'value_natid': 'natid-159'} != </msg>
<arg>${args_dict}</arg>
<arg>${EMPTY}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="FAIL" start="2024-11-22T12:13:45.358433" elapsed="0.000361">{'value_natid': 'natid-159'} != </status>
</kw>
<msg time="2024-11-22T12:13:45.358839" level="INFO">${empty_status} = False</msg>
<var>${empty_status}</var>
<arg>Should Be Equal As Strings</arg>
<arg>${args_dict}</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-11-22T12:13:45.358359" elapsed="0.000491"/>
</kw>
<if>
<branch type="IF" condition="'${empty_status}' == '${False}'">
<if>
<branch type="IF" condition="${args_dict}">
<for flavor="IN">
<iter>
<kw name="Convert To String" owner="BuiltIn">
<msg time="2024-11-22T12:13:45.359154" level="INFO">${args_key_str} = value_natid</msg>
<var>${args_key_str}</var>
<arg>${args_key}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="PASS" start="2024-11-22T12:13:45.359084" elapsed="0.000081"/>
</kw>
<kw name="Convert To String" owner="BuiltIn">
<msg time="2024-11-22T12:13:45.359305" level="INFO">${args_value_str} = natid-159</msg>
<var>${args_value_str}</var>
<arg>${args_dict}[${args_key_str}]</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="PASS" start="2024-11-22T12:13:45.359221" elapsed="0.000095"/>
</kw>
<kw name="Replace String" owner="String">
<msg time="2024-11-22T12:13:45.359453" level="INFO">${sql_query} = DELETE FROM testdb.working_class_heroes
WHERE natid = "natid-159"</msg>
<var>${sql_query}</var>
<arg>${sql_query}</arg>
<arg>${args_key_str}</arg>
<arg>${args_value_str}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="PASS" start="2024-11-22T12:13:45.359372" elapsed="0.000092"/>
</kw>
<var name="${args_key}">value_natid</var>
<status status="PASS" start="2024-11-22T12:13:45.359034" elapsed="0.002618"/>
</iter>
<var>${args_key}</var>
<value>@{args_dict}</value>
<status status="PASS" start="2024-11-22T12:13:45.358981" elapsed="0.002696"/>
</for>
<status status="PASS" start="2024-11-22T12:13:45.358950" elapsed="0.002749"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:45.358944" elapsed="0.002770"/>
</if>
<status status="PASS" start="2024-11-22T12:13:45.358885" elapsed="0.002839"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:45.358878" elapsed="0.002858"/>
</if>
<return>
<value>${sql_query}</value>
<status status="PASS" start="2024-11-22T12:13:45.361751" elapsed="0.000016"/>
</return>
<msg time="2024-11-22T12:13:45.361825" level="INFO">${updated_sql_query} = DELETE FROM testdb.working_class_heroes
WHERE natid = "natid-159"</msg>
<var>${updated_sql_query}</var>
<arg>${sql_file_name}</arg>
<arg>${args_dict}</arg>
<status status="PASS" start="2024-11-22T12:13:45.357974" elapsed="0.003863"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<arg>${updated_sql_query}</arg>
<arg>DELETE</arg>
<arg>ignore_case=${True}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-11-22T12:13:45.361978" elapsed="0.000093"/>
</kw>
<msg time="2024-11-22T12:13:45.362110" level="INFO">${delete_status} = True</msg>
<var>${delete_status}</var>
<arg>Should Contain</arg>
<arg>${updated_sql_query}</arg>
<arg>DELETE</arg>
<arg>ignore_case=${True}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-11-22T12:13:45.361903" elapsed="0.000218"/>
</kw>
<if>
<branch type="IF" condition="'${delete_status}' == '${True}'">
<kw name="Execute Sql String" owner="DatabaseLibrary">
<msg time="2024-11-22T12:13:45.362592" level="INFO" html="true">Executing sql:&lt;br&gt;&lt;code style="font-weight: bold;"&gt;DELETE FROM testdb.working_class_heroes
WHERE natid = "natid-159"&lt;/code&gt;</msg>
<msg time="2024-11-22T12:13:45.363739" level="INFO">${json_response} = None</msg>
<var>${json_response}</var>
<arg>${updated_sql_query}</arg>
<doc>Executes the ``sql_string`` as a single SQL command.</doc>
<status status="PASS" start="2024-11-22T12:13:45.362249" elapsed="0.001502"/>
</kw>
<status status="PASS" start="2024-11-22T12:13:45.362157" elapsed="0.001615"/>
</branch>
<branch type="ELSE">
<kw name="Query" owner="DatabaseLibrary">
<var>${json_response}</var>
<arg>${updated_sql_query}</arg>
<arg>return_dict=${True}</arg>
<doc>Runs a query with the ``select_statement`` and returns the result as list of rows.
The type of row values depends on the database module -
usually they are tuples or tuple-like objects.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:45.363844" elapsed="0.000011"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:45.363789" elapsed="0.000087"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:45.362150" elapsed="0.001739"/>
</if>
<kw name="Disconnect From Database" owner="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<status status="PASS" start="2024-11-22T12:13:45.363937" elapsed="0.000085"/>
</kw>
<return>
<value>${json_response}</value>
<status status="PASS" start="2024-11-22T12:13:45.364043" elapsed="0.000016"/>
</return>
<arg>delete_hero_by_natid</arg>
<arg>${cleanup_dict}</arg>
<status status="PASS" start="2024-11-22T12:13:45.349736" elapsed="0.014370"/>
</kw>
<var name="${item}">['natid-159', 'Durian Xu', 'FEMALE', '1996-01-01T23:59:59', '', '1000.50', '10.28', '']</var>
<status status="PASS" start="2024-11-22T12:13:45.349214" elapsed="0.014913"/>
</iter>
<var>${item}</var>
<value>@{csv_list}</value>
<status status="PASS" start="2024-11-22T12:13:45.005920" elapsed="0.358229"/>
</for>
<arg>${negative_test_data_path}</arg>
<doc>Precondition to clear DB data before running test</doc>
<status status="PASS" start="2024-11-22T12:13:45.004797" elapsed="0.359387"/>
</kw>
<kw name="Login As Clerk" owner="clerk">
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T12:13:45.364589" level="INFO">
Logging In As Clerk</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T12:13:45.364520" elapsed="0.000091"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T12:13:45.364670" elapsed="0.000071"/>
</kw>
<arg>Logging In As Clerk</arg>
<status status="PASS" start="2024-11-22T12:13:45.364413" elapsed="0.000356"/>
</kw>
<kw name="Login With Credential" owner="login">
<kw name="Page Should Contain Element With Scroll And Retry" owner="generic">
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Page Should Contain Element With Scroll" owner="generic">
<kw name="Scroll Element Into View" owner="SeleniumLibrary">
<arg>${xpath}</arg>
<doc>Scrolls the element identified by ``locator`` into view.</doc>
<status status="PASS" start="2024-11-22T12:13:45.365480" elapsed="0.267239"/>
</kw>
<kw name="Page Should Contain Element" owner="SeleniumLibrary">
<msg time="2024-11-22T12:13:45.642376" level="INFO">Current page contains element '//h1[normalize-space()='Working Class Hero System']'.</msg>
<arg>${xpath}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<status status="PASS" start="2024-11-22T12:13:45.633383" elapsed="0.009117"/>
</kw>
<arg>${xpath}</arg>
<status status="PASS" start="2024-11-22T12:13:45.365334" elapsed="0.277302"/>
</kw>
<arg>10x</arg>
<arg>50ms</arg>
<arg>Page Should Contain Element With Scroll</arg>
<arg>${xpath}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-11-22T12:13:45.365197" elapsed="0.277503"/>
</kw>
<arg>${lbl_header_login}</arg>
<status status="PASS" start="2024-11-22T12:13:45.364951" elapsed="0.277836"/>
</kw>
<kw name="Get Login Credential" owner="login">
<kw name="Read Csv File To Associative" owner="CSVLibrary">
<msg time="2024-11-22T12:13:45.645699" level="INFO">${credential_dict_list} = [{'role': 'Clerk', 'username': 'clerk', 'password': 'clerk'}, {'role': 'Book Keeper', 'username': 'bk', 'password': 'bk'}]</msg>
<var>${credential_dict_list}</var>
<arg>./test-data/role-credential.csv</arg>
<doc>Read CSV file and return its content as a Python list of dictionaries.</doc>
<status status="PASS" start="2024-11-22T12:13:45.643603" elapsed="0.002124"/>
</kw>
<for flavor="IN">
<iter>
<if>
<branch type="IF" condition="'${item['role']}' == '${role}'">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-11-22T12:13:45.647358" level="INFO">${username} = clerk</msg>
<var>${username}</var>
<arg>${item['username']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-11-22T12:13:45.646783" elapsed="0.000599"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-11-22T12:13:45.648028" level="INFO">${password} = clerk</msg>
<var>${password}</var>
<arg>${item['password']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-11-22T12:13:45.647502" elapsed="0.000547"/>
</kw>
<status status="PASS" start="2024-11-22T12:13:45.646033" elapsed="0.002056"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:45.646012" elapsed="0.002112"/>
</if>
<var name="${item}">{'role': 'Clerk', 'username': 'clerk', 'password': 'clerk'}</var>
<status status="PASS" start="2024-11-22T12:13:45.645968" elapsed="0.002176"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item['role']}' == '${role}'">
<kw name="Set Variable" owner="BuiltIn">
<var>${username}</var>
<arg>${item['username']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:45.648859" elapsed="0.000023"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<var>${password}</var>
<arg>${item['password']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:45.651156" elapsed="0.000040"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:45.648299" elapsed="0.002945"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:45.648287" elapsed="0.002992"/>
</if>
<var name="${item}">{'role': 'Book Keeper', 'username': 'bk', 'password': 'bk'}</var>
<status status="PASS" start="2024-11-22T12:13:45.648257" elapsed="0.003044"/>
</iter>
<var>${item}</var>
<value>@{credential_dict_list}</value>
<status status="PASS" start="2024-11-22T12:13:45.645797" elapsed="0.005540"/>
</for>
<return>
<value>${username}</value>
<value>${password}</value>
<status status="PASS" start="2024-11-22T12:13:45.651390" elapsed="0.000057"/>
</return>
<msg time="2024-11-22T12:13:45.651603" level="INFO">${username} = clerk</msg>
<msg time="2024-11-22T12:13:45.651640" level="INFO">${password} = clerk</msg>
<var>${username}</var>
<var>${password}</var>
<arg>${role}</arg>
<doc>Get Book Keeper Login Credential From Credential Data Files</doc>
<status status="PASS" start="2024-11-22T12:13:45.643186" elapsed="0.008472"/>
</kw>
<kw name="Input Text With Scroll And Retry" owner="generic">
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Input Text With Scroll" owner="generic">
<kw name="Scroll Element Into View" owner="SeleniumLibrary">
<arg>${xpath}</arg>
<doc>Scrolls the element identified by ``locator`` into view.</doc>
<status status="PASS" start="2024-11-22T12:13:45.652567" elapsed="0.268813"/>
</kw>
<kw name="Input Text" owner="SeleniumLibrary">
<msg time="2024-11-22T12:13:45.922089" level="INFO">Typing text 'clerk' into text field '//input[@id='username-in']'.</msg>
<arg>${xpath}</arg>
<arg>${value}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<status status="PASS" start="2024-11-22T12:13:45.921727" elapsed="0.147600"/>
</kw>
<arg>${xpath}</arg>
<arg>${value}</arg>
<status status="PASS" start="2024-11-22T12:13:45.652317" elapsed="0.417096"/>
</kw>
<arg>10x</arg>
<arg>50ms</arg>
<arg>Input Text With Scroll</arg>
<arg>${xpath}</arg>
<arg>${value}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-11-22T12:13:45.652096" elapsed="0.417348"/>
</kw>
<arg>${input_username_login}</arg>
<arg>${username}</arg>
<status status="PASS" start="2024-11-22T12:13:45.651797" elapsed="0.417680"/>
</kw>
<kw name="Input Text With Scroll And Retry" owner="generic">
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Input Text With Scroll" owner="generic">
<kw name="Scroll Element Into View" owner="SeleniumLibrary">
<arg>${xpath}</arg>
<doc>Scrolls the element identified by ``locator`` into view.</doc>
<status status="PASS" start="2024-11-22T12:13:46.070051" elapsed="0.259329"/>
</kw>
<kw name="Input Text" owner="SeleniumLibrary">
<msg time="2024-11-22T12:13:46.330131" level="INFO">Typing text 'clerk' into text field '//input[@id='password-in']'.</msg>
<arg>${xpath}</arg>
<arg>${value}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<status status="PASS" start="2024-11-22T12:13:46.329757" elapsed="0.053667"/>
</kw>
<arg>${xpath}</arg>
<arg>${value}</arg>
<status status="PASS" start="2024-11-22T12:13:46.069922" elapsed="0.313587"/>
</kw>
<arg>10x</arg>
<arg>50ms</arg>
<arg>Input Text With Scroll</arg>
<arg>${xpath}</arg>
<arg>${value}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-11-22T12:13:46.069803" elapsed="0.313742"/>
</kw>
<arg>${input_password_login}</arg>
<arg>${password}</arg>
<status status="PASS" start="2024-11-22T12:13:46.069590" elapsed="0.313991"/>
</kw>
<kw name="Click Element With Scroll And Retry" owner="generic">
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Click Element With Scroll" owner="generic">
<kw name="Scroll Element Into View" owner="SeleniumLibrary">
<arg>${xpath}</arg>
<doc>Scrolls the element identified by ``locator`` into view.</doc>
<status status="PASS" start="2024-11-22T12:13:46.384225" elapsed="0.281979"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-11-22T12:13:46.667623" level="INFO">Clicking element '//input[@type='submit']'.</msg>
<arg>${xpath}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-11-22T12:13:46.666929" elapsed="0.230173"/>
</kw>
<arg>${xpath}</arg>
<status status="PASS" start="2024-11-22T12:13:46.384085" elapsed="0.513099"/>
</kw>
<arg>10x</arg>
<arg>50ms</arg>
<arg>Click Element With Scroll</arg>
<arg>${xpath}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-11-22T12:13:46.383939" elapsed="0.513282"/>
</kw>
<arg>${btn_submit_login}</arg>
<status status="PASS" start="2024-11-22T12:13:46.383717" elapsed="0.513541"/>
</kw>
<arg>Clerk</arg>
<doc>Login With Credential</doc>
<status status="PASS" start="2024-11-22T12:13:45.364841" elapsed="1.532446"/>
</kw>
<doc>Login As Clerk</doc>
<status status="PASS" start="2024-11-22T12:13:45.364287" elapsed="1.533030"/>
</kw>
<kw name="Upload CSV Files Via Clerk Dashboard" owner="clerk">
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T12:13:46.900251" level="INFO">
Upload CSV files from clerk dashboard to create heroes</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T12:13:46.900154" elapsed="0.000131"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T12:13:46.900364" elapsed="0.000275"/>
</kw>
<arg>Upload CSV files from clerk dashboard to create heroes</arg>
<status status="PASS" start="2024-11-22T12:13:46.899904" elapsed="0.000772"/>
</kw>
<kw name="Page Should Contain Element With Scroll And Retry" owner="generic">
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Page Should Contain Element With Scroll" owner="generic">
<kw name="Scroll Element Into View" owner="SeleniumLibrary">
<arg>${xpath}</arg>
<doc>Scrolls the element identified by ``locator`` into view.</doc>
<status status="PASS" start="2024-11-22T12:13:46.901150" elapsed="0.281609"/>
</kw>
<kw name="Page Should Contain Element" owner="SeleniumLibrary">
<msg time="2024-11-22T12:13:47.191526" level="INFO">Current page contains element '//h1[normalize-space()='Clerk Dashboard']'.</msg>
<arg>${xpath}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<status status="PASS" start="2024-11-22T12:13:47.183674" elapsed="0.007965"/>
</kw>
<arg>${xpath}</arg>
<status status="PASS" start="2024-11-22T12:13:46.901045" elapsed="0.290715"/>
</kw>
<arg>10x</arg>
<arg>50ms</arg>
<arg>Page Should Contain Element With Scroll</arg>
<arg>${xpath}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-11-22T12:13:46.900946" elapsed="0.290910"/>
</kw>
<arg>${lbl_header_clerk}</arg>
<status status="PASS" start="2024-11-22T12:13:46.900788" elapsed="0.291137"/>
</kw>
<kw name="Click Element With Scroll And Retry" owner="generic">
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Click Element With Scroll" owner="generic">
<kw name="Scroll Element Into View" owner="SeleniumLibrary">
<arg>${xpath}</arg>
<doc>Scrolls the element identified by ``locator`` into view.</doc>
<status status="PASS" start="2024-11-22T12:13:47.192952" elapsed="0.272048"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-11-22T12:13:47.466314" level="INFO">Clicking element '//button[@id='dropdownMenuButton2']'.</msg>
<arg>${xpath}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-11-22T12:13:47.465629" elapsed="0.055012"/>
</kw>
<arg>${xpath}</arg>
<status status="PASS" start="2024-11-22T12:13:47.192721" elapsed="0.328190"/>
</kw>
<arg>10x</arg>
<arg>50ms</arg>
<arg>Click Element With Scroll</arg>
<arg>${xpath}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-11-22T12:13:47.192496" elapsed="0.329039"/>
</kw>
<arg>${btn_add_hero_clerk}</arg>
<status status="PASS" start="2024-11-22T12:13:47.192136" elapsed="0.329526"/>
</kw>
<kw name="Click Element With Scroll And Retry" owner="generic">
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Click Element With Scroll" owner="generic">
<kw name="Scroll Element Into View" owner="SeleniumLibrary">
<arg>${xpath}</arg>
<doc>Scrolls the element identified by ``locator`` into view.</doc>
<status status="PASS" start="2024-11-22T12:13:47.523487" elapsed="0.276065"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-11-22T12:13:47.801003" level="INFO">Clicking element '//a[@class='dropdown-item' and text()='Upload a csv file']'.</msg>
<arg>${xpath}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-11-22T12:13:47.800309" elapsed="0.087802"/>
</kw>
<arg>${xpath}</arg>
<status status="PASS" start="2024-11-22T12:13:47.523066" elapsed="0.365121"/>
</kw>
<arg>10x</arg>
<arg>50ms</arg>
<arg>Click Element With Scroll</arg>
<arg>${xpath}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-11-22T12:13:47.522768" elapsed="0.365451"/>
</kw>
<arg>${dropdown_option_upload_csv_clerk}</arg>
<status status="PASS" start="2024-11-22T12:13:47.522081" elapsed="0.366170"/>
</kw>
<kw name="Page Should Contain Element With Scroll And Retry" owner="generic">
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Page Should Contain Element With Scroll" owner="generic">
<kw name="Scroll Element Into View" owner="SeleniumLibrary">
<arg>${xpath}</arg>
<doc>Scrolls the element identified by ``locator`` into view.</doc>
<status status="PASS" start="2024-11-22T12:13:47.888826" elapsed="0.274184"/>
</kw>
<kw name="Page Should Contain Element" owner="SeleniumLibrary">
<msg time="2024-11-22T12:13:48.166695" level="INFO">Current page contains element '//input[@id='upload-csv-file']'.</msg>
<arg>${xpath}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<status status="PASS" start="2024-11-22T12:13:48.163183" elapsed="0.003567"/>
</kw>
<arg>${xpath}</arg>
<status status="PASS" start="2024-11-22T12:13:47.888688" elapsed="0.278124"/>
</kw>
<arg>10x</arg>
<arg>50ms</arg>
<arg>Page Should Contain Element With Scroll</arg>
<arg>${xpath}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-11-22T12:13:47.888566" elapsed="0.278277"/>
</kw>
<arg>${input_upload_csv_file_clerk}</arg>
<status status="PASS" start="2024-11-22T12:13:47.888362" elapsed="0.278517"/>
</kw>
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T12:13:48.167266" level="INFO">
Uploading CSV Files From Path "/Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/test-data/US2-data-negative.csv"</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T12:13:48.167194" elapsed="0.000094"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T12:13:48.167353" elapsed="0.000076"/>
</kw>
<arg>Uploading CSV Files From Path "${test_data_path}"</arg>
<status status="PASS" start="2024-11-22T12:13:48.167013" elapsed="0.000445"/>
</kw>
<kw name="Choose File" owner="SeleniumLibrary">
<msg time="2024-11-22T12:13:48.167653" level="INFO">Sending /Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/test-data/US2-data-negative.csv to browser.</msg>
<arg>${input_upload_csv_file_clerk}</arg>
<arg>${test_data_path}</arg>
<doc>Inputs the ``file_path`` into the file input field ``locator``.</doc>
<status status="PASS" start="2024-11-22T12:13:48.167535" elapsed="0.022436"/>
</kw>
<kw name="Click Element With Scroll And Retry" owner="generic">
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Click Element With Scroll" owner="generic">
<kw name="Scroll Element Into View" owner="SeleniumLibrary">
<arg>${xpath}</arg>
<doc>Scrolls the element identified by ``locator`` into view.</doc>
<status status="PASS" start="2024-11-22T12:13:48.191168" elapsed="0.270091"/>
</kw>
<kw name="Click Element" owner="SeleniumLibrary">
<msg time="2024-11-22T12:13:48.461970" level="INFO">Clicking element '//button[normalize-space()='Create']'.</msg>
<arg>${xpath}</arg>
<doc>Click the element identified by ``locator``.</doc>
<status status="PASS" start="2024-11-22T12:13:48.461616" elapsed="0.047497"/>
</kw>
<arg>${xpath}</arg>
<status status="PASS" start="2024-11-22T12:13:48.190955" elapsed="0.318256"/>
</kw>
<arg>10x</arg>
<arg>50ms</arg>
<arg>Click Element With Scroll</arg>
<arg>${xpath}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-11-22T12:13:48.190561" elapsed="0.318684"/>
</kw>
<arg>${btn_create_clerk}</arg>
<status status="PASS" start="2024-11-22T12:13:48.190209" elapsed="0.319074"/>
</kw>
<if>
<branch type="IF" condition="'${flow}' == 'Positive'">
<kw name="Page Should Contain Element With Scroll And Retry" owner="generic">
<arg>${lbl_created_success_clerk}</arg>
<status status="NOT RUN" start="2024-11-22T12:13:48.509618" elapsed="0.000021"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:48.509363" elapsed="0.000295"/>
</branch>
<branch type="ELSE">
<kw name="Page Should Contain Element With Scroll And Retry" owner="generic">
<kw name="Wait Until Keyword Succeeds" owner="BuiltIn">
<kw name="Page Should Contain Element With Scroll" owner="generic">
<kw name="Scroll Element Into View" owner="SeleniumLibrary">
<msg time="2024-11-22T12:13:48.682153" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="screenshots/selenium-screenshot-10.png"&gt;&lt;img src="screenshots/selenium-screenshot-10.png" width="800px"&gt;&lt;/a&gt;</msg>
<msg time="2024-11-22T12:13:48.682264" level="FAIL">Element with locator '//div[@class='bg-warning pt-2']' not found.</msg>
<arg>${xpath}</arg>
<doc>Scrolls the element identified by ``locator`` into view.</doc>
<status status="FAIL" start="2024-11-22T12:13:48.510263" elapsed="0.172468">Element with locator '//div[@class='bg-warning pt-2']' not found.</status>
</kw>
<kw name="Page Should Contain Element" owner="SeleniumLibrary">
<arg>${xpath}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:48.682860" elapsed="0.000016"/>
</kw>
<arg>${xpath}</arg>
<status status="FAIL" start="2024-11-22T12:13:48.510115" elapsed="0.172820">Element with locator '//div[@class='bg-warning pt-2']' not found.</status>
</kw>
<kw name="Page Should Contain Element With Scroll" owner="generic">
<kw name="Scroll Element Into View" owner="SeleniumLibrary">
<arg>${xpath}</arg>
<doc>Scrolls the element identified by ``locator`` into view.</doc>
<status status="PASS" start="2024-11-22T12:13:48.734721" elapsed="0.266804"/>
</kw>
<kw name="Page Should Contain Element" owner="SeleniumLibrary">
<msg time="2024-11-22T12:13:49.016101" level="INFO">Current page contains element '//div[@class='bg-warning pt-2']'.</msg>
<arg>${xpath}</arg>
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<status status="PASS" start="2024-11-22T12:13:49.002129" elapsed="0.014084"/>
</kw>
<arg>${xpath}</arg>
<status status="PASS" start="2024-11-22T12:13:48.734503" elapsed="0.281821"/>
</kw>
<arg>10x</arg>
<arg>50ms</arg>
<arg>Page Should Contain Element With Scroll</arg>
<arg>${xpath}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="PASS" start="2024-11-22T12:13:48.509975" elapsed="0.506409"/>
</kw>
<arg>${lbl_created_unsuccess_warning_clerk}</arg>
<status status="PASS" start="2024-11-22T12:13:48.509747" elapsed="0.506708"/>
</kw>
<status status="PASS" start="2024-11-22T12:13:48.509680" elapsed="0.506969"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:48.509344" elapsed="0.507365"/>
</if>
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T12:13:49.017443" level="INFO">
Uploaded Successfully</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T12:13:49.017278" elapsed="0.000213"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T12:13:49.017627" elapsed="0.000159"/>
</kw>
<arg>Uploaded Successfully</arg>
<status status="PASS" start="2024-11-22T12:13:49.016922" elapsed="0.000918"/>
</kw>
<arg>${negative_test_data_path}</arg>
<arg>Negative</arg>
<doc>Upload CSV files from clerk dashboard to create heroes</doc>
<status status="PASS" start="2024-11-22T12:13:46.899241" elapsed="2.118643"/>
</kw>
<kw name="Common Test Teardown" owner="generic" type="TEARDOWN">
<kw name="Capture Page Screenshot" owner="SeleniumLibrary">
<msg time="2024-11-22T12:13:49.144542" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="screenshots/Clerk%20Dashboard%20Create%20Heroes%20Upload%20CSV%20File%20-%20Negative%20-%20Partial%20Data%20Wrong%20Format.png"&gt;&lt;img src="screenshots/Clerk%20Dashboard%20Create%20Heroes%20Upload%20CSV%20File%20-%20Negative%20-%20Partial%20Data%20Wrong%20Format.png" width="800px"&gt;&lt;/a&gt;</msg>
<arg>${OUTPUT_DIR}/screenshots/${TEST NAME}.png</arg>
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<status status="PASS" start="2024-11-22T12:13:49.018441" elapsed="0.126157"/>
</kw>
<kw name="Close Browser" owner="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" start="2024-11-22T12:13:49.144713" elapsed="0.070052"/>
</kw>
<status status="PASS" start="2024-11-22T12:13:49.018195" elapsed="0.196635"/>
</kw>
<status status="PASS" start="2024-11-22T12:13:42.925925" elapsed="6.288965"/>
</test>
<test id="s1-t3" name="Partial Data Wrong Format - Positive" line="28">
<kw name="Verify Partial Uploaded Data In DB" owner="clerk">
<kw name="Read Csv File To List" owner="CSVLibrary">
<msg time="2024-11-22T12:13:49.215696" level="INFO">${csv_list} = [['natid-150', 'William Chu', 'MALE', '1996-01-01T23:59:59', '', '1000.12', '10.00', ''], ['natid-151', 'Christopher', 'MALE', '1996-01-01T23:59:59', '', '1000.00', '10.00', ''], ['natid-152', 'Hanks1...</msg>
<var>${csv_list}</var>
<arg>${test_data_path}</arg>
<doc>Read CSV file and return its content as a Python list of tuples.</doc>
<status status="PASS" start="2024-11-22T12:13:49.215512" elapsed="0.000197"/>
</kw>
<if>
<branch type="IF" condition="'${flow}' == 'Positive'">
<for flavor="IN">
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2024-11-22T12:13:49.216632" level="INFO">${dict} = {'value_natid': 'natid-150'}</msg>
<var>${dict}</var>
<arg>value_natid=${item[0]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2024-11-22T12:13:49.216229" elapsed="0.000415"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<kw name="Connect To Database" owner="DatabaseLibrary">
<msg time="2024-11-22T12:13:49.217010" level="INFO">Looking for configuration file: 'resources/db.cfg'</msg>
<msg time="2024-11-22T12:13:49.217029" level="INFO">Configuration file doesn't exist</msg>
<msg time="2024-11-22T12:13:49.217111" level="INFO">Connect to DB using : mysql.connector.connect(database='testdb', user='user', password=***, host='localhost', port=3306)</msg>
<arg>${DB_API}</arg>
<arg>${DB_NAME}</arg>
<arg>${DB_USER}</arg>
<arg>${DB_PASSWORD}</arg>
<arg>${DB_HOST}</arg>
<arg>${DB_PORT}</arg>
<doc>Creates a database connection using the DB API 2.0 ``db_module`` and the parameters provided.
Along with listed commonly used arguments (`db_name`, `db_host` etc.)
you can set any other DB module specific parameters as key/value pairs.</doc>
<status status="PASS" start="2024-11-22T12:13:49.216858" elapsed="0.021071"/>
</kw>
<kw name="Update SQL Queries With Arguments Dictionary" owner="sql-helper">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-11-22T12:13:49.238623" level="INFO" html="true">Getting file '&lt;a href="file:///Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/object-repo/sql-queries/select_hero_by_natid.sql"&gt;/Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/object-repo/sql-queries/select_hero_by_natid.sql&lt;/a&gt;'.</msg>
<msg time="2024-11-22T12:13:49.238695" level="INFO">${sql_query} = SELECT *
FROM testdb.working_class_heroes
WHERE natid='value_natid';</msg>
<var>${sql_query}</var>
<arg>./object-repo/sql-queries/${sql_file_name}.sql</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-11-22T12:13:49.238517" elapsed="0.000189"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2024-11-22T12:13:49.239111" level="INFO">Argument types are:
&lt;class 'robot.utils.dotdict.DotDict'&gt;
&lt;class 'str'&gt;</msg>
<msg time="2024-11-22T12:13:49.239162" level="FAIL">{'value_natid': 'natid-150'} != </msg>
<arg>${args_dict}</arg>
<arg>${EMPTY}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="FAIL" start="2024-11-22T12:13:49.238853" elapsed="0.000340">{'value_natid': 'natid-150'} != </status>
</kw>
<msg time="2024-11-22T12:13:49.239233" level="INFO">${empty_status} = False</msg>
<var>${empty_status}</var>
<arg>Should Be Equal As Strings</arg>
<arg>${args_dict}</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-11-22T12:13:49.238773" elapsed="0.000469"/>
</kw>
<if>
<branch type="IF" condition="'${empty_status}' == '${False}'">
<if>
<branch type="IF" condition="${args_dict}">
<for flavor="IN">
<iter>
<kw name="Convert To String" owner="BuiltIn">
<msg time="2024-11-22T12:13:49.239551" level="INFO">${args_key_str} = value_natid</msg>
<var>${args_key_str}</var>
<arg>${args_key}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="PASS" start="2024-11-22T12:13:49.239487" elapsed="0.000073"/>
</kw>
<kw name="Convert To String" owner="BuiltIn">
<msg time="2024-11-22T12:13:49.239673" level="INFO">${args_value_str} = natid-150</msg>
<var>${args_value_str}</var>
<arg>${args_dict}[${args_key_str}]</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="PASS" start="2024-11-22T12:13:49.239607" elapsed="0.000075"/>
</kw>
<kw name="Replace String" owner="String">
<msg time="2024-11-22T12:13:49.239805" level="INFO">${sql_query} = SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-150';</msg>
<var>${sql_query}</var>
<arg>${sql_query}</arg>
<arg>${args_key_str}</arg>
<arg>${args_value_str}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="PASS" start="2024-11-22T12:13:49.239728" elapsed="0.000086"/>
</kw>
<var name="${args_key}">value_natid</var>
<status status="PASS" start="2024-11-22T12:13:49.239442" elapsed="0.000391"/>
</iter>
<var>${args_key}</var>
<value>@{args_dict}</value>
<status status="PASS" start="2024-11-22T12:13:49.239391" elapsed="0.000462"/>
</for>
<status status="PASS" start="2024-11-22T12:13:49.239356" elapsed="0.000515"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:49.239351" elapsed="0.000533"/>
</if>
<status status="PASS" start="2024-11-22T12:13:49.239277" elapsed="0.000615"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:49.239268" elapsed="0.000634"/>
</if>
<return>
<value>${sql_query}</value>
<status status="PASS" start="2024-11-22T12:13:49.239916" elapsed="0.000021"/>
</return>
<msg time="2024-11-22T12:13:49.239990" level="INFO">${updated_sql_query} = SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-150';</msg>
<var>${updated_sql_query}</var>
<arg>${sql_file_name}</arg>
<arg>${args_dict}</arg>
<status status="PASS" start="2024-11-22T12:13:49.238305" elapsed="0.018008"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-11-22T12:13:49.256589" level="FAIL">'SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-150';' does not contain 'delete'</msg>
<arg>${updated_sql_query}</arg>
<arg>DELETE</arg>
<arg>ignore_case=${True}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-11-22T12:13:49.256467" elapsed="0.000151">'SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-150';' does not contain 'delete'</status>
</kw>
<msg time="2024-11-22T12:13:49.256663" level="INFO">${delete_status} = False</msg>
<var>${delete_status}</var>
<arg>Should Contain</arg>
<arg>${updated_sql_query}</arg>
<arg>DELETE</arg>
<arg>ignore_case=${True}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-11-22T12:13:49.256391" elapsed="0.000281"/>
</kw>
<if>
<branch type="IF" condition="'${delete_status}' == '${True}'">
<kw name="Execute Sql String" owner="DatabaseLibrary">
<var>${json_response}</var>
<arg>${updated_sql_query}</arg>
<doc>Executes the ``sql_string`` as a single SQL command.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.256801" elapsed="0.000011"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:49.256707" elapsed="0.000122"/>
</branch>
<branch type="ELSE">
<kw name="Query" owner="DatabaseLibrary">
<msg time="2024-11-22T12:13:49.258389" level="INFO" html="true">Executing sql:&lt;br&gt;&lt;code style="font-weight: bold;"&gt;SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-150';&lt;/code&gt;</msg>
<msg time="2024-11-22T12:13:49.260603" level="INFO" html="true">&lt;div style="max-width: 100%; overflow-x: auto;"&gt;&lt;table style="width: auto; border-collapse: collapse; border: 2px solid rgb(140 140 140)"&gt;&lt;caption style="text-align: left; font-weight: bold; padding: 5px;"&gt;Query returned 1 rows&lt;/caption&gt;&lt;tr&gt;&lt;th scope="col" style="background-color: #d6ecd4; border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;Row&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;id&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;created_at&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;create_by&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;updated_at&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;updated_by&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;birth_date&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;brownie_points&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;death_date&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;gender&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;name&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;natid&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;salary&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;tax_paid&lt;/th&gt;&lt;/tr&gt;&lt;tr style="background-color: #eee;"&gt;&lt;th scope="row" style="background-color: #d6ecd4;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;0&lt;/th&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;3051a78e-e33e-4d13-817e-c1a9aa016eef&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;2024-11-22 12:13:48.634384&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;SYSTEM&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;2024-11-22 12:13:48.634384&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;SYSTEM&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;1996-01-01 23:59:59&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;None&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;None&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;MALE&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;William Chu&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;natid-150&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;1000.12&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;10.0&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;</msg>
<msg time="2024-11-22T12:13:49.261682" level="INFO">${json_response} = [{'id': '3051a78e-e33e-4d13-817e-c1a9aa016eef', 'created_at': datetime.datetime(2024, 11, 22, 12, 13, 48, 634384), 'create_by': 'SYSTEM', 'updated_at': datetime.datetime(2024, 11, 22, 12, 13, 48, 6343...</msg>
<var>${json_response}</var>
<arg>${updated_sql_query}</arg>
<arg>return_dict=${True}</arg>
<doc>Runs a query with the ``select_statement`` and returns the result as list of rows.
The type of row values depends on the database module -
usually they are tuples or tuple-like objects.</doc>
<status status="PASS" start="2024-11-22T12:13:49.256889" elapsed="0.004805"/>
</kw>
<status status="PASS" start="2024-11-22T12:13:49.256843" elapsed="0.004873"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:49.256700" elapsed="0.005029"/>
</if>
<kw name="Disconnect From Database" owner="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<status status="PASS" start="2024-11-22T12:13:49.261776" elapsed="0.000085"/>
</kw>
<return>
<value>${json_response}</value>
<status status="PASS" start="2024-11-22T12:13:49.261882" elapsed="0.000015"/>
</return>
<msg time="2024-11-22T12:13:49.261952" level="INFO">${sql_response} = [{'id': '3051a78e-e33e-4d13-817e-c1a9aa016eef', 'created_at': datetime.datetime(2024, 11, 22, 12, 13, 48, 634384), 'create_by': 'SYSTEM', 'updated_at': datetime.datetime(2024, 11, 22, 12, 13, 48, 6343...</msg>
<var>${sql_response}</var>
<arg>select_hero_by_natid</arg>
<arg>${dict}</arg>
<status status="PASS" start="2024-11-22T12:13:49.216732" elapsed="0.045231"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${sql_response} == []</arg>
<arg>Fail</arg>
<arg>${natid} not created in DB</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-11-22T12:13:49.262028" elapsed="0.000141"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-11-22T12:13:49.266696" level="INFO">${sql_response} = {'id': '3051a78e-e33e-4d13-817e-c1a9aa016eef', 'created_at': datetime.datetime(2024, 11, 22, 12, 13, 48, 634384), 'create_by': 'SYSTEM', 'updated_at': datetime.datetime(2024, 11, 22, 12, 13, 48, 63438...</msg>
<var>${sql_response}</var>
<arg>${sql_response}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-11-22T12:13:49.266614" elapsed="0.000094"/>
</kw>
<kw name="Compare String" owner="generic">
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T12:13:49.267543" level="INFO">
Expected natid:
natid-150
Actual natid:
natid-150</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T12:13:49.267493" elapsed="0.000068"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T12:13:49.267612" elapsed="0.000061"/>
</kw>
<arg>Expected ${compare_title}:\n${expected_string}\nActual ${compare_title}:\n${actual_string}</arg>
<status status="PASS" start="2024-11-22T12:13:49.267358" elapsed="0.000341"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${expected_string}</arg>
<arg>${actual_string}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-11-22T12:13:49.267749" elapsed="0.000071"/>
</kw>
<arg>${item[0]}</arg>
<arg>${sql_response['natid']}</arg>
<arg>natid</arg>
<doc>Compare Strings</doc>
<status status="PASS" start="2024-11-22T12:13:49.266773" elapsed="0.001074"/>
</kw>
<kw name="Compare String" owner="generic">
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T12:13:49.269477" level="INFO">
Expected name:
William Chu
Actual name:
William Chu</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T12:13:49.269425" elapsed="0.000071"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T12:13:49.269547" elapsed="0.000057"/>
</kw>
<arg>Expected ${compare_title}:\n${expected_string}\nActual ${compare_title}:\n${actual_string}</arg>
<status status="PASS" start="2024-11-22T12:13:49.268436" elapsed="0.001193"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${expected_string}</arg>
<arg>${actual_string}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-11-22T12:13:49.269680" elapsed="0.000069"/>
</kw>
<arg>${item[1]}</arg>
<arg>${sql_response['name']}</arg>
<arg>name</arg>
<doc>Compare Strings</doc>
<status status="PASS" start="2024-11-22T12:13:49.267905" elapsed="0.001869"/>
</kw>
<kw name="Compare String" owner="generic">
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T12:13:49.270560" level="INFO">
Expected gender:
MALE
Actual gender:
MALE</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T12:13:49.270515" elapsed="0.000063"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T12:13:49.270628" elapsed="0.000057"/>
</kw>
<arg>Expected ${compare_title}:\n${expected_string}\nActual ${compare_title}:\n${actual_string}</arg>
<status status="PASS" start="2024-11-22T12:13:49.270386" elapsed="0.000323"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${expected_string}</arg>
<arg>${actual_string}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-11-22T12:13:49.270758" elapsed="0.000067"/>
</kw>
<arg>${item[2]}</arg>
<arg>${sql_response['gender']}</arg>
<arg>gender</arg>
<doc>Compare Strings</doc>
<status status="PASS" start="2024-11-22T12:13:49.269830" elapsed="0.001021"/>
</kw>
<kw name="Compare Date" owner="generic">
<if>
<branch type="IF" condition="'${expected_date}' == '${EMPTY}'">
<kw name="Log and Log To Console" owner="generic">
<arg>Expected ${compare_title}:\n${None}\nActual ${compare_title}:\n${actual_date}</arg>
<status status="NOT RUN" start="2024-11-22T12:13:49.271701" elapsed="0.000012"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${None}</arg>
<arg>${actual_date}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.271762" elapsed="0.000010"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:49.271444" elapsed="0.000344"/>
</branch>
<branch type="ELSE">
<kw name="Convert Date" owner="DateTime">
<msg time="2024-11-22T12:13:49.271982" level="INFO">${expected_date} = 1996-01-01 23:59:59.000000</msg>
<var>${expected_date}</var>
<arg>${expected_date}</arg>
<arg>result_format=%Y-%m-%d %H:%M:%S.%f</arg>
<doc>Converts between supported `date formats`.</doc>
<status status="PASS" start="2024-11-22T12:13:49.271851" elapsed="0.000141"/>
</kw>
<kw name="Convert Date" owner="DateTime">
<msg time="2024-11-22T12:13:49.272118" level="INFO">${actual_date} = 1996-01-01 23:59:59.000000</msg>
<var>${actual_date}</var>
<arg>${actual_date}</arg>
<arg>result_format=%Y-%m-%d %H:%M:%S.%f</arg>
<doc>Converts between supported `date formats`.</doc>
<status status="PASS" start="2024-11-22T12:13:49.272045" elapsed="0.000083"/>
</kw>
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T12:13:49.272356" level="INFO">
Expected birth_date:
1996-01-01 23:59:59.000000
Actual birth_date:
1996-01-01 23:59:59.000000</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T12:13:49.272311" elapsed="0.000062"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T12:13:49.272422" elapsed="0.000055"/>
</kw>
<arg>Expected ${compare_title}:\n${expected_date}\nActual ${compare_title}:\n${actual_date}</arg>
<status status="PASS" start="2024-11-22T12:13:49.272182" elapsed="0.000318"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${expected_date}</arg>
<arg>${actual_date}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-11-22T12:13:49.272550" elapsed="0.000066"/>
</kw>
<status status="PASS" start="2024-11-22T12:13:49.271803" elapsed="0.000831"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:49.271436" elapsed="0.001211"/>
</if>
<arg>${item[3]}</arg>
<arg>${sql_response['birth_date']}</arg>
<arg>birth_date</arg>
<doc>Format date and compare</doc>
<status status="PASS" start="2024-11-22T12:13:49.270932" elapsed="0.001731"/>
</kw>
<kw name="Compare Date" owner="generic">
<if>
<branch type="IF" condition="'${expected_date}' == '${EMPTY}'">
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T12:13:49.273652" level="INFO">
Expected death_date:
None
Actual death_date:
None</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T12:13:49.273609" elapsed="0.000060"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T12:13:49.273716" elapsed="0.000050"/>
</kw>
<arg>Expected ${compare_title}:\n${None}\nActual ${compare_title}:\n${actual_date}</arg>
<status status="PASS" start="2024-11-22T12:13:49.273485" elapsed="0.000305"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${None}</arg>
<arg>${actual_date}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-11-22T12:13:49.273837" elapsed="0.000064"/>
</kw>
<status status="PASS" start="2024-11-22T12:13:49.273244" elapsed="0.011186"/>
</branch>
<branch type="ELSE">
<kw name="Convert Date" owner="DateTime">
<var>${expected_date}</var>
<arg>${expected_date}</arg>
<arg>result_format=%Y-%m-%d %H:%M:%S.%f</arg>
<doc>Converts between supported `date formats`.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.284506" elapsed="0.000011"/>
</kw>
<kw name="Convert Date" owner="DateTime">
<var>${actual_date}</var>
<arg>${actual_date}</arg>
<arg>result_format=%Y-%m-%d %H:%M:%S.%f</arg>
<doc>Converts between supported `date formats`.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.284569" elapsed="0.000009"/>
</kw>
<kw name="Log and Log To Console" owner="generic">
<arg>Expected ${compare_title}:\n${expected_date}\nActual ${compare_title}:\n${actual_date}</arg>
<status status="NOT RUN" start="2024-11-22T12:13:49.284636" elapsed="0.000012"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${expected_date}</arg>
<arg>${actual_date}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.284699" elapsed="0.000010"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:49.284451" elapsed="0.000275"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:49.273237" elapsed="0.011502"/>
</if>
<arg>${item[4]}</arg>
<arg>${sql_response['death_date']}</arg>
<arg>death_date</arg>
<doc>Format date and compare</doc>
<status status="PASS" start="2024-11-22T12:13:49.272743" elapsed="0.012016"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<if>
<branch type="IF" condition="'${expected_int}' == '${EMPTY}'">
<kw name="Log and Log To Console" owner="generic">
<arg>Expected ${compare_title}:\n${None}\nActual ${compare_title}:\n${actual_int}</arg>
<status status="NOT RUN" start="2024-11-22T12:13:49.285695" elapsed="0.000013"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${None}</arg>
<arg>${actual_int}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.285762" elapsed="0.000011"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:49.285420" elapsed="0.000370"/>
</branch>
<branch type="ELSE">
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T12:13:49.286047" level="INFO">
Expected salary:
1000.12
Actual salary:
1000.12</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T12:13:49.285996" elapsed="0.000070"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T12:13:49.286119" elapsed="0.000061"/>
</kw>
<arg>Expected ${compare_title}:\n${expected_int}\nActual ${compare_title}:\n${actual_int}</arg>
<status status="PASS" start="2024-11-22T12:13:49.285856" elapsed="0.000349"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-11-22T12:13:49.286340" level="INFO">${expected_int} = 1000.12</msg>
<var>${expected_int}</var>
<arg>'{:.2f}'.format(float(${expected_int}))</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-11-22T12:13:49.286258" elapsed="0.000093"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-11-22T12:13:49.286478" level="INFO">${actual_int} = 1000.12</msg>
<var>${actual_int}</var>
<arg>'{:.2f}'.format(float(${actual_int}))</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-11-22T12:13:49.286407" elapsed="0.000081"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${expected_int}</arg>
<arg>${actual_int}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-11-22T12:13:49.286541" elapsed="0.000072"/>
</kw>
<status status="PASS" start="2024-11-22T12:13:49.285805" elapsed="0.000827"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:49.285413" elapsed="0.001233"/>
</if>
<arg>${item[5]}</arg>
<arg>${sql_response['salary']}</arg>
<arg>salary</arg>
<doc>Normalize the numbers and compare</doc>
<status status="PASS" start="2024-11-22T12:13:49.284844" elapsed="0.001820"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<if>
<branch type="IF" condition="'${expected_int}' == '${EMPTY}'">
<kw name="Log and Log To Console" owner="generic">
<arg>Expected ${compare_title}:\n${None}\nActual ${compare_title}:\n${actual_int}</arg>
<status status="NOT RUN" start="2024-11-22T12:13:49.287643" elapsed="0.000012"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${None}</arg>
<arg>${actual_int}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.287706" elapsed="0.000009"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:49.287379" elapsed="0.000353"/>
</branch>
<branch type="ELSE">
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T12:13:49.287973" level="INFO">
Expected tax_paid:
10.00
Actual tax_paid:
10.0</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T12:13:49.287926" elapsed="0.000064"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T12:13:49.288041" elapsed="0.000057"/>
</kw>
<arg>Expected ${compare_title}:\n${expected_int}\nActual ${compare_title}:\n${actual_int}</arg>
<status status="PASS" start="2024-11-22T12:13:49.287794" elapsed="0.000329"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-11-22T12:13:49.288245" level="INFO">${expected_int} = 10.00</msg>
<var>${expected_int}</var>
<arg>'{:.2f}'.format(float(${expected_int}))</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-11-22T12:13:49.288171" elapsed="0.000085"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-11-22T12:13:49.288373" level="INFO">${actual_int} = 10.00</msg>
<var>${actual_int}</var>
<arg>'{:.2f}'.format(float(${actual_int}))</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-11-22T12:13:49.288307" elapsed="0.000075"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${expected_int}</arg>
<arg>${actual_int}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-11-22T12:13:49.288434" elapsed="0.000066"/>
</kw>
<status status="PASS" start="2024-11-22T12:13:49.287746" elapsed="0.000772"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:49.287372" elapsed="0.001159"/>
</if>
<arg>${item[6]}</arg>
<arg>${sql_response['tax_paid']}</arg>
<arg>tax_paid</arg>
<doc>Normalize the numbers and compare</doc>
<status status="PASS" start="2024-11-22T12:13:49.286750" elapsed="0.001797"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<if>
<branch type="IF" condition="'${expected_int}' == '${EMPTY}'">
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T12:13:49.289564" level="INFO">
Expected brownie_points:
None
Actual brownie_points:
None</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T12:13:49.289518" elapsed="0.000064"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T12:13:49.289632" elapsed="0.000058"/>
</kw>
<arg>Expected ${compare_title}:\n${None}\nActual ${compare_title}:\n${actual_int}</arg>
<status status="PASS" start="2024-11-22T12:13:49.289385" elapsed="0.000329"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${None}</arg>
<arg>${actual_int}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-11-22T12:13:49.289769" elapsed="0.000071"/>
</kw>
<status status="PASS" start="2024-11-22T12:13:49.289131" elapsed="0.000728"/>
</branch>
<branch type="ELSE">
<kw name="Log and Log To Console" owner="generic">
<arg>Expected ${compare_title}:\n${expected_int}\nActual ${compare_title}:\n${actual_int}</arg>
<status status="NOT RUN" start="2024-11-22T12:13:49.291348" elapsed="0.000011"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<var>${expected_int}</var>
<arg>'{:.2f}'.format(float(${expected_int}))</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.291409" elapsed="0.000010"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<var>${actual_int}</var>
<arg>'{:.2f}'.format(float(${actual_int}))</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.291466" elapsed="0.000008"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${expected_int}</arg>
<arg>${actual_int}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.291521" elapsed="0.000009"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:49.291291" elapsed="0.000255"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:49.289125" elapsed="0.002433"/>
</if>
<arg>${item[7]}</arg>
<arg>${sql_response['brownie_points']}</arg>
<arg>brownie_points</arg>
<doc>Normalize the numbers and compare</doc>
<status status="PASS" start="2024-11-22T12:13:49.288627" elapsed="0.002950"/>
</kw>
<status status="PASS" start="2024-11-22T12:13:49.215905" elapsed="0.075692"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:49.215899" elapsed="0.075712"/>
</if>
<var name="${item}">['natid-150', 'William Chu', 'MALE', '1996-01-01T23:59:59', '', '1000.12', '10.00', '']</var>
<status status="PASS" start="2024-11-22T12:13:49.215881" elapsed="0.075739"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Create Dictionary" owner="BuiltIn">
<var>${dict}</var>
<arg>value_natid=${item[0]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.292023" elapsed="0.000012"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<var>${sql_response}</var>
<arg>select_hero_by_natid</arg>
<arg>${dict}</arg>
<status status="NOT RUN" start="2024-11-22T12:13:49.292118" elapsed="0.000013"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${sql_response} == []</arg>
<arg>Fail</arg>
<arg>${natid} not created in DB</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.292186" elapsed="0.000010"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<var>${sql_response}</var>
<arg>${sql_response}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.292247" elapsed="0.000011"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[0]}</arg>
<arg>${sql_response['natid']}</arg>
<arg>natid</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.292309" elapsed="0.000010"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[1]}</arg>
<arg>${sql_response['name']}</arg>
<arg>name</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.292369" elapsed="0.000011"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[2]}</arg>
<arg>${sql_response['gender']}</arg>
<arg>gender</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.292430" elapsed="0.000010"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[3]}</arg>
<arg>${sql_response['birth_date']}</arg>
<arg>birth_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.292511" elapsed="0.000011"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[4]}</arg>
<arg>${sql_response['death_date']}</arg>
<arg>death_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.292593" elapsed="0.000011"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[5]}</arg>
<arg>${sql_response['salary']}</arg>
<arg>salary</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.292676" elapsed="0.000010"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[6]}</arg>
<arg>${sql_response['tax_paid']}</arg>
<arg>tax_paid</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.292752" elapsed="0.000011"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[7]}</arg>
<arg>${sql_response['brownie_points']}</arg>
<arg>brownie_points</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.292829" elapsed="0.000010"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:49.291721" elapsed="0.001135"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:49.291715" elapsed="0.001155"/>
</if>
<var name="${item}">['natid-151', 'Christopher', 'MALE', '1996-01-01T23:59:59', '', '1000.00', '10.00', '']</var>
<status status="PASS" start="2024-11-22T12:13:49.291698" elapsed="0.001181"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Create Dictionary" owner="BuiltIn">
<var>${dict}</var>
<arg>value_natid=${item[0]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.293254" elapsed="0.000012"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<var>${sql_response}</var>
<arg>select_hero_by_natid</arg>
<arg>${dict}</arg>
<status status="NOT RUN" start="2024-11-22T12:13:49.293345" elapsed="0.000011"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${sql_response} == []</arg>
<arg>Fail</arg>
<arg>${natid} not created in DB</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.293410" elapsed="0.000010"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<var>${sql_response}</var>
<arg>${sql_response}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.293468" elapsed="0.000011"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[0]}</arg>
<arg>${sql_response['natid']}</arg>
<arg>natid</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.293528" elapsed="0.000011"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[1]}</arg>
<arg>${sql_response['name']}</arg>
<arg>name</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.293587" elapsed="0.000011"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[2]}</arg>
<arg>${sql_response['gender']}</arg>
<arg>gender</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.293645" elapsed="0.000095"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[3]}</arg>
<arg>${sql_response['birth_date']}</arg>
<arg>birth_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.293813" elapsed="0.000010"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[4]}</arg>
<arg>${sql_response['death_date']}</arg>
<arg>death_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.293892" elapsed="0.000011"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[5]}</arg>
<arg>${sql_response['salary']}</arg>
<arg>salary</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.293970" elapsed="0.000011"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[6]}</arg>
<arg>${sql_response['tax_paid']}</arg>
<arg>tax_paid</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.294049" elapsed="0.000010"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[7]}</arg>
<arg>${sql_response['brownie_points']}</arg>
<arg>brownie_points</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.294126" elapsed="0.014095"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:49.292962" elapsed="0.015281"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:49.292956" elapsed="0.015303"/>
</if>
<var name="${item}">['natid-152', 'Hanks123@!', 'MALE', '1996-01-01T23:59:59', '', '10320.00', '10.00', '']</var>
<status status="PASS" start="2024-11-22T12:13:49.292942" elapsed="0.015327"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Create Dictionary" owner="BuiltIn">
<var>${dict}</var>
<arg>value_natid=${item[0]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.308686" elapsed="0.000012"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<var>${sql_response}</var>
<arg>select_hero_by_natid</arg>
<arg>${dict}</arg>
<status status="NOT RUN" start="2024-11-22T12:13:49.308781" elapsed="0.000012"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${sql_response} == []</arg>
<arg>Fail</arg>
<arg>${natid} not created in DB</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.308850" elapsed="0.000011"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<var>${sql_response}</var>
<arg>${sql_response}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.308916" elapsed="0.000010"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[0]}</arg>
<arg>${sql_response['natid']}</arg>
<arg>natid</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.308980" elapsed="0.000012"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[1]}</arg>
<arg>${sql_response['name']}</arg>
<arg>name</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.309047" elapsed="0.000011"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[2]}</arg>
<arg>${sql_response['gender']}</arg>
<arg>gender</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.309110" elapsed="0.000011"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[3]}</arg>
<arg>${sql_response['birth_date']}</arg>
<arg>birth_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.309197" elapsed="0.000011"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[4]}</arg>
<arg>${sql_response['death_date']}</arg>
<arg>death_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.309298" elapsed="0.000011"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[5]}</arg>
<arg>${sql_response['salary']}</arg>
<arg>salary</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.309384" elapsed="0.000011"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[6]}</arg>
<arg>${sql_response['tax_paid']}</arg>
<arg>tax_paid</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.309469" elapsed="0.000012"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[7]}</arg>
<arg>${sql_response['brownie_points']}</arg>
<arg>brownie_points</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.309553" elapsed="0.000012"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:49.308362" elapsed="0.001221"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:49.308356" elapsed="0.001243"/>
</if>
<var name="${item}">['natid-153', 'Angelina Jolie', '', '1996-01-01T23:59:59', '', '1000.50', '10.28', '']</var>
<status status="PASS" start="2024-11-22T12:13:49.308341" elapsed="0.001267"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Create Dictionary" owner="BuiltIn">
<var>${dict}</var>
<arg>value_natid=${item[0]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.310011" elapsed="0.000013"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<var>${sql_response}</var>
<arg>select_hero_by_natid</arg>
<arg>${dict}</arg>
<status status="NOT RUN" start="2024-11-22T12:13:49.310107" elapsed="0.000013"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${sql_response} == []</arg>
<arg>Fail</arg>
<arg>${natid} not created in DB</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.310180" elapsed="0.000010"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<var>${sql_response}</var>
<arg>${sql_response}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.310244" elapsed="0.000011"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[0]}</arg>
<arg>${sql_response['natid']}</arg>
<arg>natid</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.310307" elapsed="0.000011"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[1]}</arg>
<arg>${sql_response['name']}</arg>
<arg>name</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.310372" elapsed="0.000011"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[2]}</arg>
<arg>${sql_response['gender']}</arg>
<arg>gender</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.310432" elapsed="0.000010"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[3]}</arg>
<arg>${sql_response['birth_date']}</arg>
<arg>birth_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.310510" elapsed="0.000011"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[4]}</arg>
<arg>${sql_response['death_date']}</arg>
<arg>death_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.310589" elapsed="0.000010"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[5]}</arg>
<arg>${sql_response['salary']}</arg>
<arg>salary</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.310668" elapsed="0.000011"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[6]}</arg>
<arg>${sql_response['tax_paid']}</arg>
<arg>tax_paid</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.310755" elapsed="0.000011"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[7]}</arg>
<arg>${sql_response['brownie_points']}</arg>
<arg>brownie_points</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.310916" elapsed="0.000011"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:49.309696" elapsed="0.001249"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:49.309691" elapsed="0.001269"/>
</if>
<var name="${item}">['natid-154', 'Lawrence Chu', 'MALE', '4000-01-01T23:59:59', '', '1000.12', '10.00', '']</var>
<status status="PASS" start="2024-11-22T12:13:49.309675" elapsed="0.001295"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Create Dictionary" owner="BuiltIn">
<var>${dict}</var>
<arg>value_natid=${item[0]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.311353" elapsed="0.000012"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<var>${sql_response}</var>
<arg>select_hero_by_natid</arg>
<arg>${dict}</arg>
<status status="NOT RUN" start="2024-11-22T12:13:49.311444" elapsed="0.000012"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${sql_response} == []</arg>
<arg>Fail</arg>
<arg>${natid} not created in DB</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.311512" elapsed="0.000009"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<var>${sql_response}</var>
<arg>${sql_response}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.311620" elapsed="0.000011"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[0]}</arg>
<arg>${sql_response['natid']}</arg>
<arg>natid</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.311683" elapsed="0.000011"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[1]}</arg>
<arg>${sql_response['name']}</arg>
<arg>name</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.311744" elapsed="0.000011"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[2]}</arg>
<arg>${sql_response['gender']}</arg>
<arg>gender</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.311805" elapsed="0.000009"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[3]}</arg>
<arg>${sql_response['birth_date']}</arg>
<arg>birth_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.311883" elapsed="0.000011"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[4]}</arg>
<arg>${sql_response['death_date']}</arg>
<arg>death_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.311964" elapsed="0.000010"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[5]}</arg>
<arg>${sql_response['salary']}</arg>
<arg>salary</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.312044" elapsed="0.000012"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[6]}</arg>
<arg>${sql_response['tax_paid']}</arg>
<arg>tax_paid</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.312124" elapsed="0.000010"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[7]}</arg>
<arg>${sql_response['brownie_points']}</arg>
<arg>brownie_points</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.312204" elapsed="0.000011"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:49.311054" elapsed="0.001179"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:49.311048" elapsed="0.001200"/>
</if>
<var name="${item}">['natid-155', 'Karen', 'MALE', '1996-01-01T23:59:59', '', '-1000.00', '10.00', '']</var>
<status status="PASS" start="2024-11-22T12:13:49.311033" elapsed="0.001224"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Create Dictionary" owner="BuiltIn">
<var>${dict}</var>
<arg>value_natid=${item[0]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.312640" elapsed="0.000012"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<var>${sql_response}</var>
<arg>select_hero_by_natid</arg>
<arg>${dict}</arg>
<status status="NOT RUN" start="2024-11-22T12:13:49.312732" elapsed="0.000012"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${sql_response} == []</arg>
<arg>Fail</arg>
<arg>${natid} not created in DB</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.312797" elapsed="0.000010"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<var>${sql_response}</var>
<arg>${sql_response}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.312865" elapsed="0.000010"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[0]}</arg>
<arg>${sql_response['natid']}</arg>
<arg>natid</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.312927" elapsed="0.000010"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[1]}</arg>
<arg>${sql_response['name']}</arg>
<arg>name</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.312988" elapsed="0.000010"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[2]}</arg>
<arg>${sql_response['gender']}</arg>
<arg>gender</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.313049" elapsed="0.000010"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[3]}</arg>
<arg>${sql_response['birth_date']}</arg>
<arg>birth_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.313129" elapsed="0.000011"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[4]}</arg>
<arg>${sql_response['death_date']}</arg>
<arg>death_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.313210" elapsed="0.000010"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[5]}</arg>
<arg>${sql_response['salary']}</arg>
<arg>salary</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.313289" elapsed="0.000012"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[6]}</arg>
<arg>${sql_response['tax_paid']}</arg>
<arg>tax_paid</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.313370" elapsed="0.000011"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[7]}</arg>
<arg>${sql_response['brownie_points']}</arg>
<arg>brownie_points</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.313452" elapsed="0.000011"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:49.312341" elapsed="0.001139"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:49.312336" elapsed="0.001158"/>
</if>
<var name="${item}">['natid-156', 'Cherry Chan', 'MALE', '1996-01-01T23:59:59', '', '10320.00', '-10.00', '']</var>
<status status="PASS" start="2024-11-22T12:13:49.312322" elapsed="0.001182"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Create Dictionary" owner="BuiltIn">
<var>${dict}</var>
<arg>value_natid=${item[0]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.313883" elapsed="0.000012"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<var>${sql_response}</var>
<arg>select_hero_by_natid</arg>
<arg>${dict}</arg>
<status status="NOT RUN" start="2024-11-22T12:13:49.313974" elapsed="0.000012"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${sql_response} == []</arg>
<arg>Fail</arg>
<arg>${natid} not created in DB</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.314040" elapsed="0.000009"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<var>${sql_response}</var>
<arg>${sql_response}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.314099" elapsed="0.000010"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[0]}</arg>
<arg>${sql_response['natid']}</arg>
<arg>natid</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.314160" elapsed="0.000010"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[1]}</arg>
<arg>${sql_response['name']}</arg>
<arg>name</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.314219" elapsed="0.000012"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[2]}</arg>
<arg>${sql_response['gender']}</arg>
<arg>gender</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.314280" elapsed="0.000010"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[3]}</arg>
<arg>${sql_response['birth_date']}</arg>
<arg>birth_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.314439" elapsed="0.000011"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[4]}</arg>
<arg>${sql_response['death_date']}</arg>
<arg>death_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.314573" elapsed="0.000013"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[5]}</arg>
<arg>${sql_response['salary']}</arg>
<arg>salary</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.314655" elapsed="0.000012"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[6]}</arg>
<arg>${sql_response['tax_paid']}</arg>
<arg>tax_paid</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.314737" elapsed="0.000011"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[7]}</arg>
<arg>${sql_response['brownie_points']}</arg>
<arg>brownie_points</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.314817" elapsed="0.000011"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:49.313589" elapsed="0.001258"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:49.313583" elapsed="0.001279"/>
</if>
<var name="${item}">['natid-157', 'Apple Xu', 'FEMALE', '1996-01-01T23:59:59', '', '1000.50', '10.28', '']</var>
<status status="PASS" start="2024-11-22T12:13:49.313569" elapsed="0.001302"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Create Dictionary" owner="BuiltIn">
<var>${dict}</var>
<arg>value_natid=${item[0]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.315273" elapsed="0.000012"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<var>${sql_response}</var>
<arg>select_hero_by_natid</arg>
<arg>${dict}</arg>
<status status="NOT RUN" start="2024-11-22T12:13:49.315387" elapsed="0.000012"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${sql_response} == []</arg>
<arg>Fail</arg>
<arg>${natid} not created in DB</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.315455" elapsed="0.000010"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<var>${sql_response}</var>
<arg>${sql_response}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.315516" elapsed="0.000011"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[0]}</arg>
<arg>${sql_response['natid']}</arg>
<arg>natid</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.315577" elapsed="0.000010"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[1]}</arg>
<arg>${sql_response['name']}</arg>
<arg>name</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.315636" elapsed="0.000012"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[2]}</arg>
<arg>${sql_response['gender']}</arg>
<arg>gender</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.315699" elapsed="0.000010"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[3]}</arg>
<arg>${sql_response['birth_date']}</arg>
<arg>birth_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.315779" elapsed="0.000012"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[4]}</arg>
<arg>${sql_response['death_date']}</arg>
<arg>death_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.315860" elapsed="0.000010"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[5]}</arg>
<arg>${sql_response['salary']}</arg>
<arg>salary</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.315941" elapsed="0.000011"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[6]}</arg>
<arg>${sql_response['tax_paid']}</arg>
<arg>tax_paid</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.316019" elapsed="0.000012"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[7]}</arg>
<arg>${sql_response['brownie_points']}</arg>
<arg>brownie_points</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.316099" elapsed="0.000011"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:49.314957" elapsed="0.001171"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:49.314952" elapsed="0.001190"/>
</if>
<var name="${item}">['natid-158', 'Orange Xu', 'F', '1996-01-01T23:59:59', '', '1000.50', '10.28', '']</var>
<status status="PASS" start="2024-11-22T12:13:49.314937" elapsed="0.001215"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Create Dictionary" owner="BuiltIn">
<var>${dict}</var>
<arg>value_natid=${item[0]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.316518" elapsed="0.000011"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<var>${sql_response}</var>
<arg>select_hero_by_natid</arg>
<arg>${dict}</arg>
<status status="NOT RUN" start="2024-11-22T12:13:49.316608" elapsed="0.000011"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${sql_response} == []</arg>
<arg>Fail</arg>
<arg>${natid} not created in DB</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.316672" elapsed="0.000009"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<var>${sql_response}</var>
<arg>${sql_response}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.316732" elapsed="0.000009"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[0]}</arg>
<arg>${sql_response['natid']}</arg>
<arg>natid</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.316790" elapsed="0.000010"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[1]}</arg>
<arg>${sql_response['name']}</arg>
<arg>name</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.316850" elapsed="0.000011"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[2]}</arg>
<arg>${sql_response['gender']}</arg>
<arg>gender</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.316908" elapsed="0.000010"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[3]}</arg>
<arg>${sql_response['birth_date']}</arg>
<arg>birth_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.316989" elapsed="0.000011"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[4]}</arg>
<arg>${sql_response['death_date']}</arg>
<arg>death_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.317068" elapsed="0.000010"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[5]}</arg>
<arg>${sql_response['salary']}</arg>
<arg>salary</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.317147" elapsed="0.000010"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[6]}</arg>
<arg>${sql_response['tax_paid']}</arg>
<arg>tax_paid</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.317227" elapsed="0.000011"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[7]}</arg>
<arg>${sql_response['brownie_points']}</arg>
<arg>brownie_points</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.317304" elapsed="0.000011"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:49.316236" elapsed="0.001096"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:49.316230" elapsed="0.001116"/>
</if>
<var name="${item}">['natid-159', 'Durian Xu', 'FEMALE', '1996-01-01T23:59:59', '', '1000.50', '10.28', '']</var>
<status status="PASS" start="2024-11-22T12:13:49.316216" elapsed="0.001186"/>
</iter>
<var>${item}</var>
<value>@{csv_list}</value>
<status status="PASS" start="2024-11-22T12:13:49.215807" elapsed="0.101612"/>
</for>
<status status="PASS" start="2024-11-22T12:13:49.215746" elapsed="0.101694"/>
</branch>
<branch type="ELSE">
<for flavor="IN">
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Set Variable" owner="BuiltIn">
<var>${negative_col_name}</var>
<arg>${item[2]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.317568" elapsed="0.000010"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:49.317521" elapsed="0.000074"/>
</branch>
<status status="NOT RUN" start="2024-11-22T12:13:49.317516" elapsed="0.000092"/>
</if>
<var name="${item}"/>
<status status="NOT RUN" start="2024-11-22T12:13:49.317502" elapsed="0.000115"/>
</iter>
<var>${item}</var>
<value>@{csv_list}</value>
<status status="NOT RUN" start="2024-11-22T12:13:49.317471" elapsed="0.000159"/>
</for>
<kw name="Create Dictionary" owner="BuiltIn">
<var>${dict}</var>
<arg>value_natid=${natid}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.317683" elapsed="0.000010"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<var>${sql_response}</var>
<arg>select_hero_by_natid</arg>
<arg>${dict}</arg>
<status status="NOT RUN" start="2024-11-22T12:13:49.317842" elapsed="0.000011"/>
</kw>
<kw name="Log and Log To Console" owner="generic">
<arg>${sql_response}</arg>
<status status="NOT RUN" start="2024-11-22T12:13:49.317905" elapsed="0.000011"/>
</kw>
<if>
<branch type="IF" condition="${sql_response} != []">
<kw name="Set Variable" owner="BuiltIn">
<var>${sql_response}</var>
<arg>${sql_response}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.317987" elapsed="0.000009"/>
</kw>
<kw name="Log and Log To Console" owner="generic">
<arg>${sql_response}</arg>
<status status="NOT RUN" start="2024-11-22T12:13:49.318047" elapsed="0.000010"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<var>${failure_msg}</var>
<arg>${sql_response['${negative_col_name}']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.318102" elapsed="0.000009"/>
</kw>
<kw name="Log and Log To Console" owner="generic">
<arg>${sql_response}</arg>
<status status="NOT RUN" start="2024-11-22T12:13:49.318164" elapsed="0.000010"/>
</kw>
<kw name="Fail" owner="BuiltIn">
<arg>Record created with invalid column named "${negative_col_name}": ${sql_response['${negative_col_name}']}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.318221" elapsed="0.000009"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:49.317940" elapsed="0.000305"/>
</branch>
<status status="NOT RUN" start="2024-11-22T12:13:49.317934" elapsed="0.000324"/>
</if>
<status status="NOT RUN" start="2024-11-22T12:13:49.317452" elapsed="0.000815"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:49.215736" elapsed="0.102542"/>
</if>
<arg>${negative_test_data_path}</arg>
<arg>Positive</arg>
<arg>natid-150</arg>
<doc>Verify partial uploaded heroes in DB</doc>
<status status="PASS" start="2024-11-22T12:13:49.215345" elapsed="0.102952"/>
</kw>
<kw name="Verify Partial Uploaded Data In DB" owner="clerk">
<kw name="Read Csv File To List" owner="CSVLibrary">
<msg time="2024-11-22T12:13:49.318730" level="INFO">${csv_list} = [['natid-150', 'William Chu', 'MALE', '1996-01-01T23:59:59', '', '1000.12', '10.00', ''], ['natid-151', 'Christopher', 'MALE', '1996-01-01T23:59:59', '', '1000.00', '10.00', ''], ['natid-152', 'Hanks1...</msg>
<var>${csv_list}</var>
<arg>${test_data_path}</arg>
<doc>Read CSV file and return its content as a Python list of tuples.</doc>
<status status="PASS" start="2024-11-22T12:13:49.318582" elapsed="0.000161"/>
</kw>
<if>
<branch type="IF" condition="'${flow}' == 'Positive'">
<for flavor="IN">
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Create Dictionary" owner="BuiltIn">
<var>${dict}</var>
<arg>value_natid=${item[0]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.319218" elapsed="0.000011"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<var>${sql_response}</var>
<arg>select_hero_by_natid</arg>
<arg>${dict}</arg>
<status status="NOT RUN" start="2024-11-22T12:13:49.319306" elapsed="0.000012"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${sql_response} == []</arg>
<arg>Fail</arg>
<arg>${natid} not created in DB</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.319372" elapsed="0.000009"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<var>${sql_response}</var>
<arg>${sql_response}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.319430" elapsed="0.000009"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[0]}</arg>
<arg>${sql_response['natid']}</arg>
<arg>natid</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.319488" elapsed="0.000011"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[1]}</arg>
<arg>${sql_response['name']}</arg>
<arg>name</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.319551" elapsed="0.000011"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[2]}</arg>
<arg>${sql_response['gender']}</arg>
<arg>gender</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.319611" elapsed="0.000010"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[3]}</arg>
<arg>${sql_response['birth_date']}</arg>
<arg>birth_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.319689" elapsed="0.000011"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[4]}</arg>
<arg>${sql_response['death_date']}</arg>
<arg>death_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.319766" elapsed="0.000011"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[5]}</arg>
<arg>${sql_response['salary']}</arg>
<arg>salary</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.319844" elapsed="0.000018"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[6]}</arg>
<arg>${sql_response['tax_paid']}</arg>
<arg>tax_paid</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.319928" elapsed="0.000011"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[7]}</arg>
<arg>${sql_response['brownie_points']}</arg>
<arg>brownie_points</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.320006" elapsed="0.000010"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:49.318907" elapsed="0.001126"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:49.318901" elapsed="0.001146"/>
</if>
<var name="${item}">['natid-150', 'William Chu', 'MALE', '1996-01-01T23:59:59', '', '1000.12', '10.00', '']</var>
<status status="PASS" start="2024-11-22T12:13:49.318887" elapsed="0.001169"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2024-11-22T12:13:49.320717" level="INFO">${dict} = {'value_natid': 'natid-151'}</msg>
<var>${dict}</var>
<arg>value_natid=${item[0]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2024-11-22T12:13:49.320427" elapsed="0.000301"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<kw name="Connect To Database" owner="DatabaseLibrary">
<msg time="2024-11-22T12:13:49.321091" level="INFO">Looking for configuration file: 'resources/db.cfg'</msg>
<msg time="2024-11-22T12:13:49.321111" level="INFO">Configuration file doesn't exist</msg>
<msg time="2024-11-22T12:13:49.321191" level="INFO">Connect to DB using : mysql.connector.connect(database='testdb', user='user', password=***, host='localhost', port=3306)</msg>
<arg>${DB_API}</arg>
<arg>${DB_NAME}</arg>
<arg>${DB_USER}</arg>
<arg>${DB_PASSWORD}</arg>
<arg>${DB_HOST}</arg>
<arg>${DB_PORT}</arg>
<doc>Creates a database connection using the DB API 2.0 ``db_module`` and the parameters provided.
Along with listed commonly used arguments (`db_name`, `db_host` etc.)
you can set any other DB module specific parameters as key/value pairs.</doc>
<status status="PASS" start="2024-11-22T12:13:49.320972" elapsed="0.016387"/>
</kw>
<kw name="Update SQL Queries With Arguments Dictionary" owner="sql-helper">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-11-22T12:13:49.337785" level="INFO" html="true">Getting file '&lt;a href="file:///Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/object-repo/sql-queries/select_hero_by_natid.sql"&gt;/Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/object-repo/sql-queries/select_hero_by_natid.sql&lt;/a&gt;'.</msg>
<msg time="2024-11-22T12:13:49.337847" level="INFO">${sql_query} = SELECT *
FROM testdb.working_class_heroes
WHERE natid='value_natid';</msg>
<var>${sql_query}</var>
<arg>./object-repo/sql-queries/${sql_file_name}.sql</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-11-22T12:13:49.337696" elapsed="0.000163"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2024-11-22T12:13:49.338253" level="INFO">Argument types are:
&lt;class 'robot.utils.dotdict.DotDict'&gt;
&lt;class 'str'&gt;</msg>
<msg time="2024-11-22T12:13:49.338299" level="FAIL">{'value_natid': 'natid-151'} != </msg>
<arg>${args_dict}</arg>
<arg>${EMPTY}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="FAIL" start="2024-11-22T12:13:49.337989" elapsed="0.000340">{'value_natid': 'natid-151'} != </status>
</kw>
<msg time="2024-11-22T12:13:49.338371" level="INFO">${empty_status} = False</msg>
<var>${empty_status}</var>
<arg>Should Be Equal As Strings</arg>
<arg>${args_dict}</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-11-22T12:13:49.337920" elapsed="0.000461"/>
</kw>
<if>
<branch type="IF" condition="'${empty_status}' == '${False}'">
<if>
<branch type="IF" condition="${args_dict}">
<for flavor="IN">
<iter>
<kw name="Convert To String" owner="BuiltIn">
<msg time="2024-11-22T12:13:49.338666" level="INFO">${args_key_str} = value_natid</msg>
<var>${args_key_str}</var>
<arg>${args_key}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="PASS" start="2024-11-22T12:13:49.338600" elapsed="0.000076"/>
</kw>
<kw name="Convert To String" owner="BuiltIn">
<msg time="2024-11-22T12:13:49.338804" level="INFO">${args_value_str} = natid-151</msg>
<var>${args_value_str}</var>
<arg>${args_dict}[${args_key_str}]</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="PASS" start="2024-11-22T12:13:49.338729" elapsed="0.000085"/>
</kw>
<kw name="Replace String" owner="String">
<msg time="2024-11-22T12:13:49.338951" level="INFO">${sql_query} = SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-151';</msg>
<var>${sql_query}</var>
<arg>${sql_query}</arg>
<arg>${args_key_str}</arg>
<arg>${args_value_str}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="PASS" start="2024-11-22T12:13:49.338868" elapsed="0.000094"/>
</kw>
<var name="${args_key}">value_natid</var>
<status status="PASS" start="2024-11-22T12:13:49.338553" elapsed="0.000430"/>
</iter>
<var>${args_key}</var>
<value>@{args_dict}</value>
<status status="PASS" start="2024-11-22T12:13:49.338502" elapsed="0.000500"/>
</for>
<status status="PASS" start="2024-11-22T12:13:49.338472" elapsed="0.000549"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:49.338467" elapsed="0.000567"/>
</if>
<status status="PASS" start="2024-11-22T12:13:49.338415" elapsed="0.000628"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:49.338407" elapsed="0.000647"/>
</if>
<return>
<value>${sql_query}</value>
<status status="PASS" start="2024-11-22T12:13:49.339067" elapsed="0.000016"/>
</return>
<msg time="2024-11-22T12:13:49.339134" level="INFO">${updated_sql_query} = SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-151';</msg>
<var>${updated_sql_query}</var>
<arg>${sql_file_name}</arg>
<arg>${args_dict}</arg>
<status status="PASS" start="2024-11-22T12:13:49.337563" elapsed="0.001582"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-11-22T12:13:49.339371" level="FAIL">'SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-151';' does not contain 'delete'</msg>
<arg>${updated_sql_query}</arg>
<arg>DELETE</arg>
<arg>ignore_case=${True}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-11-22T12:13:49.339272" elapsed="0.000125">'SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-151';' does not contain 'delete'</status>
</kw>
<msg time="2024-11-22T12:13:49.339440" level="INFO">${delete_status} = False</msg>
<var>${delete_status}</var>
<arg>Should Contain</arg>
<arg>${updated_sql_query}</arg>
<arg>DELETE</arg>
<arg>ignore_case=${True}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-11-22T12:13:49.339204" elapsed="0.000245"/>
</kw>
<if>
<branch type="IF" condition="'${delete_status}' == '${True}'">
<kw name="Execute Sql String" owner="DatabaseLibrary">
<var>${json_response}</var>
<arg>${updated_sql_query}</arg>
<doc>Executes the ``sql_string`` as a single SQL command.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.339567" elapsed="0.000010"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:49.339483" elapsed="0.000112"/>
</branch>
<branch type="ELSE">
<kw name="Query" owner="DatabaseLibrary">
<msg time="2024-11-22T12:13:49.340691" level="INFO" html="true">Executing sql:&lt;br&gt;&lt;code style="font-weight: bold;"&gt;SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-151';&lt;/code&gt;</msg>
<msg time="2024-11-22T12:13:49.342009" level="INFO" html="true">&lt;div style="max-width: 100%; overflow-x: auto;"&gt;&lt;table style="width: auto; border-collapse: collapse; border: 2px solid rgb(140 140 140)"&gt;&lt;caption style="text-align: left; font-weight: bold; padding: 5px;"&gt;Query returned 1 rows&lt;/caption&gt;&lt;tr&gt;&lt;th scope="col" style="background-color: #d6ecd4; border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;Row&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;id&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;created_at&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;create_by&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;updated_at&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;updated_by&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;birth_date&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;brownie_points&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;death_date&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;gender&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;name&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;natid&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;salary&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;tax_paid&lt;/th&gt;&lt;/tr&gt;&lt;tr style="background-color: #eee;"&gt;&lt;th scope="row" style="background-color: #d6ecd4;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;0&lt;/th&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;023f2892-59bd-487e-a86b-fa53d27a36fb&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;2024-11-22 12:13:48.650842&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;SYSTEM&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;2024-11-22 12:13:48.650842&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;SYSTEM&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;1996-01-01 23:59:59&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;None&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;None&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;MALE&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;Christopher&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;natid-151&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;1000.0&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;10.0&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;</msg>
<msg time="2024-11-22T12:13:49.343074" level="INFO">${json_response} = [{'id': '023f2892-59bd-487e-a86b-fa53d27a36fb', 'created_at': datetime.datetime(2024, 11, 22, 12, 13, 48, 650842), 'create_by': 'SYSTEM', 'updated_at': datetime.datetime(2024, 11, 22, 12, 13, 48, 6508...</msg>
<var>${json_response}</var>
<arg>${updated_sql_query}</arg>
<arg>return_dict=${True}</arg>
<doc>Runs a query with the ``select_statement`` and returns the result as list of rows.
The type of row values depends on the database module -
usually they are tuples or tuple-like objects.</doc>
<status status="PASS" start="2024-11-22T12:13:49.339654" elapsed="0.003433"/>
</kw>
<status status="PASS" start="2024-11-22T12:13:49.339608" elapsed="0.003503"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:49.339476" elapsed="0.003649"/>
</if>
<kw name="Disconnect From Database" owner="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<status status="PASS" start="2024-11-22T12:13:49.343177" elapsed="0.000082"/>
</kw>
<return>
<value>${json_response}</value>
<status status="PASS" start="2024-11-22T12:13:49.343281" elapsed="0.000015"/>
</return>
<msg time="2024-11-22T12:13:49.343354" level="INFO">${sql_response} = [{'id': '023f2892-59bd-487e-a86b-fa53d27a36fb', 'created_at': datetime.datetime(2024, 11, 22, 12, 13, 48, 650842), 'create_by': 'SYSTEM', 'updated_at': datetime.datetime(2024, 11, 22, 12, 13, 48, 6508...</msg>
<var>${sql_response}</var>
<arg>select_hero_by_natid</arg>
<arg>${dict}</arg>
<status status="PASS" start="2024-11-22T12:13:49.320853" elapsed="0.022514"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${sql_response} == []</arg>
<arg>Fail</arg>
<arg>${natid} not created in DB</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-11-22T12:13:49.343431" elapsed="0.000142"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-11-22T12:13:49.343705" level="INFO">${sql_response} = {'id': '023f2892-59bd-487e-a86b-fa53d27a36fb', 'created_at': datetime.datetime(2024, 11, 22, 12, 13, 48, 650842), 'create_by': 'SYSTEM', 'updated_at': datetime.datetime(2024, 11, 22, 12, 13, 48, 65084...</msg>
<var>${sql_response}</var>
<arg>${sql_response}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-11-22T12:13:49.343635" elapsed="0.000082"/>
</kw>
<kw name="Compare String" owner="generic">
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T12:13:49.344607" level="INFO">
Expected natid:
natid-151
Actual natid:
natid-151</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T12:13:49.344556" elapsed="0.000071"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T12:13:49.344683" elapsed="0.000063"/>
</kw>
<arg>Expected ${compare_title}:\n${expected_string}\nActual ${compare_title}:\n${actual_string}</arg>
<status status="PASS" start="2024-11-22T12:13:49.344410" elapsed="0.000363"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${expected_string}</arg>
<arg>${actual_string}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-11-22T12:13:49.344827" elapsed="0.000077"/>
</kw>
<arg>${item[0]}</arg>
<arg>${sql_response['natid']}</arg>
<arg>natid</arg>
<doc>Compare Strings</doc>
<status status="PASS" start="2024-11-22T12:13:49.343783" elapsed="0.001151"/>
</kw>
<kw name="Compare String" owner="generic">
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T12:13:49.345770" level="INFO">
Expected name:
Christopher
Actual name:
Christopher</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T12:13:49.345721" elapsed="0.000069"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T12:13:49.345892" elapsed="0.000060"/>
</kw>
<arg>Expected ${compare_title}:\n${expected_string}\nActual ${compare_title}:\n${actual_string}</arg>
<status status="PASS" start="2024-11-22T12:13:49.345581" elapsed="0.000397"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${expected_string}</arg>
<arg>${actual_string}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-11-22T12:13:49.346029" elapsed="0.000069"/>
</kw>
<arg>${item[1]}</arg>
<arg>${sql_response['name']}</arg>
<arg>name</arg>
<doc>Compare Strings</doc>
<status status="PASS" start="2024-11-22T12:13:49.344998" elapsed="0.001128"/>
</kw>
<kw name="Compare String" owner="generic">
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T12:13:49.346923" level="INFO">
Expected gender:
MALE
Actual gender:
MALE</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T12:13:49.346877" elapsed="0.000064"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T12:13:49.346992" elapsed="0.000158"/>
</kw>
<arg>Expected ${compare_title}:\n${expected_string}\nActual ${compare_title}:\n${actual_string}</arg>
<status status="PASS" start="2024-11-22T12:13:49.346746" elapsed="0.000431"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${expected_string}</arg>
<arg>${actual_string}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-11-22T12:13:49.347231" elapsed="0.000072"/>
</kw>
<arg>${item[2]}</arg>
<arg>${sql_response['gender']}</arg>
<arg>gender</arg>
<doc>Compare Strings</doc>
<status status="PASS" start="2024-11-22T12:13:49.346184" elapsed="0.001147"/>
</kw>
<kw name="Compare Date" owner="generic">
<if>
<branch type="IF" condition="'${expected_date}' == '${EMPTY}'">
<kw name="Log and Log To Console" owner="generic">
<arg>Expected ${compare_title}:\n${None}\nActual ${compare_title}:\n${actual_date}</arg>
<status status="NOT RUN" start="2024-11-22T12:13:49.348246" elapsed="0.000013"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${None}</arg>
<arg>${actual_date}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.348311" elapsed="0.000011"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:49.347970" elapsed="0.000370"/>
</branch>
<branch type="ELSE">
<kw name="Convert Date" owner="DateTime">
<msg time="2024-11-22T12:13:49.348507" level="INFO">${expected_date} = 1996-01-01 23:59:59.000000</msg>
<var>${expected_date}</var>
<arg>${expected_date}</arg>
<arg>result_format=%Y-%m-%d %H:%M:%S.%f</arg>
<doc>Converts between supported `date formats`.</doc>
<status status="PASS" start="2024-11-22T12:13:49.348402" elapsed="0.000117"/>
</kw>
<kw name="Convert Date" owner="DateTime">
<msg time="2024-11-22T12:13:49.348649" level="INFO">${actual_date} = 1996-01-01 23:59:59.000000</msg>
<var>${actual_date}</var>
<arg>${actual_date}</arg>
<arg>result_format=%Y-%m-%d %H:%M:%S.%f</arg>
<doc>Converts between supported `date formats`.</doc>
<status status="PASS" start="2024-11-22T12:13:49.348576" elapsed="0.000084"/>
</kw>
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T12:13:49.348899" level="INFO">
Expected birth_date:
1996-01-01 23:59:59.000000
Actual birth_date:
1996-01-01 23:59:59.000000</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T12:13:49.348853" elapsed="0.000064"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T12:13:49.348968" elapsed="0.000058"/>
</kw>
<arg>Expected ${compare_title}:\n${expected_date}\nActual ${compare_title}:\n${actual_date}</arg>
<status status="PASS" start="2024-11-22T12:13:49.348718" elapsed="0.000332"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${expected_date}</arg>
<arg>${actual_date}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-11-22T12:13:49.349103" elapsed="0.000070"/>
</kw>
<status status="PASS" start="2024-11-22T12:13:49.348354" elapsed="0.000838"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:49.347962" elapsed="0.001244"/>
</if>
<arg>${item[3]}</arg>
<arg>${sql_response['birth_date']}</arg>
<arg>birth_date</arg>
<doc>Format date and compare</doc>
<status status="PASS" start="2024-11-22T12:13:49.347416" elapsed="0.001809"/>
</kw>
<kw name="Compare Date" owner="generic">
<if>
<branch type="IF" condition="'${expected_date}' == '${EMPTY}'">
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T12:13:49.350298" level="INFO">
Expected death_date:
None
Actual death_date:
None</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T12:13:49.350250" elapsed="0.000066"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T12:13:49.350369" elapsed="0.000057"/>
</kw>
<arg>Expected ${compare_title}:\n${None}\nActual ${compare_title}:\n${actual_date}</arg>
<status status="PASS" start="2024-11-22T12:13:49.350115" elapsed="0.000335"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${None}</arg>
<arg>${actual_date}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-11-22T12:13:49.350500" elapsed="0.000069"/>
</kw>
<status status="PASS" start="2024-11-22T12:13:49.349849" elapsed="0.000739"/>
</branch>
<branch type="ELSE">
<kw name="Convert Date" owner="DateTime">
<var>${expected_date}</var>
<arg>${expected_date}</arg>
<arg>result_format=%Y-%m-%d %H:%M:%S.%f</arg>
<doc>Converts between supported `date formats`.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.350653" elapsed="0.000010"/>
</kw>
<kw name="Convert Date" owner="DateTime">
<var>${actual_date}</var>
<arg>${actual_date}</arg>
<arg>result_format=%Y-%m-%d %H:%M:%S.%f</arg>
<doc>Converts between supported `date formats`.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.350714" elapsed="0.000009"/>
</kw>
<kw name="Log and Log To Console" owner="generic">
<arg>Expected ${compare_title}:\n${expected_date}\nActual ${compare_title}:\n${actual_date}</arg>
<status status="NOT RUN" start="2024-11-22T12:13:49.350776" elapsed="0.000011"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${expected_date}</arg>
<arg>${actual_date}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.350837" elapsed="0.000009"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:49.350603" elapsed="0.000259"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:49.349842" elapsed="0.001033"/>
</if>
<arg>${item[4]}</arg>
<arg>${sql_response['death_date']}</arg>
<arg>death_date</arg>
<doc>Format date and compare</doc>
<status status="PASS" start="2024-11-22T12:13:49.349311" elapsed="0.001583"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<if>
<branch type="IF" condition="'${expected_int}' == '${EMPTY}'">
<kw name="Log and Log To Console" owner="generic">
<arg>Expected ${compare_title}:\n${None}\nActual ${compare_title}:\n${actual_int}</arg>
<status status="NOT RUN" start="2024-11-22T12:13:49.351754" elapsed="0.000012"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${None}</arg>
<arg>${actual_int}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.351817" elapsed="0.000010"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:49.351495" elapsed="0.000395"/>
</branch>
<branch type="ELSE">
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T12:13:49.352143" level="INFO">
Expected salary:
1000.00
Actual salary:
1000.0</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T12:13:49.352096" elapsed="0.000064"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T12:13:49.352211" elapsed="0.000054"/>
</kw>
<arg>Expected ${compare_title}:\n${expected_int}\nActual ${compare_title}:\n${actual_int}</arg>
<status status="PASS" start="2024-11-22T12:13:49.351949" elapsed="0.000340"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-11-22T12:13:49.352415" level="INFO">${expected_int} = 1000.00</msg>
<var>${expected_int}</var>
<arg>'{:.2f}'.format(float(${expected_int}))</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-11-22T12:13:49.352340" elapsed="0.000085"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-11-22T12:13:49.352564" level="INFO">${actual_int} = 1000.00</msg>
<var>${actual_int}</var>
<arg>'{:.2f}'.format(float(${actual_int}))</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-11-22T12:13:49.352495" elapsed="0.000079"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${expected_int}</arg>
<arg>${actual_int}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-11-22T12:13:49.352627" elapsed="0.000069"/>
</kw>
<status status="PASS" start="2024-11-22T12:13:49.351905" elapsed="0.000810"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:49.351488" elapsed="0.001240"/>
</if>
<arg>${item[5]}</arg>
<arg>${sql_response['salary']}</arg>
<arg>salary</arg>
<doc>Normalize the numbers and compare</doc>
<status status="PASS" start="2024-11-22T12:13:49.350976" elapsed="0.001768"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<if>
<branch type="IF" condition="'${expected_int}' == '${EMPTY}'">
<kw name="Log and Log To Console" owner="generic">
<arg>Expected ${compare_title}:\n${None}\nActual ${compare_title}:\n${actual_int}</arg>
<status status="NOT RUN" start="2024-11-22T12:13:49.353585" elapsed="0.000012"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${None}</arg>
<arg>${actual_int}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.353646" elapsed="0.000010"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:49.353333" elapsed="0.000339"/>
</branch>
<branch type="ELSE">
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T12:13:49.353985" level="INFO">
Expected tax_paid:
10.00
Actual tax_paid:
10.0</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T12:13:49.353862" elapsed="0.000141"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T12:13:49.354054" elapsed="0.000059"/>
</kw>
<arg>Expected ${compare_title}:\n${expected_int}\nActual ${compare_title}:\n${actual_int}</arg>
<status status="PASS" start="2024-11-22T12:13:49.353730" elapsed="0.000409"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-11-22T12:13:49.354262" level="INFO">${expected_int} = 10.00</msg>
<var>${expected_int}</var>
<arg>'{:.2f}'.format(float(${expected_int}))</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-11-22T12:13:49.354189" elapsed="0.000083"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-11-22T12:13:49.354394" level="INFO">${actual_int} = 10.00</msg>
<var>${actual_int}</var>
<arg>'{:.2f}'.format(float(${actual_int}))</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-11-22T12:13:49.354324" elapsed="0.000080"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${expected_int}</arg>
<arg>${actual_int}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2024-11-22T12:13:49.354454" elapsed="0.000065"/>
</kw>
<status status="PASS" start="2024-11-22T12:13:49.353685" elapsed="0.000853"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:49.353326" elapsed="0.001225"/>
</if>
<arg>${item[6]}</arg>
<arg>${sql_response['tax_paid']}</arg>
<arg>tax_paid</arg>
<doc>Normalize the numbers and compare</doc>
<status status="PASS" start="2024-11-22T12:13:49.352825" elapsed="0.001743"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<if>
<branch type="IF" condition="'${expected_int}' == '${EMPTY}'">
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T12:13:49.355585" level="INFO">
Expected brownie_points:
None
Actual brownie_points:
None</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T12:13:49.355540" elapsed="0.000062"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T12:13:49.355652" elapsed="0.000053"/>
</kw>
<arg>Expected ${compare_title}:\n${None}\nActual ${compare_title}:\n${actual_int}</arg>
<status status="PASS" start="2024-11-22T12:13:49.355411" elapsed="0.000319"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${None}</arg>
<arg>${actual_int}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-11-22T12:13:49.355779" elapsed="0.000067"/>
</kw>
<status status="PASS" start="2024-11-22T12:13:49.355156" elapsed="0.000708"/>
</branch>
<branch type="ELSE">
<kw name="Log and Log To Console" owner="generic">
<arg>Expected ${compare_title}:\n${expected_int}\nActual ${compare_title}:\n${actual_int}</arg>
<status status="NOT RUN" start="2024-11-22T12:13:49.355928" elapsed="0.000011"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<var>${expected_int}</var>
<arg>'{:.2f}'.format(float(${expected_int}))</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.355988" elapsed="0.000010"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<var>${actual_int}</var>
<arg>'{:.2f}'.format(float(${actual_int}))</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.356045" elapsed="0.000008"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${expected_int}</arg>
<arg>${actual_int}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.356103" elapsed="0.000009"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:49.355878" elapsed="0.000250"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:49.355149" elapsed="0.000991"/>
</if>
<arg>${item[7]}</arg>
<arg>${sql_response['brownie_points']}</arg>
<arg>brownie_points</arg>
<doc>Normalize the numbers and compare</doc>
<status status="PASS" start="2024-11-22T12:13:49.354648" elapsed="0.001510"/>
</kw>
<status status="PASS" start="2024-11-22T12:13:49.320137" elapsed="0.036038"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:49.320131" elapsed="0.036057"/>
</if>
<var name="${item}">['natid-151', 'Christopher', 'MALE', '1996-01-01T23:59:59', '', '1000.00', '10.00', '']</var>
<status status="PASS" start="2024-11-22T12:13:49.320118" elapsed="0.036079"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Create Dictionary" owner="BuiltIn">
<var>${dict}</var>
<arg>value_natid=${item[0]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.356574" elapsed="0.000011"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<var>${sql_response}</var>
<arg>select_hero_by_natid</arg>
<arg>${dict}</arg>
<status status="NOT RUN" start="2024-11-22T12:13:49.356714" elapsed="0.000013"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${sql_response} == []</arg>
<arg>Fail</arg>
<arg>${natid} not created in DB</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.356782" elapsed="0.000010"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<var>${sql_response}</var>
<arg>${sql_response}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.356842" elapsed="0.000011"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[0]}</arg>
<arg>${sql_response['natid']}</arg>
<arg>natid</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.356904" elapsed="0.000010"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[1]}</arg>
<arg>${sql_response['name']}</arg>
<arg>name</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.356963" elapsed="0.000012"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[2]}</arg>
<arg>${sql_response['gender']}</arg>
<arg>gender</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.357024" elapsed="0.000010"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[3]}</arg>
<arg>${sql_response['birth_date']}</arg>
<arg>birth_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.357104" elapsed="0.000011"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[4]}</arg>
<arg>${sql_response['death_date']}</arg>
<arg>death_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.357188" elapsed="0.000011"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[5]}</arg>
<arg>${sql_response['salary']}</arg>
<arg>salary</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.357271" elapsed="0.000010"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[6]}</arg>
<arg>${sql_response['tax_paid']}</arg>
<arg>tax_paid</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.357348" elapsed="0.000011"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[7]}</arg>
<arg>${sql_response['brownie_points']}</arg>
<arg>brownie_points</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.357427" elapsed="0.000009"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:49.356288" elapsed="0.001165"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:49.356282" elapsed="0.001186"/>
</if>
<var name="${item}">['natid-152', 'Hanks123@!', 'MALE', '1996-01-01T23:59:59', '', '10320.00', '10.00', '']</var>
<status status="PASS" start="2024-11-22T12:13:49.356267" elapsed="0.001210"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Create Dictionary" owner="BuiltIn">
<var>${dict}</var>
<arg>value_natid=${item[0]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.357846" elapsed="0.000011"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<var>${sql_response}</var>
<arg>select_hero_by_natid</arg>
<arg>${dict}</arg>
<status status="NOT RUN" start="2024-11-22T12:13:49.357933" elapsed="0.000012"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${sql_response} == []</arg>
<arg>Fail</arg>
<arg>${natid} not created in DB</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.357996" elapsed="0.000010"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<var>${sql_response}</var>
<arg>${sql_response}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.358054" elapsed="0.000009"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[0]}</arg>
<arg>${sql_response['natid']}</arg>
<arg>natid</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.358113" elapsed="0.000010"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[1]}</arg>
<arg>${sql_response['name']}</arg>
<arg>name</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.358171" elapsed="0.000010"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[2]}</arg>
<arg>${sql_response['gender']}</arg>
<arg>gender</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.358228" elapsed="0.000010"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[3]}</arg>
<arg>${sql_response['birth_date']}</arg>
<arg>birth_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.358302" elapsed="0.000011"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[4]}</arg>
<arg>${sql_response['death_date']}</arg>
<arg>death_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.358376" elapsed="0.000010"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[5]}</arg>
<arg>${sql_response['salary']}</arg>
<arg>salary</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.358468" elapsed="0.000011"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[6]}</arg>
<arg>${sql_response['tax_paid']}</arg>
<arg>tax_paid</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.358630" elapsed="0.000011"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[7]}</arg>
<arg>${sql_response['brownie_points']}</arg>
<arg>brownie_points</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.358706" elapsed="0.000011"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:49.357559" elapsed="0.001175"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:49.357554" elapsed="0.001193"/>
</if>
<var name="${item}">['natid-153', 'Angelina Jolie', '', '1996-01-01T23:59:59', '', '1000.50', '10.28', '']</var>
<status status="PASS" start="2024-11-22T12:13:49.357540" elapsed="0.001216"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Create Dictionary" owner="BuiltIn">
<var>${dict}</var>
<arg>value_natid=${item[0]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.359113" elapsed="0.000011"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<var>${sql_response}</var>
<arg>select_hero_by_natid</arg>
<arg>${dict}</arg>
<status status="NOT RUN" start="2024-11-22T12:13:49.359215" elapsed="0.000012"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${sql_response} == []</arg>
<arg>Fail</arg>
<arg>${natid} not created in DB</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.359281" elapsed="0.000010"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<var>${sql_response}</var>
<arg>${sql_response}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.359341" elapsed="0.000010"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[0]}</arg>
<arg>${sql_response['natid']}</arg>
<arg>natid</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.359400" elapsed="0.000010"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[1]}</arg>
<arg>${sql_response['name']}</arg>
<arg>name</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.359457" elapsed="0.000011"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[2]}</arg>
<arg>${sql_response['gender']}</arg>
<arg>gender</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.359559" elapsed="0.000010"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[3]}</arg>
<arg>${sql_response['birth_date']}</arg>
<arg>birth_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.359633" elapsed="0.000010"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[4]}</arg>
<arg>${sql_response['death_date']}</arg>
<arg>death_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.359710" elapsed="0.000009"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[5]}</arg>
<arg>${sql_response['salary']}</arg>
<arg>salary</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.359785" elapsed="0.000012"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[6]}</arg>
<arg>${sql_response['tax_paid']}</arg>
<arg>tax_paid</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.359860" elapsed="0.000010"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[7]}</arg>
<arg>${sql_response['brownie_points']}</arg>
<arg>brownie_points</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.359946" elapsed="0.000009"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:49.358834" elapsed="0.001138"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:49.358828" elapsed="0.001158"/>
</if>
<var name="${item}">['natid-154', 'Lawrence Chu', 'MALE', '4000-01-01T23:59:59', '', '1000.12', '10.00', '']</var>
<status status="PASS" start="2024-11-22T12:13:49.358814" elapsed="0.001181"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Create Dictionary" owner="BuiltIn">
<var>${dict}</var>
<arg>value_natid=${item[0]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.360350" elapsed="0.000011"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<var>${sql_response}</var>
<arg>select_hero_by_natid</arg>
<arg>${dict}</arg>
<status status="NOT RUN" start="2024-11-22T12:13:49.360436" elapsed="0.000012"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${sql_response} == []</arg>
<arg>Fail</arg>
<arg>${natid} not created in DB</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.360500" elapsed="0.000009"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<var>${sql_response}</var>
<arg>${sql_response}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.360557" elapsed="0.000009"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[0]}</arg>
<arg>${sql_response['natid']}</arg>
<arg>natid</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.360614" elapsed="0.000010"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[1]}</arg>
<arg>${sql_response['name']}</arg>
<arg>name</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.360669" elapsed="0.000011"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[2]}</arg>
<arg>${sql_response['gender']}</arg>
<arg>gender</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.360727" elapsed="0.000009"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[3]}</arg>
<arg>${sql_response['birth_date']}</arg>
<arg>birth_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.360801" elapsed="0.000010"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[4]}</arg>
<arg>${sql_response['death_date']}</arg>
<arg>death_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.360876" elapsed="0.000010"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[5]}</arg>
<arg>${sql_response['salary']}</arg>
<arg>salary</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.360951" elapsed="0.000009"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[6]}</arg>
<arg>${sql_response['tax_paid']}</arg>
<arg>tax_paid</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.361025" elapsed="0.000011"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[7]}</arg>
<arg>${sql_response['brownie_points']}</arg>
<arg>brownie_points</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.361107" elapsed="0.000010"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:49.360074" elapsed="0.001060"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:49.360068" elapsed="0.001080"/>
</if>
<var name="${item}">['natid-155', 'Karen', 'MALE', '1996-01-01T23:59:59', '', '-1000.00', '10.00', '']</var>
<status status="PASS" start="2024-11-22T12:13:49.360055" elapsed="0.001102"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Create Dictionary" owner="BuiltIn">
<var>${dict}</var>
<arg>value_natid=${item[0]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.361515" elapsed="0.000010"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<var>${sql_response}</var>
<arg>select_hero_by_natid</arg>
<arg>${dict}</arg>
<status status="NOT RUN" start="2024-11-22T12:13:49.361599" elapsed="0.000012"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${sql_response} == []</arg>
<arg>Fail</arg>
<arg>${natid} not created in DB</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.361663" elapsed="0.000009"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<var>${sql_response}</var>
<arg>${sql_response}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.361719" elapsed="0.000010"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[0]}</arg>
<arg>${sql_response['natid']}</arg>
<arg>natid</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.361775" elapsed="0.000010"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[1]}</arg>
<arg>${sql_response['name']}</arg>
<arg>name</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.361831" elapsed="0.000010"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[2]}</arg>
<arg>${sql_response['gender']}</arg>
<arg>gender</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.361888" elapsed="0.000009"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[3]}</arg>
<arg>${sql_response['birth_date']}</arg>
<arg>birth_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.362035" elapsed="0.000011"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[4]}</arg>
<arg>${sql_response['death_date']}</arg>
<arg>death_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.362113" elapsed="0.000010"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[5]}</arg>
<arg>${sql_response['salary']}</arg>
<arg>salary</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.362190" elapsed="0.000009"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[6]}</arg>
<arg>${sql_response['tax_paid']}</arg>
<arg>tax_paid</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.362265" elapsed="0.000011"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[7]}</arg>
<arg>${sql_response['brownie_points']}</arg>
<arg>brownie_points</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.362388" elapsed="0.000011"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:49.361239" elapsed="0.001177"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:49.361234" elapsed="0.001195"/>
</if>
<var name="${item}">['natid-156', 'Cherry Chan', 'MALE', '1996-01-01T23:59:59', '', '10320.00', '-10.00', '']</var>
<status status="PASS" start="2024-11-22T12:13:49.361220" elapsed="0.001218"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Create Dictionary" owner="BuiltIn">
<var>${dict}</var>
<arg>value_natid=${item[0]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.362792" elapsed="0.000011"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<var>${sql_response}</var>
<arg>select_hero_by_natid</arg>
<arg>${dict}</arg>
<status status="NOT RUN" start="2024-11-22T12:13:49.362877" elapsed="0.000012"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${sql_response} == []</arg>
<arg>Fail</arg>
<arg>${natid} not created in DB</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.362940" elapsed="0.000009"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<var>${sql_response}</var>
<arg>${sql_response}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.362996" elapsed="0.000010"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[0]}</arg>
<arg>${sql_response['natid']}</arg>
<arg>natid</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.363058" elapsed="0.000010"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[1]}</arg>
<arg>${sql_response['name']}</arg>
<arg>name</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.363115" elapsed="0.000010"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[2]}</arg>
<arg>${sql_response['gender']}</arg>
<arg>gender</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.363173" elapsed="0.000010"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[3]}</arg>
<arg>${sql_response['birth_date']}</arg>
<arg>birth_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.363248" elapsed="0.000012"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[4]}</arg>
<arg>${sql_response['death_date']}</arg>
<arg>death_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.363325" elapsed="0.000010"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[5]}</arg>
<arg>${sql_response['salary']}</arg>
<arg>salary</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.363406" elapsed="0.000010"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[6]}</arg>
<arg>${sql_response['tax_paid']}</arg>
<arg>tax_paid</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.363480" elapsed="0.000011"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[7]}</arg>
<arg>${sql_response['brownie_points']}</arg>
<arg>brownie_points</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.363554" elapsed="0.000009"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:49.362516" elapsed="0.001063"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:49.362510" elapsed="0.001083"/>
</if>
<var name="${item}">['natid-157', 'Apple Xu', 'FEMALE', '1996-01-01T23:59:59', '', '1000.50', '10.28', '']</var>
<status status="PASS" start="2024-11-22T12:13:49.362497" elapsed="0.001104"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Create Dictionary" owner="BuiltIn">
<var>${dict}</var>
<arg>value_natid=${item[0]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.363947" elapsed="0.000010"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<var>${sql_response}</var>
<arg>select_hero_by_natid</arg>
<arg>${dict}</arg>
<status status="NOT RUN" start="2024-11-22T12:13:49.364029" elapsed="0.000010"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${sql_response} == []</arg>
<arg>Fail</arg>
<arg>${natid} not created in DB</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.364088" elapsed="0.000009"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<var>${sql_response}</var>
<arg>${sql_response}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.364142" elapsed="0.000009"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[0]}</arg>
<arg>${sql_response['natid']}</arg>
<arg>natid</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.364199" elapsed="0.000009"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[1]}</arg>
<arg>${sql_response['name']}</arg>
<arg>name</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.364253" elapsed="0.000010"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[2]}</arg>
<arg>${sql_response['gender']}</arg>
<arg>gender</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.364309" elapsed="0.000008"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[3]}</arg>
<arg>${sql_response['birth_date']}</arg>
<arg>birth_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.364381" elapsed="0.000010"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[4]}</arg>
<arg>${sql_response['death_date']}</arg>
<arg>death_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.364455" elapsed="0.000009"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[5]}</arg>
<arg>${sql_response['salary']}</arg>
<arg>salary</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.364528" elapsed="0.000010"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[6]}</arg>
<arg>${sql_response['tax_paid']}</arg>
<arg>tax_paid</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.364601" elapsed="0.000009"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[7]}</arg>
<arg>${sql_response['brownie_points']}</arg>
<arg>brownie_points</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.364674" elapsed="0.000011"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:49.363679" elapsed="0.001022"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:49.363674" elapsed="0.001041"/>
</if>
<var name="${item}">['natid-158', 'Orange Xu', 'F', '1996-01-01T23:59:59', '', '1000.50', '10.28', '']</var>
<status status="PASS" start="2024-11-22T12:13:49.363660" elapsed="0.001063"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Create Dictionary" owner="BuiltIn">
<var>${dict}</var>
<arg>value_natid=${item[0]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.365149" elapsed="0.000011"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<var>${sql_response}</var>
<arg>select_hero_by_natid</arg>
<arg>${dict}</arg>
<status status="NOT RUN" start="2024-11-22T12:13:49.365231" elapsed="0.000011"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${sql_response} == []</arg>
<arg>Fail</arg>
<arg>${natid} not created in DB</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.365308" elapsed="0.000046"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<var>${sql_response}</var>
<arg>${sql_response}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.365402" elapsed="0.000010"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[0]}</arg>
<arg>${sql_response['natid']}</arg>
<arg>natid</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.365461" elapsed="0.000009"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[1]}</arg>
<arg>${sql_response['name']}</arg>
<arg>name</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.365515" elapsed="0.000011"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[2]}</arg>
<arg>${sql_response['gender']}</arg>
<arg>gender</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.365571" elapsed="0.000009"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[3]}</arg>
<arg>${sql_response['birth_date']}</arg>
<arg>birth_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.365641" elapsed="0.000010"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[4]}</arg>
<arg>${sql_response['death_date']}</arg>
<arg>death_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.365714" elapsed="0.000010"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[5]}</arg>
<arg>${sql_response['salary']}</arg>
<arg>salary</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.365787" elapsed="0.000010"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[6]}</arg>
<arg>${sql_response['tax_paid']}</arg>
<arg>tax_paid</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.365858" elapsed="0.000010"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[7]}</arg>
<arg>${sql_response['brownie_points']}</arg>
<arg>brownie_points</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.365932" elapsed="0.000010"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:49.364868" elapsed="0.001089"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:49.364863" elapsed="0.001107"/>
</if>
<var name="${item}">['natid-159', 'Durian Xu', 'FEMALE', '1996-01-01T23:59:59', '', '1000.50', '10.28', '']</var>
<status status="PASS" start="2024-11-22T12:13:49.364850" elapsed="0.001129"/>
</iter>
<var>${item}</var>
<value>@{csv_list}</value>
<status status="PASS" start="2024-11-22T12:13:49.318811" elapsed="0.047183"/>
</for>
<status status="PASS" start="2024-11-22T12:13:49.318773" elapsed="0.047239"/>
</branch>
<branch type="ELSE">
<for flavor="IN">
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Set Variable" owner="BuiltIn">
<var>${negative_col_name}</var>
<arg>${item[2]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.366130" elapsed="0.000009"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:49.366086" elapsed="0.000069"/>
</branch>
<status status="NOT RUN" start="2024-11-22T12:13:49.366082" elapsed="0.000085"/>
</if>
<var name="${item}"/>
<status status="NOT RUN" start="2024-11-22T12:13:49.366070" elapsed="0.000105"/>
</iter>
<var>${item}</var>
<value>@{csv_list}</value>
<status status="NOT RUN" start="2024-11-22T12:13:49.366040" elapsed="0.000148"/>
</for>
<kw name="Create Dictionary" owner="BuiltIn">
<var>${dict}</var>
<arg>value_natid=${natid}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.366239" elapsed="0.000008"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<var>${sql_response}</var>
<arg>select_hero_by_natid</arg>
<arg>${dict}</arg>
<status status="NOT RUN" start="2024-11-22T12:13:49.366316" elapsed="0.000011"/>
</kw>
<kw name="Log and Log To Console" owner="generic">
<arg>${sql_response}</arg>
<status status="NOT RUN" start="2024-11-22T12:13:49.366374" elapsed="0.000009"/>
</kw>
<if>
<branch type="IF" condition="${sql_response} != []">
<kw name="Set Variable" owner="BuiltIn">
<var>${sql_response}</var>
<arg>${sql_response}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.366447" elapsed="0.000009"/>
</kw>
<kw name="Log and Log To Console" owner="generic">
<arg>${sql_response}</arg>
<status status="NOT RUN" start="2024-11-22T12:13:49.366503" elapsed="0.000009"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<var>${failure_msg}</var>
<arg>${sql_response['${negative_col_name}']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.366553" elapsed="0.000008"/>
</kw>
<kw name="Log and Log To Console" owner="generic">
<arg>${sql_response}</arg>
<status status="NOT RUN" start="2024-11-22T12:13:49.366604" elapsed="0.000009"/>
</kw>
<kw name="Fail" owner="BuiltIn">
<arg>Record created with invalid column named "${negative_col_name}": ${sql_response['${negative_col_name}']}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.366654" elapsed="0.000008"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:49.366405" elapsed="0.000270"/>
</branch>
<status status="NOT RUN" start="2024-11-22T12:13:49.366400" elapsed="0.000288"/>
</if>
<status status="NOT RUN" start="2024-11-22T12:13:49.366023" elapsed="0.000672"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:49.318767" elapsed="0.047939"/>
</if>
<arg>${negative_test_data_path}</arg>
<arg>Positive</arg>
<arg>natid-151</arg>
<doc>Verify partial uploaded heroes in DB</doc>
<status status="PASS" start="2024-11-22T12:13:49.318454" elapsed="0.048269"/>
</kw>
<kw name="Common Test Teardown" owner="generic" type="TEARDOWN">
<kw name="Capture Page Screenshot" owner="SeleniumLibrary">
<msg time="2024-11-22T12:13:49.366996" level="INFO">Cannot capture screenshot because no browser is open.</msg>
<arg>${OUTPUT_DIR}/screenshots/${TEST NAME}.png</arg>
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<status status="PASS" start="2024-11-22T12:13:49.366923" elapsed="0.000091"/>
</kw>
<kw name="Close Browser" owner="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" start="2024-11-22T12:13:49.367067" elapsed="0.000040"/>
</kw>
<status status="PASS" start="2024-11-22T12:13:49.366823" elapsed="0.000305"/>
</kw>
<status status="PASS" start="2024-11-22T12:13:49.215051" elapsed="0.152102"/>
</test>
<test id="s1-t4" name="Partial Data Wrong Format - Negative - name" line="32">
<kw name="Verify Partial Uploaded Data In DB" owner="clerk">
<kw name="Read Csv File To List" owner="CSVLibrary">
<msg time="2024-11-22T12:13:49.367959" level="INFO">${csv_list} = [['${natid}', '${flow}', '${negative_col_name}'], ['natid-150', 'Positive', ''], ['natid-151', 'Positive', ''], ['natid-152', 'Negative', 'name'], ['natid-153', 'Negative', 'gender'], ['natid-154', 'N...</msg>
<var>${csv_list}</var>
<arg>${test_data_path}</arg>
<doc>Read CSV file and return its content as a Python list of tuples.</doc>
<status status="PASS" start="2024-11-22T12:13:49.367585" elapsed="0.000386"/>
</kw>
<if>
<branch type="IF" condition="'${flow}' == 'Positive'">
<for flavor="IN">
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Create Dictionary" owner="BuiltIn">
<var>${dict}</var>
<arg>value_natid=${item[0]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.368148" elapsed="0.000010"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<var>${sql_response}</var>
<arg>select_hero_by_natid</arg>
<arg>${dict}</arg>
<status status="NOT RUN" start="2024-11-22T12:13:49.368804" elapsed="0.000013"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${sql_response} == []</arg>
<arg>Fail</arg>
<arg>${natid} not created in DB</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.368870" elapsed="0.000010"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<var>${sql_response}</var>
<arg>${sql_response}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.368927" elapsed="0.000009"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[0]}</arg>
<arg>${sql_response['natid']}</arg>
<arg>natid</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.368982" elapsed="0.000009"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[1]}</arg>
<arg>${sql_response['name']}</arg>
<arg>name</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.369040" elapsed="0.000010"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[2]}</arg>
<arg>${sql_response['gender']}</arg>
<arg>gender</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.369096" elapsed="0.000009"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[3]}</arg>
<arg>${sql_response['birth_date']}</arg>
<arg>birth_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.369169" elapsed="0.000011"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[4]}</arg>
<arg>${sql_response['death_date']}</arg>
<arg>death_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.369243" elapsed="0.000010"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[5]}</arg>
<arg>${sql_response['salary']}</arg>
<arg>salary</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.369329" elapsed="0.000011"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[6]}</arg>
<arg>${sql_response['tax_paid']}</arg>
<arg>tax_paid</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.369402" elapsed="0.000011"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[7]}</arg>
<arg>${sql_response['brownie_points']}</arg>
<arg>brownie_points</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.369475" elapsed="0.000009"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:49.368101" elapsed="0.001399"/>
</branch>
<status status="NOT RUN" start="2024-11-22T12:13:49.368097" elapsed="0.001417"/>
</if>
<var name="${item}"/>
<status status="NOT RUN" start="2024-11-22T12:13:49.368084" elapsed="0.001439"/>
</iter>
<var>${item}</var>
<value>@{csv_list}</value>
<status status="NOT RUN" start="2024-11-22T12:13:49.368038" elapsed="0.001498"/>
</for>
<status status="NOT RUN" start="2024-11-22T12:13:49.368001" elapsed="0.001550"/>
</branch>
<branch type="ELSE">
<for flavor="IN">
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Set Variable" owner="BuiltIn">
<var>${negative_col_name}</var>
<arg>${item[2]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.371053" elapsed="0.000012"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:49.369648" elapsed="0.001434"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:49.369643" elapsed="0.001452"/>
</if>
<var name="${item}">['${natid}', '${flow}', '${negative_col_name}']</var>
<status status="PASS" start="2024-11-22T12:13:49.369630" elapsed="0.001474"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Set Variable" owner="BuiltIn">
<var>${negative_col_name}</var>
<arg>${item[2]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.371446" elapsed="0.000010"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:49.371167" elapsed="0.000306"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:49.371162" elapsed="0.000324"/>
</if>
<var name="${item}">['natid-150', 'Positive', '']</var>
<status status="PASS" start="2024-11-22T12:13:49.371149" elapsed="0.000344"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Set Variable" owner="BuiltIn">
<var>${negative_col_name}</var>
<arg>${item[2]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.371808" elapsed="0.000010"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:49.371550" elapsed="0.000285"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:49.371546" elapsed="0.000301"/>
</if>
<var name="${item}">['natid-151', 'Positive', '']</var>
<status status="PASS" start="2024-11-22T12:13:49.371533" elapsed="0.000322"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-11-22T12:13:49.372398" level="INFO">${negative_col_name} = name</msg>
<var>${negative_col_name}</var>
<arg>${item[2]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-11-22T12:13:49.372163" elapsed="0.000246"/>
</kw>
<status status="PASS" start="2024-11-22T12:13:49.371910" elapsed="0.000517"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:49.371906" elapsed="0.000533"/>
</if>
<var name="${item}">['natid-152', 'Negative', 'name']</var>
<status status="PASS" start="2024-11-22T12:13:49.371894" elapsed="0.000553"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Set Variable" owner="BuiltIn">
<var>${negative_col_name}</var>
<arg>${item[2]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.372753" elapsed="0.000010"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:49.372504" elapsed="0.000275"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:49.372500" elapsed="0.000292"/>
</if>
<var name="${item}">['natid-153', 'Negative', 'gender']</var>
<status status="PASS" start="2024-11-22T12:13:49.372487" elapsed="0.000313"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Set Variable" owner="BuiltIn">
<var>${negative_col_name}</var>
<arg>${item[2]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.373102" elapsed="0.000010"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:49.372856" elapsed="0.000272"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:49.372851" elapsed="0.000289"/>
</if>
<var name="${item}">['natid-154', 'Negative', 'birth_date']</var>
<status status="PASS" start="2024-11-22T12:13:49.372839" elapsed="0.000309"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Set Variable" owner="BuiltIn">
<var>${negative_col_name}</var>
<arg>${item[2]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.373451" elapsed="0.000010"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:49.373203" elapsed="0.000274"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:49.373199" elapsed="0.000290"/>
</if>
<var name="${item}">['natid-155', 'Negative', 'salary']</var>
<status status="PASS" start="2024-11-22T12:13:49.373187" elapsed="0.000310"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Set Variable" owner="BuiltIn">
<var>${negative_col_name}</var>
<arg>${item[2]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.373792" elapsed="0.000010"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:49.373551" elapsed="0.000309"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:49.373546" elapsed="0.000326"/>
</if>
<var name="${item}">['natid-156', 'Negative', 'tax_paid']</var>
<status status="PASS" start="2024-11-22T12:13:49.373535" elapsed="0.000345"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Set Variable" owner="BuiltIn">
<var>${negative_col_name}</var>
<arg>${item[2]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.374181" elapsed="0.000010"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:49.373935" elapsed="0.000272"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:49.373930" elapsed="0.000290"/>
</if>
<var name="${item}">['natid-157', 'Positive', '']</var>
<status status="PASS" start="2024-11-22T12:13:49.373919" elapsed="0.000309"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Set Variable" owner="BuiltIn">
<var>${negative_col_name}</var>
<arg>${item[2]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.374527" elapsed="0.000011"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:49.374283" elapsed="0.000271"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:49.374279" elapsed="0.000287"/>
</if>
<var name="${item}">['natid-158', 'Negative', 'gender']</var>
<status status="PASS" start="2024-11-22T12:13:49.374267" elapsed="0.000307"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Set Variable" owner="BuiltIn">
<var>${negative_col_name}</var>
<arg>${item[2]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.374884" elapsed="0.000010"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:49.374630" elapsed="0.000282"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:49.374625" elapsed="0.000299"/>
</if>
<var name="${item}">['natid-159', 'Positive', '']</var>
<status status="PASS" start="2024-11-22T12:13:49.374613" elapsed="0.000319"/>
</iter>
<var>${item}</var>
<value>@{csv_list}</value>
<status status="PASS" start="2024-11-22T12:13:49.369577" elapsed="0.005369"/>
</for>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2024-11-22T12:13:49.375079" level="INFO">${dict} = {'value_natid': 'natid-152'}</msg>
<var>${dict}</var>
<arg>value_natid=${natid}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2024-11-22T12:13:49.374997" elapsed="0.000092"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<kw name="Connect To Database" owner="DatabaseLibrary">
<msg time="2024-11-22T12:13:49.375391" level="INFO">Looking for configuration file: 'resources/db.cfg'</msg>
<msg time="2024-11-22T12:13:49.375412" level="INFO">Configuration file doesn't exist</msg>
<msg time="2024-11-22T12:13:49.375482" level="INFO">Connect to DB using : mysql.connector.connect(database='testdb', user='user', password=***, host='localhost', port=3306)</msg>
<arg>${DB_API}</arg>
<arg>${DB_NAME}</arg>
<arg>${DB_USER}</arg>
<arg>${DB_PASSWORD}</arg>
<arg>${DB_HOST}</arg>
<arg>${DB_PORT}</arg>
<doc>Creates a database connection using the DB API 2.0 ``db_module`` and the parameters provided.
Along with listed commonly used arguments (`db_name`, `db_host` etc.)
you can set any other DB module specific parameters as key/value pairs.</doc>
<status status="PASS" start="2024-11-22T12:13:49.375281" elapsed="0.014917"/>
</kw>
<kw name="Update SQL Queries With Arguments Dictionary" owner="sql-helper">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-11-22T12:13:49.390514" level="INFO" html="true">Getting file '&lt;a href="file:///Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/object-repo/sql-queries/select_hero_by_natid.sql"&gt;/Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/object-repo/sql-queries/select_hero_by_natid.sql&lt;/a&gt;'.</msg>
<msg time="2024-11-22T12:13:49.390572" level="INFO">${sql_query} = SELECT *
FROM testdb.working_class_heroes
WHERE natid='value_natid';</msg>
<var>${sql_query}</var>
<arg>./object-repo/sql-queries/${sql_file_name}.sql</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-11-22T12:13:49.390434" elapsed="0.000147"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2024-11-22T12:13:49.390938" level="INFO">Argument types are:
&lt;class 'robot.utils.dotdict.DotDict'&gt;
&lt;class 'str'&gt;</msg>
<msg time="2024-11-22T12:13:49.390980" level="FAIL">{'value_natid': 'natid-152'} != </msg>
<arg>${args_dict}</arg>
<arg>${EMPTY}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="FAIL" start="2024-11-22T12:13:49.390699" elapsed="0.000308">{'value_natid': 'natid-152'} != </status>
</kw>
<msg time="2024-11-22T12:13:49.391045" level="INFO">${empty_status} = False</msg>
<var>${empty_status}</var>
<arg>Should Be Equal As Strings</arg>
<arg>${args_dict}</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-11-22T12:13:49.390635" elapsed="0.000418"/>
</kw>
<if>
<branch type="IF" condition="'${empty_status}' == '${False}'">
<if>
<branch type="IF" condition="${args_dict}">
<for flavor="IN">
<iter>
<kw name="Convert To String" owner="BuiltIn">
<msg time="2024-11-22T12:13:49.391313" level="INFO">${args_key_str} = value_natid</msg>
<var>${args_key_str}</var>
<arg>${args_key}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="PASS" start="2024-11-22T12:13:49.391252" elapsed="0.000070"/>
</kw>
<kw name="Convert To String" owner="BuiltIn">
<msg time="2024-11-22T12:13:49.391436" level="INFO">${args_value_str} = natid-152</msg>
<var>${args_value_str}</var>
<arg>${args_dict}[${args_key_str}]</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="PASS" start="2024-11-22T12:13:49.391369" elapsed="0.000076"/>
</kw>
<kw name="Replace String" owner="String">
<msg time="2024-11-22T12:13:49.391565" level="INFO">${sql_query} = SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-152';</msg>
<var>${sql_query}</var>
<arg>${sql_query}</arg>
<arg>${args_key_str}</arg>
<arg>${args_value_str}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="PASS" start="2024-11-22T12:13:49.391494" elapsed="0.000081"/>
</kw>
<var name="${args_key}">value_natid</var>
<status status="PASS" start="2024-11-22T12:13:49.391209" elapsed="0.000386"/>
</iter>
<var>${args_key}</var>
<value>@{args_dict}</value>
<status status="PASS" start="2024-11-22T12:13:49.391164" elapsed="0.000447"/>
</for>
<status status="PASS" start="2024-11-22T12:13:49.391138" elapsed="0.000490"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:49.391133" elapsed="0.000507"/>
</if>
<status status="PASS" start="2024-11-22T12:13:49.391085" elapsed="0.000563"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:49.391077" elapsed="0.000581"/>
</if>
<return>
<value>${sql_query}</value>
<status status="PASS" start="2024-11-22T12:13:49.391670" elapsed="0.000014"/>
</return>
<msg time="2024-11-22T12:13:49.391728" level="INFO">${updated_sql_query} = SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-152';</msg>
<var>${updated_sql_query}</var>
<arg>${sql_file_name}</arg>
<arg>${args_dict}</arg>
<status status="PASS" start="2024-11-22T12:13:49.390312" elapsed="0.001426"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-11-22T12:13:49.392042" level="FAIL">'SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-152';' does not contain 'delete'</msg>
<arg>${updated_sql_query}</arg>
<arg>DELETE</arg>
<arg>ignore_case=${True}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-11-22T12:13:49.391851" elapsed="0.000290">'SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-152';' does not contain 'delete'</status>
</kw>
<msg time="2024-11-22T12:13:49.392180" level="INFO">${delete_status} = False</msg>
<var>${delete_status}</var>
<arg>Should Contain</arg>
<arg>${updated_sql_query}</arg>
<arg>DELETE</arg>
<arg>ignore_case=${True}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-11-22T12:13:49.391790" elapsed="0.000399"/>
</kw>
<if>
<branch type="IF" condition="'${delete_status}' == '${True}'">
<kw name="Execute Sql String" owner="DatabaseLibrary">
<var>${json_response}</var>
<arg>${updated_sql_query}</arg>
<doc>Executes the ``sql_string`` as a single SQL command.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.392294" elapsed="0.000010"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:49.392219" elapsed="0.000101"/>
</branch>
<branch type="ELSE">
<kw name="Query" owner="DatabaseLibrary">
<msg time="2024-11-22T12:13:49.393662" level="INFO" html="true">Executing sql:&lt;br&gt;&lt;code style="font-weight: bold;"&gt;SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-152';&lt;/code&gt;</msg>
<msg time="2024-11-22T12:13:49.395452" level="INFO" html="true">&lt;div style="max-width: 100%; overflow-x: auto;"&gt;&lt;table style="width: auto; border-collapse: collapse; border: 2px solid rgb(140 140 140)"&gt;&lt;caption style="text-align: left; font-weight: bold; padding: 5px;"&gt;Query returned 1 rows&lt;/caption&gt;&lt;tr&gt;&lt;th scope="col" style="background-color: #d6ecd4; border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;Row&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;id&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;created_at&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;create_by&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;updated_at&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;updated_by&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;birth_date&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;brownie_points&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;death_date&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;gender&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;name&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;natid&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;salary&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;tax_paid&lt;/th&gt;&lt;/tr&gt;&lt;tr style="background-color: #eee;"&gt;&lt;th scope="row" style="background-color: #d6ecd4;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;0&lt;/th&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;32140a8a-9add-445d-a5bf-6e2a546d9deb&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;2024-11-22 12:13:48.660625&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;SYSTEM&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;2024-11-22 12:13:48.660625&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;SYSTEM&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;1996-01-01 23:59:59&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;None&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;None&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;MALE&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;Hanks123@!&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;natid-152&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;10320.0&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;10.0&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;</msg>
<msg time="2024-11-22T12:13:49.396592" level="INFO">${json_response} = [{'id': '32140a8a-9add-445d-a5bf-6e2a546d9deb', 'created_at': datetime.datetime(2024, 11, 22, 12, 13, 48, 660625), 'create_by': 'SYSTEM', 'updated_at': datetime.datetime(2024, 11, 22, 12, 13, 48, 6606...</msg>
<var>${json_response}</var>
<arg>${updated_sql_query}</arg>
<arg>return_dict=${True}</arg>
<doc>Runs a query with the ``select_statement`` and returns the result as list of rows.
The type of row values depends on the database module -
usually they are tuples or tuple-like objects.</doc>
<status status="PASS" start="2024-11-22T12:13:49.392375" elapsed="0.004228"/>
</kw>
<status status="PASS" start="2024-11-22T12:13:49.392332" elapsed="0.004292"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:49.392213" elapsed="0.004423"/>
</if>
<kw name="Disconnect From Database" owner="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<status status="PASS" start="2024-11-22T12:13:49.396679" elapsed="0.000069"/>
</kw>
<return>
<value>${json_response}</value>
<status status="PASS" start="2024-11-22T12:13:49.396766" elapsed="0.000013"/>
</return>
<msg time="2024-11-22T12:13:49.396829" level="INFO">${sql_response} = [{'id': '32140a8a-9add-445d-a5bf-6e2a546d9deb', 'created_at': datetime.datetime(2024, 11, 22, 12, 13, 48, 660625), 'create_by': 'SYSTEM', 'updated_at': datetime.datetime(2024, 11, 22, 12, 13, 48, 6606...</msg>
<var>${sql_response}</var>
<arg>select_hero_by_natid</arg>
<arg>${dict}</arg>
<status status="PASS" start="2024-11-22T12:13:49.375171" elapsed="0.021668"/>
</kw>
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T12:13:49.397047" level="INFO">
[{'id': '32140a8a-9add-445d-a5bf-6e2a546d9deb', 'created_at': datetime.datetime(2024, 11, 22, 12, 13, 48, 660625), 'create_by': 'SYSTEM', 'updated_at': datetime.datetime(2024, 11, 22, 12, 13, 48, 660625), 'updated_by': 'SYSTEM', 'birth_date': datetime.datetime(1996, 1, 1, 23, 59, 59), 'brownie_points': None, 'death_date': None, 'gender': 'MALE', 'name': 'Hanks123@!', 'natid': 'natid-152', 'salary': 10320.0, 'tax_paid': 10.0}]</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T12:13:49.396995" elapsed="0.000071"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T12:13:49.397115" elapsed="0.000103"/>
</kw>
<arg>${sql_response}</arg>
<status status="PASS" start="2024-11-22T12:13:49.396894" elapsed="0.000349"/>
</kw>
<if>
<branch type="IF" condition="${sql_response} != []">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-11-22T12:13:49.397468" level="INFO">${sql_response} = {'id': '32140a8a-9add-445d-a5bf-6e2a546d9deb', 'created_at': datetime.datetime(2024, 11, 22, 12, 13, 48, 660625), 'create_by': 'SYSTEM', 'updated_at': datetime.datetime(2024, 11, 22, 12, 13, 48, 66062...</msg>
<var>${sql_response}</var>
<arg>${sql_response}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-11-22T12:13:49.397406" elapsed="0.000073"/>
</kw>
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T12:13:49.397676" level="INFO">
{'id': '32140a8a-9add-445d-a5bf-6e2a546d9deb', 'created_at': datetime.datetime(2024, 11, 22, 12, 13, 48, 660625), 'create_by': 'SYSTEM', 'updated_at': datetime.datetime(2024, 11, 22, 12, 13, 48, 660625), 'updated_by': 'SYSTEM', 'birth_date': datetime.datetime(1996, 1, 1, 23, 59, 59), 'brownie_points': None, 'death_date': None, 'gender': 'MALE', 'name': 'Hanks123@!', 'natid': 'natid-152', 'salary': 10320.0, 'tax_paid': 10.0}</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T12:13:49.397630" elapsed="0.000064"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T12:13:49.397741" elapsed="0.000056"/>
</kw>
<arg>${sql_response}</arg>
<status status="PASS" start="2024-11-22T12:13:49.397533" elapsed="0.000287"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-11-22T12:13:49.398136" level="INFO">${failure_msg} = Hanks123@!</msg>
<var>${failure_msg}</var>
<arg>${sql_response['${negative_col_name}']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-11-22T12:13:49.397866" elapsed="0.000281"/>
</kw>
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T12:13:49.398350" level="INFO">
{'id': '32140a8a-9add-445d-a5bf-6e2a546d9deb', 'created_at': datetime.datetime(2024, 11, 22, 12, 13, 48, 660625), 'create_by': 'SYSTEM', 'updated_at': datetime.datetime(2024, 11, 22, 12, 13, 48, 660625), 'updated_by': 'SYSTEM', 'birth_date': datetime.datetime(1996, 1, 1, 23, 59, 59), 'brownie_points': None, 'death_date': None, 'gender': 'MALE', 'name': 'Hanks123@!', 'natid': 'natid-152', 'salary': 10320.0, 'tax_paid': 10.0}</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T12:13:49.398302" elapsed="0.000066"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T12:13:49.398418" elapsed="0.000058"/>
</kw>
<arg>${sql_response}</arg>
<status status="PASS" start="2024-11-22T12:13:49.398203" elapsed="0.000296"/>
</kw>
<kw name="Fail" owner="BuiltIn">
<msg time="2024-11-22T12:13:49.398841" level="FAIL">Record created with invalid column named "name": Hanks123@!</msg>
<arg>Record created with invalid column named "${negative_col_name}": ${sql_response['${negative_col_name}']}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="FAIL" start="2024-11-22T12:13:49.398544" elapsed="0.000321">Record created with invalid column named "name": Hanks123@!</status>
</kw>
<status status="FAIL" start="2024-11-22T12:13:49.397269" elapsed="0.001629">Record created with invalid column named "name": Hanks123@!</status>
</branch>
<status status="FAIL" start="2024-11-22T12:13:49.397263" elapsed="0.001653">Record created with invalid column named "name": Hanks123@!</status>
</if>
<status status="FAIL" start="2024-11-22T12:13:49.369562" elapsed="0.029373">Record created with invalid column named "name": Hanks123@!</status>
</branch>
<status status="FAIL" start="2024-11-22T12:13:49.367995" elapsed="0.030954">Record created with invalid column named "name": Hanks123@!</status>
</if>
<arg>${negative_driver_test_data_path}</arg>
<arg>Negative</arg>
<arg>natid-152</arg>
<doc>Verify partial uploaded heroes in DB</doc>
<status status="FAIL" start="2024-11-22T12:13:49.367468" elapsed="0.031514">Record created with invalid column named "name": Hanks123@!</status>
</kw>
<kw name="Common Test Teardown" owner="generic" type="TEARDOWN">
<kw name="Capture Page Screenshot" owner="SeleniumLibrary">
<msg time="2024-11-22T12:13:49.399249" level="INFO">Cannot capture screenshot because no browser is open.</msg>
<arg>${OUTPUT_DIR}/screenshots/${TEST NAME}.png</arg>
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<status status="PASS" start="2024-11-22T12:13:49.399189" elapsed="0.000077"/>
</kw>
<kw name="Close Browser" owner="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" start="2024-11-22T12:13:49.399315" elapsed="0.000035"/>
</kw>
<status status="PASS" start="2024-11-22T12:13:49.399092" elapsed="0.000279"/>
</kw>
<status status="FAIL" start="2024-11-22T12:13:49.367245" elapsed="0.032152">Record created with invalid column named "name": Hanks123@!</status>
</test>
<test id="s1-t5" name="Partial Data Wrong Format - Negative - gender - Missing" line="35">
<kw name="Verify Partial Uploaded Data In DB" owner="clerk">
<kw name="Read Csv File To List" owner="CSVLibrary">
<msg time="2024-11-22T12:13:49.399913" level="INFO">${csv_list} = [['${natid}', '${flow}', '${negative_col_name}'], ['natid-150', 'Positive', ''], ['natid-151', 'Positive', ''], ['natid-152', 'Negative', 'name'], ['natid-153', 'Negative', 'gender'], ['natid-154', 'N...</msg>
<var>${csv_list}</var>
<arg>${test_data_path}</arg>
<doc>Read CSV file and return its content as a Python list of tuples.</doc>
<status status="PASS" start="2024-11-22T12:13:49.399814" elapsed="0.000109"/>
</kw>
<if>
<branch type="IF" condition="'${flow}' == 'Positive'">
<for flavor="IN">
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Create Dictionary" owner="BuiltIn">
<var>${dict}</var>
<arg>value_natid=${item[0]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.400190" elapsed="0.000010"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<var>${sql_response}</var>
<arg>select_hero_by_natid</arg>
<arg>${dict}</arg>
<status status="NOT RUN" start="2024-11-22T12:13:49.400278" elapsed="0.000011"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${sql_response} == []</arg>
<arg>Fail</arg>
<arg>${natid} not created in DB</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.400342" elapsed="0.000009"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<var>${sql_response}</var>
<arg>${sql_response}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.400400" elapsed="0.000009"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[0]}</arg>
<arg>${sql_response['natid']}</arg>
<arg>natid</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.400458" elapsed="0.000010"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[1]}</arg>
<arg>${sql_response['name']}</arg>
<arg>name</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.400514" elapsed="0.000009"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[2]}</arg>
<arg>${sql_response['gender']}</arg>
<arg>gender</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.400571" elapsed="0.000009"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[3]}</arg>
<arg>${sql_response['birth_date']}</arg>
<arg>birth_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.400645" elapsed="0.000053"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[4]}</arg>
<arg>${sql_response['death_date']}</arg>
<arg>death_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.400764" elapsed="0.000009"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[5]}</arg>
<arg>${sql_response['salary']}</arg>
<arg>salary</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.400837" elapsed="0.000010"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[6]}</arg>
<arg>${sql_response['tax_paid']}</arg>
<arg>tax_paid</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.400911" elapsed="0.000010"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[7]}</arg>
<arg>${sql_response['brownie_points']}</arg>
<arg>brownie_points</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.400987" elapsed="0.000009"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:49.400140" elapsed="0.000872"/>
</branch>
<status status="NOT RUN" start="2024-11-22T12:13:49.400052" elapsed="0.000974"/>
</if>
<var name="${item}"/>
<status status="NOT RUN" start="2024-11-22T12:13:49.400039" elapsed="0.000996"/>
</iter>
<var>${item}</var>
<value>@{csv_list}</value>
<status status="NOT RUN" start="2024-11-22T12:13:49.399990" elapsed="0.001059"/>
</for>
<status status="NOT RUN" start="2024-11-22T12:13:49.399953" elapsed="0.001113"/>
</branch>
<branch type="ELSE">
<for flavor="IN">
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Set Variable" owner="BuiltIn">
<var>${negative_col_name}</var>
<arg>${item[2]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.401469" elapsed="0.000011"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:49.401162" elapsed="0.000335"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:49.401157" elapsed="0.000354"/>
</if>
<var name="${item}">['${natid}', '${flow}', '${negative_col_name}']</var>
<status status="PASS" start="2024-11-22T12:13:49.401144" elapsed="0.000375"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Set Variable" owner="BuiltIn">
<var>${negative_col_name}</var>
<arg>${item[2]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.401843" elapsed="0.000011"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:49.401579" elapsed="0.000292"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:49.401574" elapsed="0.000310"/>
</if>
<var name="${item}">['natid-150', 'Positive', '']</var>
<status status="PASS" start="2024-11-22T12:13:49.401561" elapsed="0.000331"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Set Variable" owner="BuiltIn">
<var>${negative_col_name}</var>
<arg>${item[2]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.402203" elapsed="0.000011"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:49.401949" elapsed="0.000282"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:49.401944" elapsed="0.000300"/>
</if>
<var name="${item}">['natid-151', 'Positive', '']</var>
<status status="PASS" start="2024-11-22T12:13:49.401931" elapsed="0.000321"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Set Variable" owner="BuiltIn">
<var>${negative_col_name}</var>
<arg>${item[2]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.402558" elapsed="0.000011"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:49.402309" elapsed="0.000277"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:49.402304" elapsed="0.000294"/>
</if>
<var name="${item}">['natid-152', 'Negative', 'name']</var>
<status status="PASS" start="2024-11-22T12:13:49.402292" elapsed="0.000314"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-11-22T12:13:49.403143" level="INFO">${negative_col_name} = gender</msg>
<var>${negative_col_name}</var>
<arg>${item[2]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-11-22T12:13:49.402911" elapsed="0.000243"/>
</kw>
<status status="PASS" start="2024-11-22T12:13:49.402662" elapsed="0.000509"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:49.402658" elapsed="0.000526"/>
</if>
<var name="${item}">['natid-153', 'Negative', 'gender']</var>
<status status="PASS" start="2024-11-22T12:13:49.402646" elapsed="0.000546"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Set Variable" owner="BuiltIn">
<var>${negative_col_name}</var>
<arg>${item[2]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.403501" elapsed="0.000010"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:49.403249" elapsed="0.000279"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:49.403244" elapsed="0.000296"/>
</if>
<var name="${item}">['natid-154', 'Negative', 'birth_date']</var>
<status status="PASS" start="2024-11-22T12:13:49.403232" elapsed="0.000316"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Set Variable" owner="BuiltIn">
<var>${negative_col_name}</var>
<arg>${item[2]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.403853" elapsed="0.000010"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:49.403604" elapsed="0.000276"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:49.403599" elapsed="0.000294"/>
</if>
<var name="${item}">['natid-155', 'Negative', 'salary']</var>
<status status="PASS" start="2024-11-22T12:13:49.403587" elapsed="0.000313"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Set Variable" owner="BuiltIn">
<var>${negative_col_name}</var>
<arg>${item[2]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.404202" elapsed="0.000010"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:49.403956" elapsed="0.000272"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:49.403951" elapsed="0.000289"/>
</if>
<var name="${item}">['natid-156', 'Negative', 'tax_paid']</var>
<status status="PASS" start="2024-11-22T12:13:49.403939" elapsed="0.000309"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Set Variable" owner="BuiltIn">
<var>${negative_col_name}</var>
<arg>${item[2]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.404550" elapsed="0.000011"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:49.404304" elapsed="0.000273"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:49.404299" elapsed="0.000291"/>
</if>
<var name="${item}">['natid-157', 'Positive', '']</var>
<status status="PASS" start="2024-11-22T12:13:49.404287" elapsed="0.000311"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Set Variable" owner="BuiltIn">
<var>${negative_col_name}</var>
<arg>${item[2]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.404899" elapsed="0.000010"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:49.404654" elapsed="0.000272"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:49.404649" elapsed="0.000327"/>
</if>
<var name="${item}">['natid-158', 'Negative', 'gender']</var>
<status status="PASS" start="2024-11-22T12:13:49.404637" elapsed="0.000348"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Set Variable" owner="BuiltIn">
<var>${negative_col_name}</var>
<arg>${item[2]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.405302" elapsed="0.000010"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:49.405044" elapsed="0.000286"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:49.405039" elapsed="0.000304"/>
</if>
<var name="${item}">['natid-159', 'Positive', '']</var>
<status status="PASS" start="2024-11-22T12:13:49.405026" elapsed="0.000326"/>
</iter>
<var>${item}</var>
<value>@{csv_list}</value>
<status status="PASS" start="2024-11-22T12:13:49.401092" elapsed="0.004274"/>
</for>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2024-11-22T12:13:49.405496" level="INFO">${dict} = {'value_natid': 'natid-153'}</msg>
<var>${dict}</var>
<arg>value_natid=${natid}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2024-11-22T12:13:49.405418" elapsed="0.000088"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<kw name="Connect To Database" owner="DatabaseLibrary">
<msg time="2024-11-22T12:13:49.405793" level="INFO">Looking for configuration file: 'resources/db.cfg'</msg>
<msg time="2024-11-22T12:13:49.405809" level="INFO">Configuration file doesn't exist</msg>
<msg time="2024-11-22T12:13:49.405880" level="INFO">Connect to DB using : mysql.connector.connect(database='testdb', user='user', password=***, host='localhost', port=3306)</msg>
<arg>${DB_API}</arg>
<arg>${DB_NAME}</arg>
<arg>${DB_USER}</arg>
<arg>${DB_PASSWORD}</arg>
<arg>${DB_HOST}</arg>
<arg>${DB_PORT}</arg>
<doc>Creates a database connection using the DB API 2.0 ``db_module`` and the parameters provided.
Along with listed commonly used arguments (`db_name`, `db_host` etc.)
you can set any other DB module specific parameters as key/value pairs.</doc>
<status status="PASS" start="2024-11-22T12:13:49.405692" elapsed="0.013107"/>
</kw>
<kw name="Update SQL Queries With Arguments Dictionary" owner="sql-helper">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-11-22T12:13:49.419102" level="INFO" html="true">Getting file '&lt;a href="file:///Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/object-repo/sql-queries/select_hero_by_natid.sql"&gt;/Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/object-repo/sql-queries/select_hero_by_natid.sql&lt;/a&gt;'.</msg>
<msg time="2024-11-22T12:13:49.419157" level="INFO">${sql_query} = SELECT *
FROM testdb.working_class_heroes
WHERE natid='value_natid';</msg>
<var>${sql_query}</var>
<arg>./object-repo/sql-queries/${sql_file_name}.sql</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-11-22T12:13:49.419026" elapsed="0.000140"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2024-11-22T12:13:49.419522" level="INFO">Argument types are:
&lt;class 'robot.utils.dotdict.DotDict'&gt;
&lt;class 'str'&gt;</msg>
<msg time="2024-11-22T12:13:49.419560" level="FAIL">{'value_natid': 'natid-153'} != </msg>
<arg>${args_dict}</arg>
<arg>${EMPTY}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="FAIL" start="2024-11-22T12:13:49.419285" elapsed="0.000300">{'value_natid': 'natid-153'} != </status>
</kw>
<msg time="2024-11-22T12:13:49.419623" level="INFO">${empty_status} = False</msg>
<var>${empty_status}</var>
<arg>Should Be Equal As Strings</arg>
<arg>${args_dict}</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-11-22T12:13:49.419221" elapsed="0.000411"/>
</kw>
<if>
<branch type="IF" condition="'${empty_status}' == '${False}'">
<if>
<branch type="IF" condition="${args_dict}">
<for flavor="IN">
<iter>
<kw name="Convert To String" owner="BuiltIn">
<msg time="2024-11-22T12:13:49.419886" level="INFO">${args_key_str} = value_natid</msg>
<var>${args_key_str}</var>
<arg>${args_key}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="PASS" start="2024-11-22T12:13:49.419827" elapsed="0.000068"/>
</kw>
<kw name="Convert To String" owner="BuiltIn">
<msg time="2024-11-22T12:13:49.420006" level="INFO">${args_value_str} = natid-153</msg>
<var>${args_value_str}</var>
<arg>${args_dict}[${args_key_str}]</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="PASS" start="2024-11-22T12:13:49.419942" elapsed="0.000074"/>
</kw>
<kw name="Replace String" owner="String">
<msg time="2024-11-22T12:13:49.420131" level="INFO">${sql_query} = SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-153';</msg>
<var>${sql_query}</var>
<arg>${sql_query}</arg>
<arg>${args_key_str}</arg>
<arg>${args_value_str}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="PASS" start="2024-11-22T12:13:49.420065" elapsed="0.000075"/>
</kw>
<var name="${args_key}">value_natid</var>
<status status="PASS" start="2024-11-22T12:13:49.419785" elapsed="0.000375"/>
</iter>
<var>${args_key}</var>
<value>@{args_dict}</value>
<status status="PASS" start="2024-11-22T12:13:49.419741" elapsed="0.000434"/>
</for>
<status status="PASS" start="2024-11-22T12:13:49.419715" elapsed="0.000477"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:49.419710" elapsed="0.000494"/>
</if>
<status status="PASS" start="2024-11-22T12:13:49.419663" elapsed="0.000549"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:49.419657" elapsed="0.000565"/>
</if>
<return>
<value>${sql_query}</value>
<status status="PASS" start="2024-11-22T12:13:49.420234" elapsed="0.000013"/>
</return>
<msg time="2024-11-22T12:13:49.420290" level="INFO">${updated_sql_query} = SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-153';</msg>
<var>${updated_sql_query}</var>
<arg>${sql_file_name}</arg>
<arg>${args_dict}</arg>
<status status="PASS" start="2024-11-22T12:13:49.418907" elapsed="0.001392"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-11-22T12:13:49.420497" level="FAIL">'SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-153';' does not contain 'delete'</msg>
<arg>${updated_sql_query}</arg>
<arg>DELETE</arg>
<arg>ignore_case=${True}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-11-22T12:13:49.420411" elapsed="0.000108">'SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-153';' does not contain 'delete'</status>
</kw>
<msg time="2024-11-22T12:13:49.420557" level="INFO">${delete_status} = False</msg>
<var>${delete_status}</var>
<arg>Should Contain</arg>
<arg>${updated_sql_query}</arg>
<arg>DELETE</arg>
<arg>ignore_case=${True}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-11-22T12:13:49.420352" elapsed="0.000213"/>
</kw>
<if>
<branch type="IF" condition="'${delete_status}' == '${True}'">
<kw name="Execute Sql String" owner="DatabaseLibrary">
<var>${json_response}</var>
<arg>${updated_sql_query}</arg>
<doc>Executes the ``sql_string`` as a single SQL command.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.420671" elapsed="0.000009"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:49.420594" elapsed="0.000102"/>
</branch>
<branch type="ELSE">
<kw name="Query" owner="DatabaseLibrary">
<msg time="2024-11-22T12:13:49.421502" level="INFO" html="true">Executing sql:&lt;br&gt;&lt;code style="font-weight: bold;"&gt;SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-153';&lt;/code&gt;</msg>
<msg time="2024-11-22T12:13:49.422799" level="INFO" html="true">&lt;div style="max-width: 100%; overflow-x: auto;"&gt;&lt;table style="width: auto; border-collapse: collapse; border: 2px solid rgb(140 140 140)"&gt;&lt;caption style="text-align: left; font-weight: bold; padding: 5px;"&gt;Query returned 1 rows&lt;/caption&gt;&lt;tr&gt;&lt;th scope="col" style="background-color: #d6ecd4; border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;Row&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;id&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;created_at&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;create_by&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;updated_at&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;updated_by&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;birth_date&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;brownie_points&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;death_date&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;gender&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;name&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;natid&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;salary&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;tax_paid&lt;/th&gt;&lt;/tr&gt;&lt;tr style="background-color: #eee;"&gt;&lt;th scope="row" style="background-color: #d6ecd4;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;0&lt;/th&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;e9afe7ca-83eb-4534-8d52-c705f45476c8&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;2024-11-22 12:13:48.666815&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;SYSTEM&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;2024-11-22 12:13:48.666815&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;SYSTEM&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;1996-01-01 23:59:59&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;None&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;None&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;None&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;Angelina Jolie&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;natid-153&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;1000.5&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;10.28&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;</msg>
<msg time="2024-11-22T12:13:49.423603" level="INFO">${json_response} = [{'id': 'e9afe7ca-83eb-4534-8d52-c705f45476c8', 'created_at': datetime.datetime(2024, 11, 22, 12, 13, 48, 666815), 'create_by': 'SYSTEM', 'updated_at': datetime.datetime(2024, 11, 22, 12, 13, 48, 6668...</msg>
<var>${json_response}</var>
<arg>${updated_sql_query}</arg>
<arg>return_dict=${True}</arg>
<doc>Runs a query with the ``select_statement`` and returns the result as list of rows.
The type of row values depends on the database module -
usually they are tuples or tuple-like objects.</doc>
<status status="PASS" start="2024-11-22T12:13:49.420748" elapsed="0.002866"/>
</kw>
<status status="PASS" start="2024-11-22T12:13:49.420708" elapsed="0.002925"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:49.420588" elapsed="0.003057"/>
</if>
<kw name="Disconnect From Database" owner="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<status status="PASS" start="2024-11-22T12:13:49.423687" elapsed="0.000068"/>
</kw>
<return>
<value>${json_response}</value>
<status status="PASS" start="2024-11-22T12:13:49.423773" elapsed="0.000013"/>
</return>
<msg time="2024-11-22T12:13:49.423836" level="INFO">${sql_response} = [{'id': 'e9afe7ca-83eb-4534-8d52-c705f45476c8', 'created_at': datetime.datetime(2024, 11, 22, 12, 13, 48, 666815), 'create_by': 'SYSTEM', 'updated_at': datetime.datetime(2024, 11, 22, 12, 13, 48, 6668...</msg>
<var>${sql_response}</var>
<arg>select_hero_by_natid</arg>
<arg>${dict}</arg>
<status status="PASS" start="2024-11-22T12:13:49.405584" elapsed="0.018262"/>
</kw>
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T12:13:49.424048" level="INFO">
[{'id': 'e9afe7ca-83eb-4534-8d52-c705f45476c8', 'created_at': datetime.datetime(2024, 11, 22, 12, 13, 48, 666815), 'create_by': 'SYSTEM', 'updated_at': datetime.datetime(2024, 11, 22, 12, 13, 48, 666815), 'updated_by': 'SYSTEM', 'birth_date': datetime.datetime(1996, 1, 1, 23, 59, 59), 'brownie_points': None, 'death_date': None, 'gender': None, 'name': 'Angelina Jolie', 'natid': 'natid-153', 'salary': 1000.5, 'tax_paid': 10.28}]</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T12:13:49.423999" elapsed="0.000067"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T12:13:49.424114" elapsed="0.000060"/>
</kw>
<arg>${sql_response}</arg>
<status status="PASS" start="2024-11-22T12:13:49.423901" elapsed="0.000297"/>
</kw>
<if>
<branch type="IF" condition="${sql_response} != []">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-11-22T12:13:49.424408" level="INFO">${sql_response} = {'id': 'e9afe7ca-83eb-4534-8d52-c705f45476c8', 'created_at': datetime.datetime(2024, 11, 22, 12, 13, 48, 666815), 'create_by': 'SYSTEM', 'updated_at': datetime.datetime(2024, 11, 22, 12, 13, 48, 66681...</msg>
<var>${sql_response}</var>
<arg>${sql_response}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-11-22T12:13:49.424349" elapsed="0.000069"/>
</kw>
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T12:13:49.424611" level="INFO">
{'id': 'e9afe7ca-83eb-4534-8d52-c705f45476c8', 'created_at': datetime.datetime(2024, 11, 22, 12, 13, 48, 666815), 'create_by': 'SYSTEM', 'updated_at': datetime.datetime(2024, 11, 22, 12, 13, 48, 666815), 'updated_by': 'SYSTEM', 'birth_date': datetime.datetime(1996, 1, 1, 23, 59, 59), 'brownie_points': None, 'death_date': None, 'gender': None, 'name': 'Angelina Jolie', 'natid': 'natid-153', 'salary': 1000.5, 'tax_paid': 10.28}</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T12:13:49.424565" elapsed="0.000101"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T12:13:49.424714" elapsed="0.000059"/>
</kw>
<arg>${sql_response}</arg>
<status status="PASS" start="2024-11-22T12:13:49.424471" elapsed="0.000325"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-11-22T12:13:49.425114" level="INFO">${failure_msg} = None</msg>
<var>${failure_msg}</var>
<arg>${sql_response['${negative_col_name}']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-11-22T12:13:49.424841" elapsed="0.000282"/>
</kw>
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T12:13:49.425317" level="INFO">
{'id': 'e9afe7ca-83eb-4534-8d52-c705f45476c8', 'created_at': datetime.datetime(2024, 11, 22, 12, 13, 48, 666815), 'create_by': 'SYSTEM', 'updated_at': datetime.datetime(2024, 11, 22, 12, 13, 48, 666815), 'updated_by': 'SYSTEM', 'birth_date': datetime.datetime(1996, 1, 1, 23, 59, 59), 'brownie_points': None, 'death_date': None, 'gender': None, 'name': 'Angelina Jolie', 'natid': 'natid-153', 'salary': 1000.5, 'tax_paid': 10.28}</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T12:13:49.425271" elapsed="0.000063"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T12:13:49.425381" elapsed="0.000056"/>
</kw>
<arg>${sql_response}</arg>
<status status="PASS" start="2024-11-22T12:13:49.425177" elapsed="0.000282"/>
</kw>
<kw name="Fail" owner="BuiltIn">
<msg time="2024-11-22T12:13:49.425790" level="FAIL">Record created with invalid column named "gender": None</msg>
<arg>Record created with invalid column named "${negative_col_name}": ${sql_response['${negative_col_name}']}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="FAIL" start="2024-11-22T12:13:49.425501" elapsed="0.000313">Record created with invalid column named "gender": None</status>
</kw>
<status status="FAIL" start="2024-11-22T12:13:49.424223" elapsed="0.001622">Record created with invalid column named "gender": None</status>
</branch>
<status status="FAIL" start="2024-11-22T12:13:49.424217" elapsed="0.001645">Record created with invalid column named "gender": None</status>
</if>
<status status="FAIL" start="2024-11-22T12:13:49.401077" elapsed="0.024804">Record created with invalid column named "gender": None</status>
</branch>
<status status="FAIL" start="2024-11-22T12:13:49.399946" elapsed="0.025949">Record created with invalid column named "gender": None</status>
</if>
<arg>${negative_driver_test_data_path}</arg>
<arg>Negative</arg>
<arg>natid-153</arg>
<doc>Verify partial uploaded heroes in DB</doc>
<status status="FAIL" start="2024-11-22T12:13:49.399699" elapsed="0.026227">Record created with invalid column named "gender": None</status>
</kw>
<kw name="Common Test Teardown" owner="generic" type="TEARDOWN">
<kw name="Capture Page Screenshot" owner="SeleniumLibrary">
<msg time="2024-11-22T12:13:49.426284" level="INFO">Cannot capture screenshot because no browser is open.</msg>
<arg>${OUTPUT_DIR}/screenshots/${TEST NAME}.png</arg>
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<status status="PASS" start="2024-11-22T12:13:49.426222" elapsed="0.000079"/>
</kw>
<kw name="Close Browser" owner="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" start="2024-11-22T12:13:49.426352" elapsed="0.000036"/>
</kw>
<status status="PASS" start="2024-11-22T12:13:49.426032" elapsed="0.000378"/>
</kw>
<status status="FAIL" start="2024-11-22T12:13:49.399485" elapsed="0.026950">Record created with invalid column named "gender": None</status>
</test>
<test id="s1-t6" name="Partial Data Wrong Format - Negative - birth_date" line="38">
<kw name="Verify Partial Uploaded Data In DB" owner="clerk">
<kw name="Read Csv File To List" owner="CSVLibrary">
<msg time="2024-11-22T12:13:49.426941" level="INFO">${csv_list} = [['${natid}', '${flow}', '${negative_col_name}'], ['natid-150', 'Positive', ''], ['natid-151', 'Positive', ''], ['natid-152', 'Negative', 'name'], ['natid-153', 'Negative', 'gender'], ['natid-154', 'N...</msg>
<var>${csv_list}</var>
<arg>${test_data_path}</arg>
<doc>Read CSV file and return its content as a Python list of tuples.</doc>
<status status="PASS" start="2024-11-22T12:13:49.426842" elapsed="0.000110"/>
</kw>
<if>
<branch type="IF" condition="'${flow}' == 'Positive'">
<for flavor="IN">
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Create Dictionary" owner="BuiltIn">
<var>${dict}</var>
<arg>value_natid=${item[0]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.427132" elapsed="0.000010"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<var>${sql_response}</var>
<arg>select_hero_by_natid</arg>
<arg>${dict}</arg>
<status status="NOT RUN" start="2024-11-22T12:13:49.427214" elapsed="0.000011"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${sql_response} == []</arg>
<arg>Fail</arg>
<arg>${natid} not created in DB</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.427276" elapsed="0.000009"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<var>${sql_response}</var>
<arg>${sql_response}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.427331" elapsed="0.000010"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[0]}</arg>
<arg>${sql_response['natid']}</arg>
<arg>natid</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.427387" elapsed="0.000010"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[1]}</arg>
<arg>${sql_response['name']}</arg>
<arg>name</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.427442" elapsed="0.000011"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[2]}</arg>
<arg>${sql_response['gender']}</arg>
<arg>gender</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.427498" elapsed="0.000009"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[3]}</arg>
<arg>${sql_response['birth_date']}</arg>
<arg>birth_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.427569" elapsed="0.000011"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[4]}</arg>
<arg>${sql_response['death_date']}</arg>
<arg>death_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.427644" elapsed="0.000010"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[5]}</arg>
<arg>${sql_response['salary']}</arg>
<arg>salary</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.427716" elapsed="0.000010"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[6]}</arg>
<arg>${sql_response['tax_paid']}</arg>
<arg>tax_paid</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.427788" elapsed="0.000010"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[7]}</arg>
<arg>${sql_response['brownie_points']}</arg>
<arg>brownie_points</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.427861" elapsed="0.000010"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:49.427085" elapsed="0.000851"/>
</branch>
<status status="NOT RUN" start="2024-11-22T12:13:49.427080" elapsed="0.000870"/>
</if>
<var name="${item}"/>
<status status="NOT RUN" start="2024-11-22T12:13:49.427067" elapsed="0.000892"/>
</iter>
<var>${item}</var>
<value>@{csv_list}</value>
<status status="NOT RUN" start="2024-11-22T12:13:49.427018" elapsed="0.000955"/>
</for>
<status status="NOT RUN" start="2024-11-22T12:13:49.426982" elapsed="0.001006"/>
</branch>
<branch type="ELSE">
<for flavor="IN">
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Set Variable" owner="BuiltIn">
<var>${negative_col_name}</var>
<arg>${item[2]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.428377" elapsed="0.000011"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:49.428085" elapsed="0.000319"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:49.428080" elapsed="0.000337"/>
</if>
<var name="${item}">['${natid}', '${flow}', '${negative_col_name}']</var>
<status status="PASS" start="2024-11-22T12:13:49.428067" elapsed="0.000358"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Set Variable" owner="BuiltIn">
<var>${negative_col_name}</var>
<arg>${item[2]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.428749" elapsed="0.000010"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:49.428483" elapsed="0.000293"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:49.428478" elapsed="0.000311"/>
</if>
<var name="${item}">['natid-150', 'Positive', '']</var>
<status status="PASS" start="2024-11-22T12:13:49.428466" elapsed="0.000331"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Set Variable" owner="BuiltIn">
<var>${negative_col_name}</var>
<arg>${item[2]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.429108" elapsed="0.000011"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:49.428854" elapsed="0.000281"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:49.428849" elapsed="0.000298"/>
</if>
<var name="${item}">['natid-151', 'Positive', '']</var>
<status status="PASS" start="2024-11-22T12:13:49.428837" elapsed="0.000318"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Set Variable" owner="BuiltIn">
<var>${negative_col_name}</var>
<arg>${item[2]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.429463" elapsed="0.000011"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:49.429211" elapsed="0.000279"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:49.429206" elapsed="0.000297"/>
</if>
<var name="${item}">['natid-152', 'Negative', 'name']</var>
<status status="PASS" start="2024-11-22T12:13:49.429194" elapsed="0.000317"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Set Variable" owner="BuiltIn">
<var>${negative_col_name}</var>
<arg>${item[2]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.429814" elapsed="0.000011"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:49.429567" elapsed="0.000274"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:49.429562" elapsed="0.000292"/>
</if>
<var name="${item}">['natid-153', 'Negative', 'gender']</var>
<status status="PASS" start="2024-11-22T12:13:49.429550" elapsed="0.000311"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-11-22T12:13:49.430492" level="INFO">${negative_col_name} = birth_date</msg>
<var>${negative_col_name}</var>
<arg>${item[2]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-11-22T12:13:49.430180" elapsed="0.000323"/>
</kw>
<status status="PASS" start="2024-11-22T12:13:49.429917" elapsed="0.000604"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:49.429913" elapsed="0.000621"/>
</if>
<var name="${item}">['natid-154', 'Negative', 'birth_date']</var>
<status status="PASS" start="2024-11-22T12:13:49.429900" elapsed="0.000642"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Set Variable" owner="BuiltIn">
<var>${negative_col_name}</var>
<arg>${item[2]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.430854" elapsed="0.000011"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:49.430600" elapsed="0.000282"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:49.430595" elapsed="0.000300"/>
</if>
<var name="${item}">['natid-155', 'Negative', 'salary']</var>
<status status="PASS" start="2024-11-22T12:13:49.430582" elapsed="0.000321"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Set Variable" owner="BuiltIn">
<var>${negative_col_name}</var>
<arg>${item[2]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.431213" elapsed="0.000011"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:49.430960" elapsed="0.000282"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:49.430955" elapsed="0.000300"/>
</if>
<var name="${item}">['natid-156', 'Negative', 'tax_paid']</var>
<status status="PASS" start="2024-11-22T12:13:49.430943" elapsed="0.000320"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Set Variable" owner="BuiltIn">
<var>${negative_col_name}</var>
<arg>${item[2]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.431583" elapsed="0.000011"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:49.431332" elapsed="0.000279"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:49.431327" elapsed="0.000296"/>
</if>
<var name="${item}">['natid-157', 'Positive', '']</var>
<status status="PASS" start="2024-11-22T12:13:49.431315" elapsed="0.000316"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Set Variable" owner="BuiltIn">
<var>${negative_col_name}</var>
<arg>${item[2]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.431938" elapsed="0.000010"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:49.431688" elapsed="0.000277"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:49.431683" elapsed="0.000294"/>
</if>
<var name="${item}">['natid-158', 'Negative', 'gender']</var>
<status status="PASS" start="2024-11-22T12:13:49.431671" elapsed="0.000314"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Set Variable" owner="BuiltIn">
<var>${negative_col_name}</var>
<arg>${item[2]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.432292" elapsed="0.000010"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:49.432041" elapsed="0.000278"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:49.432037" elapsed="0.000295"/>
</if>
<var name="${item}">['natid-159', 'Positive', '']</var>
<status status="PASS" start="2024-11-22T12:13:49.432024" elapsed="0.000315"/>
</iter>
<var>${item}</var>
<value>@{csv_list}</value>
<status status="PASS" start="2024-11-22T12:13:49.428015" elapsed="0.004338"/>
</for>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2024-11-22T12:13:49.432533" level="INFO">${dict} = {'value_natid': 'natid-154'}</msg>
<var>${dict}</var>
<arg>value_natid=${natid}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2024-11-22T12:13:49.432405" elapsed="0.000138"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<kw name="Connect To Database" owner="DatabaseLibrary">
<msg time="2024-11-22T12:13:49.432830" level="INFO">Looking for configuration file: 'resources/db.cfg'</msg>
<msg time="2024-11-22T12:13:49.432845" level="INFO">Configuration file doesn't exist</msg>
<msg time="2024-11-22T12:13:49.432916" level="INFO">Connect to DB using : mysql.connector.connect(database='testdb', user='user', password=***, host='localhost', port=3306)</msg>
<arg>${DB_API}</arg>
<arg>${DB_NAME}</arg>
<arg>${DB_USER}</arg>
<arg>${DB_PASSWORD}</arg>
<arg>${DB_HOST}</arg>
<arg>${DB_PORT}</arg>
<doc>Creates a database connection using the DB API 2.0 ``db_module`` and the parameters provided.
Along with listed commonly used arguments (`db_name`, `db_host` etc.)
you can set any other DB module specific parameters as key/value pairs.</doc>
<status status="PASS" start="2024-11-22T12:13:49.432729" elapsed="0.009730"/>
</kw>
<kw name="Update SQL Queries With Arguments Dictionary" owner="sql-helper">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-11-22T12:13:49.442780" level="INFO" html="true">Getting file '&lt;a href="file:///Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/object-repo/sql-queries/select_hero_by_natid.sql"&gt;/Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/object-repo/sql-queries/select_hero_by_natid.sql&lt;/a&gt;'.</msg>
<msg time="2024-11-22T12:13:49.442839" level="INFO">${sql_query} = SELECT *
FROM testdb.working_class_heroes
WHERE natid='value_natid';</msg>
<var>${sql_query}</var>
<arg>./object-repo/sql-queries/${sql_file_name}.sql</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-11-22T12:13:49.442704" elapsed="0.000144"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2024-11-22T12:13:49.443203" level="INFO">Argument types are:
&lt;class 'robot.utils.dotdict.DotDict'&gt;
&lt;class 'str'&gt;</msg>
<msg time="2024-11-22T12:13:49.443242" level="FAIL">{'value_natid': 'natid-154'} != </msg>
<arg>${args_dict}</arg>
<arg>${EMPTY}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="FAIL" start="2024-11-22T12:13:49.442964" elapsed="0.000303">{'value_natid': 'natid-154'} != </status>
</kw>
<msg time="2024-11-22T12:13:49.443304" level="INFO">${empty_status} = False</msg>
<var>${empty_status}</var>
<arg>Should Be Equal As Strings</arg>
<arg>${args_dict}</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-11-22T12:13:49.442902" elapsed="0.000411"/>
</kw>
<if>
<branch type="IF" condition="'${empty_status}' == '${False}'">
<if>
<branch type="IF" condition="${args_dict}">
<for flavor="IN">
<iter>
<kw name="Convert To String" owner="BuiltIn">
<msg time="2024-11-22T12:13:49.443567" level="INFO">${args_key_str} = value_natid</msg>
<var>${args_key_str}</var>
<arg>${args_key}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="PASS" start="2024-11-22T12:13:49.443507" elapsed="0.000069"/>
</kw>
<kw name="Convert To String" owner="BuiltIn">
<msg time="2024-11-22T12:13:49.443689" level="INFO">${args_value_str} = natid-154</msg>
<var>${args_value_str}</var>
<arg>${args_dict}[${args_key_str}]</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="PASS" start="2024-11-22T12:13:49.443624" elapsed="0.000074"/>
</kw>
<kw name="Replace String" owner="String">
<msg time="2024-11-22T12:13:49.443816" level="INFO">${sql_query} = SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-154';</msg>
<var>${sql_query}</var>
<arg>${sql_query}</arg>
<arg>${args_key_str}</arg>
<arg>${args_value_str}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="PASS" start="2024-11-22T12:13:49.443746" elapsed="0.000079"/>
</kw>
<var name="${args_key}">value_natid</var>
<status status="PASS" start="2024-11-22T12:13:49.443465" elapsed="0.000379"/>
</iter>
<var>${args_key}</var>
<value>@{args_dict}</value>
<status status="PASS" start="2024-11-22T12:13:49.443422" elapsed="0.000438"/>
</for>
<status status="PASS" start="2024-11-22T12:13:49.443396" elapsed="0.000480"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:49.443391" elapsed="0.000497"/>
</if>
<status status="PASS" start="2024-11-22T12:13:49.443344" elapsed="0.000552"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:49.443337" elapsed="0.000569"/>
</if>
<return>
<value>${sql_query}</value>
<status status="PASS" start="2024-11-22T12:13:49.443917" elapsed="0.000013"/>
</return>
<msg time="2024-11-22T12:13:49.443973" level="INFO">${updated_sql_query} = SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-154';</msg>
<var>${updated_sql_query}</var>
<arg>${sql_file_name}</arg>
<arg>${args_dict}</arg>
<status status="PASS" start="2024-11-22T12:13:49.442581" elapsed="0.001402"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-11-22T12:13:49.444182" level="FAIL">'SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-154';' does not contain 'delete'</msg>
<arg>${updated_sql_query}</arg>
<arg>DELETE</arg>
<arg>ignore_case=${True}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-11-22T12:13:49.444095" elapsed="0.000109">'SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-154';' does not contain 'delete'</status>
</kw>
<msg time="2024-11-22T12:13:49.444242" level="INFO">${delete_status} = False</msg>
<var>${delete_status}</var>
<arg>Should Contain</arg>
<arg>${updated_sql_query}</arg>
<arg>DELETE</arg>
<arg>ignore_case=${True}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-11-22T12:13:49.444034" elapsed="0.000216"/>
</kw>
<if>
<branch type="IF" condition="'${delete_status}' == '${True}'">
<kw name="Execute Sql String" owner="DatabaseLibrary">
<var>${json_response}</var>
<arg>${updated_sql_query}</arg>
<doc>Executes the ``sql_string`` as a single SQL command.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.444358" elapsed="0.000009"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:49.444284" elapsed="0.000099"/>
</branch>
<branch type="ELSE">
<kw name="Query" owner="DatabaseLibrary">
<msg time="2024-11-22T12:13:49.445116" level="INFO" html="true">Executing sql:&lt;br&gt;&lt;code style="font-weight: bold;"&gt;SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-154';&lt;/code&gt;</msg>
<msg time="2024-11-22T12:13:49.446284" level="INFO" html="true">&lt;div style="max-width: 100%; overflow-x: auto;"&gt;&lt;table style="width: auto; border-collapse: collapse; border: 2px solid rgb(140 140 140)"&gt;&lt;caption style="text-align: left; font-weight: bold; padding: 5px;"&gt;Query returned 1 rows&lt;/caption&gt;&lt;tr&gt;&lt;th scope="col" style="background-color: #d6ecd4; border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;Row&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;id&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;created_at&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;create_by&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;updated_at&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;updated_by&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;birth_date&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;brownie_points&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;death_date&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;gender&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;name&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;natid&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;salary&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;tax_paid&lt;/th&gt;&lt;/tr&gt;&lt;tr style="background-color: #eee;"&gt;&lt;th scope="row" style="background-color: #d6ecd4;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;0&lt;/th&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;6ca2f462-2bf4-4da7-b45c-0ea8bebca8d4&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;2024-11-22 12:13:48.670798&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;SYSTEM&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;2024-11-22 12:13:48.670798&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;SYSTEM&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;4000-01-01 23:59:59&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;None&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;None&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;MALE&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;Lawrence Chu&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;natid-154&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;1000.12&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;10.0&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;</msg>
<msg time="2024-11-22T12:13:49.449285" level="INFO">${json_response} = [{'id': '6ca2f462-2bf4-4da7-b45c-0ea8bebca8d4', 'created_at': datetime.datetime(2024, 11, 22, 12, 13, 48, 670798), 'create_by': 'SYSTEM', 'updated_at': datetime.datetime(2024, 11, 22, 12, 13, 48, 6707...</msg>
<var>${json_response}</var>
<arg>${updated_sql_query}</arg>
<arg>return_dict=${True}</arg>
<doc>Runs a query with the ``select_statement`` and returns the result as list of rows.
The type of row values depends on the database module -
usually they are tuples or tuple-like objects.</doc>
<status status="PASS" start="2024-11-22T12:13:49.444435" elapsed="0.004864"/>
</kw>
<status status="PASS" start="2024-11-22T12:13:49.444395" elapsed="0.004928"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:49.444273" elapsed="0.005064"/>
</if>
<kw name="Disconnect From Database" owner="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<status status="PASS" start="2024-11-22T12:13:49.449388" elapsed="0.000079"/>
</kw>
<return>
<value>${json_response}</value>
<status status="PASS" start="2024-11-22T12:13:49.449488" elapsed="0.000015"/>
</return>
<msg time="2024-11-22T12:13:49.449559" level="INFO">${sql_response} = [{'id': '6ca2f462-2bf4-4da7-b45c-0ea8bebca8d4', 'created_at': datetime.datetime(2024, 11, 22, 12, 13, 48, 670798), 'create_by': 'SYSTEM', 'updated_at': datetime.datetime(2024, 11, 22, 12, 13, 48, 6707...</msg>
<var>${sql_response}</var>
<arg>select_hero_by_natid</arg>
<arg>${dict}</arg>
<status status="PASS" start="2024-11-22T12:13:49.432620" elapsed="0.016950"/>
</kw>
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T12:13:49.449795" level="INFO">
[{'id': '6ca2f462-2bf4-4da7-b45c-0ea8bebca8d4', 'created_at': datetime.datetime(2024, 11, 22, 12, 13, 48, 670798), 'create_by': 'SYSTEM', 'updated_at': datetime.datetime(2024, 11, 22, 12, 13, 48, 670798), 'updated_by': 'SYSTEM', 'birth_date': datetime.datetime(4000, 1, 1, 23, 59, 59), 'brownie_points': None, 'death_date': None, 'gender': 'MALE', 'name': 'Lawrence Chu', 'natid': 'natid-154', 'salary': 1000.12, 'tax_paid': 10.0}]</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T12:13:49.449742" elapsed="0.000072"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T12:13:49.449864" elapsed="0.000158"/>
</kw>
<arg>${sql_response}</arg>
<status status="PASS" start="2024-11-22T12:13:49.449632" elapsed="0.000417"/>
</kw>
<if>
<branch type="IF" condition="${sql_response} != []">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-11-22T12:13:49.450278" level="INFO">${sql_response} = {'id': '6ca2f462-2bf4-4da7-b45c-0ea8bebca8d4', 'created_at': datetime.datetime(2024, 11, 22, 12, 13, 48, 670798), 'create_by': 'SYSTEM', 'updated_at': datetime.datetime(2024, 11, 22, 12, 13, 48, 67079...</msg>
<var>${sql_response}</var>
<arg>${sql_response}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-11-22T12:13:49.450216" elapsed="0.000073"/>
</kw>
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T12:13:49.450497" level="INFO">
{'id': '6ca2f462-2bf4-4da7-b45c-0ea8bebca8d4', 'created_at': datetime.datetime(2024, 11, 22, 12, 13, 48, 670798), 'create_by': 'SYSTEM', 'updated_at': datetime.datetime(2024, 11, 22, 12, 13, 48, 670798), 'updated_by': 'SYSTEM', 'birth_date': datetime.datetime(4000, 1, 1, 23, 59, 59), 'brownie_points': None, 'death_date': None, 'gender': 'MALE', 'name': 'Lawrence Chu', 'natid': 'natid-154', 'salary': 1000.12, 'tax_paid': 10.0}</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T12:13:49.450446" elapsed="0.000070"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T12:13:49.450563" elapsed="0.000618"/>
</kw>
<arg>${sql_response}</arg>
<status status="PASS" start="2024-11-22T12:13:49.450344" elapsed="0.000864"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-11-22T12:13:49.451546" level="INFO">${failure_msg} = 4000-01-01 23:59:59</msg>
<var>${failure_msg}</var>
<arg>${sql_response['${negative_col_name}']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-11-22T12:13:49.451258" elapsed="0.000298"/>
</kw>
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T12:13:49.451765" level="INFO">
{'id': '6ca2f462-2bf4-4da7-b45c-0ea8bebca8d4', 'created_at': datetime.datetime(2024, 11, 22, 12, 13, 48, 670798), 'create_by': 'SYSTEM', 'updated_at': datetime.datetime(2024, 11, 22, 12, 13, 48, 670798), 'updated_by': 'SYSTEM', 'birth_date': datetime.datetime(4000, 1, 1, 23, 59, 59), 'brownie_points': None, 'death_date': None, 'gender': 'MALE', 'name': 'Lawrence Chu', 'natid': 'natid-154', 'salary': 1000.12, 'tax_paid': 10.0}</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T12:13:49.451715" elapsed="0.000068"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T12:13:49.451831" elapsed="0.000059"/>
</kw>
<arg>${sql_response}</arg>
<status status="PASS" start="2024-11-22T12:13:49.451613" elapsed="0.000300"/>
</kw>
<kw name="Fail" owner="BuiltIn">
<msg time="2024-11-22T12:13:49.452256" level="FAIL">Record created with invalid column named "birth_date": 4000-01-01 23:59:59</msg>
<arg>Record created with invalid column named "${negative_col_name}": ${sql_response['${negative_col_name}']}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="FAIL" start="2024-11-22T12:13:49.451957" elapsed="0.000323">Record created with invalid column named "birth_date": 4000-01-01 23:59:59</status>
</kw>
<status status="FAIL" start="2024-11-22T12:13:49.450077" elapsed="0.002235">Record created with invalid column named "birth_date": 4000-01-01 23:59:59</status>
</branch>
<status status="FAIL" start="2024-11-22T12:13:49.450070" elapsed="0.002259">Record created with invalid column named "birth_date": 4000-01-01 23:59:59</status>
</if>
<status status="FAIL" start="2024-11-22T12:13:49.428000" elapsed="0.024349">Record created with invalid column named "birth_date": 4000-01-01 23:59:59</status>
</branch>
<status status="FAIL" start="2024-11-22T12:13:49.426975" elapsed="0.025388">Record created with invalid column named "birth_date": 4000-01-01 23:59:59</status>
</if>
<arg>${negative_driver_test_data_path}</arg>
<arg>Negative</arg>
<arg>natid-154</arg>
<doc>Verify partial uploaded heroes in DB</doc>
<status status="FAIL" start="2024-11-22T12:13:49.426726" elapsed="0.025668">Record created with invalid column named "birth_date": 4000-01-01 23:59:59</status>
</kw>
<kw name="Common Test Teardown" owner="generic" type="TEARDOWN">
<kw name="Capture Page Screenshot" owner="SeleniumLibrary">
<msg time="2024-11-22T12:13:49.452661" level="INFO">Cannot capture screenshot because no browser is open.</msg>
<arg>${OUTPUT_DIR}/screenshots/${TEST NAME}.png</arg>
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<status status="PASS" start="2024-11-22T12:13:49.452601" elapsed="0.000077"/>
</kw>
<kw name="Close Browser" owner="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" start="2024-11-22T12:13:49.452728" elapsed="0.000036"/>
</kw>
<status status="PASS" start="2024-11-22T12:13:49.452502" elapsed="0.000284"/>
</kw>
<status status="FAIL" start="2024-11-22T12:13:49.426518" elapsed="0.026293">Record created with invalid column named "birth_date": 4000-01-01 23:59:59</status>
</test>
<test id="s1-t7" name="Partial Data Wrong Format - Negative - salary" line="41">
<kw name="Verify Partial Uploaded Data In DB" owner="clerk">
<kw name="Read Csv File To List" owner="CSVLibrary">
<msg time="2024-11-22T12:13:49.453329" level="INFO">${csv_list} = [['${natid}', '${flow}', '${negative_col_name}'], ['natid-150', 'Positive', ''], ['natid-151', 'Positive', ''], ['natid-152', 'Negative', 'name'], ['natid-153', 'Negative', 'gender'], ['natid-154', 'N...</msg>
<var>${csv_list}</var>
<arg>${test_data_path}</arg>
<doc>Read CSV file and return its content as a Python list of tuples.</doc>
<status status="PASS" start="2024-11-22T12:13:49.453231" elapsed="0.000110"/>
</kw>
<if>
<branch type="IF" condition="'${flow}' == 'Positive'">
<for flavor="IN">
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Create Dictionary" owner="BuiltIn">
<var>${dict}</var>
<arg>value_natid=${item[0]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.453526" elapsed="0.000011"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<var>${sql_response}</var>
<arg>select_hero_by_natid</arg>
<arg>${dict}</arg>
<status status="NOT RUN" start="2024-11-22T12:13:49.453613" elapsed="0.000011"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${sql_response} == []</arg>
<arg>Fail</arg>
<arg>${natid} not created in DB</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.453675" elapsed="0.000010"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<var>${sql_response}</var>
<arg>${sql_response}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.453735" elapsed="0.000009"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[0]}</arg>
<arg>${sql_response['natid']}</arg>
<arg>natid</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.453792" elapsed="0.000011"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[1]}</arg>
<arg>${sql_response['name']}</arg>
<arg>name</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.453851" elapsed="0.000009"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[2]}</arg>
<arg>${sql_response['gender']}</arg>
<arg>gender</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.453906" elapsed="0.000009"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[3]}</arg>
<arg>${sql_response['birth_date']}</arg>
<arg>birth_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.454063" elapsed="0.000012"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[4]}</arg>
<arg>${sql_response['death_date']}</arg>
<arg>death_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.454144" elapsed="0.000011"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[5]}</arg>
<arg>${sql_response['salary']}</arg>
<arg>salary</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.454222" elapsed="0.000010"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[6]}</arg>
<arg>${sql_response['tax_paid']}</arg>
<arg>tax_paid</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.454297" elapsed="0.000010"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[7]}</arg>
<arg>${sql_response['brownie_points']}</arg>
<arg>brownie_points</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.454373" elapsed="0.000010"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:49.453479" elapsed="0.000920"/>
</branch>
<status status="NOT RUN" start="2024-11-22T12:13:49.453474" elapsed="0.000939"/>
</if>
<var name="${item}"/>
<status status="NOT RUN" start="2024-11-22T12:13:49.453460" elapsed="0.000962"/>
</iter>
<var>${item}</var>
<value>@{csv_list}</value>
<status status="NOT RUN" start="2024-11-22T12:13:49.453412" elapsed="0.001197"/>
</for>
<status status="NOT RUN" start="2024-11-22T12:13:49.453372" elapsed="0.001256"/>
</branch>
<branch type="ELSE">
<for flavor="IN">
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Set Variable" owner="BuiltIn">
<var>${negative_col_name}</var>
<arg>${item[2]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.455020" elapsed="0.000011"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:49.454726" elapsed="0.000322"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:49.454721" elapsed="0.000339"/>
</if>
<var name="${item}">['${natid}', '${flow}', '${negative_col_name}']</var>
<status status="PASS" start="2024-11-22T12:13:49.454708" elapsed="0.000360"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Set Variable" owner="BuiltIn">
<var>${negative_col_name}</var>
<arg>${item[2]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.455392" elapsed="0.000011"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:49.455126" elapsed="0.000294"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:49.455121" elapsed="0.000312"/>
</if>
<var name="${item}">['natid-150', 'Positive', '']</var>
<status status="PASS" start="2024-11-22T12:13:49.455109" elapsed="0.000332"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Set Variable" owner="BuiltIn">
<var>${negative_col_name}</var>
<arg>${item[2]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.455758" elapsed="0.000011"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:49.455500" elapsed="0.000285"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:49.455495" elapsed="0.000303"/>
</if>
<var name="${item}">['natid-151', 'Positive', '']</var>
<status status="PASS" start="2024-11-22T12:13:49.455482" elapsed="0.000324"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Set Variable" owner="BuiltIn">
<var>${negative_col_name}</var>
<arg>${item[2]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.456115" elapsed="0.000010"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:49.455864" elapsed="0.000278"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:49.455859" elapsed="0.000296"/>
</if>
<var name="${item}">['natid-152', 'Negative', 'name']</var>
<status status="PASS" start="2024-11-22T12:13:49.455847" elapsed="0.000316"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Set Variable" owner="BuiltIn">
<var>${negative_col_name}</var>
<arg>${item[2]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.456467" elapsed="0.000011"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:49.456220" elapsed="0.000275"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:49.456216" elapsed="0.000291"/>
</if>
<var name="${item}">['natid-153', 'Negative', 'gender']</var>
<status status="PASS" start="2024-11-22T12:13:49.456203" elapsed="0.000312"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Set Variable" owner="BuiltIn">
<var>${negative_col_name}</var>
<arg>${item[2]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.456819" elapsed="0.000010"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:49.456572" elapsed="0.000274"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:49.456567" elapsed="0.000292"/>
</if>
<var name="${item}">['natid-154', 'Negative', 'birth_date']</var>
<status status="PASS" start="2024-11-22T12:13:49.456555" elapsed="0.000312"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-11-22T12:13:49.457405" level="INFO">${negative_col_name} = salary</msg>
<var>${negative_col_name}</var>
<arg>${item[2]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-11-22T12:13:49.457167" elapsed="0.000248"/>
</kw>
<status status="PASS" start="2024-11-22T12:13:49.456922" elapsed="0.000511"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:49.456918" elapsed="0.000528"/>
</if>
<var name="${item}">['natid-155', 'Negative', 'salary']</var>
<status status="PASS" start="2024-11-22T12:13:49.456906" elapsed="0.000547"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Set Variable" owner="BuiltIn">
<var>${negative_col_name}</var>
<arg>${item[2]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.457764" elapsed="0.000011"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:49.457511" elapsed="0.000281"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:49.457507" elapsed="0.000298"/>
</if>
<var name="${item}">['natid-156', 'Negative', 'tax_paid']</var>
<status status="PASS" start="2024-11-22T12:13:49.457494" elapsed="0.000319"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Set Variable" owner="BuiltIn">
<var>${negative_col_name}</var>
<arg>${item[2]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.458118" elapsed="0.000010"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:49.457870" elapsed="0.000275"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:49.457866" elapsed="0.000292"/>
</if>
<var name="${item}">['natid-157', 'Positive', '']</var>
<status status="PASS" start="2024-11-22T12:13:49.457854" elapsed="0.000311"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Set Variable" owner="BuiltIn">
<var>${negative_col_name}</var>
<arg>${item[2]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.458472" elapsed="0.000010"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:49.458221" elapsed="0.000278"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:49.458217" elapsed="0.000294"/>
</if>
<var name="${item}">['natid-158', 'Negative', 'gender']</var>
<status status="PASS" start="2024-11-22T12:13:49.458205" elapsed="0.000314"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Set Variable" owner="BuiltIn">
<var>${negative_col_name}</var>
<arg>${item[2]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.458821" elapsed="0.000011"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:49.458575" elapsed="0.000273"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:49.458570" elapsed="0.000291"/>
</if>
<var name="${item}">['natid-159', 'Positive', '']</var>
<status status="PASS" start="2024-11-22T12:13:49.458558" elapsed="0.000311"/>
</iter>
<var>${item}</var>
<value>@{csv_list}</value>
<status status="PASS" start="2024-11-22T12:13:49.454655" elapsed="0.004227"/>
</for>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2024-11-22T12:13:49.459013" level="INFO">${dict} = {'value_natid': 'natid-155'}</msg>
<var>${dict}</var>
<arg>value_natid=${natid}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2024-11-22T12:13:49.458934" elapsed="0.000089"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<kw name="Connect To Database" owner="DatabaseLibrary">
<msg time="2024-11-22T12:13:49.459368" level="INFO">Looking for configuration file: 'resources/db.cfg'</msg>
<msg time="2024-11-22T12:13:49.459384" level="INFO">Configuration file doesn't exist</msg>
<msg time="2024-11-22T12:13:49.459454" level="INFO">Connect to DB using : mysql.connector.connect(database='testdb', user='user', password=***, host='localhost', port=3306)</msg>
<arg>${DB_API}</arg>
<arg>${DB_NAME}</arg>
<arg>${DB_USER}</arg>
<arg>${DB_PASSWORD}</arg>
<arg>${DB_HOST}</arg>
<arg>${DB_PORT}</arg>
<doc>Creates a database connection using the DB API 2.0 ``db_module`` and the parameters provided.
Along with listed commonly used arguments (`db_name`, `db_host` etc.)
you can set any other DB module specific parameters as key/value pairs.</doc>
<status status="PASS" start="2024-11-22T12:13:49.459220" elapsed="0.008601"/>
</kw>
<kw name="Update SQL Queries With Arguments Dictionary" owner="sql-helper">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-11-22T12:13:49.468124" level="INFO" html="true">Getting file '&lt;a href="file:///Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/object-repo/sql-queries/select_hero_by_natid.sql"&gt;/Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/object-repo/sql-queries/select_hero_by_natid.sql&lt;/a&gt;'.</msg>
<msg time="2024-11-22T12:13:49.468179" level="INFO">${sql_query} = SELECT *
FROM testdb.working_class_heroes
WHERE natid='value_natid';</msg>
<var>${sql_query}</var>
<arg>./object-repo/sql-queries/${sql_file_name}.sql</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-11-22T12:13:49.468041" elapsed="0.000148"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2024-11-22T12:13:49.468634" level="INFO">Argument types are:
&lt;class 'robot.utils.dotdict.DotDict'&gt;
&lt;class 'str'&gt;</msg>
<msg time="2024-11-22T12:13:49.468676" level="FAIL">{'value_natid': 'natid-155'} != </msg>
<arg>${args_dict}</arg>
<arg>${EMPTY}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="FAIL" start="2024-11-22T12:13:49.468379" elapsed="0.000324">{'value_natid': 'natid-155'} != </status>
</kw>
<msg time="2024-11-22T12:13:49.468745" level="INFO">${empty_status} = False</msg>
<var>${empty_status}</var>
<arg>Should Be Equal As Strings</arg>
<arg>${args_dict}</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-11-22T12:13:49.468243" elapsed="0.000511"/>
</kw>
<if>
<branch type="IF" condition="'${empty_status}' == '${False}'">
<if>
<branch type="IF" condition="${args_dict}">
<for flavor="IN">
<iter>
<kw name="Convert To String" owner="BuiltIn">
<msg time="2024-11-22T12:13:49.469027" level="INFO">${args_key_str} = value_natid</msg>
<var>${args_key_str}</var>
<arg>${args_key}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="PASS" start="2024-11-22T12:13:49.468962" elapsed="0.000075"/>
</kw>
<kw name="Convert To String" owner="BuiltIn">
<msg time="2024-11-22T12:13:49.469155" level="INFO">${args_value_str} = natid-155</msg>
<var>${args_value_str}</var>
<arg>${args_dict}[${args_key_str}]</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="PASS" start="2024-11-22T12:13:49.469087" elapsed="0.000077"/>
</kw>
<kw name="Replace String" owner="String">
<msg time="2024-11-22T12:13:49.469304" level="INFO">${sql_query} = SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-155';</msg>
<var>${sql_query}</var>
<arg>${sql_query}</arg>
<arg>${args_key_str}</arg>
<arg>${args_value_str}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="PASS" start="2024-11-22T12:13:49.469215" elapsed="0.000099"/>
</kw>
<var name="${args_key}">value_natid</var>
<status status="PASS" start="2024-11-22T12:13:49.468918" elapsed="0.000415"/>
</iter>
<var>${args_key}</var>
<value>@{args_dict}</value>
<status status="PASS" start="2024-11-22T12:13:49.468870" elapsed="0.000481"/>
</for>
<status status="PASS" start="2024-11-22T12:13:49.468843" elapsed="0.000525"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:49.468838" elapsed="0.000543"/>
</if>
<status status="PASS" start="2024-11-22T12:13:49.468787" elapsed="0.000602"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:49.468780" elapsed="0.000620"/>
</if>
<return>
<value>${sql_query}</value>
<status status="PASS" start="2024-11-22T12:13:49.469413" elapsed="0.000015"/>
</return>
<msg time="2024-11-22T12:13:49.469475" level="INFO">${updated_sql_query} = SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-155';</msg>
<var>${updated_sql_query}</var>
<arg>${sql_file_name}</arg>
<arg>${args_dict}</arg>
<status status="PASS" start="2024-11-22T12:13:49.467925" elapsed="0.001559"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-11-22T12:13:49.469726" level="FAIL">'SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-155';' does not contain 'delete'</msg>
<arg>${updated_sql_query}</arg>
<arg>DELETE</arg>
<arg>ignore_case=${True}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-11-22T12:13:49.469634" elapsed="0.000116">'SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-155';' does not contain 'delete'</status>
</kw>
<msg time="2024-11-22T12:13:49.469788" level="INFO">${delete_status} = False</msg>
<var>${delete_status}</var>
<arg>Should Contain</arg>
<arg>${updated_sql_query}</arg>
<arg>DELETE</arg>
<arg>ignore_case=${True}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-11-22T12:13:49.469569" elapsed="0.000228"/>
</kw>
<if>
<branch type="IF" condition="'${delete_status}' == '${True}'">
<kw name="Execute Sql String" owner="DatabaseLibrary">
<var>${json_response}</var>
<arg>${updated_sql_query}</arg>
<doc>Executes the ``sql_string`` as a single SQL command.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.469904" elapsed="0.000010"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:49.469827" elapsed="0.000103"/>
</branch>
<branch type="ELSE">
<kw name="Query" owner="DatabaseLibrary">
<msg time="2024-11-22T12:13:49.470588" level="INFO" html="true">Executing sql:&lt;br&gt;&lt;code style="font-weight: bold;"&gt;SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-155';&lt;/code&gt;</msg>
<msg time="2024-11-22T12:13:49.471536" level="INFO" html="true">&lt;div style="max-width: 100%; overflow-x: auto;"&gt;&lt;table style="width: auto; border-collapse: collapse; border: 2px solid rgb(140 140 140)"&gt;&lt;caption style="text-align: left; font-weight: bold; padding: 5px;"&gt;Query returned 1 rows&lt;/caption&gt;&lt;tr&gt;&lt;th scope="col" style="background-color: #d6ecd4; border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;Row&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;id&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;created_at&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;create_by&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;updated_at&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;updated_by&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;birth_date&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;brownie_points&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;death_date&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;gender&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;name&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;natid&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;salary&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;tax_paid&lt;/th&gt;&lt;/tr&gt;&lt;tr style="background-color: #eee;"&gt;&lt;th scope="row" style="background-color: #d6ecd4;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;0&lt;/th&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;f0a698ab-8b0e-436d-b429-0a66b85c644b&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;2024-11-22 12:13:48.675147&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;SYSTEM&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;2024-11-22 12:13:48.675147&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;SYSTEM&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;1996-01-01 23:59:59&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;None&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;None&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;MALE&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;Karen&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;natid-155&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;-1000.0&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;10.0&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;</msg>
<msg time="2024-11-22T12:13:49.472244" level="INFO">${json_response} = [{'id': 'f0a698ab-8b0e-436d-b429-0a66b85c644b', 'created_at': datetime.datetime(2024, 11, 22, 12, 13, 48, 675147), 'create_by': 'SYSTEM', 'updated_at': datetime.datetime(2024, 11, 22, 12, 13, 48, 6751...</msg>
<var>${json_response}</var>
<arg>${updated_sql_query}</arg>
<arg>return_dict=${True}</arg>
<doc>Runs a query with the ``select_statement`` and returns the result as list of rows.
The type of row values depends on the database module -
usually they are tuples or tuple-like objects.</doc>
<status status="PASS" start="2024-11-22T12:13:49.469983" elapsed="0.002273"/>
</kw>
<status status="PASS" start="2024-11-22T12:13:49.469942" elapsed="0.002333"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:49.469821" elapsed="0.002467"/>
</if>
<kw name="Disconnect From Database" owner="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<status status="PASS" start="2024-11-22T12:13:49.472331" elapsed="0.000071"/>
</kw>
<return>
<value>${json_response}</value>
<status status="PASS" start="2024-11-22T12:13:49.472421" elapsed="0.000012"/>
</return>
<msg time="2024-11-22T12:13:49.472482" level="INFO">${sql_response} = [{'id': 'f0a698ab-8b0e-436d-b429-0a66b85c644b', 'created_at': datetime.datetime(2024, 11, 22, 12, 13, 48, 675147), 'create_by': 'SYSTEM', 'updated_at': datetime.datetime(2024, 11, 22, 12, 13, 48, 6751...</msg>
<var>${sql_response}</var>
<arg>select_hero_by_natid</arg>
<arg>${dict}</arg>
<status status="PASS" start="2024-11-22T12:13:49.459099" elapsed="0.013393"/>
</kw>
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T12:13:49.472699" level="INFO">
[{'id': 'f0a698ab-8b0e-436d-b429-0a66b85c644b', 'created_at': datetime.datetime(2024, 11, 22, 12, 13, 48, 675147), 'create_by': 'SYSTEM', 'updated_at': datetime.datetime(2024, 11, 22, 12, 13, 48, 675147), 'updated_by': 'SYSTEM', 'birth_date': datetime.datetime(1996, 1, 1, 23, 59, 59), 'brownie_points': None, 'death_date': None, 'gender': 'MALE', 'name': 'Karen', 'natid': 'natid-155', 'salary': -1000.0, 'tax_paid': 10.0}]</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T12:13:49.472649" elapsed="0.000068"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T12:13:49.472765" elapsed="0.000063"/>
</kw>
<arg>${sql_response}</arg>
<status status="PASS" start="2024-11-22T12:13:49.472547" elapsed="0.000304"/>
</kw>
<if>
<branch type="IF" condition="${sql_response} != []">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-11-22T12:13:49.473072" level="INFO">${sql_response} = {'id': 'f0a698ab-8b0e-436d-b429-0a66b85c644b', 'created_at': datetime.datetime(2024, 11, 22, 12, 13, 48, 675147), 'create_by': 'SYSTEM', 'updated_at': datetime.datetime(2024, 11, 22, 12, 13, 48, 67514...</msg>
<var>${sql_response}</var>
<arg>${sql_response}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-11-22T12:13:49.473010" elapsed="0.000073"/>
</kw>
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T12:13:49.473279" level="INFO">
{'id': 'f0a698ab-8b0e-436d-b429-0a66b85c644b', 'created_at': datetime.datetime(2024, 11, 22, 12, 13, 48, 675147), 'create_by': 'SYSTEM', 'updated_at': datetime.datetime(2024, 11, 22, 12, 13, 48, 675147), 'updated_by': 'SYSTEM', 'birth_date': datetime.datetime(1996, 1, 1, 23, 59, 59), 'brownie_points': None, 'death_date': None, 'gender': 'MALE', 'name': 'Karen', 'natid': 'natid-155', 'salary': -1000.0, 'tax_paid': 10.0}</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T12:13:49.473233" elapsed="0.000064"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T12:13:49.473367" elapsed="0.000110"/>
</kw>
<arg>${sql_response}</arg>
<status status="PASS" start="2024-11-22T12:13:49.473136" elapsed="0.000364"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-11-22T12:13:49.473833" level="INFO">${failure_msg} = -1000.0</msg>
<var>${failure_msg}</var>
<arg>${sql_response['${negative_col_name}']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-11-22T12:13:49.473546" elapsed="0.000297"/>
</kw>
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T12:13:49.474043" level="INFO">
{'id': 'f0a698ab-8b0e-436d-b429-0a66b85c644b', 'created_at': datetime.datetime(2024, 11, 22, 12, 13, 48, 675147), 'create_by': 'SYSTEM', 'updated_at': datetime.datetime(2024, 11, 22, 12, 13, 48, 675147), 'updated_by': 'SYSTEM', 'birth_date': datetime.datetime(1996, 1, 1, 23, 59, 59), 'brownie_points': None, 'death_date': None, 'gender': 'MALE', 'name': 'Karen', 'natid': 'natid-155', 'salary': -1000.0, 'tax_paid': 10.0}</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T12:13:49.473992" elapsed="0.000068"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T12:13:49.474106" elapsed="0.000056"/>
</kw>
<arg>${sql_response}</arg>
<status status="PASS" start="2024-11-22T12:13:49.473897" elapsed="0.000288"/>
</kw>
<kw name="Fail" owner="BuiltIn">
<msg time="2024-11-22T12:13:49.474516" level="FAIL">Record created with invalid column named "salary": -1000.0</msg>
<arg>Record created with invalid column named "${negative_col_name}": ${sql_response['${negative_col_name}']}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="FAIL" start="2024-11-22T12:13:49.474228" elapsed="0.000313">Record created with invalid column named "salary": -1000.0</status>
</kw>
<status status="FAIL" start="2024-11-22T12:13:49.472875" elapsed="0.001699">Record created with invalid column named "salary": -1000.0</status>
</branch>
<status status="FAIL" start="2024-11-22T12:13:49.472869" elapsed="0.001721">Record created with invalid column named "salary": -1000.0</status>
</if>
<status status="FAIL" start="2024-11-22T12:13:49.454639" elapsed="0.019970">Record created with invalid column named "salary": -1000.0</status>
</branch>
<status status="FAIL" start="2024-11-22T12:13:49.453365" elapsed="0.021258">Record created with invalid column named "salary": -1000.0</status>
</if>
<arg>${negative_driver_test_data_path}</arg>
<arg>Negative</arg>
<arg>natid-155</arg>
<doc>Verify partial uploaded heroes in DB</doc>
<status status="FAIL" start="2024-11-22T12:13:49.453112" elapsed="0.021543">Record created with invalid column named "salary": -1000.0</status>
</kw>
<kw name="Common Test Teardown" owner="generic" type="TEARDOWN">
<kw name="Capture Page Screenshot" owner="SeleniumLibrary">
<msg time="2024-11-22T12:13:49.474939" level="INFO">Cannot capture screenshot because no browser is open.</msg>
<arg>${OUTPUT_DIR}/screenshots/${TEST NAME}.png</arg>
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<status status="PASS" start="2024-11-22T12:13:49.474876" elapsed="0.000080"/>
</kw>
<kw name="Close Browser" owner="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" start="2024-11-22T12:13:49.475004" elapsed="0.000038"/>
</kw>
<status status="PASS" start="2024-11-22T12:13:49.474776" elapsed="0.000287"/>
</kw>
<status status="FAIL" start="2024-11-22T12:13:49.452894" elapsed="0.022197">Record created with invalid column named "salary": -1000.0</status>
</test>
<test id="s1-t8" name="Partial Data Wrong Format - Negative - tax_paid" line="44">
<kw name="Verify Partial Uploaded Data In DB" owner="clerk">
<kw name="Read Csv File To List" owner="CSVLibrary">
<msg time="2024-11-22T12:13:49.475792" level="INFO">${csv_list} = [['${natid}', '${flow}', '${negative_col_name}'], ['natid-150', 'Positive', ''], ['natid-151', 'Positive', ''], ['natid-152', 'Negative', 'name'], ['natid-153', 'Negative', 'gender'], ['natid-154', 'N...</msg>
<var>${csv_list}</var>
<arg>${test_data_path}</arg>
<doc>Read CSV file and return its content as a Python list of tuples.</doc>
<status status="PASS" start="2024-11-22T12:13:49.475655" elapsed="0.000148"/>
</kw>
<if>
<branch type="IF" condition="'${flow}' == 'Positive'">
<for flavor="IN">
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Create Dictionary" owner="BuiltIn">
<var>${dict}</var>
<arg>value_natid=${item[0]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.475999" elapsed="0.000009"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<var>${sql_response}</var>
<arg>select_hero_by_natid</arg>
<arg>${dict}</arg>
<status status="NOT RUN" start="2024-11-22T12:13:49.476081" elapsed="0.000011"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${sql_response} == []</arg>
<arg>Fail</arg>
<arg>${natid} not created in DB</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.476143" elapsed="0.000009"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<var>${sql_response}</var>
<arg>${sql_response}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.476198" elapsed="0.000009"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[0]}</arg>
<arg>${sql_response['natid']}</arg>
<arg>natid</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.476254" elapsed="0.000010"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[1]}</arg>
<arg>${sql_response['name']}</arg>
<arg>name</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.476312" elapsed="0.000012"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[2]}</arg>
<arg>${sql_response['gender']}</arg>
<arg>gender</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.476370" elapsed="0.000009"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[3]}</arg>
<arg>${sql_response['birth_date']}</arg>
<arg>birth_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.476443" elapsed="0.000011"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[4]}</arg>
<arg>${sql_response['death_date']}</arg>
<arg>death_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.476516" elapsed="0.000009"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[5]}</arg>
<arg>${sql_response['salary']}</arg>
<arg>salary</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.476588" elapsed="0.000010"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[6]}</arg>
<arg>${sql_response['tax_paid']}</arg>
<arg>tax_paid</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.476660" elapsed="0.000009"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[7]}</arg>
<arg>${sql_response['brownie_points']}</arg>
<arg>brownie_points</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.476730" elapsed="0.000009"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:49.475949" elapsed="0.000805"/>
</branch>
<status status="NOT RUN" start="2024-11-22T12:13:49.475944" elapsed="0.000824"/>
</if>
<var name="${item}"/>
<status status="NOT RUN" start="2024-11-22T12:13:49.475928" elapsed="0.000848"/>
</iter>
<var>${item}</var>
<value>@{csv_list}</value>
<status status="NOT RUN" start="2024-11-22T12:13:49.475873" elapsed="0.000916"/>
</for>
<status status="NOT RUN" start="2024-11-22T12:13:49.475833" elapsed="0.001022"/>
</branch>
<branch type="ELSE">
<for flavor="IN">
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Set Variable" owner="BuiltIn">
<var>${negative_col_name}</var>
<arg>${item[2]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.477239" elapsed="0.000011"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:49.476953" elapsed="0.000314"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:49.476948" elapsed="0.000332"/>
</if>
<var name="${item}">['${natid}', '${flow}', '${negative_col_name}']</var>
<status status="PASS" start="2024-11-22T12:13:49.476935" elapsed="0.000353"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Set Variable" owner="BuiltIn">
<var>${negative_col_name}</var>
<arg>${item[2]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.477609" elapsed="0.000011"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:49.477345" elapsed="0.000292"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:49.477341" elapsed="0.000310"/>
</if>
<var name="${item}">['natid-150', 'Positive', '']</var>
<status status="PASS" start="2024-11-22T12:13:49.477328" elapsed="0.000331"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Set Variable" owner="BuiltIn">
<var>${negative_col_name}</var>
<arg>${item[2]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.477968" elapsed="0.000010"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:49.477714" elapsed="0.000281"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:49.477710" elapsed="0.000297"/>
</if>
<var name="${item}">['natid-151', 'Positive', '']</var>
<status status="PASS" start="2024-11-22T12:13:49.477698" elapsed="0.000317"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Set Variable" owner="BuiltIn">
<var>${negative_col_name}</var>
<arg>${item[2]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.478317" elapsed="0.000011"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:49.478070" elapsed="0.000275"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:49.478065" elapsed="0.000292"/>
</if>
<var name="${item}">['natid-152', 'Negative', 'name']</var>
<status status="PASS" start="2024-11-22T12:13:49.478054" elapsed="0.000311"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Set Variable" owner="BuiltIn">
<var>${negative_col_name}</var>
<arg>${item[2]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.478664" elapsed="0.000010"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:49.478421" elapsed="0.000270"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:49.478416" elapsed="0.000287"/>
</if>
<var name="${item}">['natid-153', 'Negative', 'gender']</var>
<status status="PASS" start="2024-11-22T12:13:49.478404" elapsed="0.000307"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Set Variable" owner="BuiltIn">
<var>${negative_col_name}</var>
<arg>${item[2]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.479017" elapsed="0.000010"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:49.478766" elapsed="0.000277"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:49.478761" elapsed="0.000294"/>
</if>
<var name="${item}">['natid-154', 'Negative', 'birth_date']</var>
<status status="PASS" start="2024-11-22T12:13:49.478749" elapsed="0.000314"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Set Variable" owner="BuiltIn">
<var>${negative_col_name}</var>
<arg>${item[2]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.479363" elapsed="0.000010"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:49.479120" elapsed="0.000270"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:49.479116" elapsed="0.000286"/>
</if>
<var name="${item}">['natid-155', 'Negative', 'salary']</var>
<status status="PASS" start="2024-11-22T12:13:49.479104" elapsed="0.000306"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-11-22T12:13:49.479933" level="INFO">${negative_col_name} = tax_paid</msg>
<var>${negative_col_name}</var>
<arg>${item[2]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-11-22T12:13:49.479706" elapsed="0.000237"/>
</kw>
<status status="PASS" start="2024-11-22T12:13:49.479465" elapsed="0.000496"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:49.479460" elapsed="0.000513"/>
</if>
<var name="${item}">['natid-156', 'Negative', 'tax_paid']</var>
<status status="PASS" start="2024-11-22T12:13:49.479448" elapsed="0.000532"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Set Variable" owner="BuiltIn">
<var>${negative_col_name}</var>
<arg>${item[2]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.480290" elapsed="0.000010"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:49.480036" elapsed="0.000280"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:49.480031" elapsed="0.000297"/>
</if>
<var name="${item}">['natid-157', 'Positive', '']</var>
<status status="PASS" start="2024-11-22T12:13:49.480019" elapsed="0.000317"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Set Variable" owner="BuiltIn">
<var>${negative_col_name}</var>
<arg>${item[2]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.481371" elapsed="0.000013"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:49.481103" elapsed="0.000305"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:49.481097" elapsed="0.000327"/>
</if>
<var name="${item}">['natid-158', 'Negative', 'gender']</var>
<status status="PASS" start="2024-11-22T12:13:49.481082" elapsed="0.000351"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Set Variable" owner="BuiltIn">
<var>${negative_col_name}</var>
<arg>${item[2]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.481766" elapsed="0.000010"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:49.481498" elapsed="0.000296"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:49.481492" elapsed="0.000314"/>
</if>
<var name="${item}">['natid-159', 'Positive', '']</var>
<status status="PASS" start="2024-11-22T12:13:49.481475" elapsed="0.000339"/>
</iter>
<var>${item}</var>
<value>@{csv_list}</value>
<status status="PASS" start="2024-11-22T12:13:49.476883" elapsed="0.004944"/>
</for>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2024-11-22T12:13:49.481970" level="INFO">${dict} = {'value_natid': 'natid-156'}</msg>
<var>${dict}</var>
<arg>value_natid=${natid}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2024-11-22T12:13:49.481888" elapsed="0.000092"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<kw name="Connect To Database" owner="DatabaseLibrary">
<msg time="2024-11-22T12:13:49.482294" level="INFO">Looking for configuration file: 'resources/db.cfg'</msg>
<msg time="2024-11-22T12:13:49.482312" level="INFO">Configuration file doesn't exist</msg>
<msg time="2024-11-22T12:13:49.482432" level="INFO">Connect to DB using : mysql.connector.connect(database='testdb', user='user', password=***, host='localhost', port=3306)</msg>
<arg>${DB_API}</arg>
<arg>${DB_NAME}</arg>
<arg>${DB_USER}</arg>
<arg>${DB_PASSWORD}</arg>
<arg>${DB_HOST}</arg>
<arg>${DB_PORT}</arg>
<doc>Creates a database connection using the DB API 2.0 ``db_module`` and the parameters provided.
Along with listed commonly used arguments (`db_name`, `db_host` etc.)
you can set any other DB module specific parameters as key/value pairs.</doc>
<status status="PASS" start="2024-11-22T12:13:49.482174" elapsed="0.009797"/>
</kw>
<kw name="Update SQL Queries With Arguments Dictionary" owner="sql-helper">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-11-22T12:13:49.492600" level="INFO" html="true">Getting file '&lt;a href="file:///Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/object-repo/sql-queries/select_hero_by_natid.sql"&gt;/Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/object-repo/sql-queries/select_hero_by_natid.sql&lt;/a&gt;'.</msg>
<msg time="2024-11-22T12:13:49.492687" level="INFO">${sql_query} = SELECT *
FROM testdb.working_class_heroes
WHERE natid='value_natid';</msg>
<var>${sql_query}</var>
<arg>./object-repo/sql-queries/${sql_file_name}.sql</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-11-22T12:13:49.492466" elapsed="0.000232"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2024-11-22T12:13:49.493127" level="INFO">Argument types are:
&lt;class 'robot.utils.dotdict.DotDict'&gt;
&lt;class 'str'&gt;</msg>
<msg time="2024-11-22T12:13:49.493180" level="FAIL">{'value_natid': 'natid-156'} != </msg>
<arg>${args_dict}</arg>
<arg>${EMPTY}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="FAIL" start="2024-11-22T12:13:49.492841" elapsed="0.000371">{'value_natid': 'natid-156'} != </status>
</kw>
<msg time="2024-11-22T12:13:49.493253" level="INFO">${empty_status} = False</msg>
<var>${empty_status}</var>
<arg>Should Be Equal As Strings</arg>
<arg>${args_dict}</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-11-22T12:13:49.492768" elapsed="0.000494"/>
</kw>
<if>
<branch type="IF" condition="'${empty_status}' == '${False}'">
<if>
<branch type="IF" condition="${args_dict}">
<for flavor="IN">
<iter>
<kw name="Convert To String" owner="BuiltIn">
<msg time="2024-11-22T12:13:49.493563" level="INFO">${args_key_str} = value_natid</msg>
<var>${args_key_str}</var>
<arg>${args_key}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="PASS" start="2024-11-22T12:13:49.493500" elapsed="0.000073"/>
</kw>
<kw name="Convert To String" owner="BuiltIn">
<msg time="2024-11-22T12:13:49.493690" level="INFO">${args_value_str} = natid-156</msg>
<var>${args_value_str}</var>
<arg>${args_dict}[${args_key_str}]</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="PASS" start="2024-11-22T12:13:49.493622" elapsed="0.000077"/>
</kw>
<kw name="Replace String" owner="String">
<msg time="2024-11-22T12:13:49.493821" level="INFO">${sql_query} = SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-156';</msg>
<var>${sql_query}</var>
<arg>${sql_query}</arg>
<arg>${args_key_str}</arg>
<arg>${args_value_str}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="PASS" start="2024-11-22T12:13:49.493749" elapsed="0.000082"/>
</kw>
<var name="${args_key}">value_natid</var>
<status status="PASS" start="2024-11-22T12:13:49.493451" elapsed="0.000399"/>
</iter>
<var>${args_key}</var>
<value>@{args_dict}</value>
<status status="PASS" start="2024-11-22T12:13:49.493398" elapsed="0.000471"/>
</for>
<status status="PASS" start="2024-11-22T12:13:49.493367" elapsed="0.000519"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:49.493362" elapsed="0.000537"/>
</if>
<status status="PASS" start="2024-11-22T12:13:49.493299" elapsed="0.000609"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:49.493290" elapsed="0.000629"/>
</if>
<return>
<value>${sql_query}</value>
<status status="PASS" start="2024-11-22T12:13:49.493932" elapsed="0.000017"/>
</return>
<msg time="2024-11-22T12:13:49.493997" level="INFO">${updated_sql_query} = SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-156';</msg>
<var>${updated_sql_query}</var>
<arg>${sql_file_name}</arg>
<arg>${args_dict}</arg>
<status status="PASS" start="2024-11-22T12:13:49.492240" elapsed="0.001767"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-11-22T12:13:49.494223" level="FAIL">'SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-156';' does not contain 'delete'</msg>
<arg>${updated_sql_query}</arg>
<arg>DELETE</arg>
<arg>ignore_case=${True}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-11-22T12:13:49.494123" elapsed="0.000125">'SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-156';' does not contain 'delete'</status>
</kw>
<msg time="2024-11-22T12:13:49.494283" level="INFO">${delete_status} = False</msg>
<var>${delete_status}</var>
<arg>Should Contain</arg>
<arg>${updated_sql_query}</arg>
<arg>DELETE</arg>
<arg>ignore_case=${True}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-11-22T12:13:49.494062" elapsed="0.000230"/>
</kw>
<if>
<branch type="IF" condition="'${delete_status}' == '${True}'">
<kw name="Execute Sql String" owner="DatabaseLibrary">
<var>${json_response}</var>
<arg>${updated_sql_query}</arg>
<doc>Executes the ``sql_string`` as a single SQL command.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.494405" elapsed="0.000009"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:49.494324" elapsed="0.000106"/>
</branch>
<branch type="ELSE">
<kw name="Query" owner="DatabaseLibrary">
<msg time="2024-11-22T12:13:49.494935" level="INFO" html="true">Executing sql:&lt;br&gt;&lt;code style="font-weight: bold;"&gt;SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-156';&lt;/code&gt;</msg>
<msg time="2024-11-22T12:13:49.495641" level="INFO" html="true">&lt;div style="max-width: 100%; overflow-x: auto;"&gt;&lt;table style="width: auto; border-collapse: collapse; border: 2px solid rgb(140 140 140)"&gt;&lt;caption style="text-align: left; font-weight: bold; padding: 5px;"&gt;Query returned 1 rows&lt;/caption&gt;&lt;tr&gt;&lt;th scope="col" style="background-color: #d6ecd4; border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;Row&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;id&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;created_at&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;create_by&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;updated_at&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;updated_by&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;birth_date&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;brownie_points&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;death_date&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;gender&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;name&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;natid&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;salary&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;tax_paid&lt;/th&gt;&lt;/tr&gt;&lt;tr style="background-color: #eee;"&gt;&lt;th scope="row" style="background-color: #d6ecd4;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;0&lt;/th&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;27438918-41d6-4644-acb9-11ea33461d2f&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;2024-11-22 12:13:48.680553&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;SYSTEM&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;2024-11-22 12:13:48.680553&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;SYSTEM&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;1996-01-01 23:59:59&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;None&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;None&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;MALE&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;Cherry Chan&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;natid-156&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;10320.0&lt;/td&gt;&lt;td style="border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;-10.0&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;</msg>
<msg time="2024-11-22T12:13:49.496127" level="INFO">${json_response} = [{'id': '27438918-41d6-4644-acb9-11ea33461d2f', 'created_at': datetime.datetime(2024, 11, 22, 12, 13, 48, 680553), 'create_by': 'SYSTEM', 'updated_at': datetime.datetime(2024, 11, 22, 12, 13, 48, 6805...</msg>
<var>${json_response}</var>
<arg>${updated_sql_query}</arg>
<arg>return_dict=${True}</arg>
<doc>Runs a query with the ``select_statement`` and returns the result as list of rows.
The type of row values depends on the database module -
usually they are tuples or tuple-like objects.</doc>
<status status="PASS" start="2024-11-22T12:13:49.494484" elapsed="0.001656"/>
</kw>
<status status="PASS" start="2024-11-22T12:13:49.494442" elapsed="0.001724"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:49.494317" elapsed="0.001865"/>
</if>
<kw name="Disconnect From Database" owner="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<status status="PASS" start="2024-11-22T12:13:49.496236" elapsed="0.000096"/>
</kw>
<return>
<value>${json_response}</value>
<status status="PASS" start="2024-11-22T12:13:49.496353" elapsed="0.000018"/>
</return>
<msg time="2024-11-22T12:13:49.496430" level="INFO">${sql_response} = [{'id': '27438918-41d6-4644-acb9-11ea33461d2f', 'created_at': datetime.datetime(2024, 11, 22, 12, 13, 48, 680553), 'create_by': 'SYSTEM', 'updated_at': datetime.datetime(2024, 11, 22, 12, 13, 48, 6805...</msg>
<var>${sql_response}</var>
<arg>select_hero_by_natid</arg>
<arg>${dict}</arg>
<status status="PASS" start="2024-11-22T12:13:49.482057" elapsed="0.014385"/>
</kw>
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T12:13:49.496707" level="INFO">
[{'id': '27438918-41d6-4644-acb9-11ea33461d2f', 'created_at': datetime.datetime(2024, 11, 22, 12, 13, 48, 680553), 'create_by': 'SYSTEM', 'updated_at': datetime.datetime(2024, 11, 22, 12, 13, 48, 680553), 'updated_by': 'SYSTEM', 'birth_date': datetime.datetime(1996, 1, 1, 23, 59, 59), 'brownie_points': None, 'death_date': None, 'gender': 'MALE', 'name': 'Cherry Chan', 'natid': 'natid-156', 'salary': 10320.0, 'tax_paid': -10.0}]</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T12:13:49.496645" elapsed="0.000081"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T12:13:49.496777" elapsed="0.000066"/>
</kw>
<arg>${sql_response}</arg>
<status status="PASS" start="2024-11-22T12:13:49.496512" elapsed="0.000357"/>
</kw>
<if>
<branch type="IF" condition="${sql_response} != []">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-11-22T12:13:49.497121" level="INFO">${sql_response} = {'id': '27438918-41d6-4644-acb9-11ea33461d2f', 'created_at': datetime.datetime(2024, 11, 22, 12, 13, 48, 680553), 'create_by': 'SYSTEM', 'updated_at': datetime.datetime(2024, 11, 22, 12, 13, 48, 68055...</msg>
<var>${sql_response}</var>
<arg>${sql_response}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-11-22T12:13:49.497054" elapsed="0.000078"/>
</kw>
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T12:13:49.497341" level="INFO">
{'id': '27438918-41d6-4644-acb9-11ea33461d2f', 'created_at': datetime.datetime(2024, 11, 22, 12, 13, 48, 680553), 'create_by': 'SYSTEM', 'updated_at': datetime.datetime(2024, 11, 22, 12, 13, 48, 680553), 'updated_by': 'SYSTEM', 'birth_date': datetime.datetime(1996, 1, 1, 23, 59, 59), 'brownie_points': None, 'death_date': None, 'gender': 'MALE', 'name': 'Cherry Chan', 'natid': 'natid-156', 'salary': 10320.0, 'tax_paid': -10.0}</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T12:13:49.497293" elapsed="0.000067"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T12:13:49.497407" elapsed="0.000119"/>
</kw>
<arg>${sql_response}</arg>
<status status="PASS" start="2024-11-22T12:13:49.497191" elapsed="0.000358"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-11-22T12:13:49.498042" level="INFO">${failure_msg} = -10.0</msg>
<var>${failure_msg}</var>
<arg>${sql_response['${negative_col_name}']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-11-22T12:13:49.497595" elapsed="0.000458"/>
</kw>
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T12:13:49.498281" level="INFO">
{'id': '27438918-41d6-4644-acb9-11ea33461d2f', 'created_at': datetime.datetime(2024, 11, 22, 12, 13, 48, 680553), 'create_by': 'SYSTEM', 'updated_at': datetime.datetime(2024, 11, 22, 12, 13, 48, 680553), 'updated_by': 'SYSTEM', 'birth_date': datetime.datetime(1996, 1, 1, 23, 59, 59), 'brownie_points': None, 'death_date': None, 'gender': 'MALE', 'name': 'Cherry Chan', 'natid': 'natid-156', 'salary': 10320.0, 'tax_paid': -10.0}</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T12:13:49.498219" elapsed="0.000080"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T12:13:49.498346" elapsed="0.000060"/>
</kw>
<arg>${sql_response}</arg>
<status status="PASS" start="2024-11-22T12:13:49.498117" elapsed="0.000312"/>
</kw>
<kw name="Fail" owner="BuiltIn">
<msg time="2024-11-22T12:13:49.498824" level="FAIL">Record created with invalid column named "tax_paid": -10.0</msg>
<arg>Record created with invalid column named "${negative_col_name}": ${sql_response['${negative_col_name}']}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="FAIL" start="2024-11-22T12:13:49.498475" elapsed="0.000383">Record created with invalid column named "tax_paid": -10.0</status>
</kw>
<status status="FAIL" start="2024-11-22T12:13:49.496899" elapsed="0.001997">Record created with invalid column named "tax_paid": -10.0</status>
</branch>
<status status="FAIL" start="2024-11-22T12:13:49.496891" elapsed="0.002027">Record created with invalid column named "tax_paid": -10.0</status>
</if>
<status status="FAIL" start="2024-11-22T12:13:49.476867" elapsed="0.022070">Record created with invalid column named "tax_paid": -10.0</status>
</branch>
<status status="FAIL" start="2024-11-22T12:13:49.475826" elapsed="0.023124">Record created with invalid column named "tax_paid": -10.0</status>
</if>
<arg>${negative_driver_test_data_path}</arg>
<arg>Negative</arg>
<arg>natid-156</arg>
<doc>Verify partial uploaded heroes in DB</doc>
<status status="FAIL" start="2024-11-22T12:13:49.475540" elapsed="0.023445">Record created with invalid column named "tax_paid": -10.0</status>
</kw>
<kw name="Common Test Teardown" owner="generic" type="TEARDOWN">
<kw name="Capture Page Screenshot" owner="SeleniumLibrary">
<msg time="2024-11-22T12:13:49.499304" level="INFO">Cannot capture screenshot because no browser is open.</msg>
<arg>${OUTPUT_DIR}/screenshots/${TEST NAME}.png</arg>
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<status status="PASS" start="2024-11-22T12:13:49.499234" elapsed="0.000119"/>
</kw>
<kw name="Close Browser" owner="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" start="2024-11-22T12:13:49.499429" elapsed="0.000056"/>
</kw>
<status status="PASS" start="2024-11-22T12:13:49.499110" elapsed="0.000401"/>
</kw>
<status status="FAIL" start="2024-11-22T12:13:49.475195" elapsed="0.024355">Record created with invalid column named "tax_paid": -10.0</status>
</test>
<test id="s1-t9" name="Partial Data Wrong Format - Positive - positive records before negative will still be created" line="47">
<kw name="Verify Partial Uploaded Data In DB" owner="clerk">
<kw name="Read Csv File To List" owner="CSVLibrary">
<msg time="2024-11-22T12:13:49.500232" level="INFO">${csv_list} = [['${natid}', '${flow}', '${negative_col_name}'], ['natid-150', 'Positive', ''], ['natid-151', 'Positive', ''], ['natid-152', 'Negative', 'name'], ['natid-153', 'Negative', 'gender'], ['natid-154', 'N...</msg>
<var>${csv_list}</var>
<arg>${test_data_path}</arg>
<doc>Read CSV file and return its content as a Python list of tuples.</doc>
<status status="PASS" start="2024-11-22T12:13:49.500087" elapsed="0.000157"/>
</kw>
<if>
<branch type="IF" condition="'${flow}' == 'Positive'">
<for flavor="IN">
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Create Dictionary" owner="BuiltIn">
<var>${dict}</var>
<arg>value_natid=${item[0]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.500762" elapsed="0.000011"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<var>${sql_response}</var>
<arg>select_hero_by_natid</arg>
<arg>${dict}</arg>
<status status="NOT RUN" start="2024-11-22T12:13:49.500857" elapsed="0.000012"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${sql_response} == []</arg>
<arg>Fail</arg>
<arg>${natid} not created in DB</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.500923" elapsed="0.000010"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<var>${sql_response}</var>
<arg>${sql_response}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.500980" elapsed="0.000009"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[0]}</arg>
<arg>${sql_response['natid']}</arg>
<arg>natid</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.501037" elapsed="0.000010"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[1]}</arg>
<arg>${sql_response['name']}</arg>
<arg>name</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.501093" elapsed="0.000011"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[2]}</arg>
<arg>${sql_response['gender']}</arg>
<arg>gender</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.501154" elapsed="0.000010"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[3]}</arg>
<arg>${sql_response['birth_date']}</arg>
<arg>birth_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.501232" elapsed="0.000012"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[4]}</arg>
<arg>${sql_response['death_date']}</arg>
<arg>death_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.501309" elapsed="0.000010"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[5]}</arg>
<arg>${sql_response['salary']}</arg>
<arg>salary</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.501388" elapsed="0.000010"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[6]}</arg>
<arg>${sql_response['tax_paid']}</arg>
<arg>tax_paid</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.501461" elapsed="0.000010"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[7]}</arg>
<arg>${sql_response['brownie_points']}</arg>
<arg>brownie_points</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.501535" elapsed="0.000011"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:49.500437" elapsed="0.001125"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:49.500430" elapsed="0.001146"/>
</if>
<var name="${item}">['${natid}', '${flow}', '${negative_col_name}']</var>
<status status="PASS" start="2024-11-22T12:13:49.500411" elapsed="0.001174"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Create Dictionary" owner="BuiltIn">
<var>${dict}</var>
<arg>value_natid=${item[0]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.502136" elapsed="0.000012"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<var>${sql_response}</var>
<arg>select_hero_by_natid</arg>
<arg>${dict}</arg>
<status status="NOT RUN" start="2024-11-22T12:13:49.502231" elapsed="0.000011"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${sql_response} == []</arg>
<arg>Fail</arg>
<arg>${natid} not created in DB</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.502294" elapsed="0.000010"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<var>${sql_response}</var>
<arg>${sql_response}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.502351" elapsed="0.000008"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[0]}</arg>
<arg>${sql_response['natid']}</arg>
<arg>natid</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.502407" elapsed="0.000011"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[1]}</arg>
<arg>${sql_response['name']}</arg>
<arg>name</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.502465" elapsed="0.000009"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[2]}</arg>
<arg>${sql_response['gender']}</arg>
<arg>gender</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.502518" elapsed="0.000009"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[3]}</arg>
<arg>${sql_response['birth_date']}</arg>
<arg>birth_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.502591" elapsed="0.000010"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[4]}</arg>
<arg>${sql_response['death_date']}</arg>
<arg>death_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.502665" elapsed="0.000010"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[5]}</arg>
<arg>${sql_response['salary']}</arg>
<arg>salary</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.502754" elapsed="0.000010"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[6]}</arg>
<arg>${sql_response['tax_paid']}</arg>
<arg>tax_paid</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.502825" elapsed="0.000010"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[7]}</arg>
<arg>${sql_response['brownie_points']}</arg>
<arg>brownie_points</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.502900" elapsed="0.000010"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:49.501822" elapsed="0.001104"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:49.501816" elapsed="0.001124"/>
</if>
<var name="${item}">['natid-150', 'Positive', '']</var>
<status status="PASS" start="2024-11-22T12:13:49.501742" elapsed="0.001208"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Create Dictionary" owner="BuiltIn">
<var>${dict}</var>
<arg>value_natid=${item[0]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.503333" elapsed="0.000011"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<var>${sql_response}</var>
<arg>select_hero_by_natid</arg>
<arg>${dict}</arg>
<status status="NOT RUN" start="2024-11-22T12:13:49.503434" elapsed="0.000012"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${sql_response} == []</arg>
<arg>Fail</arg>
<arg>${natid} not created in DB</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.503503" elapsed="0.000009"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<var>${sql_response}</var>
<arg>${sql_response}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.503561" elapsed="0.000009"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[0]}</arg>
<arg>${sql_response['natid']}</arg>
<arg>natid</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.503620" elapsed="0.000010"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[1]}</arg>
<arg>${sql_response['name']}</arg>
<arg>name</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.503678" elapsed="0.000011"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[2]}</arg>
<arg>${sql_response['gender']}</arg>
<arg>gender</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.503737" elapsed="0.000011"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[3]}</arg>
<arg>${sql_response['birth_date']}</arg>
<arg>birth_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.503816" elapsed="0.000011"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[4]}</arg>
<arg>${sql_response['death_date']}</arg>
<arg>death_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.503895" elapsed="0.000010"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[5]}</arg>
<arg>${sql_response['salary']}</arg>
<arg>salary</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.503973" elapsed="0.000010"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[6]}</arg>
<arg>${sql_response['tax_paid']}</arg>
<arg>tax_paid</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.504042" elapsed="0.000010"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[7]}</arg>
<arg>${sql_response['brownie_points']}</arg>
<arg>brownie_points</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.504133" elapsed="0.000011"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:49.503038" elapsed="0.001123"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:49.503032" elapsed="0.001143"/>
</if>
<var name="${item}">['natid-151', 'Positive', '']</var>
<status status="PASS" start="2024-11-22T12:13:49.503016" elapsed="0.001167"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Create Dictionary" owner="BuiltIn">
<var>${dict}</var>
<arg>value_natid=${item[0]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.504560" elapsed="0.000011"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<var>${sql_response}</var>
<arg>select_hero_by_natid</arg>
<arg>${dict}</arg>
<status status="NOT RUN" start="2024-11-22T12:13:49.504648" elapsed="0.000011"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${sql_response} == []</arg>
<arg>Fail</arg>
<arg>${natid} not created in DB</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.504709" elapsed="0.000010"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<var>${sql_response}</var>
<arg>${sql_response}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.504764" elapsed="0.000009"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[0]}</arg>
<arg>${sql_response['natid']}</arg>
<arg>natid</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.504819" elapsed="0.000010"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[1]}</arg>
<arg>${sql_response['name']}</arg>
<arg>name</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.504876" elapsed="0.000011"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[2]}</arg>
<arg>${sql_response['gender']}</arg>
<arg>gender</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.504990" elapsed="0.000009"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[3]}</arg>
<arg>${sql_response['birth_date']}</arg>
<arg>birth_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.505149" elapsed="0.000011"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[4]}</arg>
<arg>${sql_response['death_date']}</arg>
<arg>death_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.505225" elapsed="0.000011"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[5]}</arg>
<arg>${sql_response['salary']}</arg>
<arg>salary</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.505307" elapsed="0.000010"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[6]}</arg>
<arg>${sql_response['tax_paid']}</arg>
<arg>tax_paid</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.505383" elapsed="0.000012"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[7]}</arg>
<arg>${sql_response['brownie_points']}</arg>
<arg>brownie_points</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.505457" elapsed="0.000010"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:49.504267" elapsed="0.001216"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:49.504260" elapsed="0.001236"/>
</if>
<var name="${item}">['natid-152', 'Negative', 'name']</var>
<status status="PASS" start="2024-11-22T12:13:49.504245" elapsed="0.001260"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Create Dictionary" owner="BuiltIn">
<var>${dict}</var>
<arg>value_natid=${item[0]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.505881" elapsed="0.000011"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<var>${sql_response}</var>
<arg>select_hero_by_natid</arg>
<arg>${dict}</arg>
<status status="NOT RUN" start="2024-11-22T12:13:49.505965" elapsed="0.000011"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${sql_response} == []</arg>
<arg>Fail</arg>
<arg>${natid} not created in DB</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.506038" elapsed="0.000009"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<var>${sql_response}</var>
<arg>${sql_response}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.506099" elapsed="0.000010"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[0]}</arg>
<arg>${sql_response['natid']}</arg>
<arg>natid</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.506163" elapsed="0.000010"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[1]}</arg>
<arg>${sql_response['name']}</arg>
<arg>name</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.506223" elapsed="0.000011"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[2]}</arg>
<arg>${sql_response['gender']}</arg>
<arg>gender</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.506283" elapsed="0.000009"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[3]}</arg>
<arg>${sql_response['birth_date']}</arg>
<arg>birth_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.506364" elapsed="0.000011"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[4]}</arg>
<arg>${sql_response['death_date']}</arg>
<arg>death_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.506446" elapsed="0.000010"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[5]}</arg>
<arg>${sql_response['salary']}</arg>
<arg>salary</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.506529" elapsed="0.000011"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[6]}</arg>
<arg>${sql_response['tax_paid']}</arg>
<arg>tax_paid</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.506612" elapsed="0.000010"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[7]}</arg>
<arg>${sql_response['brownie_points']}</arg>
<arg>brownie_points</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.506699" elapsed="0.000011"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:49.505580" elapsed="0.001149"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:49.505575" elapsed="0.001169"/>
</if>
<var name="${item}">['natid-153', 'Negative', 'gender']</var>
<status status="PASS" start="2024-11-22T12:13:49.505562" elapsed="0.001191"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Create Dictionary" owner="BuiltIn">
<var>${dict}</var>
<arg>value_natid=${item[0]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.507145" elapsed="0.000011"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<var>${sql_response}</var>
<arg>select_hero_by_natid</arg>
<arg>${dict}</arg>
<status status="NOT RUN" start="2024-11-22T12:13:49.507234" elapsed="0.000012"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${sql_response} == []</arg>
<arg>Fail</arg>
<arg>${natid} not created in DB</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.507297" elapsed="0.000009"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<var>${sql_response}</var>
<arg>${sql_response}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.507351" elapsed="0.000010"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[0]}</arg>
<arg>${sql_response['natid']}</arg>
<arg>natid</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.507407" elapsed="0.000010"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[1]}</arg>
<arg>${sql_response['name']}</arg>
<arg>name</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.507462" elapsed="0.000011"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[2]}</arg>
<arg>${sql_response['gender']}</arg>
<arg>gender</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.507520" elapsed="0.000009"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[3]}</arg>
<arg>${sql_response['birth_date']}</arg>
<arg>birth_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.507593" elapsed="0.000011"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[4]}</arg>
<arg>${sql_response['death_date']}</arg>
<arg>death_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.507672" elapsed="0.000009"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[5]}</arg>
<arg>${sql_response['salary']}</arg>
<arg>salary</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.507779" elapsed="0.000022"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[6]}</arg>
<arg>${sql_response['tax_paid']}</arg>
<arg>tax_paid</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.507892" elapsed="0.000014"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[7]}</arg>
<arg>${sql_response['brownie_points']}</arg>
<arg>brownie_points</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.508040" elapsed="0.000011"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:49.506840" elapsed="0.001272"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:49.506834" elapsed="0.001305"/>
</if>
<var name="${item}">['natid-154', 'Negative', 'birth_date']</var>
<status status="PASS" start="2024-11-22T12:13:49.506820" elapsed="0.001330"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Create Dictionary" owner="BuiltIn">
<var>${dict}</var>
<arg>value_natid=${item[0]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.508680" elapsed="0.000012"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<var>${sql_response}</var>
<arg>select_hero_by_natid</arg>
<arg>${dict}</arg>
<status status="NOT RUN" start="2024-11-22T12:13:49.508776" elapsed="0.000012"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${sql_response} == []</arg>
<arg>Fail</arg>
<arg>${natid} not created in DB</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.508842" elapsed="0.000010"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<var>${sql_response}</var>
<arg>${sql_response}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.508902" elapsed="0.000010"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[0]}</arg>
<arg>${sql_response['natid']}</arg>
<arg>natid</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.508968" elapsed="0.000010"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[1]}</arg>
<arg>${sql_response['name']}</arg>
<arg>name</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.509024" elapsed="0.000010"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[2]}</arg>
<arg>${sql_response['gender']}</arg>
<arg>gender</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.509081" elapsed="0.000009"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[3]}</arg>
<arg>${sql_response['birth_date']}</arg>
<arg>birth_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.509154" elapsed="0.000011"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[4]}</arg>
<arg>${sql_response['death_date']}</arg>
<arg>death_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.509231" elapsed="0.000010"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[5]}</arg>
<arg>${sql_response['salary']}</arg>
<arg>salary</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.509308" elapsed="0.000024"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[6]}</arg>
<arg>${sql_response['tax_paid']}</arg>
<arg>tax_paid</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.509398" elapsed="0.000009"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[7]}</arg>
<arg>${sql_response['brownie_points']}</arg>
<arg>brownie_points</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.509522" elapsed="0.000015"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:49.508259" elapsed="0.001297"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:49.508253" elapsed="0.001319"/>
</if>
<var name="${item}">['natid-155', 'Negative', 'salary']</var>
<status status="PASS" start="2024-11-22T12:13:49.508235" elapsed="0.001346"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Create Dictionary" owner="BuiltIn">
<var>${dict}</var>
<arg>value_natid=${item[0]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.510016" elapsed="0.000012"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<var>${sql_response}</var>
<arg>select_hero_by_natid</arg>
<arg>${dict}</arg>
<status status="NOT RUN" start="2024-11-22T12:13:49.510114" elapsed="0.000011"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${sql_response} == []</arg>
<arg>Fail</arg>
<arg>${natid} not created in DB</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.510175" elapsed="0.000010"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<var>${sql_response}</var>
<arg>${sql_response}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.510231" elapsed="0.000008"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[0]}</arg>
<arg>${sql_response['natid']}</arg>
<arg>natid</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.510285" elapsed="0.000010"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[1]}</arg>
<arg>${sql_response['name']}</arg>
<arg>name</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.510341" elapsed="0.000009"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[2]}</arg>
<arg>${sql_response['gender']}</arg>
<arg>gender</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.510394" elapsed="0.000009"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[3]}</arg>
<arg>${sql_response['birth_date']}</arg>
<arg>birth_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.510468" elapsed="0.000009"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[4]}</arg>
<arg>${sql_response['death_date']}</arg>
<arg>death_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.510541" elapsed="0.000009"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[5]}</arg>
<arg>${sql_response['salary']}</arg>
<arg>salary</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.510613" elapsed="0.000010"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[6]}</arg>
<arg>${sql_response['tax_paid']}</arg>
<arg>tax_paid</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.510688" elapsed="0.000009"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[7]}</arg>
<arg>${sql_response['brownie_points']}</arg>
<arg>brownie_points</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.510759" elapsed="0.000010"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:49.509670" elapsed="0.001115"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:49.509664" elapsed="0.001135"/>
</if>
<var name="${item}">['natid-156', 'Negative', 'tax_paid']</var>
<status status="PASS" start="2024-11-22T12:13:49.509648" elapsed="0.001160"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2024-11-22T12:13:49.511518" level="INFO">${dict} = {'value_natid': 'natid-157'}</msg>
<var>${dict}</var>
<arg>value_natid=${item[0]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2024-11-22T12:13:49.511201" elapsed="0.000330"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<kw name="Connect To Database" owner="DatabaseLibrary">
<msg time="2024-11-22T12:13:49.511912" level="INFO">Looking for configuration file: 'resources/db.cfg'</msg>
<msg time="2024-11-22T12:13:49.511934" level="INFO">Configuration file doesn't exist</msg>
<msg time="2024-11-22T12:13:49.512070" level="INFO">Connect to DB using : mysql.connector.connect(database='testdb', user='user', password=***, host='localhost', port=3306)</msg>
<arg>${DB_API}</arg>
<arg>${DB_NAME}</arg>
<arg>${DB_USER}</arg>
<arg>${DB_PASSWORD}</arg>
<arg>${DB_HOST}</arg>
<arg>${DB_PORT}</arg>
<doc>Creates a database connection using the DB API 2.0 ``db_module`` and the parameters provided.
Along with listed commonly used arguments (`db_name`, `db_host` etc.)
you can set any other DB module specific parameters as key/value pairs.</doc>
<status status="PASS" start="2024-11-22T12:13:49.511781" elapsed="0.006492"/>
</kw>
<kw name="Update SQL Queries With Arguments Dictionary" owner="sql-helper">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-11-22T12:13:49.519078" level="INFO" html="true">Getting file '&lt;a href="file:///Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/object-repo/sql-queries/select_hero_by_natid.sql"&gt;/Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/object-repo/sql-queries/select_hero_by_natid.sql&lt;/a&gt;'.</msg>
<msg time="2024-11-22T12:13:49.519263" level="INFO">${sql_query} = SELECT *
FROM testdb.working_class_heroes
WHERE natid='value_natid';</msg>
<var>${sql_query}</var>
<arg>./object-repo/sql-queries/${sql_file_name}.sql</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-11-22T12:13:49.518812" elapsed="0.000467"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2024-11-22T12:13:49.519901" level="INFO">Argument types are:
&lt;class 'robot.utils.dotdict.DotDict'&gt;
&lt;class 'str'&gt;</msg>
<msg time="2024-11-22T12:13:49.519957" level="FAIL">{'value_natid': 'natid-157'} != </msg>
<arg>${args_dict}</arg>
<arg>${EMPTY}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="FAIL" start="2024-11-22T12:13:49.519601" elapsed="0.000392">{'value_natid': 'natid-157'} != </status>
</kw>
<msg time="2024-11-22T12:13:49.520042" level="INFO">${empty_status} = False</msg>
<var>${empty_status}</var>
<arg>Should Be Equal As Strings</arg>
<arg>${args_dict}</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-11-22T12:13:49.519498" elapsed="0.000553"/>
</kw>
<if>
<branch type="IF" condition="'${empty_status}' == '${False}'">
<if>
<branch type="IF" condition="${args_dict}">
<for flavor="IN">
<iter>
<kw name="Convert To String" owner="BuiltIn">
<msg time="2024-11-22T12:13:49.520455" level="INFO">${args_key_str} = value_natid</msg>
<var>${args_key_str}</var>
<arg>${args_key}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="PASS" start="2024-11-22T12:13:49.520384" elapsed="0.000081"/>
</kw>
<kw name="Convert To String" owner="BuiltIn">
<msg time="2024-11-22T12:13:49.520587" level="INFO">${args_value_str} = natid-157</msg>
<var>${args_value_str}</var>
<arg>${args_dict}[${args_key_str}]</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="PASS" start="2024-11-22T12:13:49.520517" elapsed="0.000080"/>
</kw>
<kw name="Replace String" owner="String">
<msg time="2024-11-22T12:13:49.520739" level="INFO">${sql_query} = SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-157';</msg>
<var>${sql_query}</var>
<arg>${sql_query}</arg>
<arg>${args_key_str}</arg>
<arg>${args_value_str}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="PASS" start="2024-11-22T12:13:49.520650" elapsed="0.000100"/>
</kw>
<var name="${args_key}">value_natid</var>
<status status="PASS" start="2024-11-22T12:13:49.520329" elapsed="0.000441"/>
</iter>
<var>${args_key}</var>
<value>@{args_dict}</value>
<status status="PASS" start="2024-11-22T12:13:49.520219" elapsed="0.000625"/>
</for>
<status status="PASS" start="2024-11-22T12:13:49.520175" elapsed="0.000696"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:49.520168" elapsed="0.000720"/>
</if>
<status status="PASS" start="2024-11-22T12:13:49.520094" elapsed="0.000804"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:49.520082" elapsed="0.000828"/>
</if>
<return>
<value>${sql_query}</value>
<status status="PASS" start="2024-11-22T12:13:49.520925" elapsed="0.000021"/>
</return>
<msg time="2024-11-22T12:13:49.521008" level="INFO">${updated_sql_query} = SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-157';</msg>
<var>${updated_sql_query}</var>
<arg>${sql_file_name}</arg>
<arg>${args_dict}</arg>
<status status="PASS" start="2024-11-22T12:13:49.518620" elapsed="0.002400"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-11-22T12:13:49.521312" level="FAIL">'SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-157';' does not contain 'delete'</msg>
<arg>${updated_sql_query}</arg>
<arg>DELETE</arg>
<arg>ignore_case=${True}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-11-22T12:13:49.521194" elapsed="0.000150">'SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-157';' does not contain 'delete'</status>
</kw>
<msg time="2024-11-22T12:13:49.521386" level="INFO">${delete_status} = False</msg>
<var>${delete_status}</var>
<arg>Should Contain</arg>
<arg>${updated_sql_query}</arg>
<arg>DELETE</arg>
<arg>ignore_case=${True}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-11-22T12:13:49.521085" elapsed="0.000311"/>
</kw>
<if>
<branch type="IF" condition="'${delete_status}' == '${True}'">
<kw name="Execute Sql String" owner="DatabaseLibrary">
<var>${json_response}</var>
<arg>${updated_sql_query}</arg>
<doc>Executes the ``sql_string`` as a single SQL command.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.521525" elapsed="0.000010"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:49.521430" elapsed="0.000122"/>
</branch>
<branch type="ELSE">
<kw name="Query" owner="DatabaseLibrary">
<msg time="2024-11-22T12:13:49.522260" level="INFO" html="true">Executing sql:&lt;br&gt;&lt;code style="font-weight: bold;"&gt;SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-157';&lt;/code&gt;</msg>
<msg time="2024-11-22T12:13:49.522990" level="INFO" html="true">&lt;div style="max-width: 100%; overflow-x: auto;"&gt;&lt;table style="width: auto; border-collapse: collapse; border: 2px solid rgb(140 140 140)"&gt;&lt;caption style="text-align: left; font-weight: bold; padding: 5px;"&gt;Query returned 0 rows&lt;/caption&gt;&lt;tr&gt;&lt;th scope="col" style="background-color: #d6ecd4; border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;Row&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;id&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;created_at&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;create_by&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;updated_at&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;updated_by&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;birth_date&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;brownie_points&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;death_date&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;gender&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;name&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;natid&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;salary&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;tax_paid&lt;/th&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;</msg>
<msg time="2024-11-22T12:13:49.523525" level="INFO">${json_response} = []</msg>
<var>${json_response}</var>
<arg>${updated_sql_query}</arg>
<arg>return_dict=${True}</arg>
<doc>Runs a query with the ``select_statement`` and returns the result as list of rows.
The type of row values depends on the database module -
usually they are tuples or tuple-like objects.</doc>
<status status="PASS" start="2024-11-22T12:13:49.521610" elapsed="0.001930"/>
</kw>
<status status="PASS" start="2024-11-22T12:13:49.521565" elapsed="0.002003"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:49.521423" elapsed="0.002162"/>
</if>
<kw name="Disconnect From Database" owner="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<status status="PASS" start="2024-11-22T12:13:49.523647" elapsed="0.000195"/>
</kw>
<return>
<value>${json_response}</value>
<status status="PASS" start="2024-11-22T12:13:49.523872" elapsed="0.000020"/>
</return>
<msg time="2024-11-22T12:13:49.523958" level="INFO">${sql_response} = []</msg>
<var>${sql_response}</var>
<arg>select_hero_by_natid</arg>
<arg>${dict}</arg>
<status status="PASS" start="2024-11-22T12:13:49.511608" elapsed="0.012362"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Fail" owner="BuiltIn">
<msg time="2024-11-22T12:13:49.524312" level="FAIL">natid-157 not created in DB</msg>
<arg>${natid} not created in DB</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="FAIL" start="2024-11-22T12:13:49.524193" elapsed="0.000153">natid-157 not created in DB</status>
</kw>
<arg>${sql_response} == []</arg>
<arg>Fail</arg>
<arg>${natid} not created in DB</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="FAIL" start="2024-11-22T12:13:49.524043" elapsed="0.000333">natid-157 not created in DB</status>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<var>${sql_response}</var>
<arg>${sql_response}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.524487" elapsed="0.000014"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[0]}</arg>
<arg>${sql_response['natid']}</arg>
<arg>natid</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.524623" elapsed="0.000016"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[1]}</arg>
<arg>${sql_response['name']}</arg>
<arg>name</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.524702" elapsed="0.000011"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[2]}</arg>
<arg>${sql_response['gender']}</arg>
<arg>gender</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.524763" elapsed="0.000010"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[3]}</arg>
<arg>${sql_response['birth_date']}</arg>
<arg>birth_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.524852" elapsed="0.000009"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[4]}</arg>
<arg>${sql_response['death_date']}</arg>
<arg>death_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.524928" elapsed="0.000011"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[5]}</arg>
<arg>${sql_response['salary']}</arg>
<arg>salary</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.525004" elapsed="0.000010"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[6]}</arg>
<arg>${sql_response['tax_paid']}</arg>
<arg>tax_paid</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.525079" elapsed="0.000011"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[7]}</arg>
<arg>${sql_response['brownie_points']}</arg>
<arg>brownie_points</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.525158" elapsed="0.000010"/>
</kw>
<status status="FAIL" start="2024-11-22T12:13:49.510886" elapsed="0.014312">natid-157 not created in DB</status>
</branch>
<status status="FAIL" start="2024-11-22T12:13:49.510881" elapsed="0.014337">natid-157 not created in DB</status>
</if>
<var name="${item}">['natid-157', 'Positive', '']</var>
<status status="FAIL" start="2024-11-22T12:13:49.510866" elapsed="0.014374">natid-157 not created in DB</status>
</iter>
<var>${item}</var>
<value>@{csv_list}</value>
<status status="FAIL" start="2024-11-22T12:13:49.500331" elapsed="0.024944">natid-157 not created in DB</status>
</for>
<status status="FAIL" start="2024-11-22T12:13:49.500279" elapsed="0.025024">natid-157 not created in DB</status>
</branch>
<branch type="ELSE">
<for flavor="IN">
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Set Variable" owner="BuiltIn">
<var>${negative_col_name}</var>
<arg>${item[2]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.525449" elapsed="0.000010"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:49.525400" elapsed="0.000076"/>
</branch>
<status status="NOT RUN" start="2024-11-22T12:13:49.525394" elapsed="0.000095"/>
</if>
<var name="${item}"/>
<status status="NOT RUN" start="2024-11-22T12:13:49.525378" elapsed="0.000119"/>
</iter>
<var>${item}</var>
<value>@{csv_list}</value>
<status status="NOT RUN" start="2024-11-22T12:13:49.525342" elapsed="0.000169"/>
</for>
<kw name="Create Dictionary" owner="BuiltIn">
<var>${dict}</var>
<arg>value_natid=${natid}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.525564" elapsed="0.000073"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<var>${sql_response}</var>
<arg>select_hero_by_natid</arg>
<arg>${dict}</arg>
<status status="NOT RUN" start="2024-11-22T12:13:49.525716" elapsed="0.000011"/>
</kw>
<kw name="Log and Log To Console" owner="generic">
<arg>${sql_response}</arg>
<status status="NOT RUN" start="2024-11-22T12:13:49.525775" elapsed="0.000009"/>
</kw>
<if>
<branch type="IF" condition="${sql_response} != []">
<kw name="Set Variable" owner="BuiltIn">
<var>${sql_response}</var>
<arg>${sql_response}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.525978" elapsed="0.000011"/>
</kw>
<kw name="Log and Log To Console" owner="generic">
<arg>${sql_response}</arg>
<status status="NOT RUN" start="2024-11-22T12:13:49.526039" elapsed="0.000010"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<var>${failure_msg}</var>
<arg>${sql_response['${negative_col_name}']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.526094" elapsed="0.000009"/>
</kw>
<kw name="Log and Log To Console" owner="generic">
<arg>${sql_response}</arg>
<status status="NOT RUN" start="2024-11-22T12:13:49.526149" elapsed="0.000010"/>
</kw>
<kw name="Fail" owner="BuiltIn">
<arg>Record created with invalid column named "${negative_col_name}": ${sql_response['${negative_col_name}']}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.526199" elapsed="0.000009"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:49.525925" elapsed="0.000299"/>
</branch>
<status status="NOT RUN" start="2024-11-22T12:13:49.525801" elapsed="0.000436"/>
</if>
<status status="NOT RUN" start="2024-11-22T12:13:49.525319" elapsed="0.000926"/>
</branch>
<status status="FAIL" start="2024-11-22T12:13:49.500271" elapsed="0.025987">natid-157 not created in DB</status>
</if>
<arg>${negative_driver_test_data_path}</arg>
<arg>Positive</arg>
<arg>natid-157</arg>
<doc>Verify partial uploaded heroes in DB</doc>
<status status="FAIL" start="2024-11-22T12:13:49.499959" elapsed="0.026340">natid-157 not created in DB</status>
</kw>
<kw name="Common Test Teardown" owner="generic" type="TEARDOWN">
<kw name="Capture Page Screenshot" owner="SeleniumLibrary">
<msg time="2024-11-22T12:13:49.526621" level="INFO">Cannot capture screenshot because no browser is open.</msg>
<arg>${OUTPUT_DIR}/screenshots/${TEST NAME}.png</arg>
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<status status="PASS" start="2024-11-22T12:13:49.526550" elapsed="0.000090"/>
</kw>
<kw name="Close Browser" owner="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" start="2024-11-22T12:13:49.526689" elapsed="0.000038"/>
</kw>
<status status="PASS" start="2024-11-22T12:13:49.526435" elapsed="0.000315"/>
</kw>
<status status="FAIL" start="2024-11-22T12:13:49.499669" elapsed="0.027110">natid-157 not created in DB</status>
</test>
<test id="s1-t10" name="Partial Data Wrong Format - Negative - gender - Wrong Format" line="50">
<kw name="Verify Partial Uploaded Data In DB" owner="clerk">
<kw name="Read Csv File To List" owner="CSVLibrary">
<msg time="2024-11-22T12:13:49.527365" level="INFO">${csv_list} = [['${natid}', '${flow}', '${negative_col_name}'], ['natid-150', 'Positive', ''], ['natid-151', 'Positive', ''], ['natid-152', 'Negative', 'name'], ['natid-153', 'Negative', 'gender'], ['natid-154', 'N...</msg>
<var>${csv_list}</var>
<arg>${test_data_path}</arg>
<doc>Read CSV file and return its content as a Python list of tuples.</doc>
<status status="PASS" start="2024-11-22T12:13:49.527222" elapsed="0.000155"/>
</kw>
<if>
<branch type="IF" condition="'${flow}' == 'Positive'">
<for flavor="IN">
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Create Dictionary" owner="BuiltIn">
<var>${dict}</var>
<arg>value_natid=${item[0]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.527567" elapsed="0.000010"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<var>${sql_response}</var>
<arg>select_hero_by_natid</arg>
<arg>${dict}</arg>
<status status="NOT RUN" start="2024-11-22T12:13:49.527651" elapsed="0.000010"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${sql_response} == []</arg>
<arg>Fail</arg>
<arg>${natid} not created in DB</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.527711" elapsed="0.000008"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<var>${sql_response}</var>
<arg>${sql_response}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.527763" elapsed="0.000009"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[0]}</arg>
<arg>${sql_response['natid']}</arg>
<arg>natid</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.527817" elapsed="0.000009"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[1]}</arg>
<arg>${sql_response['name']}</arg>
<arg>name</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.527870" elapsed="0.000009"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[2]}</arg>
<arg>${sql_response['gender']}</arg>
<arg>gender</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.527921" elapsed="0.000009"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[3]}</arg>
<arg>${sql_response['birth_date']}</arg>
<arg>birth_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.527992" elapsed="0.000010"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[4]}</arg>
<arg>${sql_response['death_date']}</arg>
<arg>death_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.528063" elapsed="0.000009"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[5]}</arg>
<arg>${sql_response['salary']}</arg>
<arg>salary</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.528133" elapsed="0.000009"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[6]}</arg>
<arg>${sql_response['tax_paid']}</arg>
<arg>tax_paid</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.528203" elapsed="0.000010"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[7]}</arg>
<arg>${sql_response['brownie_points']}</arg>
<arg>brownie_points</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.528276" elapsed="0.000012"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:49.527520" elapsed="0.000783"/>
</branch>
<status status="NOT RUN" start="2024-11-22T12:13:49.527515" elapsed="0.000802"/>
</if>
<var name="${item}"/>
<status status="NOT RUN" start="2024-11-22T12:13:49.527502" elapsed="0.000823"/>
</iter>
<var>${item}</var>
<value>@{csv_list}</value>
<status status="NOT RUN" start="2024-11-22T12:13:49.527453" elapsed="0.000885"/>
</for>
<status status="NOT RUN" start="2024-11-22T12:13:49.527408" elapsed="0.000946"/>
</branch>
<branch type="ELSE">
<for flavor="IN">
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Set Variable" owner="BuiltIn">
<var>${negative_col_name}</var>
<arg>${item[2]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.528785" elapsed="0.000010"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:49.528453" elapsed="0.000359"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:49.528447" elapsed="0.000429"/>
</if>
<var name="${item}">['${natid}', '${flow}', '${negative_col_name}']</var>
<status status="PASS" start="2024-11-22T12:13:49.528433" elapsed="0.000453"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Set Variable" owner="BuiltIn">
<var>${negative_col_name}</var>
<arg>${item[2]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.529214" elapsed="0.000011"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:49.528946" elapsed="0.000295"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:49.528941" elapsed="0.000313"/>
</if>
<var name="${item}">['natid-150', 'Positive', '']</var>
<status status="PASS" start="2024-11-22T12:13:49.528928" elapsed="0.000334"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Set Variable" owner="BuiltIn">
<var>${negative_col_name}</var>
<arg>${item[2]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.529593" elapsed="0.000011"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:49.529327" elapsed="0.000295"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:49.529322" elapsed="0.000313"/>
</if>
<var name="${item}">['natid-151', 'Positive', '']</var>
<status status="PASS" start="2024-11-22T12:13:49.529310" elapsed="0.000333"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Set Variable" owner="BuiltIn">
<var>${negative_col_name}</var>
<arg>${item[2]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.530054" elapsed="0.000011"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:49.529702" elapsed="0.000381"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:49.529697" elapsed="0.000398"/>
</if>
<var name="${item}">['natid-152', 'Negative', 'name']</var>
<status status="PASS" start="2024-11-22T12:13:49.529684" elapsed="0.000420"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Set Variable" owner="BuiltIn">
<var>${negative_col_name}</var>
<arg>${item[2]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.530425" elapsed="0.000011"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:49.530162" elapsed="0.000292"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:49.530157" elapsed="0.000310"/>
</if>
<var name="${item}">['natid-153', 'Negative', 'gender']</var>
<status status="PASS" start="2024-11-22T12:13:49.530145" elapsed="0.000330"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Set Variable" owner="BuiltIn">
<var>${negative_col_name}</var>
<arg>${item[2]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.530789" elapsed="0.000010"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:49.530535" elapsed="0.000281"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:49.530530" elapsed="0.000298"/>
</if>
<var name="${item}">['natid-154', 'Negative', 'birth_date']</var>
<status status="PASS" start="2024-11-22T12:13:49.530517" elapsed="0.000319"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Set Variable" owner="BuiltIn">
<var>${negative_col_name}</var>
<arg>${item[2]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.531133" elapsed="0.000010"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:49.530892" elapsed="0.000268"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:49.530887" elapsed="0.000285"/>
</if>
<var name="${item}">['natid-155', 'Negative', 'salary']</var>
<status status="PASS" start="2024-11-22T12:13:49.530875" elapsed="0.000305"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Set Variable" owner="BuiltIn">
<var>${negative_col_name}</var>
<arg>${item[2]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.531491" elapsed="0.000011"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:49.531234" elapsed="0.000285"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:49.531230" elapsed="0.000302"/>
</if>
<var name="${item}">['natid-156', 'Negative', 'tax_paid']</var>
<status status="PASS" start="2024-11-22T12:13:49.531218" elapsed="0.000322"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Set Variable" owner="BuiltIn">
<var>${negative_col_name}</var>
<arg>${item[2]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.531851" elapsed="0.000010"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:49.531597" elapsed="0.000281"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:49.531593" elapsed="0.000298"/>
</if>
<var name="${item}">['natid-157', 'Positive', '']</var>
<status status="PASS" start="2024-11-22T12:13:49.531581" elapsed="0.000318"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-11-22T12:13:49.532457" level="INFO">${negative_col_name} = gender</msg>
<var>${negative_col_name}</var>
<arg>${item[2]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-11-22T12:13:49.532210" elapsed="0.000257"/>
</kw>
<status status="PASS" start="2024-11-22T12:13:49.531954" elapsed="0.000532"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:49.531949" elapsed="0.000550"/>
</if>
<var name="${item}">['natid-158', 'Negative', 'gender']</var>
<status status="PASS" start="2024-11-22T12:13:49.531938" elapsed="0.000569"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Set Variable" owner="BuiltIn">
<var>${negative_col_name}</var>
<arg>${item[2]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.532827" elapsed="0.000010"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:49.532566" elapsed="0.000289"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:49.532562" elapsed="0.000306"/>
</if>
<var name="${item}">['natid-159', 'Positive', '']</var>
<status status="PASS" start="2024-11-22T12:13:49.532549" elapsed="0.000327"/>
</iter>
<var>${item}</var>
<value>@{csv_list}</value>
<status status="PASS" start="2024-11-22T12:13:49.528380" elapsed="0.004510"/>
</for>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2024-11-22T12:13:49.533027" level="INFO">${dict} = {'value_natid': 'natid-158'}</msg>
<var>${dict}</var>
<arg>value_natid=${natid}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2024-11-22T12:13:49.532943" elapsed="0.000095"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<kw name="Connect To Database" owner="DatabaseLibrary">
<msg time="2024-11-22T12:13:49.533347" level="INFO">Looking for configuration file: 'resources/db.cfg'</msg>
<msg time="2024-11-22T12:13:49.533368" level="INFO">Configuration file doesn't exist</msg>
<msg time="2024-11-22T12:13:49.533446" level="INFO">Connect to DB using : mysql.connector.connect(database='testdb', user='user', password=***, host='localhost', port=3306)</msg>
<arg>${DB_API}</arg>
<arg>${DB_NAME}</arg>
<arg>${DB_USER}</arg>
<arg>${DB_PASSWORD}</arg>
<arg>${DB_HOST}</arg>
<arg>${DB_PORT}</arg>
<doc>Creates a database connection using the DB API 2.0 ``db_module`` and the parameters provided.
Along with listed commonly used arguments (`db_name`, `db_host` etc.)
you can set any other DB module specific parameters as key/value pairs.</doc>
<status status="PASS" start="2024-11-22T12:13:49.533233" elapsed="0.009350"/>
</kw>
<kw name="Update SQL Queries With Arguments Dictionary" owner="sql-helper">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-11-22T12:13:49.543310" level="INFO" html="true">Getting file '&lt;a href="file:///Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/object-repo/sql-queries/select_hero_by_natid.sql"&gt;/Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/object-repo/sql-queries/select_hero_by_natid.sql&lt;/a&gt;'.</msg>
<msg time="2024-11-22T12:13:49.543400" level="INFO">${sql_query} = SELECT *
FROM testdb.working_class_heroes
WHERE natid='value_natid';</msg>
<var>${sql_query}</var>
<arg>./object-repo/sql-queries/${sql_file_name}.sql</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-11-22T12:13:49.543179" elapsed="0.000232"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2024-11-22T12:13:49.543895" level="INFO">Argument types are:
&lt;class 'robot.utils.dotdict.DotDict'&gt;
&lt;class 'str'&gt;</msg>
<msg time="2024-11-22T12:13:49.543958" level="FAIL">{'value_natid': 'natid-158'} != </msg>
<arg>${args_dict}</arg>
<arg>${EMPTY}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="FAIL" start="2024-11-22T12:13:49.543576" elapsed="0.000419">{'value_natid': 'natid-158'} != </status>
</kw>
<msg time="2024-11-22T12:13:49.544045" level="INFO">${empty_status} = False</msg>
<var>${empty_status}</var>
<arg>Should Be Equal As Strings</arg>
<arg>${args_dict}</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-11-22T12:13:49.543481" elapsed="0.000573"/>
</kw>
<if>
<branch type="IF" condition="'${empty_status}' == '${False}'">
<if>
<branch type="IF" condition="${args_dict}">
<for flavor="IN">
<iter>
<kw name="Convert To String" owner="BuiltIn">
<msg time="2024-11-22T12:13:49.544386" level="INFO">${args_key_str} = value_natid</msg>
<var>${args_key_str}</var>
<arg>${args_key}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="PASS" start="2024-11-22T12:13:49.544316" elapsed="0.000080"/>
</kw>
<kw name="Convert To String" owner="BuiltIn">
<msg time="2024-11-22T12:13:49.544517" level="INFO">${args_value_str} = natid-158</msg>
<var>${args_value_str}</var>
<arg>${args_dict}[${args_key_str}]</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="PASS" start="2024-11-22T12:13:49.544448" elapsed="0.000078"/>
</kw>
<kw name="Replace String" owner="String">
<msg time="2024-11-22T12:13:49.544648" level="INFO">${sql_query} = SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-158';</msg>
<var>${sql_query}</var>
<arg>${sql_query}</arg>
<arg>${args_key_str}</arg>
<arg>${args_value_str}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="PASS" start="2024-11-22T12:13:49.544575" elapsed="0.000082"/>
</kw>
<var name="${args_key}">value_natid</var>
<status status="PASS" start="2024-11-22T12:13:49.544263" elapsed="0.000413"/>
</iter>
<var>${args_key}</var>
<value>@{args_dict}</value>
<status status="PASS" start="2024-11-22T12:13:49.544206" elapsed="0.000489"/>
</for>
<status status="PASS" start="2024-11-22T12:13:49.544175" elapsed="0.000538"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:49.544170" elapsed="0.000556"/>
</if>
<status status="PASS" start="2024-11-22T12:13:49.544098" elapsed="0.000636"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:49.544086" elapsed="0.000658"/>
</if>
<return>
<value>${sql_query}</value>
<status status="PASS" start="2024-11-22T12:13:49.544758" elapsed="0.000016"/>
</return>
<msg time="2024-11-22T12:13:49.544823" level="INFO">${updated_sql_query} = SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-158';</msg>
<var>${updated_sql_query}</var>
<arg>${sql_file_name}</arg>
<arg>${args_dict}</arg>
<status status="PASS" start="2024-11-22T12:13:49.542977" elapsed="0.001856"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-11-22T12:13:49.545049" level="FAIL">'SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-158';' does not contain 'delete'</msg>
<arg>${updated_sql_query}</arg>
<arg>DELETE</arg>
<arg>ignore_case=${True}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-11-22T12:13:49.544952" elapsed="0.000122">'SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-158';' does not contain 'delete'</status>
</kw>
<msg time="2024-11-22T12:13:49.545112" level="INFO">${delete_status} = False</msg>
<var>${delete_status}</var>
<arg>Should Contain</arg>
<arg>${updated_sql_query}</arg>
<arg>DELETE</arg>
<arg>ignore_case=${True}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-11-22T12:13:49.544890" elapsed="0.000230"/>
</kw>
<if>
<branch type="IF" condition="'${delete_status}' == '${True}'">
<kw name="Execute Sql String" owner="DatabaseLibrary">
<var>${json_response}</var>
<arg>${updated_sql_query}</arg>
<doc>Executes the ``sql_string`` as a single SQL command.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.545237" elapsed="0.000013"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:49.545152" elapsed="0.000117"/>
</branch>
<branch type="ELSE">
<kw name="Query" owner="DatabaseLibrary">
<msg time="2024-11-22T12:13:49.546706" level="INFO" html="true">Executing sql:&lt;br&gt;&lt;code style="font-weight: bold;"&gt;SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-158';&lt;/code&gt;</msg>
<msg time="2024-11-22T12:13:49.548974" level="INFO" html="true">&lt;div style="max-width: 100%; overflow-x: auto;"&gt;&lt;table style="width: auto; border-collapse: collapse; border: 2px solid rgb(140 140 140)"&gt;&lt;caption style="text-align: left; font-weight: bold; padding: 5px;"&gt;Query returned 0 rows&lt;/caption&gt;&lt;tr&gt;&lt;th scope="col" style="background-color: #d6ecd4; border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;Row&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;id&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;created_at&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;create_by&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;updated_at&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;updated_by&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;birth_date&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;brownie_points&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;death_date&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;gender&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;name&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;natid&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;salary&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;tax_paid&lt;/th&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;</msg>
<msg time="2024-11-22T12:13:49.550056" level="INFO">${json_response} = []</msg>
<var>${json_response}</var>
<arg>${updated_sql_query}</arg>
<arg>return_dict=${True}</arg>
<doc>Runs a query with the ``select_statement`` and returns the result as list of rows.
The type of row values depends on the database module -
usually they are tuples or tuple-like objects.</doc>
<status status="PASS" start="2024-11-22T12:13:49.545324" elapsed="0.004749"/>
</kw>
<status status="PASS" start="2024-11-22T12:13:49.545281" elapsed="0.004829"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:49.545145" elapsed="0.004984"/>
</if>
<kw name="Disconnect From Database" owner="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<status status="PASS" start="2024-11-22T12:13:49.550206" elapsed="0.000126"/>
</kw>
<return>
<value>${json_response}</value>
<status status="PASS" start="2024-11-22T12:13:49.550355" elapsed="0.000021"/>
</return>
<msg time="2024-11-22T12:13:49.550435" level="INFO">${sql_response} = []</msg>
<var>${sql_response}</var>
<arg>select_hero_by_natid</arg>
<arg>${dict}</arg>
<status status="PASS" start="2024-11-22T12:13:49.533119" elapsed="0.017327"/>
</kw>
<kw name="Log and Log To Console" owner="generic">
<kw name="Log" owner="BuiltIn">
<msg time="2024-11-22T12:13:49.550704" level="INFO">
[]</msg>
<arg>\n${msg}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-11-22T12:13:49.550649" elapsed="0.000072"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\n${msg}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-22T12:13:49.550771" elapsed="0.000065"/>
</kw>
<arg>${sql_response}</arg>
<status status="PASS" start="2024-11-22T12:13:49.550520" elapsed="0.000342"/>
</kw>
<if>
<branch type="IF" condition="${sql_response} != []">
<kw name="Set Variable" owner="BuiltIn">
<var>${sql_response}</var>
<arg>${sql_response}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.550980" elapsed="0.000010"/>
</kw>
<kw name="Log and Log To Console" owner="generic">
<arg>${sql_response}</arg>
<status status="NOT RUN" start="2024-11-22T12:13:49.551046" elapsed="0.000010"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<var>${failure_msg}</var>
<arg>${sql_response['${negative_col_name}']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.551101" elapsed="0.000009"/>
</kw>
<kw name="Log and Log To Console" owner="generic">
<arg>${sql_response}</arg>
<status status="NOT RUN" start="2024-11-22T12:13:49.551158" elapsed="0.000010"/>
</kw>
<kw name="Fail" owner="BuiltIn">
<arg>Record created with invalid column named "${negative_col_name}": ${sql_response['${negative_col_name}']}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.551212" elapsed="0.000009"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:49.550893" elapsed="0.000343"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:49.550885" elapsed="0.000365"/>
</if>
<status status="PASS" start="2024-11-22T12:13:49.528364" elapsed="0.022895"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:49.527400" elapsed="0.023871"/>
</if>
<arg>${negative_driver_test_data_path}</arg>
<arg>Negative</arg>
<arg>natid-158</arg>
<doc>Verify partial uploaded heroes in DB</doc>
<status status="PASS" start="2024-11-22T12:13:49.527102" elapsed="0.024187"/>
</kw>
<kw name="Common Test Teardown" owner="generic" type="TEARDOWN">
<kw name="Capture Page Screenshot" owner="SeleniumLibrary">
<msg time="2024-11-22T12:13:49.551574" level="INFO">Cannot capture screenshot because no browser is open.</msg>
<arg>${OUTPUT_DIR}/screenshots/${TEST NAME}.png</arg>
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<status status="PASS" start="2024-11-22T12:13:49.551503" elapsed="0.000089"/>
</kw>
<kw name="Close Browser" owner="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" start="2024-11-22T12:13:49.551642" elapsed="0.000038"/>
</kw>
<status status="PASS" start="2024-11-22T12:13:49.551396" elapsed="0.000305"/>
</kw>
<status status="PASS" start="2024-11-22T12:13:49.526873" elapsed="0.024855"/>
</test>
<test id="s1-t11" name="Partial Data Wrong Format - Positive - positive records after negative will still be created" line="53">
<kw name="Verify Partial Uploaded Data In DB" owner="clerk">
<kw name="Read Csv File To List" owner="CSVLibrary">
<msg time="2024-11-22T12:13:49.552343" level="INFO">${csv_list} = [['${natid}', '${flow}', '${negative_col_name}'], ['natid-150', 'Positive', ''], ['natid-151', 'Positive', ''], ['natid-152', 'Negative', 'name'], ['natid-153', 'Negative', 'gender'], ['natid-154', 'N...</msg>
<var>${csv_list}</var>
<arg>${test_data_path}</arg>
<doc>Read CSV file and return its content as a Python list of tuples.</doc>
<status status="PASS" start="2024-11-22T12:13:49.552206" elapsed="0.000148"/>
</kw>
<if>
<branch type="IF" condition="'${flow}' == 'Positive'">
<for flavor="IN">
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Create Dictionary" owner="BuiltIn">
<var>${dict}</var>
<arg>value_natid=${item[0]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.552857" elapsed="0.000011"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<var>${sql_response}</var>
<arg>select_hero_by_natid</arg>
<arg>${dict}</arg>
<status status="NOT RUN" start="2024-11-22T12:13:49.552947" elapsed="0.000011"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${sql_response} == []</arg>
<arg>Fail</arg>
<arg>${natid} not created in DB</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.553069" elapsed="0.000010"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<var>${sql_response}</var>
<arg>${sql_response}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.553127" elapsed="0.000008"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[0]}</arg>
<arg>${sql_response['natid']}</arg>
<arg>natid</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.553185" elapsed="0.000011"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[1]}</arg>
<arg>${sql_response['name']}</arg>
<arg>name</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.553245" elapsed="0.000009"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[2]}</arg>
<arg>${sql_response['gender']}</arg>
<arg>gender</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.553299" elapsed="0.000010"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[3]}</arg>
<arg>${sql_response['birth_date']}</arg>
<arg>birth_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.553380" elapsed="0.000011"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[4]}</arg>
<arg>${sql_response['death_date']}</arg>
<arg>death_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.553457" elapsed="0.000010"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[5]}</arg>
<arg>${sql_response['salary']}</arg>
<arg>salary</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.553538" elapsed="0.000010"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[6]}</arg>
<arg>${sql_response['tax_paid']}</arg>
<arg>tax_paid</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.553612" elapsed="0.000010"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[7]}</arg>
<arg>${sql_response['brownie_points']}</arg>
<arg>brownie_points</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.553686" elapsed="0.000010"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:49.552528" elapsed="0.001184"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:49.552523" elapsed="0.001203"/>
</if>
<var name="${item}">['${natid}', '${flow}', '${negative_col_name}']</var>
<status status="PASS" start="2024-11-22T12:13:49.552507" elapsed="0.001228"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Create Dictionary" owner="BuiltIn">
<var>${dict}</var>
<arg>value_natid=${item[0]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.554219" elapsed="0.000011"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<var>${sql_response}</var>
<arg>select_hero_by_natid</arg>
<arg>${dict}</arg>
<status status="NOT RUN" start="2024-11-22T12:13:49.554306" elapsed="0.000011"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${sql_response} == []</arg>
<arg>Fail</arg>
<arg>${natid} not created in DB</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.554368" elapsed="0.000010"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<var>${sql_response}</var>
<arg>${sql_response}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.554426" elapsed="0.000010"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[0]}</arg>
<arg>${sql_response['natid']}</arg>
<arg>natid</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.554486" elapsed="0.000010"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[1]}</arg>
<arg>${sql_response['name']}</arg>
<arg>name</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.554543" elapsed="0.000011"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[2]}</arg>
<arg>${sql_response['gender']}</arg>
<arg>gender</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.554602" elapsed="0.000010"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[3]}</arg>
<arg>${sql_response['birth_date']}</arg>
<arg>birth_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.554678" elapsed="0.000011"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[4]}</arg>
<arg>${sql_response['death_date']}</arg>
<arg>death_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.554754" elapsed="0.000010"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[5]}</arg>
<arg>${sql_response['salary']}</arg>
<arg>salary</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.554832" elapsed="0.000010"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[6]}</arg>
<arg>${sql_response['tax_paid']}</arg>
<arg>tax_paid</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.554921" elapsed="0.000010"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[7]}</arg>
<arg>${sql_response['brownie_points']}</arg>
<arg>brownie_points</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.555003" elapsed="0.000009"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:49.553920" elapsed="0.001109"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:49.553915" elapsed="0.001128"/>
</if>
<var name="${item}">['natid-150', 'Positive', '']</var>
<status status="PASS" start="2024-11-22T12:13:49.553899" elapsed="0.001153"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Create Dictionary" owner="BuiltIn">
<var>${dict}</var>
<arg>value_natid=${item[0]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.555430" elapsed="0.000010"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<var>${sql_response}</var>
<arg>select_hero_by_natid</arg>
<arg>${dict}</arg>
<status status="NOT RUN" start="2024-11-22T12:13:49.555514" elapsed="0.000011"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${sql_response} == []</arg>
<arg>Fail</arg>
<arg>${natid} not created in DB</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.555575" elapsed="0.000009"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<var>${sql_response}</var>
<arg>${sql_response}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.555635" elapsed="0.000009"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[0]}</arg>
<arg>${sql_response['natid']}</arg>
<arg>natid</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.555690" elapsed="0.000010"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[1]}</arg>
<arg>${sql_response['name']}</arg>
<arg>name</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.555750" elapsed="0.000010"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[2]}</arg>
<arg>${sql_response['gender']}</arg>
<arg>gender</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.555804" elapsed="0.000014"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[3]}</arg>
<arg>${sql_response['birth_date']}</arg>
<arg>birth_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.555965" elapsed="0.000012"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[4]}</arg>
<arg>${sql_response['death_date']}</arg>
<arg>death_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.556042" elapsed="0.000010"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[5]}</arg>
<arg>${sql_response['salary']}</arg>
<arg>salary</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.556122" elapsed="0.000010"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[6]}</arg>
<arg>${sql_response['tax_paid']}</arg>
<arg>tax_paid</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.556196" elapsed="0.000011"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[7]}</arg>
<arg>${sql_response['brownie_points']}</arg>
<arg>brownie_points</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.556271" elapsed="0.000010"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:49.555130" elapsed="0.001168"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:49.555125" elapsed="0.001186"/>
</if>
<var name="${item}">['natid-151', 'Positive', '']</var>
<status status="PASS" start="2024-11-22T12:13:49.555112" elapsed="0.001208"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Create Dictionary" owner="BuiltIn">
<var>${dict}</var>
<arg>value_natid=${item[0]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.556761" elapsed="0.000034"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<var>${sql_response}</var>
<arg>select_hero_by_natid</arg>
<arg>${dict}</arg>
<status status="NOT RUN" start="2024-11-22T12:13:49.556872" elapsed="0.000011"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${sql_response} == []</arg>
<arg>Fail</arg>
<arg>${natid} not created in DB</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.556933" elapsed="0.000010"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<var>${sql_response}</var>
<arg>${sql_response}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.557183" elapsed="0.000054"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[0]}</arg>
<arg>${sql_response['natid']}</arg>
<arg>natid</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.557384" elapsed="0.000020"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[1]}</arg>
<arg>${sql_response['name']}</arg>
<arg>name</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.557474" elapsed="0.000012"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[2]}</arg>
<arg>${sql_response['gender']}</arg>
<arg>gender</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.557576" elapsed="0.000011"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[3]}</arg>
<arg>${sql_response['birth_date']}</arg>
<arg>birth_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.557884" elapsed="0.000018"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[4]}</arg>
<arg>${sql_response['death_date']}</arg>
<arg>death_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.558106" elapsed="0.000017"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[5]}</arg>
<arg>${sql_response['salary']}</arg>
<arg>salary</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.558266" elapsed="0.000013"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[6]}</arg>
<arg>${sql_response['tax_paid']}</arg>
<arg>tax_paid</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.558356" elapsed="0.000011"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[7]}</arg>
<arg>${sql_response['brownie_points']}</arg>
<arg>brownie_points</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.558436" elapsed="0.000010"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:49.556399" elapsed="0.002064"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:49.556394" elapsed="0.002085"/>
</if>
<var name="${item}">['natid-152', 'Negative', 'name']</var>
<status status="PASS" start="2024-11-22T12:13:49.556381" elapsed="0.002108"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Create Dictionary" owner="BuiltIn">
<var>${dict}</var>
<arg>value_natid=${item[0]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.559334" elapsed="0.000030"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<var>${sql_response}</var>
<arg>select_hero_by_natid</arg>
<arg>${dict}</arg>
<status status="NOT RUN" start="2024-11-22T12:13:49.559469" elapsed="0.000012"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${sql_response} == []</arg>
<arg>Fail</arg>
<arg>${natid} not created in DB</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.559538" elapsed="0.000010"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<var>${sql_response}</var>
<arg>${sql_response}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.559597" elapsed="0.000009"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[0]}</arg>
<arg>${sql_response['natid']}</arg>
<arg>natid</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.559656" elapsed="0.000011"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[1]}</arg>
<arg>${sql_response['name']}</arg>
<arg>name</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.559714" elapsed="0.000010"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[2]}</arg>
<arg>${sql_response['gender']}</arg>
<arg>gender</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.559769" elapsed="0.000009"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[3]}</arg>
<arg>${sql_response['birth_date']}</arg>
<arg>birth_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.559846" elapsed="0.000011"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[4]}</arg>
<arg>${sql_response['death_date']}</arg>
<arg>death_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.559926" elapsed="0.000009"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[5]}</arg>
<arg>${sql_response['salary']}</arg>
<arg>salary</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.560004" elapsed="0.000010"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[6]}</arg>
<arg>${sql_response['tax_paid']}</arg>
<arg>tax_paid</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.560081" elapsed="0.000010"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[7]}</arg>
<arg>${sql_response['brownie_points']}</arg>
<arg>brownie_points</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.560155" elapsed="0.000010"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:49.558702" elapsed="0.001480"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:49.558692" elapsed="0.001642"/>
</if>
<var name="${item}">['natid-153', 'Negative', 'gender']</var>
<status status="PASS" start="2024-11-22T12:13:49.558631" elapsed="0.001716"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Create Dictionary" owner="BuiltIn">
<var>${dict}</var>
<arg>value_natid=${item[0]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.560753" elapsed="0.000011"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<var>${sql_response}</var>
<arg>select_hero_by_natid</arg>
<arg>${dict}</arg>
<status status="NOT RUN" start="2024-11-22T12:13:49.560838" elapsed="0.000057"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${sql_response} == []</arg>
<arg>Fail</arg>
<arg>${natid} not created in DB</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.560960" elapsed="0.000062"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<var>${sql_response}</var>
<arg>${sql_response}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.561080" elapsed="0.000012"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[0]}</arg>
<arg>${sql_response['natid']}</arg>
<arg>natid</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.561142" elapsed="0.000011"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[1]}</arg>
<arg>${sql_response['name']}</arg>
<arg>name</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.561198" elapsed="0.000009"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[2]}</arg>
<arg>${sql_response['gender']}</arg>
<arg>gender</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.561253" elapsed="0.000010"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[3]}</arg>
<arg>${sql_response['birth_date']}</arg>
<arg>birth_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.561332" elapsed="0.000011"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[4]}</arg>
<arg>${sql_response['death_date']}</arg>
<arg>death_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.561410" elapsed="0.000009"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[5]}</arg>
<arg>${sql_response['salary']}</arg>
<arg>salary</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.561484" elapsed="0.000011"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[6]}</arg>
<arg>${sql_response['tax_paid']}</arg>
<arg>tax_paid</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.561557" elapsed="0.000010"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[7]}</arg>
<arg>${sql_response['brownie_points']}</arg>
<arg>brownie_points</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.561631" elapsed="0.000011"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:49.560438" elapsed="0.001221"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:49.560432" elapsed="0.001241"/>
</if>
<var name="${item}">['natid-154', 'Negative', 'birth_date']</var>
<status status="PASS" start="2024-11-22T12:13:49.560417" elapsed="0.001265"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Create Dictionary" owner="BuiltIn">
<var>${dict}</var>
<arg>value_natid=${item[0]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.562196" elapsed="0.000012"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<var>${sql_response}</var>
<arg>select_hero_by_natid</arg>
<arg>${dict}</arg>
<status status="NOT RUN" start="2024-11-22T12:13:49.562293" elapsed="0.000013"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${sql_response} == []</arg>
<arg>Fail</arg>
<arg>${natid} not created in DB</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.562359" elapsed="0.000009"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<var>${sql_response}</var>
<arg>${sql_response}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.562416" elapsed="0.000009"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[0]}</arg>
<arg>${sql_response['natid']}</arg>
<arg>natid</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.562475" elapsed="0.000010"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[1]}</arg>
<arg>${sql_response['name']}</arg>
<arg>name</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.562531" elapsed="0.000010"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[2]}</arg>
<arg>${sql_response['gender']}</arg>
<arg>gender</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.562587" elapsed="0.000009"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[3]}</arg>
<arg>${sql_response['birth_date']}</arg>
<arg>birth_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.562661" elapsed="0.000010"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[4]}</arg>
<arg>${sql_response['death_date']}</arg>
<arg>death_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.562737" elapsed="0.000010"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[5]}</arg>
<arg>${sql_response['salary']}</arg>
<arg>salary</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.562814" elapsed="0.000009"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[6]}</arg>
<arg>${sql_response['tax_paid']}</arg>
<arg>tax_paid</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.562887" elapsed="0.000010"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[7]}</arg>
<arg>${sql_response['brownie_points']}</arg>
<arg>brownie_points</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.562960" elapsed="0.000010"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:49.561855" elapsed="0.001130"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:49.561764" elapsed="0.001236"/>
</if>
<var name="${item}">['natid-155', 'Negative', 'salary']</var>
<status status="PASS" start="2024-11-22T12:13:49.561746" elapsed="0.001264"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Create Dictionary" owner="BuiltIn">
<var>${dict}</var>
<arg>value_natid=${item[0]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.563383" elapsed="0.000011"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<var>${sql_response}</var>
<arg>select_hero_by_natid</arg>
<arg>${dict}</arg>
<status status="NOT RUN" start="2024-11-22T12:13:49.563469" elapsed="0.000012"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${sql_response} == []</arg>
<arg>Fail</arg>
<arg>${natid} not created in DB</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.563531" elapsed="0.000009"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<var>${sql_response}</var>
<arg>${sql_response}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.563586" elapsed="0.000010"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[0]}</arg>
<arg>${sql_response['natid']}</arg>
<arg>natid</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.563703" elapsed="0.000010"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[1]}</arg>
<arg>${sql_response['name']}</arg>
<arg>name</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.563760" elapsed="0.000010"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[2]}</arg>
<arg>${sql_response['gender']}</arg>
<arg>gender</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.563816" elapsed="0.000009"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[3]}</arg>
<arg>${sql_response['birth_date']}</arg>
<arg>birth_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.563889" elapsed="0.000011"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[4]}</arg>
<arg>${sql_response['death_date']}</arg>
<arg>death_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.563962" elapsed="0.000010"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[5]}</arg>
<arg>${sql_response['salary']}</arg>
<arg>salary</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.564038" elapsed="0.000010"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[6]}</arg>
<arg>${sql_response['tax_paid']}</arg>
<arg>tax_paid</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.564111" elapsed="0.000010"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[7]}</arg>
<arg>${sql_response['brownie_points']}</arg>
<arg>brownie_points</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.564184" elapsed="0.000009"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:49.563092" elapsed="0.001117"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:49.563086" elapsed="0.001137"/>
</if>
<var name="${item}">['natid-156', 'Negative', 'tax_paid']</var>
<status status="PASS" start="2024-11-22T12:13:49.563072" elapsed="0.001159"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Create Dictionary" owner="BuiltIn">
<var>${dict}</var>
<arg>value_natid=${item[0]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.564579" elapsed="0.000010"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<var>${sql_response}</var>
<arg>select_hero_by_natid</arg>
<arg>${dict}</arg>
<status status="NOT RUN" start="2024-11-22T12:13:49.564662" elapsed="0.000011"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${sql_response} == []</arg>
<arg>Fail</arg>
<arg>${natid} not created in DB</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.564724" elapsed="0.000009"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<var>${sql_response}</var>
<arg>${sql_response}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.564779" elapsed="0.000009"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[0]}</arg>
<arg>${sql_response['natid']}</arg>
<arg>natid</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.564835" elapsed="0.000009"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[1]}</arg>
<arg>${sql_response['name']}</arg>
<arg>name</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.564889" elapsed="0.000010"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[2]}</arg>
<arg>${sql_response['gender']}</arg>
<arg>gender</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.564944" elapsed="0.000009"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[3]}</arg>
<arg>${sql_response['birth_date']}</arg>
<arg>birth_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.565020" elapsed="0.000010"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[4]}</arg>
<arg>${sql_response['death_date']}</arg>
<arg>death_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.565789" elapsed="0.000012"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[5]}</arg>
<arg>${sql_response['salary']}</arg>
<arg>salary</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.565873" elapsed="0.000010"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[6]}</arg>
<arg>${sql_response['tax_paid']}</arg>
<arg>tax_paid</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.565944" elapsed="0.000009"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[7]}</arg>
<arg>${sql_response['brownie_points']}</arg>
<arg>brownie_points</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.566020" elapsed="0.000011"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:49.564308" elapsed="0.001739"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:49.564303" elapsed="0.001757"/>
</if>
<var name="${item}">['natid-157', 'Positive', '']</var>
<status status="PASS" start="2024-11-22T12:13:49.564289" elapsed="0.001780"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Create Dictionary" owner="BuiltIn">
<var>${dict}</var>
<arg>value_natid=${item[0]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.566433" elapsed="0.000011"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<var>${sql_response}</var>
<arg>select_hero_by_natid</arg>
<arg>${dict}</arg>
<status status="NOT RUN" start="2024-11-22T12:13:49.566519" elapsed="0.000011"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${sql_response} == []</arg>
<arg>Fail</arg>
<arg>${natid} not created in DB</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.566580" elapsed="0.000009"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<var>${sql_response}</var>
<arg>${sql_response}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.566634" elapsed="0.000010"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[0]}</arg>
<arg>${sql_response['natid']}</arg>
<arg>natid</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.566691" elapsed="0.000009"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[1]}</arg>
<arg>${sql_response['name']}</arg>
<arg>name</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.566745" elapsed="0.000011"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[2]}</arg>
<arg>${sql_response['gender']}</arg>
<arg>gender</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.566801" elapsed="0.000009"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[3]}</arg>
<arg>${sql_response['birth_date']}</arg>
<arg>birth_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.566873" elapsed="0.000011"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[4]}</arg>
<arg>${sql_response['death_date']}</arg>
<arg>death_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.566947" elapsed="0.000010"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[5]}</arg>
<arg>${sql_response['salary']}</arg>
<arg>salary</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.567022" elapsed="0.000010"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[6]}</arg>
<arg>${sql_response['tax_paid']}</arg>
<arg>tax_paid</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.567148" elapsed="0.000010"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[7]}</arg>
<arg>${sql_response['brownie_points']}</arg>
<arg>brownie_points</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.567223" elapsed="0.000010"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:49.566148" elapsed="0.001101"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:49.566143" elapsed="0.001119"/>
</if>
<var name="${item}">['natid-158', 'Negative', 'gender']</var>
<status status="PASS" start="2024-11-22T12:13:49.566130" elapsed="0.001141"/>
</iter>
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2024-11-22T12:13:49.567936" level="INFO">${dict} = {'value_natid': 'natid-159'}</msg>
<var>${dict}</var>
<arg>value_natid=${item[0]}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2024-11-22T12:13:49.567621" elapsed="0.000327"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<kw name="Connect To Database" owner="DatabaseLibrary">
<msg time="2024-11-22T12:13:49.568281" level="INFO">Looking for configuration file: 'resources/db.cfg'</msg>
<msg time="2024-11-22T12:13:49.568307" level="INFO">Configuration file doesn't exist</msg>
<msg time="2024-11-22T12:13:49.568381" level="INFO">Connect to DB using : mysql.connector.connect(database='testdb', user='user', password=***, host='localhost', port=3306)</msg>
<arg>${DB_API}</arg>
<arg>${DB_NAME}</arg>
<arg>${DB_USER}</arg>
<arg>${DB_PASSWORD}</arg>
<arg>${DB_HOST}</arg>
<arg>${DB_PORT}</arg>
<doc>Creates a database connection using the DB API 2.0 ``db_module`` and the parameters provided.
Along with listed commonly used arguments (`db_name`, `db_host` etc.)
you can set any other DB module specific parameters as key/value pairs.</doc>
<status status="PASS" start="2024-11-22T12:13:49.568154" elapsed="0.009146"/>
</kw>
<kw name="Update SQL Queries With Arguments Dictionary" owner="sql-helper">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-11-22T12:13:49.577765" level="INFO" html="true">Getting file '&lt;a href="file:///Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/object-repo/sql-queries/select_hero_by_natid.sql"&gt;/Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/object-repo/sql-queries/select_hero_by_natid.sql&lt;/a&gt;'.</msg>
<msg time="2024-11-22T12:13:49.577848" level="INFO">${sql_query} = SELECT *
FROM testdb.working_class_heroes
WHERE natid='value_natid';</msg>
<var>${sql_query}</var>
<arg>./object-repo/sql-queries/${sql_file_name}.sql</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-11-22T12:13:49.577646" elapsed="0.000211"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2024-11-22T12:13:49.578251" level="INFO">Argument types are:
&lt;class 'robot.utils.dotdict.DotDict'&gt;
&lt;class 'str'&gt;</msg>
<msg time="2024-11-22T12:13:49.578304" level="FAIL">{'value_natid': 'natid-159'} != </msg>
<arg>${args_dict}</arg>
<arg>${EMPTY}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="FAIL" start="2024-11-22T12:13:49.577989" elapsed="0.000347">{'value_natid': 'natid-159'} != </status>
</kw>
<msg time="2024-11-22T12:13:49.578377" level="INFO">${empty_status} = False</msg>
<var>${empty_status}</var>
<arg>Should Be Equal As Strings</arg>
<arg>${args_dict}</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-11-22T12:13:49.577920" elapsed="0.000465"/>
</kw>
<if>
<branch type="IF" condition="'${empty_status}' == '${False}'">
<if>
<branch type="IF" condition="${args_dict}">
<for flavor="IN">
<iter>
<kw name="Convert To String" owner="BuiltIn">
<msg time="2024-11-22T12:13:49.578828" level="INFO">${args_key_str} = value_natid</msg>
<var>${args_key_str}</var>
<arg>${args_key}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="PASS" start="2024-11-22T12:13:49.578763" elapsed="0.000075"/>
</kw>
<kw name="Convert To String" owner="BuiltIn">
<msg time="2024-11-22T12:13:49.578957" level="INFO">${args_value_str} = natid-159</msg>
<var>${args_value_str}</var>
<arg>${args_dict}[${args_key_str}]</arg>
<doc>Converts the given item to a Unicode string.</doc>
<status status="PASS" start="2024-11-22T12:13:49.578888" elapsed="0.000079"/>
</kw>
<kw name="Replace String" owner="String">
<msg time="2024-11-22T12:13:49.579088" level="INFO">${sql_query} = SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-159';</msg>
<var>${sql_query}</var>
<arg>${sql_query}</arg>
<arg>${args_key_str}</arg>
<arg>${args_value_str}</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<status status="PASS" start="2024-11-22T12:13:49.579017" elapsed="0.000081"/>
</kw>
<var name="${args_key}">value_natid</var>
<status status="PASS" start="2024-11-22T12:13:49.578715" elapsed="0.000403"/>
</iter>
<var>${args_key}</var>
<value>@{args_dict}</value>
<status status="PASS" start="2024-11-22T12:13:49.578660" elapsed="0.000477"/>
</for>
<status status="PASS" start="2024-11-22T12:13:49.578624" elapsed="0.000533"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:49.578484" elapsed="0.000686"/>
</if>
<status status="PASS" start="2024-11-22T12:13:49.578424" elapsed="0.000756"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:49.578414" elapsed="0.000776"/>
</if>
<return>
<value>${sql_query}</value>
<status status="PASS" start="2024-11-22T12:13:49.579204" elapsed="0.000018"/>
</return>
<msg time="2024-11-22T12:13:49.579271" level="INFO">${updated_sql_query} = SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-159';</msg>
<var>${updated_sql_query}</var>
<arg>${sql_file_name}</arg>
<arg>${args_dict}</arg>
<status status="PASS" start="2024-11-22T12:13:49.577479" elapsed="0.001802"/>
</kw>
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-11-22T12:13:49.579500" level="FAIL">'SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-159';' does not contain 'delete'</msg>
<arg>${updated_sql_query}</arg>
<arg>DELETE</arg>
<arg>ignore_case=${True}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-11-22T12:13:49.579400" elapsed="0.000127">'SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-159';' does not contain 'delete'</status>
</kw>
<msg time="2024-11-22T12:13:49.579565" level="INFO">${delete_status} = False</msg>
<var>${delete_status}</var>
<arg>Should Contain</arg>
<arg>${updated_sql_query}</arg>
<arg>DELETE</arg>
<arg>ignore_case=${True}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-11-22T12:13:49.579336" elapsed="0.000238"/>
</kw>
<if>
<branch type="IF" condition="'${delete_status}' == '${True}'">
<kw name="Execute Sql String" owner="DatabaseLibrary">
<var>${json_response}</var>
<arg>${updated_sql_query}</arg>
<doc>Executes the ``sql_string`` as a single SQL command.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.579687" elapsed="0.000010"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:49.579606" elapsed="0.000107"/>
</branch>
<branch type="ELSE">
<kw name="Query" owner="DatabaseLibrary">
<msg time="2024-11-22T12:13:49.580411" level="INFO" html="true">Executing sql:&lt;br&gt;&lt;code style="font-weight: bold;"&gt;SELECT *
FROM testdb.working_class_heroes
WHERE natid='natid-159';&lt;/code&gt;</msg>
<msg time="2024-11-22T12:13:49.581458" level="INFO" html="true">&lt;div style="max-width: 100%; overflow-x: auto;"&gt;&lt;table style="width: auto; border-collapse: collapse; border: 2px solid rgb(140 140 140)"&gt;&lt;caption style="text-align: left; font-weight: bold; padding: 5px;"&gt;Query returned 0 rows&lt;/caption&gt;&lt;tr&gt;&lt;th scope="col" style="background-color: #d6ecd4; border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;Row&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;id&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;created_at&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;create_by&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;updated_at&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;updated_by&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;birth_date&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;brownie_points&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;death_date&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;gender&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;name&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;natid&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;salary&lt;/th&gt;&lt;th scope="col" style="background-color: #505050; color: #fff;border: 1px solid rgb(160 160 160);padding: 8px 10px;text-align: center;"&gt;tax_paid&lt;/th&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;</msg>
<msg time="2024-11-22T12:13:49.581932" level="INFO">${json_response} = []</msg>
<var>${json_response}</var>
<arg>${updated_sql_query}</arg>
<arg>return_dict=${True}</arg>
<doc>Runs a query with the ``select_statement`` and returns the result as list of rows.
The type of row values depends on the database module -
usually they are tuples or tuple-like objects.</doc>
<status status="PASS" start="2024-11-22T12:13:49.579767" elapsed="0.002176"/>
</kw>
<status status="PASS" start="2024-11-22T12:13:49.579725" elapsed="0.002241"/>
</branch>
<status status="PASS" start="2024-11-22T12:13:49.579599" elapsed="0.002381"/>
</if>
<kw name="Disconnect From Database" owner="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<status status="PASS" start="2024-11-22T12:13:49.582036" elapsed="0.000093"/>
</kw>
<return>
<value>${json_response}</value>
<status status="PASS" start="2024-11-22T12:13:49.582150" elapsed="0.000016"/>
</return>
<msg time="2024-11-22T12:13:49.582217" level="INFO">${sql_response} = []</msg>
<var>${sql_response}</var>
<arg>select_hero_by_natid</arg>
<arg>${dict}</arg>
<status status="PASS" start="2024-11-22T12:13:49.568024" elapsed="0.014203"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Fail" owner="BuiltIn">
<msg time="2024-11-22T12:13:49.582456" level="FAIL">natid-159 not created in DB</msg>
<arg>${natid} not created in DB</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="FAIL" start="2024-11-22T12:13:49.582380" elapsed="0.000101">natid-159 not created in DB</status>
</kw>
<arg>${sql_response} == []</arg>
<arg>Fail</arg>
<arg>${natid} not created in DB</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="FAIL" start="2024-11-22T12:13:49.582285" elapsed="0.000223">natid-159 not created in DB</status>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<var>${sql_response}</var>
<arg>${sql_response}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.582563" elapsed="0.000010"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[0]}</arg>
<arg>${sql_response['natid']}</arg>
<arg>natid</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.582631" elapsed="0.000012"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[1]}</arg>
<arg>${sql_response['name']}</arg>
<arg>name</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.582691" elapsed="0.000010"/>
</kw>
<kw name="Compare String" owner="generic">
<arg>${item[2]}</arg>
<arg>${sql_response['gender']}</arg>
<arg>gender</arg>
<doc>Compare Strings</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.582749" elapsed="0.000010"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[3]}</arg>
<arg>${sql_response['birth_date']}</arg>
<arg>birth_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.582832" elapsed="0.000010"/>
</kw>
<kw name="Compare Date" owner="generic">
<arg>${item[4]}</arg>
<arg>${sql_response['death_date']}</arg>
<arg>death_date</arg>
<doc>Format date and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.582910" elapsed="0.000009"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[5]}</arg>
<arg>${sql_response['salary']}</arg>
<arg>salary</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.582989" elapsed="0.000011"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[6]}</arg>
<arg>${sql_response['tax_paid']}</arg>
<arg>tax_paid</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.583066" elapsed="0.000011"/>
</kw>
<kw name="Compare Decimals" owner="generic">
<arg>${item[7]}</arg>
<arg>${sql_response['brownie_points']}</arg>
<arg>brownie_points</arg>
<doc>Normalize the numbers and compare</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.583144" elapsed="0.000010"/>
</kw>
<status status="FAIL" start="2024-11-22T12:13:49.567348" elapsed="0.015835">natid-159 not created in DB</status>
</branch>
<status status="FAIL" start="2024-11-22T12:13:49.567342" elapsed="0.015859">natid-159 not created in DB</status>
</if>
<var name="${item}">['natid-159', 'Positive', '']</var>
<status status="FAIL" start="2024-11-22T12:13:49.567329" elapsed="0.015893">natid-159 not created in DB</status>
</iter>
<var>${item}</var>
<value>@{csv_list}</value>
<status status="FAIL" start="2024-11-22T12:13:49.552432" elapsed="0.030817">natid-159 not created in DB</status>
</for>
<status status="FAIL" start="2024-11-22T12:13:49.552386" elapsed="0.030891">natid-159 not created in DB</status>
</branch>
<branch type="ELSE">
<for flavor="IN">
<iter>
<if>
<branch type="IF" condition="'${item[0]}' == '${natid}'">
<kw name="Set Variable" owner="BuiltIn">
<var>${negative_col_name}</var>
<arg>${item[2]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.583412" elapsed="0.000010"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:49.583366" elapsed="0.000073"/>
</branch>
<status status="NOT RUN" start="2024-11-22T12:13:49.583361" elapsed="0.000090"/>
</if>
<var name="${item}"/>
<status status="NOT RUN" start="2024-11-22T12:13:49.583347" elapsed="0.000112"/>
</iter>
<var>${item}</var>
<value>@{csv_list}</value>
<status status="NOT RUN" start="2024-11-22T12:13:49.583311" elapsed="0.000161"/>
</for>
<kw name="Create Dictionary" owner="BuiltIn">
<var>${dict}</var>
<arg>value_natid=${natid}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.583582" elapsed="0.000010"/>
</kw>
<kw name="Query Database" owner="sql-helper">
<var>${sql_response}</var>
<arg>select_hero_by_natid</arg>
<arg>${dict}</arg>
<status status="NOT RUN" start="2024-11-22T12:13:49.583670" elapsed="0.000011"/>
</kw>
<kw name="Log and Log To Console" owner="generic">
<arg>${sql_response}</arg>
<status status="NOT RUN" start="2024-11-22T12:13:49.583730" elapsed="0.000009"/>
</kw>
<if>
<branch type="IF" condition="${sql_response} != []">
<kw name="Set Variable" owner="BuiltIn">
<var>${sql_response}</var>
<arg>${sql_response}[0]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.583806" elapsed="0.000009"/>
</kw>
<kw name="Log and Log To Console" owner="generic">
<arg>${sql_response}</arg>
<status status="NOT RUN" start="2024-11-22T12:13:49.583862" elapsed="0.000009"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<var>${failure_msg}</var>
<arg>${sql_response['${negative_col_name}']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.583915" elapsed="0.000009"/>
</kw>
<kw name="Log and Log To Console" owner="generic">
<arg>${sql_response}</arg>
<status status="NOT RUN" start="2024-11-22T12:13:49.583971" elapsed="0.000009"/>
</kw>
<kw name="Fail" owner="BuiltIn">
<arg>Record created with invalid column named "${negative_col_name}": ${sql_response['${negative_col_name}']}</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" start="2024-11-22T12:13:49.584022" elapsed="0.000010"/>
</kw>
<status status="NOT RUN" start="2024-11-22T12:13:49.583763" elapsed="0.000283"/>
</branch>
<status status="NOT RUN" start="2024-11-22T12:13:49.583757" elapsed="0.000302"/>
</if>
<status status="NOT RUN" start="2024-11-22T12:13:49.583291" elapsed="0.000777"/>
</branch>
<status status="FAIL" start="2024-11-22T12:13:49.552378" elapsed="0.031702">natid-159 not created in DB</status>
</if>
<arg>${negative_driver_test_data_path}</arg>
<arg>Positive</arg>
<arg>natid-159</arg>
<doc>Verify partial uploaded heroes in DB</doc>
<status status="FAIL" start="2024-11-22T12:13:49.552083" elapsed="0.032034">natid-159 not created in DB</status>
</kw>
<kw name="Common Test Teardown" owner="generic" type="TEARDOWN">
<kw name="Capture Page Screenshot" owner="SeleniumLibrary">
<msg time="2024-11-22T12:13:49.584440" level="INFO">Cannot capture screenshot because no browser is open.</msg>
<arg>${OUTPUT_DIR}/screenshots/${TEST NAME}.png</arg>
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<status status="PASS" start="2024-11-22T12:13:49.584368" elapsed="0.000091"/>
</kw>
<kw name="Close Browser" owner="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" start="2024-11-22T12:13:49.584510" elapsed="0.000037"/>
</kw>
<status status="PASS" start="2024-11-22T12:13:49.584250" elapsed="0.000318"/>
</kw>
<status status="FAIL" start="2024-11-22T12:13:49.551816" elapsed="0.032782">natid-159 not created in DB</status>
</test>
<doc>Test Suite for User Stories 2 Clerk Dashboard</doc>
<status status="FAIL" start="2024-11-22T12:13:32.460858" elapsed="17.123971"/>
</suite>
<statistics>
<total>
<stat pass="4" fail="7" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="4" fail="7" skip="0" id="s1" name="US2-Create-Hero-Clerk-Dashboard">US2-Create-Hero-Clerk-Dashboard</stat>
</suite>
</statistics>
<errors>
<msg time="2024-11-22T12:13:32.476782" level="WARN">Error in file '/Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/keywords/generic.robot' on line 38: The '[Return]' setting is deprecated. Use the 'RETURN' statement instead.</msg>
<msg time="2024-11-22T12:13:32.538489" level="WARN">Error in file '/Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/keywords/login.robot' on line 19: The '[Return]' setting is deprecated. Use the 'RETURN' statement instead.</msg>
<msg time="2024-11-22T12:13:32.540137" level="WARN">Error in file '/Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/keywords/sql-helper.robot' on line 26: The '[Return]' setting is deprecated. Use the 'RETURN' statement instead.</msg>
<msg time="2024-11-22T12:13:32.540237" level="WARN">Error in file '/Users/willynn/Documents/Personal Repo/qe-tech-challenge/qe-tech-challenge/keywords/sql-helper.robot' on line 41: The '[Return]' setting is deprecated. Use the 'RETURN' statement instead.</msg>
</errors>
</robot>
